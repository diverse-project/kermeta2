using kermeta::standard::*
using kermeta::io::StdIO => stdio

package logoASM {

		aspect abstract class Instruction {

		}

		aspect abstract class Primitive {

		}

		aspect class Back {

		}

		aspect class Forward {

		}

		aspect class Left {

		}

		aspect class Right {

		}

		aspect class PenDown {

		}

		aspect class PenUp {

		}

		aspect class Clear {

		}

		aspect abstract class Expression {

		}

		aspect abstract class BinaryExp {

		}

		aspect class Constant {

		}

		aspect class ProcCall {
			/** 
			 * A procedure is called with the same number of arguments as specified in its declaration
			 */
			inv same_number_of_formals_and_actuals is do 
				actualArgs.size == declaration.args.size
			end 
		}

		aspect class ProcDeclaration {
			/**
			 * No two formal parameters of a procedure may have the same name
			 */
			inv unique_names_for_formal_arguments is
			do
				args.forAll{ a1 | args.forAll{ a2 | 
					a1.name.equals(a2.name).implies(a1.equals(a2))}}
			end
		}

		aspect class Block {

		}

		aspect class If {

		}

		aspect class ControlStructure {

		}

		aspect class Repeat {

		}

		aspect class While {

		}

		aspect class Parameter {

		}

		aspect class ParameterCall {

		}

		aspect class Plus {

		}

		aspect class Minus {

		}

		aspect class Mult {

		}

		aspect class Div {

		}

		aspect class Equals {

		}

		aspect class Greater {

		}

		aspect class Lower {

		}

		aspect class LogoProgram {
			// ugly partial workaround for bug #16302, I've put that here just for the demo but this definitivly should be fixed in km2scala
			operation checkAllInvariants() is do
				//var res : kermeta::emfpersistence::Resource
				//res := self.containingResource
				from var it : Iterator<Object> := self.containingResource.getAllContents
         		until it.isOff
         		loop
         			var cur : Object := it.next
         			if not (cur == self) then
             		 	cur.checkAllInvariants
             		end
         		end
			end
		}

}
