package ScalaImplicit.logo_compilerNXC
object ImplicitConversion {
 implicit def richAspect(v : kmLogo.ASM.Instruction) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.InstructionAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.InstructionAspect) = v.asInstanceOf[kmLogo.ASM.Instruction]
 implicit def richAspect(v : kmLogo.ASM.Primitive) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.PrimitiveAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.PrimitiveAspect) = v.asInstanceOf[kmLogo.ASM.Primitive]
 implicit def richAspect(v : kmLogo.ASM.Back) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.BackAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.BackAspect) = v.asInstanceOf[kmLogo.ASM.impl.BackImpl]
 implicit def richAspect(v : kmLogo.ASM.Forward) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.ForwardAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.ForwardAspect) = v.asInstanceOf[kmLogo.ASM.impl.ForwardImpl]
 implicit def richAspect(v : kmLogo.ASM.Left) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.LeftAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.LeftAspect) = v.asInstanceOf[kmLogo.ASM.impl.LeftImpl]
 implicit def richAspect(v : kmLogo.ASM.Right) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.RightAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.RightAspect) = v.asInstanceOf[kmLogo.ASM.impl.RightImpl]
 implicit def richAspect(v : kmLogo.ASM.PenDown) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.PenDownAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.PenDownAspect) = v.asInstanceOf[kmLogo.ASM.impl.PenDownImpl]
 implicit def richAspect(v : kmLogo.ASM.PenUp) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.PenUpAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.PenUpAspect) = v.asInstanceOf[kmLogo.ASM.impl.PenUpImpl]
 implicit def richAspect(v : kmLogo.ASM.Clear) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.ClearAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.ClearAspect) = v.asInstanceOf[kmLogo.ASM.impl.ClearImpl]
 implicit def richAspect(v : kmLogo.ASM.Expression) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.ExpressionAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.ExpressionAspect) = v.asInstanceOf[kmLogo.ASM.Expression]
 implicit def richAspect(v : kmLogo.ASM.BinaryExp) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.BinaryExpAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.BinaryExpAspect) = v.asInstanceOf[kmLogo.ASM.BinaryExp]
 implicit def richAspect(v : kmLogo.ASM.Constant) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.ConstantAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.ConstantAspect) = v.asInstanceOf[kmLogo.ASM.impl.ConstantImpl]
 implicit def richAspect(v : kmLogo.ASM.ProcCall) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.ProcCallAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.ProcCallAspect) = v.asInstanceOf[kmLogo.ASM.impl.ProcCallImpl]
 implicit def richAspect(v : kmLogo.ASM.ProcDeclaration) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.ProcDeclarationAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.ProcDeclarationAspect) = v.asInstanceOf[kmLogo.ASM.impl.ProcDeclarationImpl]
 implicit def richAspect(v : kmLogo.ASM.Block) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.BlockAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.BlockAspect) = v.asInstanceOf[kmLogo.ASM.impl.BlockImpl]
 implicit def richAspect(v : kmLogo.ASM.If) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.IfAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.IfAspect) = v.asInstanceOf[kmLogo.ASM.impl.IfImpl]
 implicit def richAspect(v : kmLogo.ASM.ControlStructure) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.ControlStructureAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.ControlStructureAspect) = v.asInstanceOf[kmLogo.ASM.impl.ControlStructureImpl]
 implicit def richAspect(v : kmLogo.ASM.Repeat) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.RepeatAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.RepeatAspect) = v.asInstanceOf[kmLogo.ASM.impl.RepeatImpl]
 implicit def richAspect(v : kmLogo.ASM.While) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.WhileAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.WhileAspect) = v.asInstanceOf[kmLogo.ASM.impl.WhileImpl]
 implicit def richAspect(v : kmLogo.ASM.Parameter) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.ParameterAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.ParameterAspect) = v.asInstanceOf[kmLogo.ASM.impl.ParameterImpl]
 implicit def richAspect(v : kmLogo.ASM.ParameterCall) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.ParameterCallAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.ParameterCallAspect) = v.asInstanceOf[kmLogo.ASM.impl.ParameterCallImpl]
 implicit def richAspect(v : kmLogo.ASM.Plus) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.PlusAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.PlusAspect) = v.asInstanceOf[kmLogo.ASM.impl.PlusImpl]
 implicit def richAspect(v : kmLogo.ASM.Minus) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.MinusAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.MinusAspect) = v.asInstanceOf[kmLogo.ASM.impl.MinusImpl]
 implicit def richAspect(v : kmLogo.ASM.Mult) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.MultAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.MultAspect) = v.asInstanceOf[kmLogo.ASM.impl.MultImpl]
 implicit def richAspect(v : kmLogo.ASM.Div) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.DivAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.DivAspect) = v.asInstanceOf[kmLogo.ASM.impl.DivImpl]
 implicit def richAspect(v : kmLogo.ASM.Equals) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.EqualsAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.EqualsAspect) = v.asInstanceOf[kmLogo.ASM.impl.EqualsImpl]
 implicit def richAspect(v : kmLogo.ASM.Greater) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.GreaterAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.GreaterAspect) = v.asInstanceOf[kmLogo.ASM.impl.GreaterImpl]
 implicit def richAspect(v : kmLogo.ASM.Lower) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.LowerAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.LowerAspect) = v.asInstanceOf[kmLogo.ASM.impl.LowerImpl]
 implicit def richAspect(v : kmLogo.ASM.LogoProgram) = v.asInstanceOf[`logo_compilerNXC`.kmLogo.ASM.LogoProgramAspect]
 implicit def richAspect(v : `logo_compilerNXC`.kmLogo.ASM.LogoProgramAspect) = v.asInstanceOf[kmLogo.ASM.impl.LogoProgramImpl]
 implicit def richAspect(v : logo_compilerNXC.org.kermeta.language.sample.logo.compilerNXC.NXCCodeGenerator) = v.asInstanceOf[logo_compilerNXC.org.kermeta.language.sample.logo.compilerNXC.NXCCodeGeneratorAspect]
 implicit def richAspect(v : logo_compilerNXC.org.kermeta.language.sample.logo.compilerNXC.NXCCodeGeneratorAspect) = v.asInstanceOf[logo_compilerNXC.org.kermeta.language.sample.logo.compilerNXC.NXCCodeGenerator]
 implicit def richAspect(v : logo_compilerNXC.org.kermeta.language.sample.logo.compilerNXC.NXCCompiler) = v.asInstanceOf[logo_compilerNXC.org.kermeta.language.sample.logo.compilerNXC.NXCCompilerAspect]
 implicit def richAspect(v : logo_compilerNXC.org.kermeta.language.sample.logo.compilerNXC.NXCCompilerAspect) = v.asInstanceOf[logo_compilerNXC.org.kermeta.language.sample.logo.compilerNXC.NXCCompiler]
}

