using kermeta::standard::*
using kermeta::io::StdIO => stdio

using ecore_aspectgenerator^ecore::*

package org::kermeta::language::aspectgenerator{
	class Context
	{
		attribute operationName 		: String
		attribute operationReturnType 	: String
		attribute operationParams 		: OrderedSet[String]
	
		attribute typeProject			: String
		attribute nameProject			: String
	
		attribute fileName				: String
		attribute kmtContent 			: StringBuffer
		attribute packageCollection		: OrderedSet[String] 
		attribute classCollection		: OrderedSet[String] 
		attribute counterPackage		: Integer
		
		operation initialize(typeProject : String, nameProject : String, folderLocation : String, operationName : String, operationReturnType : String, operationParams : OrderedSet[String] ) : Void is do
			
			self.counterPackage 		:= 0
			
			if (not (operationName == "")) then
				self.operationName 			:= operationName
			else 
				self.operationName 			:= void
			end
			
			if (not (operationReturnType == "")) then
				self.operationReturnType 	:= operationReturnType
			else
				self.operationReturnType 	:= void
			end
			
			self.operationParams			:= operationParams
			
			self.typeProject				:= typeProject
			self.nameProject				:= nameProject
			
			self.fileName 					:= folderLocation
			self.kmtContent 				:= StringBuffer.new
			self.packageCollection 			:= OrderedSet[String].new
			self.classCollection 			:= OrderedSet[String].new
		end	
		
		operation counterTab(iCounter : Integer) : String is do
			result := ""
			from var i : Integer init 1
			until
			i == iCounter
			loop
				result := result + "\t"
				i := i + 1
			end
		end
	}
}
