<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<!-- $Id$ -->
<book lang="en-US">
	<bookinfo>
		<mediaobject>
			<imageobject>
				<imagedata fileref="Kermeta-Manual_figures/KermetaLogo.png"
					format="PNG" />
			</imageobject>
		</mediaobject>
		<title>Kermeta tutorials</title>

		<pubdate>Build
			: &version; &buildNumber;
		</pubdate>
		<date>$Date:: $</date>

		<author>
			<firstname>Vincent</firstname>
			<surname>Fontanella</surname>
		</author>

		<keywordset>
			<keyword>Kermeta</keyword>
			<keyword>metamodeling</keyword>
			<keyword>language</keyword>
		</keywordset>

		<abstract>
			<para>These tutorials should demonstrate some usings of Kermeta language</para>
		</abstract>

		<publisher>
			<publishername>INRIA</publishername>

			<address>
				<state>France</state>
				<otheraddr>
					<ulink url="http://www.inria.fr">http://www.inria.fr</ulink>
				</otheraddr>
			</address>
		</publisher>
	</bookinfo>

	<preface id="preface.link">
		<title id="preface.title.link">
			Presentation
			<phrase id="preface"></phrase>
		</title>
		<para>Kermeta is language allowing to manipulate metamodel.</para>
		<important>
			<para>Preconditions so that tutorials should run correctly</para>
			<itemizedlist>
				<listitem>
					<para>Use an Eclipse Modeling Tools based on a Juno version</para>
				</listitem>
				<listitem>
					<para>On Eclipse IDE should be installed Kermeta language plug-in
						based upon a Release version</para>
				</listitem>
				<listitem>
					<para>On Eclipse IDE should be installed Maven plug-in</para>
				</listitem>
			</itemizedlist>
		</important>
	</preface>

	<chapter id="chapter_introduction.link">
		<title id="chapter_introduction.title.link">Using a Kermeta API from a Java program</title>

		<para>This tutorial aims to show how to use easily a kermeta api in a
			Java program.</para>

		<section id="sec_introduction_presentation.link">
			<title id="sec_introduction_presentation.title.link">Presentation</title>
			<para> We are presenting this tutorial in 6 steps :</para>
			<orderedlist numeration="arabic">
				<listitem>
					<para>Generate a new Kermeta project "HelloWorldKmt"</para>
				</listitem>
				<listitem>
					<para>Add a new operation which returns a string "hello world from a
						Kermeta project!!!"</para>
				</listitem>
				<listitem>
					<para>Generate a Jar file of the Kermeta project</para>
				</listitem>
				<listitem>
					<para>Generate a new Java project</para>
				</listitem>
				<listitem>
					<para>Called the Kermeta API from to the java project</para>
					<para>Execute as a java application</para>
				</listitem>
			</orderedlist>
		</section>

		<section>
			<title>Generate a new Kermeta project "HelloWorldKmt"</title>
			<para>We are using the new project Wizard which creates a new kermeta
				project "HelloWorldKmt" automatically.</para>
			<para></para>
			<orderedlist numeration="arabic">
				<listitem>
					<para>Inside eclipse context menu, select : File -> New ->
						Project...</para>
				</listitem>
				
				<listitem>
					<para>Select "Kermeta project" and Click on "Next" Button</para>
				</listitem>

				<listitem>
					<para>Wizard "New Project Kermeta" has just opened</para>
				</listitem>
			</orderedlist>
			<figure id="reftutoillustration1">
				<title>Wizard selection to access of a new project kermeta</title>

				<mediaobject>
					<imageobject>
						<imagedata fileref="Kermeta-Tutorial_figures/KermetaNewProject.png"
							format="PNG" />
					</imageobject>
				</mediaobject>
			</figure>

			<orderedlist continuation="continues">

				<listitem>
					<para>Replace project name by "HelloWorldKmt" and Click on "Finish"
						Button</para>
				</listitem>

			</orderedlist>

				<figure id="reftutoillustration2">
					<title>Wizard to generate a new project kermeta</title>

					<mediaobject>
						<imageobject>
							<imagedata fileref="Kermeta-Tutorial_figures/KermetaNewProjectWizard.png"
								format="PNG" />
						</imageobject>
					</mediaobject>
				</figure>
		</section>

		<section>
			<title>Add a new operation</title>
			<para>We are adding a new operation of the HelloWorld project,
				this operation should return a string : "Hello world from a Kermeta
				project!!!"</para>
			<para></para>
			<orderedlist>
				<listitem>
					<para>In the new kermeta project, open file : "MainClass.kmt"</para>
				</listitem>

				<listitem>
					<para>Add in class MainClass the following program listing :</para>
				</listitem>
			</orderedlist>

			<programlisting language="kermeta">
				operation helloWorld() : String is do
				result := "Hello world from a Kermeta project!!!"
				end
			</programlisting>

			<orderedlist continuation="continues">
				<listitem>
					<para>Compile the project and check there is no error</para>
					<para>To Compile : left click on file "project.kp", select Kermeta2
						-> Clean and Build Kermeta Project</para>
				</listitem>
			</orderedlist>
		</section>

		<section>
			<title>Generate the Jar file</title>
			<para>We are creating the Jar file which should allow the interfacing
				of the Java project with a Kermeta API</para>
			<para></para>
			<orderedlist>
				<listitem>
					<para>At the root of the project, create a new file "pom.xml"</para>
				</listitem>
			</orderedlist>

			<para>pom.xml should contain this following program listing : </para>

			<programlisting language="xml">
				<project xmlns="http://maven.apache.org/POM/4.0.0"
					xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
					xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
					<modelVersion>4.0.0</modelVersion>

					<groupId>helloworldkmt</groupId>
					<artifactId>helloworldkmt</artifactId>
					<version>0.0.1-SNAPSHOT</version>
					<packaging>jar</packaging>

					<name>helloworldkmt</name>
					<url>http://maven.apache.org</url>

					<properties>
						<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
					</properties>

					<build>
						<resources>
							<resource>
								<directory>${project.build.directory}/scalaclasses</directory>
							</resource>
							<resource>
								<directory>${project.build.directory}/emfclasses</directory>
							</resource>
						</resources>
						<plugins>
							<plugin>
								<groupId>org.scala-tools</groupId>
								<artifactId>maven-scala-plugin</artifactId>
								<executions>
									<execution>
										<goals>
											<goal>compile</goal>
										</goals>
									</execution>
								</executions>
								<configuration>
									<launchers>
										<launcher>
											<id>runner.MainRunner</id>
											<mainClass>runner.MainRunner</mainClass>
										</launcher>
									</launchers>
									<jvmArgs>
										<jvmArg>-Xmx1024m</jvmArg>
									</jvmArgs>
								</configuration>
							</plugin>


							<plugin>
								<groupId>org.apache.maven.plugins</groupId>
								<artifactId>maven-dependency-plugin</artifactId>
								<version>2.7</version>
								<executions>
									<execution>
										<id>copy-dependencies</id>
										<phase>package</phase>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
										<configuration>
											<outputDirectory>${project.build.directory}/dependencies</outputDirectory>
											<overWriteReleases>false</overWriteReleases>
											<overWriteSnapshots>false</overWriteSnapshots>
											<overWriteIfNewer>true</overWriteIfNewer>
										</configuration>
									</execution>
								</executions>
							</plugin>

							<plugin>
								<groupId>org.apache.felix</groupId>
								<artifactId>maven-bundle-plugin</artifactId>
								<extensions>true</extensions>
								<configuration>
									<instructions>
										<Private-Package>*</Private-Package>
										<BundleClassPath>.</BundleClassPath>
									</instructions>
								</configuration>
							</plugin>
							<plugin>
								<groupId>org.codehaus.mojo</groupId>
								<artifactId>truezip-maven-plugin</artifactId>
								<version>1.0-beta-4</version>
								<executions>
									<execution>
										<id>remove-a-file</id>
										<phase>package</phase>
										<goals>
											<goal>remove</goal>
										</goals>
										<configuration>
											<fileset>
												<directory>target/${project.artifactId}-${project.version}.jar/META-INF</directory>
												<includes>
													<include>**/*.RSA</include>
													<include>**/*.SF</include>
												</includes>
											</fileset>
										</configuration>
									</execution>
								</executions>
							</plugin>
						</plugins>
					</build>
					<repositories>
						<repository>
							<id>triskellPublic</id>
							<url>http://maven.irisa.fr/artifactory/public-release/</url>
						</repository>
						<repository>
							<id>triskellSnapshot</id>
							<url>http://maven.irisa.fr/artifactory/public-snapshot/</url>
						</repository>
						<repository>
							<id>Scala-tools Maven2 Repository</id>
							<url>http://scala-tools.org/repo-releases</url>
						</repository>
					</repositories>
					<pluginRepositories>
						<pluginRepository>
							<id>scala-tools.org</id>
							<url>http://maven.irisa.fr/artifactory/public-release/</url>
						</pluginRepository>
					</pluginRepositories>
					<dependencies>
						<dependency>
							<groupId>org.scala-lang</groupId>
							<artifactId>scala-library</artifactId>
							<version>2.9.3</version>
							<scope>compile</scope>
						</dependency>
						<dependency>
							<groupId>org.kermeta.language</groupId>
							<artifactId>language.model</artifactId>
							<version>2.0.99-SNAPSHOT</version>
							<scope>compile</scope>
						</dependency>
						<dependency>
							<groupId>org.kermeta.emf</groupId>
							<artifactId>emf.lib</artifactId>
							<version>2.7.0</version>
							<scope>compile</scope>
						</dependency>
						<dependency>
							<groupId>org.kermeta.emf</groupId>
							<artifactId>emf.lib.patched</artifactId>
							<version>2.7.0</version>
							<scope>compile</scope>
						</dependency>
						<dependency>
							<groupId>org.kermeta.language</groupId>
							<artifactId>language.library.core</artifactId>
							<version>2.0.99-SNAPSHOT</version>
							<scope>compile</scope>
						</dependency>
						<dependency>
							<groupId>org.kermeta.language</groupId>
							<artifactId>language.library.utils</artifactId>
							<version>2.0.99-SNAPSHOT</version>
							<scope>compile</scope>
						</dependency>
						<dependency>
							<groupId>org.kermeta.utils</groupId>
							<artifactId>utils.helpers</artifactId>
							<version>2.0.99-SNAPSHOT</version>
							<scope>compile</scope>
						</dependency>
						<dependency>
							<groupId>org.kermeta.utils</groupId>
							<artifactId>utils.systemservices.api</artifactId>
							<version>2.0.99-SNAPSHOT</version>
							<scope>compile</scope>
						</dependency>
					</dependencies>

				</project>
			</programlisting>
			<orderedlist continuation="continues">
				<listitem>
					<para>Left click on the pom.xml, select Run as -> Maven build...</para>
				</listitem>

				<listitem>
					<para>A window is openned, in field "Goals:", put : "package" and then press button "run"</para>
				</listitem>
			</orderedlist>
				
			<figure id="reftutoillustration3">
				<title>Wizard to configure a pom running</title>

				<mediaobject>
					<imageobject>
						<imagedata fileref="Kermeta-Tutorial_figures/KermetaPomXmlPackage.png"
							format="PNG" />
					</imageobject>
				</mediaobject>
			</figure>
			<orderedlist continuation="continues">
				<listitem>
					<para>After have refreshed the project, In "target" folder check that a "helloworldkmt-0.0.1-SNAPSHOT.jar" has been created</para>
				</listitem>
			</orderedlist>
		</section>
		
		<section>
			<title>Generate a new java project</title>
			<para>This part consists to generate a new project java containing the jar file generated by the kermeta project before and its dependencies</para>
			<para></para>
			<orderedlist numeration="arabic">
				<listitem>
					<para>Inside eclipse context menu, select : File -> New -> Java Project</para>
				</listitem>
				
				<listitem>
					<para>Wizard "New Java Project" has just opened</para>
				</listitem>

				<listitem>
					<para>in field "Project name:", enter "helloworld" and click on button "next"</para>
				</listitem>
			</orderedlist>
			
			<figure id="reftutoillustration4">
				<title>Wizard selection to access of a new project java</title>

				<mediaobject>
					<imageobject>
						<imagedata fileref="Kermeta-Tutorial_figures/JavaNewProject.png"
							format="PNG" />
					</imageobject>
				</mediaobject>
			</figure>

			<orderedlist continuation="continues">
				
				<listitem>
					<para>At the following window "Java Settings", select the tab "Libraries"</para>
				</listitem>
				
				<listitem>
					<para>Click on button "Add JARs..."</para>
					<para>Go to folder "helloworldKmt/target", select the jar file and then all jar file existing in the folder ""dependencies"</para>
				</listitem>
				
				<listitem>
					<para>you should obtain that below :</para>
				</listitem>

			</orderedlist>

				<figure id="reftutoillustration5">
					<title>Wizard to select libraries for the new project </title>

					<mediaobject>
						<imageobject>
							<imagedata fileref="Kermeta-Tutorial_figures/JavaNewProjectAddJar.png"
								format="PNG" />
						</imageobject>
					</mediaobject>
				</figure>
			<orderedlist continuation="continues">
				<listitem>
					<para>Click on button "Finish" and a new java project "helloworld" has been created in the workspace</para>
				</listitem>
			</orderedlist>
		</section>
		<section>
			<title>Called a kermeta API from to the project java</title>
			<para>This part consists to use the operation "helloWorld" defined in the project kermeta "helloworldkmt"</para>
			<para>to display the message transmitting by the API kermeta on the console</para>
			
			<orderedlist>
				<listitem>
					<para>Create a new class containing the following listing programm</para>
				</listitem>
			</orderedlist>
			<programlisting language="java">	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		helloworldkmt.mainPackage.MainClass mc = helloworldkmt.mainPackage.KerRichFactory.createMainClass();
		System.out.println("Essai avec un code kermeta distant");
		System.out.println(mc.helloWorld());
		
	}
			</programlisting>
			<orderedlist>
				<listitem>
					<para>Launch the java program</para>
					<para>Right click on the class containing main operation -> Run As -> Java Application</para>
				</listitem>
				<listitem>
					<para>Check the message "Hello world from a Kermeta project!!!" has been displayed on the console</para>
				</listitem>
			</orderedlist>
		</section>
	</chapter>
</book>
			