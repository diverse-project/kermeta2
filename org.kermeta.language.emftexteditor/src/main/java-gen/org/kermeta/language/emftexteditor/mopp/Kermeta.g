grammar Kermeta;

options {
	superClass = KermetaANTLRParserBase;
	backtrack = true;
	memoize = true;
}

@lexer::header {
	package org.kermeta.language.emftexteditor.mopp;
}

@lexer::members {
	public java.util.List<org.antlr.runtime.RecognitionException> lexerExceptions  = new java.util.ArrayList<org.antlr.runtime.RecognitionException>();
	public java.util.List<java.lang.Integer> lexerExceptionsPosition = new java.util.ArrayList<java.lang.Integer>();
	
	public void reportError(org.antlr.runtime.RecognitionException e) {
		lexerExceptions.add(e);
		lexerExceptionsPosition.add(((org.antlr.runtime.ANTLRStringStream) input).index());
	}
}
@header{
	package org.kermeta.language.emftexteditor.mopp;
}

@members{
	private org.kermeta.language.emftexteditor.IKermetaTokenResolverFactory tokenResolverFactory = new org.kermeta.language.emftexteditor.mopp.KermetaTokenResolverFactory();
	@SuppressWarnings("unused")
	
	private int lastPosition;
	private org.kermeta.language.emftexteditor.mopp.KermetaTokenResolveResult tokenResolveResult = new org.kermeta.language.emftexteditor.mopp.KermetaTokenResolveResult();
	private boolean rememberExpectedElements = false;
	private java.lang.Object parseToIndexTypeObject;
	private int lastTokenIndex = 0;
	private java.util.List<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal> expectedElements = new java.util.ArrayList<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal>();
	private int mismatchedTokenRecoveryTries = 0;
	private java.util.Map<?, ?> options;
	//helper lists to allow a lexer to pass errors to its parser
	protected java.util.List<org.antlr.runtime.RecognitionException> lexerExceptions = java.util.Collections.synchronizedList(new java.util.ArrayList<org.antlr.runtime.RecognitionException>());
	protected java.util.List<java.lang.Integer> lexerExceptionsPosition = java.util.Collections.synchronizedList(new java.util.ArrayList<java.lang.Integer>());
	private int stopIncludingHiddenTokens;
	private int stopExcludingHiddenTokens;
	private java.util.Collection<org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>> postParseCommands;
	private boolean terminateParsing;
	private int tokenIndexOfLastCompleteElement;
	private int expectedElementsIndexOfLastCompleteElement;
	
	protected void addErrorToResource(final java.lang.String errorMessage, final int line, final int charPositionInLine, final int startIndex, final int stopIndex) {
		postParseCommands.add(new org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>() {
			public boolean execute(org.kermeta.language.emftexteditor.IKermetaTextResource resource) {
				if (resource == null) {
					// the resource can be null if the parser is used for
					// code completion
					return true;
				}
				resource.addProblem(new org.kermeta.language.emftexteditor.IKermetaProblem() {
					public org.kermeta.language.emftexteditor.KermetaEProblemType getType() {
						return org.kermeta.language.emftexteditor.KermetaEProblemType.ERROR;
					}
					public java.lang.String getMessage() {
						return errorMessage;
					}
				}, line, charPositionInLine, startIndex, stopIndex);
				return true;
			}
		});
	}
	
	public void addExpectedElement(org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal expectedElement) {
		if (!this.rememberExpectedElements) {
			return;
		}
		setPosition(expectedElement, input.index());
		this.expectedElements.add(expectedElement);
	}
	
	protected void addMapEntry(org.eclipse.emf.ecore.EObject element, org.eclipse.emf.ecore.EStructuralFeature structuralFeature, org.kermeta.language.emftexteditor.mopp.KermetaDummyEObject dummy) {
		java.lang.Object value = element.eGet(structuralFeature);
		java.lang.Object mapKey = dummy.getValueByName("key");
		java.lang.Object mapValue = dummy.getValueByName("value");
		if (value instanceof org.eclipse.emf.common.util.EMap<?, ?>) {
			org.eclipse.emf.common.util.EMap<java.lang.Object, java.lang.Object> valueMap = org.kermeta.language.emftexteditor.util.KermetaMapUtil.castToEMap(value);
			if (mapKey != null && mapValue != null) {
				valueMap.put(mapKey, mapValue);
			}
		}
	}
	
	@SuppressWarnings("unchecked")
	
	private boolean addObjectToList(org.eclipse.emf.ecore.EObject element, int featureID, java.lang.Object proxy) {
		return ((java.util.List<java.lang.Object>) element.eGet(element.eClass().getEStructuralFeature(featureID))).add(proxy);
	}
	
	protected org.eclipse.emf.ecore.EObject apply(org.eclipse.emf.ecore.EObject target, java.util.List<org.eclipse.emf.ecore.EObject> dummyEObjects) {
		org.eclipse.emf.ecore.EObject currentTarget = target;
		for (org.eclipse.emf.ecore.EObject object : dummyEObjects) {
			assert(object instanceof org.kermeta.language.emftexteditor.mopp.KermetaDummyEObject);
			org.kermeta.language.emftexteditor.mopp.KermetaDummyEObject dummy = (org.kermeta.language.emftexteditor.mopp.KermetaDummyEObject) object;
			org.eclipse.emf.ecore.EObject newEObject = dummy.applyTo(currentTarget);
			currentTarget = newEObject;
		}
		return currentTarget;
	}
	
	protected void collectHiddenTokens(org.eclipse.emf.ecore.EObject element) {
	}
	
	protected void copyLocalizationInfos(final org.eclipse.emf.ecore.EObject source, final org.eclipse.emf.ecore.EObject target) {
		postParseCommands.add(new org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>() {
			public boolean execute(org.kermeta.language.emftexteditor.IKermetaTextResource resource) {
				org.kermeta.language.emftexteditor.IKermetaLocationMap locationMap = resource.getLocationMap();
				if (locationMap == null) {
					// the locationMap can be null if the parser is used for
					// code completion
					return true;
				}
				locationMap.setCharStart(target, locationMap.getCharStart(source));
				locationMap.setCharEnd(target, locationMap.getCharEnd(source));
				locationMap.setColumn(target, locationMap.getColumn(source));
				locationMap.setLine(target, locationMap.getLine(source));
				return true;
			}
		});
	}
	
	protected void copyLocalizationInfos(final org.antlr.runtime.CommonToken source, final org.eclipse.emf.ecore.EObject target) {
		postParseCommands.add(new org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>() {
			public boolean execute(org.kermeta.language.emftexteditor.IKermetaTextResource resource) {
				org.kermeta.language.emftexteditor.IKermetaLocationMap locationMap = resource.getLocationMap();
				if (locationMap == null) {
					// the locationMap can be null if the parser is used for
					// code completion
					return true;
				}
				if (source == null) {
					return true;
				}
				locationMap.setCharStart(target, source.getStartIndex());
				locationMap.setCharEnd(target, source.getStopIndex());
				locationMap.setColumn(target, source.getCharPositionInLine());
				locationMap.setLine(target, source.getLine());
				return true;
			}
		});
	}
	
	public org.kermeta.language.emftexteditor.IKermetaTextParser createInstance(java.io.InputStream actualInputStream, java.lang.String encoding) {
		try {
			if (encoding == null) {
				return new KermetaParser(new org.antlr.runtime.CommonTokenStream(new KermetaLexer(new org.antlr.runtime.ANTLRInputStream(actualInputStream))));
			} else {
				return new KermetaParser(new org.antlr.runtime.CommonTokenStream(new KermetaLexer(new org.antlr.runtime.ANTLRInputStream(actualInputStream, encoding))));
			}
		} catch (java.io.IOException e) {
			org.kermeta.language.emftexteditor.mopp.KermetaPlugin.logError("Error while creating parser.", e);
			return null;
		}
	}
	
	// This default constructor is only used to call createInstance() on it
	public KermetaParser() {
		super(null);
	}
	
	protected org.eclipse.emf.ecore.EObject doParse() throws org.antlr.runtime.RecognitionException {
		this.lastPosition = 0;
		// required because the lexer class can not be subclassed
		((KermetaLexer) getTokenStream().getTokenSource()).lexerExceptions = lexerExceptions;
		((KermetaLexer) getTokenStream().getTokenSource()).lexerExceptionsPosition = lexerExceptionsPosition;
		java.lang.Object typeObject = getTypeObject();
		if (typeObject == null) {
			return start();
		} else if (typeObject instanceof org.eclipse.emf.ecore.EClass) {
			org.eclipse.emf.ecore.EClass type = (org.eclipse.emf.ecore.EClass) typeObject;
			if (type.getInstanceClass() == org.kermeta.language.structure.ModelingUnit.class) {
				return parse_org_kermeta_language_structure_ModelingUnit();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.Using.class) {
				return parse_org_kermeta_language_structure_Using();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.Require.class) {
				return parse_org_kermeta_language_structure_Require();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.Package.class) {
				return parse_org_kermeta_language_structure_Package();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.ClassDefinition.class) {
				return parse_org_kermeta_language_structure_ClassDefinition();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.Property.class) {
				return parse_org_kermeta_language_structure_Property();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.Operation.class) {
				return parse_org_kermeta_language_structure_Operation();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.Parameter.class) {
				return parse_org_kermeta_language_structure_Parameter();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.Class.class) {
				return parse_org_kermeta_language_structure_Class();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.Enumeration.class) {
				return parse_org_kermeta_language_structure_Enumeration();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.EnumerationLiteral.class) {
				return parse_org_kermeta_language_structure_EnumerationLiteral();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.Constraint.class) {
				return parse_org_kermeta_language_structure_Constraint();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.Object.class) {
				return parse_org_kermeta_language_structure_Object();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.Model.class) {
				return parse_org_kermeta_language_structure_Model();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.ModelType.class) {
				return parse_org_kermeta_language_structure_ModelType();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.TypeVariableBinding.class) {
				return parse_org_kermeta_language_structure_TypeVariableBinding();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.MultiplicityElement.class) {
				return parse_org_kermeta_language_structure_MultiplicityElement();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.TypeDefinition.class) {
				return parse_org_kermeta_language_structure_TypeDefinition();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.PrimitiveType.class) {
				return parse_org_kermeta_language_structure_PrimitiveType();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.Tag.class) {
				return parse_org_kermeta_language_structure_Tag();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.ObjectTypeVariable.class) {
				return parse_org_kermeta_language_structure_ObjectTypeVariable();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.ModelTypeVariable.class) {
				return parse_org_kermeta_language_structure_ModelTypeVariable();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.VirtualType.class) {
				return parse_org_kermeta_language_structure_VirtualType();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.ProductType.class) {
				return parse_org_kermeta_language_structure_ProductType();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.FunctionType.class) {
				return parse_org_kermeta_language_structure_FunctionType();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.VoidType.class) {
				return parse_org_kermeta_language_structure_VoidType();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.Block.class) {
				return parse_org_kermeta_language_behavior_Block();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.Rescue.class) {
				return parse_org_kermeta_language_behavior_Rescue();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.TypeReference.class) {
				return parse_org_kermeta_language_behavior_TypeReference();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.Raise.class) {
				return parse_org_kermeta_language_behavior_Raise();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.BooleanLiteral.class) {
				return parse_org_kermeta_language_behavior_BooleanLiteral();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.IntegerLiteral.class) {
				return parse_org_kermeta_language_behavior_IntegerLiteral();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.StringLiteral.class) {
				return parse_org_kermeta_language_behavior_StringLiteral();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.Conditional.class) {
				return parse_org_kermeta_language_behavior_Conditional();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.Loop.class) {
				return parse_org_kermeta_language_behavior_Loop();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.VariableDecl.class) {
				return parse_org_kermeta_language_behavior_VariableDecl();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.TypeLiteral.class) {
				return parse_org_kermeta_language_behavior_TypeLiteral();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.CallResult.class) {
				return parse_org_kermeta_language_behavior_CallResult();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.CallSuperOperation.class) {
				return parse_org_kermeta_language_behavior_CallSuperOperation();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.Assignment.class) {
				return parse_org_kermeta_language_behavior_Assignment();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.CallVariable.class) {
				return parse_org_kermeta_language_behavior_CallVariable();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.SelfExpression.class) {
				return parse_org_kermeta_language_behavior_SelfExpression();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.CallFeature.class) {
				return parse_org_kermeta_language_behavior_CallFeature();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.CallValue.class) {
				return parse_org_kermeta_language_behavior_CallValue();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.EmptyExpression.class) {
				return parse_org_kermeta_language_behavior_EmptyExpression();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.JavaStaticCall.class) {
				return parse_org_kermeta_language_behavior_JavaStaticCall();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.LambdaExpression.class) {
				return parse_org_kermeta_language_behavior_LambdaExpression();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.LambdaParameter.class) {
				return parse_org_kermeta_language_behavior_LambdaParameter();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.VoidLiteral.class) {
				return parse_org_kermeta_language_behavior_VoidLiteral();
			}
		}
		throw new org.kermeta.language.emftexteditor.mopp.KermetaUnexpectedContentTypeException(typeObject);
	}
	
	private org.kermeta.language.emftexteditor.mopp.KermetaTokenResolveResult getFreshTokenResolveResult() {
		tokenResolveResult.clear();
		return tokenResolveResult;
	}
	
	public int getMismatchedTokenRecoveryTries() {
		return mismatchedTokenRecoveryTries;
	}
	
	public java.lang.Object getMissingSymbol(org.antlr.runtime.IntStream arg0, org.antlr.runtime.RecognitionException arg1, int arg2, org.antlr.runtime.BitSet arg3) {
		mismatchedTokenRecoveryTries++;
		return super.getMissingSymbol(arg0, arg1, arg2, arg3);
	}
	
	protected java.util.Map<?,?> getOptions() {
		return options;
	}
	
	public org.kermeta.language.emftexteditor.mopp.KermetaMetaInformation getMetaInformation() {
		return new org.kermeta.language.emftexteditor.mopp.KermetaMetaInformation();
	}
	
	public java.lang.Object getParseToIndexTypeObject() {
		return parseToIndexTypeObject;
	}
	
	protected org.kermeta.language.emftexteditor.mopp.KermetaReferenceResolverSwitch getReferenceResolverSwitch() {
		return (org.kermeta.language.emftexteditor.mopp.KermetaReferenceResolverSwitch) getMetaInformation().getReferenceResolverSwitch();
	}
	
	protected java.lang.Object getTypeObject() {
		java.lang.Object typeObject = getParseToIndexTypeObject();
		if (typeObject != null) {
			return typeObject;
		}
		java.util.Map<?,?> options = getOptions();
		if (options != null) {
			typeObject = options.get(org.kermeta.language.emftexteditor.IKermetaOptions.RESOURCE_CONTENT_TYPE);
		}
		return typeObject;
	}
	
	// Implementation that calls {@link #doParse()}  and handles the thrown
	// RecognitionExceptions.
	public org.kermeta.language.emftexteditor.IKermetaParseResult parse() {
		terminateParsing = false;
		postParseCommands = new java.util.ArrayList<org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>>();
		org.kermeta.language.emftexteditor.mopp.KermetaParseResult parseResult = new org.kermeta.language.emftexteditor.mopp.KermetaParseResult();
		try {
			org.eclipse.emf.ecore.EObject result =  doParse();
			if (lexerExceptions.isEmpty()) {
				parseResult.setRoot(result);
			}
		} catch (org.antlr.runtime.RecognitionException re) {
			reportError(re);
		} catch (java.lang.IllegalArgumentException iae) {
			if ("The 'no null' constraint is violated".equals(iae.getMessage())) {
				//? can be caused if a null is set on EMF models where not allowed;
				//? this will just happen if other errors occurred before
			} else {
				iae.printStackTrace();
			}
		}
		for (org.antlr.runtime.RecognitionException re : lexerExceptions) {
			reportLexicalError(re);
		}
		parseResult.getPostParseCommands().addAll(postParseCommands);
		return parseResult;
	}
	
	public java.util.List<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal> parseToExpectedElements(org.eclipse.emf.ecore.EClass type, org.kermeta.language.emftexteditor.IKermetaTextResource dummyResource) {
		rememberExpectedElements = true;
		parseToIndexTypeObject = type;
		final org.antlr.runtime.CommonTokenStream tokenStream = (org.antlr.runtime.CommonTokenStream) getTokenStream();
		org.kermeta.language.emftexteditor.IKermetaParseResult result = parse();
		if (result != null) {
			org.eclipse.emf.ecore.EObject root = result.getRoot();
			if (root != null) {
				dummyResource.getContents().add(root);
			}
			for (org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource> command : result.getPostParseCommands()) {
				command.execute(dummyResource);
			}
		}
		// remove all expected elements that were added after the last complete element
		expectedElements = expectedElements.subList(0, expectedElementsIndexOfLastCompleteElement + 1);
		int lastFollowSetID = expectedElements.get(expectedElementsIndexOfLastCompleteElement).getFollowSetID();
		java.util.Set<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal> currentFollowSet = new java.util.LinkedHashSet<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal>();
		java.util.List<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal> newFollowSet = new java.util.ArrayList<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal>();
		for (int i = expectedElementsIndexOfLastCompleteElement; i >= 0; i--) {
			org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal expectedElementI = expectedElements.get(i);
			if (expectedElementI.getFollowSetID() == lastFollowSetID) {
				currentFollowSet.add(expectedElementI);
			} else {
				break;
			}
		}
		int followSetID = 714;
		int i;
		for (i = tokenIndexOfLastCompleteElement; i < tokenStream.size(); i++) {
			org.antlr.runtime.CommonToken nextToken = (org.antlr.runtime.CommonToken) tokenStream.get(i);
			if (nextToken.getChannel() == 99) {
				// hidden tokens do not reduce the follow set
			} else {
				// now that we have found the next visible token the position for that expected terminals
				// can be set
				for (org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal nextFollow : newFollowSet) {
					lastTokenIndex = 0;
					setPosition(nextFollow, i);
				}
				newFollowSet.clear();
				// normal tokens do reduce the follow set - only elements that match the token are kept
				for (org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal nextFollow : currentFollowSet) {
					if (nextFollow.getTerminal().getTokenName().equals(getTokenNames()[nextToken.getType()])) {
						// keep this one - it matches
						java.util.Collection<org.kermeta.language.emftexteditor.IKermetaExpectedElement> newFollowers = nextFollow.getTerminal().getFollowers();
						for (org.kermeta.language.emftexteditor.IKermetaExpectedElement newFollower : newFollowers) {
							org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal newFollowTerminal = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(newFollower, followSetID);
							newFollowSet.add(newFollowTerminal);
							expectedElements.add(newFollowTerminal);
						}
					}
				}
				currentFollowSet.clear();
				currentFollowSet.addAll(newFollowSet);
			}
			followSetID++;
		}
		// after the last token in the stream we must set the position for the elements that were
		// added during the last iteration of the loop
		for (org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal nextFollow : newFollowSet) {
			lastTokenIndex = 0;
			setPosition(nextFollow, i);
		}
		return this.expectedElements;
	}
	
	public void setPosition(org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal expectedElement, int tokenIndex) {
		int currentIndex = java.lang.Math.max(0, tokenIndex);
		for (int index = lastTokenIndex; index < currentIndex; index++) {
			if (index >= input.size()) {
				break;
			}
			org.antlr.runtime.CommonToken tokenAtIndex = (org.antlr.runtime.CommonToken) input.get(index);
			stopIncludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
			if (tokenAtIndex.getChannel() != 99) {
				stopExcludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
			}
		}
		lastTokenIndex = java.lang.Math.max(0, currentIndex);
		expectedElement.setPosition(stopExcludingHiddenTokens, stopIncludingHiddenTokens);
	}
	
	public java.lang.Object recoverFromMismatchedToken(org.antlr.runtime.IntStream input, int ttype, org.antlr.runtime.BitSet follow) throws org.antlr.runtime.RecognitionException {
		if (!rememberExpectedElements) {
			return super.recoverFromMismatchedToken(input, ttype, follow);
		} else {
			return null;
		}
	}
	protected <ContainerType extends org.eclipse.emf.ecore.EObject, ReferenceType extends org.eclipse.emf.ecore.EObject> void registerContextDependentProxy(final org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<ContainerType, ReferenceType> factory, final ContainerType element, final org.eclipse.emf.ecore.EReference reference, final String id, final org.eclipse.emf.ecore.EObject proxy) {
		postParseCommands.add(new org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>() {
			public boolean execute(org.kermeta.language.emftexteditor.IKermetaTextResource resource) {
				if (resource == null) {
					// the resource can be null if the parser is used for
					// code completion
					return true;
				}
				resource.registerContextDependentProxy(factory, element, reference, id, proxy);
				return true;
			}
		});
	}
	
	// Translates errors thrown by the parser into human readable messages.
	public void reportError(final org.antlr.runtime.RecognitionException e)  {
		java.lang.String message = e.getMessage();
		if (e instanceof org.antlr.runtime.MismatchedTokenException) {
			org.antlr.runtime.MismatchedTokenException mte = (org.antlr.runtime.MismatchedTokenException) e;
			java.lang.String tokenName = "<unknown>";
			if (mte.expecting == Token.EOF) {
				tokenName = "EOF";
			} else {
				tokenName = getTokenNames()[mte.expecting];
				tokenName = org.kermeta.language.emftexteditor.util.KermetaStringUtil.formatTokenName(tokenName);
			}
			message = "Syntax error on token \"" + e.token.getText() + "\", \"" + tokenName + "\" expected";
		} else if (e instanceof org.antlr.runtime.MismatchedTreeNodeException) {
			org.antlr.runtime.MismatchedTreeNodeException mtne = (org.antlr.runtime.MismatchedTreeNodeException) e;
			java.lang.String tokenName = "<unknown>";
			if (mtne.expecting == Token.EOF) {
				tokenName = "EOF";
			} else {
				tokenName = getTokenNames()[mtne.expecting];
			}
			message = "mismatched tree node: "+"xxx" +"; expecting " + tokenName;
		} else if (e instanceof org.antlr.runtime.NoViableAltException) {
			message = "Syntax error on token \"" + e.token.getText() + "\", check following tokens";
		} else if (e instanceof org.antlr.runtime.EarlyExitException) {
			message = "Syntax error on token \"" + e.token.getText() + "\", delete this token";
		} else if (e instanceof org.antlr.runtime.MismatchedSetException) {
			org.antlr.runtime.MismatchedSetException mse = (org.antlr.runtime.MismatchedSetException) e;
			message = "mismatched token: " + e.token + "; expecting set " + mse.expecting;
		} else if (e instanceof org.antlr.runtime.MismatchedNotSetException) {
			org.antlr.runtime.MismatchedNotSetException mse = (org.antlr.runtime.MismatchedNotSetException) e;
			message = "mismatched token: " +  e.token + "; expecting set " + mse.expecting;
		} else if (e instanceof org.antlr.runtime.FailedPredicateException) {
			org.antlr.runtime.FailedPredicateException fpe = (org.antlr.runtime.FailedPredicateException) e;
			message = "rule " + fpe.ruleName + " failed predicate: {" +  fpe.predicateText+"}?";
		}
		// the resource may be null if the parse is used for code completion
		final java.lang.String finalMessage = message;
		if (e.token instanceof org.antlr.runtime.CommonToken) {
			final org.antlr.runtime.CommonToken ct = (org.antlr.runtime.CommonToken) e.token;
			addErrorToResource(finalMessage, ct.getCharPositionInLine(), ct.getLine(), ct.getStartIndex(), ct.getStopIndex());
		} else {
			addErrorToResource(finalMessage, e.token.getCharPositionInLine(), e.token.getLine(), 1, 5);
		}
	}
	
	// Translates errors thrown by the lexer into human readable messages.
	public void reportLexicalError(final org.antlr.runtime.RecognitionException e)  {
		java.lang.String message = "";
		if (e instanceof org.antlr.runtime.MismatchedTokenException) {
			org.antlr.runtime.MismatchedTokenException mte = (org.antlr.runtime.MismatchedTokenException) e;
			message = "Syntax error on token \"" + ((char) e.c) + "\", \"" + (char) mte.expecting + "\" expected";
		} else if (e instanceof org.antlr.runtime.NoViableAltException) {
			message = "Syntax error on token \"" + ((char) e.c) + "\", delete this token";
		} else if (e instanceof org.antlr.runtime.EarlyExitException) {
			org.antlr.runtime.EarlyExitException eee = (org.antlr.runtime.EarlyExitException) e;
			message ="required (...)+ loop (decision=" + eee.decisionNumber + ") did not match anything; on line " + e.line + ":" + e.charPositionInLine + " char=" + ((char) e.c) + "'";
		} else if (e instanceof org.antlr.runtime.MismatchedSetException) {
			org.antlr.runtime.MismatchedSetException mse = (org.antlr.runtime.MismatchedSetException) e;
			message ="mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
		} else if (e instanceof org.antlr.runtime.MismatchedNotSetException) {
			org.antlr.runtime.MismatchedNotSetException mse = (org.antlr.runtime.MismatchedNotSetException) e;
			message ="mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
		} else if (e instanceof org.antlr.runtime.MismatchedRangeException) {
			org.antlr.runtime.MismatchedRangeException mre = (org.antlr.runtime.MismatchedRangeException) e;
			message ="mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set '" + (char) mre.a + "'..'" + (char) mre.b + "'";
		} else if (e instanceof org.antlr.runtime.FailedPredicateException) {
			org.antlr.runtime.FailedPredicateException fpe = (org.antlr.runtime.FailedPredicateException) e;
			message ="rule " + fpe.ruleName + " failed predicate: {" + fpe.predicateText + "}?";
		}
		addErrorToResource(message, e.index, e.line, lexerExceptionsPosition.get(lexerExceptions.indexOf(e)), lexerExceptionsPosition.get(lexerExceptions.indexOf(e)));
	}
	
	public void setOptions(java.util.Map<?,?> options) {
		this.options = options;
	}
	
	public void terminate() {
		terminateParsing = true;
	}
	
	protected void completedElement(Object element) {
		if (element instanceof org.eclipse.emf.ecore.EObject) {
			this.tokenIndexOfLastCompleteElement = getTokenStream().index();
			this.expectedElementsIndexOfLastCompleteElement = expectedElements.size() - 1;
		}
	}
	
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_0 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("require");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_1 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("using");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_2 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("package");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_3 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("aspect");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_4 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("abstract");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_5 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("class");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_6 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("enumeration");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_7 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__IS_ASPECT), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_8 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ModelType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_9 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__IS_ASPECT), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_10 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("TypeDefinition");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_11 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPrimitiveType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__IS_ASPECT), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_12 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("PrimitiveType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_13 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Model");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_14 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("attribute");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_15 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("reference");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_16 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("property");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_17 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getConstraint().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__STEREOTYPE), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_18 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("operation");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_19 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getParameter().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__NAME), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_20 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_ORDERED), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_21 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_UNIQUE), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_22 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("MultiplicityElement");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_23 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getTypeReference().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_REFERENCE__TYPE), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_24 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getUsing().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.USING__QUALIFIED_NAME), "QUALIFIEDNAME");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_25 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getUsing().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.USING__QUALIFIED_NAME), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_26 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getRequire().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.REQUIRE__URI), "STRING_LITERAL");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_27 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPackage().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NESTING_PACKAGE), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_28 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPackage().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_29 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_30 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_31 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_32 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_33 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_34 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__NAME), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_35 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("inherits");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_36 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_37 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_38 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_39 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_40 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_41 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProperty().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_42 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_43 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProperty().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_44 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProperty().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_45 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_46 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("do");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_47 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("raise");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_48 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getBooleanLiteral().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.BOOLEAN_LITERAL__VALUE), "BOOLEAN");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_49 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getIntegerLiteral().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.INTEGER_LITERAL__VALUE), "INTEGER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_50 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getStringLiteral().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.STRING_LITERAL__VALUE), "STRING_LITERAL");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_51 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("if");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_52 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("from");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_53 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("var");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_54 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("result");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_55 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("super(");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_56 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_57 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallVariable().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VARIABLE__NAME), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_58 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("JavaStaticCall");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_59 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("self");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_60 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_61 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("CallValue");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_62 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("EmptyExpression");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_63 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("LambdaExpression");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_64 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Void");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_65 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProperty().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_66 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getOperation().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__NAME), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_67 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_68 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_69 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_70 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_71 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getOperation().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_72 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_73 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getOperation().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_74 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_75 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("is");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_76 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getOperation().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_77 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("abstract");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_78 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_79 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getParameter().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__TYPE), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_80 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getClass_().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS__TYPE_DEFINITION), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_81 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_82 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_83 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_84 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("variable");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_85 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("type");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_86 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_87 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_88 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_89 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_90 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_91 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("type");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_92 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("lower");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_93 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("upper");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_94 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_95 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_96 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_97 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_98 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_99 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_100 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("instanceType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_101 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_102 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_103 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_104 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_105 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_106 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_107 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("supertype");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_108 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_109 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_110 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_111 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_112 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_113 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_114 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("supertype");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_115 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("virtualType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_116 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_117 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_118 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_119 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_120 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_121 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_122 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("supertype");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_123 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("classDefinition");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_124 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("modelType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_125 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeParamBinding");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_126 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_127 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_128 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_129 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_130 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_131 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("type");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_132 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_133 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_134 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_135 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_136 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_137 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("left");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_138 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("right");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_139 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_140 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_141 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_142 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_143 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("staticType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_144 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("parameters");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_145 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_146 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("staticTypeVariableBindings");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_147 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_148 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_149 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_150 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_151 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("staticType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_152 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_153 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_154 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_155 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_156 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("staticType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_157 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("parameters");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_158 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("jclass");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_159 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("jmethod");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_160 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_161 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_162 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_163 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_164 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("staticType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_165 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("parameters");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_166 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("body");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_167 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_168 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getEnumeration().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION__NAME), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_169 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_170 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getEnumerationLiteral().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION_LITERAL__NAME), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_171 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(";");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_172 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_173 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(";");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_174 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getConstraint().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__LANGUAGE), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_175 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Object");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_176 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_177 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_178 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_179 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_180 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_181 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObject().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT__TAG), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_182 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_183 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_184 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_185 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_186 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_187 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_188 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_189 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModel().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL__TAG), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_190 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_191 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_192 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_193 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_194 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_195 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_196 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("includedTypeDefinition");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_197 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_198 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_199 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TAG), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_200 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_201 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_202 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TYPE_CONTAINER), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_203 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_204 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__NAME), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_205 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_206 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__INCLUDED_TYPE_DEFINITION), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_207 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("TypeVariableBinding");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_208 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_209 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_210 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeVariableBinding().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TAG), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_211 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_212 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_213 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ObjectTypeVariable");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_214 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ModelTypeVariable");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_215 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("VirtualType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_216 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ProductType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_217 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("FunctionType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_218 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("VoidType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_219 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_220 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeVariableBinding().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__VARIABLE), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_221 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_222 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeVariableBinding().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TYPE), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_223 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_224 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_225 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TAG), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_226 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_227 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_228 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_229 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__NAME), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_230 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_231 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TYPE), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_232 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_233 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__LOWER), "INTEGER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_234 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_235 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__UPPER), "INTEGER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_236 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_237 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_238 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_239 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_240 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_241 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_242 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__TAG), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_243 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_244 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_245 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__NAME), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_246 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_247 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_248 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPrimitiveType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__TAG), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_249 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_250 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_251 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPrimitiveType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__TYPE_CONTAINER), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_252 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_253 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPrimitiveType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__NAME), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_254 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_255 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_256 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPrimitiveType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__INSTANCE_TYPE), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_257 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_258 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_259 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_260 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_261 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("value");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_262 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("object");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_263 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_264 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_265 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTag().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__TAG), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_266 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_267 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_268 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTag().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__NAME), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_269 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_270 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTag().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__VALUE), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_271 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_272 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTag().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__OBJECT), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_273 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_274 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_275 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_276 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_277 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_278 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_279 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_280 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("type");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_281 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_282 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_283 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_284 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObjectTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TAG), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_285 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_286 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_287 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_288 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObjectTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TYPE_CONTAINER), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_289 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_290 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObjectTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__NAME), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_291 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_292 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObjectTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__SUPERTYPE), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_293 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_294 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_295 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TAG), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_296 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_297 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_298 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_299 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TYPE_CONTAINER), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_300 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_301 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__NAME), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_302 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_303 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__SUPERTYPE), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_304 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_305 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_306 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_307 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TAG), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_308 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_309 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_310 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_311 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_CONTAINER), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_312 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_313 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__NAME), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_314 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_315 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__SUPERTYPE), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_316 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_317 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CLASS_DEFINITION), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_318 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_319 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__MODEL_TYPE), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_320 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_321 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_322 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_323 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProductType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TAG), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_324 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_325 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_326 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_327 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProductType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE_CONTAINER), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_328 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_329 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProductType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_330 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_331 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_332 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getFunctionType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TAG), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_333 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_334 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_335 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_336 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getFunctionType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TYPE_CONTAINER), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_337 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_338 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getFunctionType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__LEFT), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_339 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_340 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getFunctionType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__RIGHT), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_341 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_342 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_343 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVoidType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VOID_TYPE__TAG), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_344 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_345 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_346 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVoidType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VOID_TYPE__TYPE_CONTAINER), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_347 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("rescue");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_348 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("end");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_349 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("until");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_350 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("else");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_351 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("end");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_352 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_353 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_354 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_355 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_356 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_357 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getRescue().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RESCUE__EXCEPTION_NAME), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_358 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_359 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_360 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("init");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_361 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("then");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_362 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("loop");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_363 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getVariableDecl().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__IDENTIFIER), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_364 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_365 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":=");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_366 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getAssignment().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__IS_CAST), "CASTED");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_367 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("=");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_368 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_369 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_370 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_371 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_372 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("==");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_373 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_374 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_375 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_376 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_377 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_378 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_379 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_380 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_381 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_382 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_383 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("==");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_384 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_385 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_386 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_387 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_388 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_389 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_390 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_391 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_392 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_393 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_394 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_395 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("+");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_396 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("-");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_397 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("/");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_398 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("*");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_399 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_400 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_401 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_402 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_403 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_404 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_405 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_406 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_407 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_408 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_409 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_410 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("+");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_411 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("-");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_412 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("/");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_413 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("*");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_414 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_415 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_416 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_417 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_418 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_419 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_420 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_421 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_422 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("+");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_423 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("-");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_424 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("/");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_425 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("*");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_426 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_427 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_428 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallValue().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__TAG), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_429 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_430 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_431 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_432 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallValue().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__STATIC_TYPE), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_433 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_434 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_435 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallValue().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__NAME), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_436 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_437 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallValue().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__STATIC_TYPE_VARIABLE_BINDINGS), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_438 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_439 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_440 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getEmptyExpression().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__TAG), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_441 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_442 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_443 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_444 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getEmptyExpression().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__STATIC_TYPE), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_445 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_446 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_447 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getJavaStaticCall().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__TAG), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_448 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_449 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_450 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_451 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getJavaStaticCall().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__STATIC_TYPE), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_452 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_453 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_454 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getJavaStaticCall().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JCLASS), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_455 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_456 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getJavaStaticCall().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JMETHOD), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_457 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_458 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_459 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getLambdaExpression().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__TAG), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_460 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_461 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_462 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_463 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getLambdaExpression().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__STATIC_TYPE), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_464 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_465 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("LambdaParameter");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_466 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_467 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_468 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_469 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getLambdaParameter().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TAG), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_470 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_471 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_472 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getLambdaParameter().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__NAME), "STRING");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_473 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	
	public static void wire0() {
		TERMINAL_1.addFollower(TERMINAL_24);
		TERMINAL_1.addFollower(TERMINAL_25);
		TERMINAL_24.addFollower(TERMINAL_1);
		TERMINAL_24.addFollower(TERMINAL_2);
		TERMINAL_24.addFollower(TERMINAL_3);
		TERMINAL_24.addFollower(TERMINAL_4);
		TERMINAL_24.addFollower(TERMINAL_5);
		TERMINAL_24.addFollower(TERMINAL_6);
		TERMINAL_24.addFollower(TERMINAL_7);
		TERMINAL_24.addFollower(TERMINAL_8);
		TERMINAL_24.addFollower(TERMINAL_9);
		TERMINAL_24.addFollower(TERMINAL_10);
		TERMINAL_24.addFollower(TERMINAL_11);
		TERMINAL_24.addFollower(TERMINAL_12);
		TERMINAL_25.addFollower(TERMINAL_1);
		TERMINAL_25.addFollower(TERMINAL_2);
		TERMINAL_25.addFollower(TERMINAL_3);
		TERMINAL_25.addFollower(TERMINAL_4);
		TERMINAL_25.addFollower(TERMINAL_5);
		TERMINAL_25.addFollower(TERMINAL_6);
		TERMINAL_25.addFollower(TERMINAL_7);
		TERMINAL_25.addFollower(TERMINAL_8);
		TERMINAL_25.addFollower(TERMINAL_9);
		TERMINAL_25.addFollower(TERMINAL_10);
		TERMINAL_25.addFollower(TERMINAL_11);
		TERMINAL_25.addFollower(TERMINAL_12);
		TERMINAL_0.addFollower(TERMINAL_26);
		TERMINAL_26.addFollower(TERMINAL_0);
		TERMINAL_26.addFollower(TERMINAL_1);
		TERMINAL_26.addFollower(TERMINAL_2);
		TERMINAL_26.addFollower(TERMINAL_3);
		TERMINAL_26.addFollower(TERMINAL_4);
		TERMINAL_26.addFollower(TERMINAL_5);
		TERMINAL_26.addFollower(TERMINAL_6);
		TERMINAL_26.addFollower(TERMINAL_7);
		TERMINAL_26.addFollower(TERMINAL_8);
		TERMINAL_26.addFollower(TERMINAL_9);
		TERMINAL_26.addFollower(TERMINAL_10);
		TERMINAL_26.addFollower(TERMINAL_11);
		TERMINAL_26.addFollower(TERMINAL_12);
		TERMINAL_2.addFollower(TERMINAL_27);
		TERMINAL_2.addFollower(TERMINAL_28);
		TERMINAL_27.addFollower(TERMINAL_29);
		TERMINAL_29.addFollower(TERMINAL_27);
		TERMINAL_29.addFollower(TERMINAL_28);
		TERMINAL_28.addFollower(TERMINAL_3);
		TERMINAL_28.addFollower(TERMINAL_4);
		TERMINAL_28.addFollower(TERMINAL_5);
		TERMINAL_28.addFollower(TERMINAL_6);
		TERMINAL_28.addFollower(TERMINAL_7);
		TERMINAL_28.addFollower(TERMINAL_8);
		TERMINAL_28.addFollower(TERMINAL_9);
		TERMINAL_28.addFollower(TERMINAL_10);
		TERMINAL_28.addFollower(TERMINAL_11);
		TERMINAL_28.addFollower(TERMINAL_12);
		TERMINAL_28.addFollower(TERMINAL_30);
		TERMINAL_28.addFollower(TERMINAL_31);
		TERMINAL_28.addFollower(TERMINAL_2);
		TERMINAL_28.addFollower(TERMINAL_32);
		TERMINAL_30.addFollower(TERMINAL_3);
		TERMINAL_30.addFollower(TERMINAL_4);
		TERMINAL_30.addFollower(TERMINAL_5);
		TERMINAL_30.addFollower(TERMINAL_6);
		TERMINAL_30.addFollower(TERMINAL_7);
		TERMINAL_30.addFollower(TERMINAL_8);
		TERMINAL_30.addFollower(TERMINAL_9);
		TERMINAL_30.addFollower(TERMINAL_10);
		TERMINAL_30.addFollower(TERMINAL_11);
		TERMINAL_30.addFollower(TERMINAL_12);
		TERMINAL_33.addFollower(TERMINAL_2);
		TERMINAL_33.addFollower(TERMINAL_3);
		TERMINAL_33.addFollower(TERMINAL_4);
		TERMINAL_33.addFollower(TERMINAL_5);
		TERMINAL_33.addFollower(TERMINAL_6);
		TERMINAL_33.addFollower(TERMINAL_7);
		TERMINAL_33.addFollower(TERMINAL_8);
		TERMINAL_33.addFollower(TERMINAL_9);
		TERMINAL_33.addFollower(TERMINAL_10);
		TERMINAL_33.addFollower(TERMINAL_11);
		TERMINAL_33.addFollower(TERMINAL_12);
		TERMINAL_33.addFollower(TERMINAL_32);
		TERMINAL_31.addFollower(TERMINAL_2);
		TERMINAL_31.addFollower(TERMINAL_3);
		TERMINAL_31.addFollower(TERMINAL_4);
		TERMINAL_31.addFollower(TERMINAL_5);
		TERMINAL_31.addFollower(TERMINAL_6);
		TERMINAL_31.addFollower(TERMINAL_7);
		TERMINAL_31.addFollower(TERMINAL_8);
		TERMINAL_31.addFollower(TERMINAL_9);
		TERMINAL_31.addFollower(TERMINAL_10);
		TERMINAL_31.addFollower(TERMINAL_11);
		TERMINAL_31.addFollower(TERMINAL_12);
		TERMINAL_31.addFollower(TERMINAL_32);
		TERMINAL_32.addFollower(TERMINAL_2);
		TERMINAL_32.addFollower(TERMINAL_3);
		TERMINAL_32.addFollower(TERMINAL_4);
		TERMINAL_32.addFollower(TERMINAL_5);
		TERMINAL_32.addFollower(TERMINAL_6);
		TERMINAL_32.addFollower(TERMINAL_7);
		TERMINAL_32.addFollower(TERMINAL_8);
		TERMINAL_32.addFollower(TERMINAL_9);
		TERMINAL_32.addFollower(TERMINAL_10);
		TERMINAL_32.addFollower(TERMINAL_11);
		TERMINAL_32.addFollower(TERMINAL_12);
		TERMINAL_32.addFollower(TERMINAL_32);
		TERMINAL_3.addFollower(TERMINAL_4);
		TERMINAL_3.addFollower(TERMINAL_5);
		TERMINAL_4.addFollower(TERMINAL_5);
		TERMINAL_5.addFollower(TERMINAL_34);
		TERMINAL_34.addFollower(TERMINAL_35);
		TERMINAL_34.addFollower(TERMINAL_36);
		TERMINAL_35.addFollower(TERMINAL_37);
		TERMINAL_37.addFollower(TERMINAL_38);
		TERMINAL_37.addFollower(TERMINAL_36);
		TERMINAL_38.addFollower(TERMINAL_39);
		TERMINAL_39.addFollower(TERMINAL_38);
		TERMINAL_39.addFollower(TERMINAL_36);
		TERMINAL_36.addFollower(TERMINAL_17);
		TERMINAL_36.addFollower(TERMINAL_14);
		TERMINAL_36.addFollower(TERMINAL_15);
		TERMINAL_36.addFollower(TERMINAL_16);
		TERMINAL_36.addFollower(TERMINAL_18);
		TERMINAL_36.addFollower(TERMINAL_40);
		TERMINAL_40.addFollower(TERMINAL_3);
		TERMINAL_40.addFollower(TERMINAL_4);
		TERMINAL_40.addFollower(TERMINAL_5);
		TERMINAL_40.addFollower(TERMINAL_6);
		TERMINAL_40.addFollower(TERMINAL_7);
		TERMINAL_40.addFollower(TERMINAL_8);
		TERMINAL_40.addFollower(TERMINAL_9);
		TERMINAL_40.addFollower(TERMINAL_10);
		TERMINAL_40.addFollower(TERMINAL_11);
		TERMINAL_40.addFollower(TERMINAL_12);
		TERMINAL_40.addFollower(TERMINAL_2);
		TERMINAL_14.addFollower(TERMINAL_41);
		TERMINAL_15.addFollower(TERMINAL_41);
		TERMINAL_41.addFollower(TERMINAL_42);
		TERMINAL_41.addFollower(TERMINAL_14);
		TERMINAL_41.addFollower(TERMINAL_15);
		TERMINAL_41.addFollower(TERMINAL_16);
		TERMINAL_41.addFollower(TERMINAL_17);
		TERMINAL_41.addFollower(TERMINAL_18);
		TERMINAL_41.addFollower(TERMINAL_40);
		TERMINAL_42.addFollower(TERMINAL_43);
		TERMINAL_43.addFollower(TERMINAL_14);
		TERMINAL_43.addFollower(TERMINAL_15);
		TERMINAL_43.addFollower(TERMINAL_16);
		TERMINAL_43.addFollower(TERMINAL_17);
		TERMINAL_43.addFollower(TERMINAL_18);
		TERMINAL_43.addFollower(TERMINAL_40);
		TERMINAL_16.addFollower(TERMINAL_44);
		TERMINAL_44.addFollower(TERMINAL_45);
		TERMINAL_44.addFollower(TERMINAL_46);
		TERMINAL_44.addFollower(TERMINAL_47);
		TERMINAL_44.addFollower(TERMINAL_48);
		TERMINAL_44.addFollower(TERMINAL_49);
		TERMINAL_44.addFollower(TERMINAL_50);
		TERMINAL_44.addFollower(TERMINAL_51);
		TERMINAL_44.addFollower(TERMINAL_52);
		TERMINAL_44.addFollower(TERMINAL_53);
		TERMINAL_44.addFollower(TERMINAL_23);
		TERMINAL_44.addFollower(TERMINAL_54);
		TERMINAL_44.addFollower(TERMINAL_55);
		TERMINAL_44.addFollower(TERMINAL_56);
		TERMINAL_44.addFollower(TERMINAL_57);
		TERMINAL_44.addFollower(TERMINAL_58);
		TERMINAL_44.addFollower(TERMINAL_59);
		TERMINAL_44.addFollower(TERMINAL_60);
		TERMINAL_44.addFollower(TERMINAL_61);
		TERMINAL_44.addFollower(TERMINAL_62);
		TERMINAL_44.addFollower(TERMINAL_63);
		TERMINAL_44.addFollower(TERMINAL_64);
		TERMINAL_45.addFollower(TERMINAL_65);
		TERMINAL_65.addFollower(TERMINAL_46);
		TERMINAL_65.addFollower(TERMINAL_47);
		TERMINAL_65.addFollower(TERMINAL_48);
		TERMINAL_65.addFollower(TERMINAL_49);
		TERMINAL_65.addFollower(TERMINAL_50);
		TERMINAL_65.addFollower(TERMINAL_51);
		TERMINAL_65.addFollower(TERMINAL_52);
		TERMINAL_65.addFollower(TERMINAL_53);
		TERMINAL_65.addFollower(TERMINAL_23);
		TERMINAL_65.addFollower(TERMINAL_54);
		TERMINAL_65.addFollower(TERMINAL_55);
		TERMINAL_65.addFollower(TERMINAL_56);
		TERMINAL_65.addFollower(TERMINAL_57);
		TERMINAL_65.addFollower(TERMINAL_58);
		TERMINAL_65.addFollower(TERMINAL_59);
		TERMINAL_65.addFollower(TERMINAL_60);
		TERMINAL_65.addFollower(TERMINAL_61);
		TERMINAL_65.addFollower(TERMINAL_62);
		TERMINAL_65.addFollower(TERMINAL_63);
		TERMINAL_65.addFollower(TERMINAL_64);
		TERMINAL_18.addFollower(TERMINAL_66);
		TERMINAL_66.addFollower(TERMINAL_67);
		TERMINAL_67.addFollower(TERMINAL_19);
		TERMINAL_67.addFollower(TERMINAL_68);
		TERMINAL_69.addFollower(TERMINAL_71);
		TERMINAL_71.addFollower(TERMINAL_70);
		TERMINAL_71.addFollower(TERMINAL_68);
		TERMINAL_70.addFollower(TERMINAL_19);
		TERMINAL_72.addFollower(TERMINAL_73);
		TERMINAL_73.addFollower(TERMINAL_70);
		TERMINAL_73.addFollower(TERMINAL_68);
		TERMINAL_68.addFollower(TERMINAL_74);
		TERMINAL_68.addFollower(TERMINAL_75);
		TERMINAL_74.addFollower(TERMINAL_76);
		TERMINAL_76.addFollower(TERMINAL_75);
		TERMINAL_75.addFollower(TERMINAL_46);
		TERMINAL_75.addFollower(TERMINAL_77);
		TERMINAL_77.addFollower(TERMINAL_17);
		TERMINAL_77.addFollower(TERMINAL_18);
		TERMINAL_77.addFollower(TERMINAL_40);
		TERMINAL_19.addFollower(TERMINAL_78);
		TERMINAL_78.addFollower(TERMINAL_79);
		TERMINAL_79.addFollower(TERMINAL_69);
		TERMINAL_79.addFollower(TERMINAL_70);
		TERMINAL_79.addFollower(TERMINAL_68);
		TERMINAL_80.addFollower(TERMINAL_81);
		TERMINAL_80.addFollower(TERMINAL_82);
		TERMINAL_80.addFollower(TERMINAL_83);
		TERMINAL_80.addFollower(TERMINAL_84);
		TERMINAL_80.addFollower(TERMINAL_85);
		TERMINAL_80.addFollower(TERMINAL_86);
		TERMINAL_80.addFollower(TERMINAL_87);
		TERMINAL_80.addFollower(TERMINAL_88);
		TERMINAL_80.addFollower(TERMINAL_89);
		TERMINAL_80.addFollower(TERMINAL_90);
		TERMINAL_80.addFollower(TERMINAL_91);
		TERMINAL_80.addFollower(TERMINAL_92);
		TERMINAL_80.addFollower(TERMINAL_93);
		TERMINAL_80.addFollower(TERMINAL_94);
		TERMINAL_80.addFollower(TERMINAL_95);
		TERMINAL_80.addFollower(TERMINAL_96);
		TERMINAL_80.addFollower(TERMINAL_97);
		TERMINAL_80.addFollower(TERMINAL_98);
		TERMINAL_80.addFollower(TERMINAL_99);
		TERMINAL_80.addFollower(TERMINAL_100);
		TERMINAL_80.addFollower(TERMINAL_101);
		TERMINAL_80.addFollower(TERMINAL_102);
		TERMINAL_80.addFollower(TERMINAL_103);
		TERMINAL_80.addFollower(TERMINAL_104);
		TERMINAL_80.addFollower(TERMINAL_105);
		TERMINAL_80.addFollower(TERMINAL_106);
		TERMINAL_80.addFollower(TERMINAL_107);
		TERMINAL_80.addFollower(TERMINAL_108);
		TERMINAL_80.addFollower(TERMINAL_109);
		TERMINAL_80.addFollower(TERMINAL_110);
		TERMINAL_80.addFollower(TERMINAL_111);
		TERMINAL_80.addFollower(TERMINAL_112);
		TERMINAL_80.addFollower(TERMINAL_113);
		TERMINAL_80.addFollower(TERMINAL_114);
		TERMINAL_80.addFollower(TERMINAL_115);
		TERMINAL_80.addFollower(TERMINAL_116);
		TERMINAL_80.addFollower(TERMINAL_117);
		TERMINAL_80.addFollower(TERMINAL_118);
		TERMINAL_80.addFollower(TERMINAL_119);
		TERMINAL_80.addFollower(TERMINAL_120);
		TERMINAL_80.addFollower(TERMINAL_121);
		TERMINAL_80.addFollower(TERMINAL_122);
		TERMINAL_80.addFollower(TERMINAL_123);
		TERMINAL_80.addFollower(TERMINAL_124);
		TERMINAL_80.addFollower(TERMINAL_125);
		TERMINAL_80.addFollower(TERMINAL_126);
		TERMINAL_80.addFollower(TERMINAL_127);
		TERMINAL_80.addFollower(TERMINAL_128);
		TERMINAL_80.addFollower(TERMINAL_129);
		TERMINAL_80.addFollower(TERMINAL_130);
		TERMINAL_80.addFollower(TERMINAL_131);
		TERMINAL_80.addFollower(TERMINAL_132);
		TERMINAL_80.addFollower(TERMINAL_133);
		TERMINAL_80.addFollower(TERMINAL_134);
		TERMINAL_80.addFollower(TERMINAL_135);
		TERMINAL_80.addFollower(TERMINAL_136);
		TERMINAL_80.addFollower(TERMINAL_137);
		TERMINAL_80.addFollower(TERMINAL_138);
		TERMINAL_80.addFollower(TERMINAL_139);
		TERMINAL_80.addFollower(TERMINAL_140);
		TERMINAL_80.addFollower(TERMINAL_141);
		TERMINAL_80.addFollower(TERMINAL_142);
		TERMINAL_80.addFollower(TERMINAL_143);
		TERMINAL_80.addFollower(TERMINAL_144);
		TERMINAL_80.addFollower(TERMINAL_145);
		TERMINAL_80.addFollower(TERMINAL_146);
		TERMINAL_80.addFollower(TERMINAL_147);
		TERMINAL_80.addFollower(TERMINAL_148);
		TERMINAL_80.addFollower(TERMINAL_149);
		TERMINAL_80.addFollower(TERMINAL_150);
		TERMINAL_80.addFollower(TERMINAL_151);
		TERMINAL_80.addFollower(TERMINAL_152);
		TERMINAL_80.addFollower(TERMINAL_153);
		TERMINAL_80.addFollower(TERMINAL_154);
		TERMINAL_80.addFollower(TERMINAL_155);
		TERMINAL_80.addFollower(TERMINAL_156);
		TERMINAL_80.addFollower(TERMINAL_157);
		TERMINAL_80.addFollower(TERMINAL_158);
		TERMINAL_80.addFollower(TERMINAL_159);
		TERMINAL_80.addFollower(TERMINAL_160);
		TERMINAL_80.addFollower(TERMINAL_161);
		TERMINAL_80.addFollower(TERMINAL_162);
		TERMINAL_80.addFollower(TERMINAL_163);
		TERMINAL_80.addFollower(TERMINAL_164);
		TERMINAL_80.addFollower(TERMINAL_165);
		TERMINAL_80.addFollower(TERMINAL_166);
		TERMINAL_80.addFollower(TERMINAL_167);
		TERMINAL_6.addFollower(TERMINAL_168);
		TERMINAL_168.addFollower(TERMINAL_169);
		TERMINAL_169.addFollower(TERMINAL_170);
		TERMINAL_171.addFollower(TERMINAL_170);
		TERMINAL_171.addFollower(TERMINAL_172);
		TERMINAL_173.addFollower(TERMINAL_170);
		TERMINAL_173.addFollower(TERMINAL_172);
		TERMINAL_172.addFollower(TERMINAL_3);
		TERMINAL_172.addFollower(TERMINAL_4);
		TERMINAL_172.addFollower(TERMINAL_5);
		TERMINAL_172.addFollower(TERMINAL_6);
		TERMINAL_172.addFollower(TERMINAL_7);
		TERMINAL_172.addFollower(TERMINAL_8);
		TERMINAL_172.addFollower(TERMINAL_9);
		TERMINAL_172.addFollower(TERMINAL_10);
		TERMINAL_172.addFollower(TERMINAL_11);
		TERMINAL_172.addFollower(TERMINAL_12);
		TERMINAL_172.addFollower(TERMINAL_2);
		TERMINAL_172.addFollower(TERMINAL_81);
		TERMINAL_172.addFollower(TERMINAL_82);
		TERMINAL_172.addFollower(TERMINAL_83);
		TERMINAL_172.addFollower(TERMINAL_84);
		TERMINAL_172.addFollower(TERMINAL_85);
		TERMINAL_172.addFollower(TERMINAL_86);
		TERMINAL_172.addFollower(TERMINAL_87);
		TERMINAL_172.addFollower(TERMINAL_88);
		TERMINAL_172.addFollower(TERMINAL_89);
		TERMINAL_172.addFollower(TERMINAL_90);
		TERMINAL_172.addFollower(TERMINAL_91);
		TERMINAL_172.addFollower(TERMINAL_92);
		TERMINAL_172.addFollower(TERMINAL_93);
		TERMINAL_172.addFollower(TERMINAL_94);
		TERMINAL_172.addFollower(TERMINAL_95);
		TERMINAL_172.addFollower(TERMINAL_96);
		TERMINAL_172.addFollower(TERMINAL_97);
		TERMINAL_172.addFollower(TERMINAL_98);
		TERMINAL_172.addFollower(TERMINAL_99);
		TERMINAL_172.addFollower(TERMINAL_100);
		TERMINAL_172.addFollower(TERMINAL_101);
		TERMINAL_172.addFollower(TERMINAL_102);
		TERMINAL_172.addFollower(TERMINAL_103);
		TERMINAL_172.addFollower(TERMINAL_104);
		TERMINAL_172.addFollower(TERMINAL_105);
		TERMINAL_172.addFollower(TERMINAL_106);
		TERMINAL_172.addFollower(TERMINAL_107);
		TERMINAL_172.addFollower(TERMINAL_108);
		TERMINAL_172.addFollower(TERMINAL_109);
		TERMINAL_172.addFollower(TERMINAL_110);
		TERMINAL_172.addFollower(TERMINAL_111);
		TERMINAL_172.addFollower(TERMINAL_112);
		TERMINAL_172.addFollower(TERMINAL_113);
		TERMINAL_172.addFollower(TERMINAL_114);
		TERMINAL_172.addFollower(TERMINAL_115);
		TERMINAL_172.addFollower(TERMINAL_116);
		TERMINAL_172.addFollower(TERMINAL_117);
		TERMINAL_172.addFollower(TERMINAL_118);
		TERMINAL_172.addFollower(TERMINAL_119);
		TERMINAL_172.addFollower(TERMINAL_120);
		TERMINAL_172.addFollower(TERMINAL_121);
		TERMINAL_172.addFollower(TERMINAL_122);
		TERMINAL_172.addFollower(TERMINAL_123);
		TERMINAL_172.addFollower(TERMINAL_124);
		TERMINAL_172.addFollower(TERMINAL_125);
		TERMINAL_172.addFollower(TERMINAL_126);
		TERMINAL_172.addFollower(TERMINAL_127);
		TERMINAL_172.addFollower(TERMINAL_128);
		TERMINAL_172.addFollower(TERMINAL_129);
		TERMINAL_172.addFollower(TERMINAL_130);
		TERMINAL_172.addFollower(TERMINAL_131);
		TERMINAL_172.addFollower(TERMINAL_132);
		TERMINAL_172.addFollower(TERMINAL_133);
		TERMINAL_172.addFollower(TERMINAL_134);
		TERMINAL_172.addFollower(TERMINAL_135);
		TERMINAL_172.addFollower(TERMINAL_136);
		TERMINAL_172.addFollower(TERMINAL_137);
		TERMINAL_172.addFollower(TERMINAL_138);
		TERMINAL_172.addFollower(TERMINAL_139);
		TERMINAL_172.addFollower(TERMINAL_140);
		TERMINAL_172.addFollower(TERMINAL_141);
		TERMINAL_172.addFollower(TERMINAL_142);
		TERMINAL_172.addFollower(TERMINAL_143);
		TERMINAL_172.addFollower(TERMINAL_144);
		TERMINAL_172.addFollower(TERMINAL_145);
		TERMINAL_172.addFollower(TERMINAL_146);
		TERMINAL_172.addFollower(TERMINAL_147);
		TERMINAL_172.addFollower(TERMINAL_148);
		TERMINAL_172.addFollower(TERMINAL_149);
		TERMINAL_172.addFollower(TERMINAL_150);
		TERMINAL_172.addFollower(TERMINAL_151);
		TERMINAL_172.addFollower(TERMINAL_152);
		TERMINAL_172.addFollower(TERMINAL_153);
		TERMINAL_172.addFollower(TERMINAL_154);
		TERMINAL_172.addFollower(TERMINAL_155);
		TERMINAL_172.addFollower(TERMINAL_156);
		TERMINAL_172.addFollower(TERMINAL_157);
		TERMINAL_172.addFollower(TERMINAL_158);
		TERMINAL_172.addFollower(TERMINAL_159);
		TERMINAL_172.addFollower(TERMINAL_160);
		TERMINAL_172.addFollower(TERMINAL_161);
		TERMINAL_172.addFollower(TERMINAL_162);
		TERMINAL_172.addFollower(TERMINAL_163);
		TERMINAL_172.addFollower(TERMINAL_164);
		TERMINAL_172.addFollower(TERMINAL_165);
		TERMINAL_172.addFollower(TERMINAL_166);
		TERMINAL_172.addFollower(TERMINAL_167);
		TERMINAL_170.addFollower(TERMINAL_171);
		TERMINAL_17.addFollower(TERMINAL_174);
		TERMINAL_174.addFollower(TERMINAL_17);
		TERMINAL_174.addFollower(TERMINAL_14);
		TERMINAL_174.addFollower(TERMINAL_15);
		TERMINAL_174.addFollower(TERMINAL_16);
		TERMINAL_174.addFollower(TERMINAL_18);
		TERMINAL_174.addFollower(TERMINAL_40);
		TERMINAL_175.addFollower(TERMINAL_176);
		TERMINAL_176.addFollower(TERMINAL_177);
		TERMINAL_176.addFollower(TERMINAL_178);
		TERMINAL_176.addFollower(TERMINAL_179);
		TERMINAL_177.addFollower(TERMINAL_180);
		TERMINAL_180.addFollower(TERMINAL_181);
		TERMINAL_181.addFollower(TERMINAL_177);
		TERMINAL_181.addFollower(TERMINAL_178);
		TERMINAL_181.addFollower(TERMINAL_179);
		TERMINAL_178.addFollower(TERMINAL_182);
		TERMINAL_182.addFollower(TERMINAL_183);
		TERMINAL_13.addFollower(TERMINAL_184);
		TERMINAL_184.addFollower(TERMINAL_185);
		TERMINAL_184.addFollower(TERMINAL_186);
		TERMINAL_184.addFollower(TERMINAL_187);
		TERMINAL_185.addFollower(TERMINAL_188);
		TERMINAL_188.addFollower(TERMINAL_189);
		TERMINAL_189.addFollower(TERMINAL_185);
		TERMINAL_189.addFollower(TERMINAL_186);
		TERMINAL_189.addFollower(TERMINAL_187);
		TERMINAL_186.addFollower(TERMINAL_190);
		TERMINAL_190.addFollower(TERMINAL_183);
		TERMINAL_7.addFollower(TERMINAL_8);
		TERMINAL_8.addFollower(TERMINAL_191);
		TERMINAL_191.addFollower(TERMINAL_192);
		TERMINAL_191.addFollower(TERMINAL_193);
		TERMINAL_191.addFollower(TERMINAL_194);
		TERMINAL_191.addFollower(TERMINAL_195);
		TERMINAL_191.addFollower(TERMINAL_196);
		TERMINAL_191.addFollower(TERMINAL_197);
		TERMINAL_192.addFollower(TERMINAL_198);
		TERMINAL_198.addFollower(TERMINAL_199);
		TERMINAL_199.addFollower(TERMINAL_192);
		TERMINAL_199.addFollower(TERMINAL_193);
		TERMINAL_199.addFollower(TERMINAL_194);
		TERMINAL_199.addFollower(TERMINAL_195);
		TERMINAL_199.addFollower(TERMINAL_196);
		TERMINAL_199.addFollower(TERMINAL_197);
		TERMINAL_193.addFollower(TERMINAL_200);
		TERMINAL_200.addFollower(TERMINAL_183);
		TERMINAL_194.addFollower(TERMINAL_201);
		TERMINAL_201.addFollower(TERMINAL_202);
		TERMINAL_202.addFollower(TERMINAL_192);
		TERMINAL_202.addFollower(TERMINAL_193);
		TERMINAL_202.addFollower(TERMINAL_194);
		TERMINAL_202.addFollower(TERMINAL_195);
		TERMINAL_202.addFollower(TERMINAL_196);
		TERMINAL_202.addFollower(TERMINAL_197);
		TERMINAL_195.addFollower(TERMINAL_203);
		TERMINAL_203.addFollower(TERMINAL_204);
		TERMINAL_204.addFollower(TERMINAL_192);
		TERMINAL_204.addFollower(TERMINAL_193);
		TERMINAL_204.addFollower(TERMINAL_194);
		TERMINAL_204.addFollower(TERMINAL_195);
		TERMINAL_204.addFollower(TERMINAL_196);
		TERMINAL_204.addFollower(TERMINAL_197);
		TERMINAL_196.addFollower(TERMINAL_205);
		TERMINAL_205.addFollower(TERMINAL_206);
		TERMINAL_206.addFollower(TERMINAL_192);
		TERMINAL_206.addFollower(TERMINAL_193);
		TERMINAL_206.addFollower(TERMINAL_194);
		TERMINAL_206.addFollower(TERMINAL_195);
		TERMINAL_206.addFollower(TERMINAL_196);
		TERMINAL_206.addFollower(TERMINAL_197);
		TERMINAL_197.addFollower(TERMINAL_3);
		TERMINAL_197.addFollower(TERMINAL_4);
		TERMINAL_197.addFollower(TERMINAL_5);
		TERMINAL_197.addFollower(TERMINAL_6);
		TERMINAL_197.addFollower(TERMINAL_7);
		TERMINAL_197.addFollower(TERMINAL_8);
		TERMINAL_197.addFollower(TERMINAL_9);
		TERMINAL_197.addFollower(TERMINAL_10);
		TERMINAL_197.addFollower(TERMINAL_11);
		TERMINAL_197.addFollower(TERMINAL_12);
		TERMINAL_197.addFollower(TERMINAL_2);
		TERMINAL_197.addFollower(TERMINAL_81);
		TERMINAL_197.addFollower(TERMINAL_82);
		TERMINAL_197.addFollower(TERMINAL_83);
		TERMINAL_197.addFollower(TERMINAL_84);
		TERMINAL_197.addFollower(TERMINAL_85);
		TERMINAL_197.addFollower(TERMINAL_86);
		TERMINAL_197.addFollower(TERMINAL_87);
		TERMINAL_197.addFollower(TERMINAL_88);
		TERMINAL_197.addFollower(TERMINAL_89);
		TERMINAL_197.addFollower(TERMINAL_90);
		TERMINAL_197.addFollower(TERMINAL_91);
		TERMINAL_197.addFollower(TERMINAL_92);
		TERMINAL_197.addFollower(TERMINAL_93);
		TERMINAL_197.addFollower(TERMINAL_94);
		TERMINAL_197.addFollower(TERMINAL_95);
		TERMINAL_197.addFollower(TERMINAL_96);
		TERMINAL_197.addFollower(TERMINAL_97);
		TERMINAL_197.addFollower(TERMINAL_98);
		TERMINAL_197.addFollower(TERMINAL_99);
		TERMINAL_197.addFollower(TERMINAL_100);
		TERMINAL_197.addFollower(TERMINAL_101);
		TERMINAL_197.addFollower(TERMINAL_102);
		TERMINAL_197.addFollower(TERMINAL_103);
		TERMINAL_197.addFollower(TERMINAL_104);
		TERMINAL_197.addFollower(TERMINAL_105);
		TERMINAL_197.addFollower(TERMINAL_106);
		TERMINAL_197.addFollower(TERMINAL_107);
		TERMINAL_197.addFollower(TERMINAL_108);
		TERMINAL_197.addFollower(TERMINAL_109);
		TERMINAL_197.addFollower(TERMINAL_110);
		TERMINAL_197.addFollower(TERMINAL_111);
		TERMINAL_197.addFollower(TERMINAL_112);
		TERMINAL_197.addFollower(TERMINAL_113);
		TERMINAL_197.addFollower(TERMINAL_114);
		TERMINAL_197.addFollower(TERMINAL_115);
		TERMINAL_197.addFollower(TERMINAL_116);
		TERMINAL_197.addFollower(TERMINAL_117);
		TERMINAL_197.addFollower(TERMINAL_118);
		TERMINAL_197.addFollower(TERMINAL_119);
		TERMINAL_197.addFollower(TERMINAL_120);
		TERMINAL_197.addFollower(TERMINAL_121);
		TERMINAL_197.addFollower(TERMINAL_122);
		TERMINAL_197.addFollower(TERMINAL_123);
		TERMINAL_197.addFollower(TERMINAL_124);
		TERMINAL_197.addFollower(TERMINAL_125);
		TERMINAL_197.addFollower(TERMINAL_126);
		TERMINAL_197.addFollower(TERMINAL_127);
		TERMINAL_197.addFollower(TERMINAL_128);
		TERMINAL_197.addFollower(TERMINAL_129);
		TERMINAL_197.addFollower(TERMINAL_130);
		TERMINAL_197.addFollower(TERMINAL_131);
		TERMINAL_197.addFollower(TERMINAL_132);
		TERMINAL_197.addFollower(TERMINAL_133);
		TERMINAL_197.addFollower(TERMINAL_134);
		TERMINAL_197.addFollower(TERMINAL_135);
		TERMINAL_197.addFollower(TERMINAL_136);
		TERMINAL_197.addFollower(TERMINAL_137);
		TERMINAL_197.addFollower(TERMINAL_138);
		TERMINAL_197.addFollower(TERMINAL_139);
		TERMINAL_197.addFollower(TERMINAL_140);
		TERMINAL_197.addFollower(TERMINAL_141);
		TERMINAL_197.addFollower(TERMINAL_142);
		TERMINAL_197.addFollower(TERMINAL_143);
		TERMINAL_197.addFollower(TERMINAL_144);
		TERMINAL_197.addFollower(TERMINAL_145);
		TERMINAL_197.addFollower(TERMINAL_146);
		TERMINAL_197.addFollower(TERMINAL_147);
		TERMINAL_197.addFollower(TERMINAL_148);
		TERMINAL_197.addFollower(TERMINAL_149);
		TERMINAL_197.addFollower(TERMINAL_150);
		TERMINAL_197.addFollower(TERMINAL_151);
		TERMINAL_197.addFollower(TERMINAL_152);
		TERMINAL_197.addFollower(TERMINAL_153);
		TERMINAL_197.addFollower(TERMINAL_154);
		TERMINAL_197.addFollower(TERMINAL_155);
		TERMINAL_197.addFollower(TERMINAL_156);
		TERMINAL_197.addFollower(TERMINAL_157);
		TERMINAL_197.addFollower(TERMINAL_158);
		TERMINAL_197.addFollower(TERMINAL_159);
		TERMINAL_197.addFollower(TERMINAL_160);
		TERMINAL_197.addFollower(TERMINAL_161);
		TERMINAL_197.addFollower(TERMINAL_162);
		TERMINAL_197.addFollower(TERMINAL_163);
		TERMINAL_197.addFollower(TERMINAL_164);
		TERMINAL_197.addFollower(TERMINAL_165);
		TERMINAL_197.addFollower(TERMINAL_166);
		TERMINAL_197.addFollower(TERMINAL_167);
		TERMINAL_207.addFollower(TERMINAL_208);
		TERMINAL_208.addFollower(TERMINAL_81);
		TERMINAL_208.addFollower(TERMINAL_82);
		TERMINAL_208.addFollower(TERMINAL_83);
		TERMINAL_208.addFollower(TERMINAL_84);
		TERMINAL_208.addFollower(TERMINAL_85);
		TERMINAL_208.addFollower(TERMINAL_86);
		TERMINAL_81.addFollower(TERMINAL_209);
		TERMINAL_209.addFollower(TERMINAL_210);
		TERMINAL_210.addFollower(TERMINAL_81);
		TERMINAL_210.addFollower(TERMINAL_82);
		TERMINAL_210.addFollower(TERMINAL_83);
		TERMINAL_210.addFollower(TERMINAL_84);
		TERMINAL_210.addFollower(TERMINAL_85);
		TERMINAL_210.addFollower(TERMINAL_86);
		TERMINAL_82.addFollower(TERMINAL_211);
		TERMINAL_211.addFollower(TERMINAL_183);
		TERMINAL_83.addFollower(TERMINAL_212);
	}
	public static void wire1() {
		TERMINAL_212.addFollower(TERMINAL_80);
		TERMINAL_212.addFollower(TERMINAL_6);
		TERMINAL_212.addFollower(TERMINAL_7);
		TERMINAL_212.addFollower(TERMINAL_8);
		TERMINAL_212.addFollower(TERMINAL_11);
		TERMINAL_212.addFollower(TERMINAL_12);
		TERMINAL_212.addFollower(TERMINAL_213);
		TERMINAL_212.addFollower(TERMINAL_214);
		TERMINAL_212.addFollower(TERMINAL_215);
		TERMINAL_212.addFollower(TERMINAL_216);
		TERMINAL_212.addFollower(TERMINAL_217);
		TERMINAL_212.addFollower(TERMINAL_218);
		TERMINAL_84.addFollower(TERMINAL_219);
		TERMINAL_219.addFollower(TERMINAL_220);
		TERMINAL_220.addFollower(TERMINAL_81);
		TERMINAL_220.addFollower(TERMINAL_82);
		TERMINAL_220.addFollower(TERMINAL_83);
		TERMINAL_220.addFollower(TERMINAL_84);
		TERMINAL_220.addFollower(TERMINAL_85);
		TERMINAL_220.addFollower(TERMINAL_86);
		TERMINAL_85.addFollower(TERMINAL_221);
		TERMINAL_221.addFollower(TERMINAL_222);
		TERMINAL_222.addFollower(TERMINAL_81);
		TERMINAL_222.addFollower(TERMINAL_82);
		TERMINAL_222.addFollower(TERMINAL_83);
		TERMINAL_222.addFollower(TERMINAL_84);
		TERMINAL_222.addFollower(TERMINAL_85);
		TERMINAL_222.addFollower(TERMINAL_86);
		TERMINAL_86.addFollower(TERMINAL_117);
		TERMINAL_86.addFollower(TERMINAL_118);
		TERMINAL_86.addFollower(TERMINAL_119);
		TERMINAL_86.addFollower(TERMINAL_120);
		TERMINAL_86.addFollower(TERMINAL_121);
		TERMINAL_86.addFollower(TERMINAL_122);
		TERMINAL_86.addFollower(TERMINAL_123);
		TERMINAL_86.addFollower(TERMINAL_124);
		TERMINAL_86.addFollower(TERMINAL_125);
		TERMINAL_86.addFollower(TERMINAL_126);
		TERMINAL_20.addFollower(TERMINAL_21);
		TERMINAL_20.addFollower(TERMINAL_22);
		TERMINAL_21.addFollower(TERMINAL_22);
		TERMINAL_22.addFollower(TERMINAL_223);
		TERMINAL_223.addFollower(TERMINAL_87);
		TERMINAL_223.addFollower(TERMINAL_88);
		TERMINAL_223.addFollower(TERMINAL_89);
		TERMINAL_223.addFollower(TERMINAL_90);
		TERMINAL_223.addFollower(TERMINAL_91);
		TERMINAL_223.addFollower(TERMINAL_92);
		TERMINAL_223.addFollower(TERMINAL_93);
		TERMINAL_223.addFollower(TERMINAL_94);
		TERMINAL_87.addFollower(TERMINAL_224);
		TERMINAL_224.addFollower(TERMINAL_225);
		TERMINAL_225.addFollower(TERMINAL_87);
		TERMINAL_225.addFollower(TERMINAL_88);
		TERMINAL_225.addFollower(TERMINAL_89);
		TERMINAL_225.addFollower(TERMINAL_90);
		TERMINAL_225.addFollower(TERMINAL_91);
		TERMINAL_225.addFollower(TERMINAL_92);
		TERMINAL_225.addFollower(TERMINAL_93);
		TERMINAL_225.addFollower(TERMINAL_94);
		TERMINAL_88.addFollower(TERMINAL_226);
		TERMINAL_226.addFollower(TERMINAL_183);
		TERMINAL_89.addFollower(TERMINAL_227);
		TERMINAL_227.addFollower(TERMINAL_80);
		TERMINAL_227.addFollower(TERMINAL_6);
		TERMINAL_227.addFollower(TERMINAL_7);
		TERMINAL_227.addFollower(TERMINAL_8);
		TERMINAL_227.addFollower(TERMINAL_11);
		TERMINAL_227.addFollower(TERMINAL_12);
		TERMINAL_227.addFollower(TERMINAL_213);
		TERMINAL_227.addFollower(TERMINAL_214);
		TERMINAL_227.addFollower(TERMINAL_215);
		TERMINAL_227.addFollower(TERMINAL_216);
		TERMINAL_227.addFollower(TERMINAL_217);
		TERMINAL_227.addFollower(TERMINAL_218);
		TERMINAL_90.addFollower(TERMINAL_228);
		TERMINAL_228.addFollower(TERMINAL_229);
		TERMINAL_229.addFollower(TERMINAL_87);
		TERMINAL_229.addFollower(TERMINAL_88);
		TERMINAL_229.addFollower(TERMINAL_89);
		TERMINAL_229.addFollower(TERMINAL_90);
		TERMINAL_229.addFollower(TERMINAL_91);
		TERMINAL_229.addFollower(TERMINAL_92);
		TERMINAL_229.addFollower(TERMINAL_93);
		TERMINAL_229.addFollower(TERMINAL_94);
		TERMINAL_91.addFollower(TERMINAL_230);
		TERMINAL_230.addFollower(TERMINAL_231);
		TERMINAL_231.addFollower(TERMINAL_87);
		TERMINAL_231.addFollower(TERMINAL_88);
		TERMINAL_231.addFollower(TERMINAL_89);
		TERMINAL_231.addFollower(TERMINAL_90);
		TERMINAL_231.addFollower(TERMINAL_91);
		TERMINAL_231.addFollower(TERMINAL_92);
		TERMINAL_231.addFollower(TERMINAL_93);
		TERMINAL_231.addFollower(TERMINAL_94);
		TERMINAL_92.addFollower(TERMINAL_232);
		TERMINAL_232.addFollower(TERMINAL_233);
		TERMINAL_233.addFollower(TERMINAL_87);
		TERMINAL_233.addFollower(TERMINAL_88);
		TERMINAL_233.addFollower(TERMINAL_89);
		TERMINAL_233.addFollower(TERMINAL_90);
		TERMINAL_233.addFollower(TERMINAL_91);
		TERMINAL_233.addFollower(TERMINAL_92);
		TERMINAL_233.addFollower(TERMINAL_93);
		TERMINAL_233.addFollower(TERMINAL_94);
		TERMINAL_93.addFollower(TERMINAL_234);
		TERMINAL_234.addFollower(TERMINAL_235);
		TERMINAL_235.addFollower(TERMINAL_87);
		TERMINAL_235.addFollower(TERMINAL_88);
		TERMINAL_235.addFollower(TERMINAL_89);
		TERMINAL_235.addFollower(TERMINAL_90);
		TERMINAL_235.addFollower(TERMINAL_91);
		TERMINAL_235.addFollower(TERMINAL_92);
		TERMINAL_235.addFollower(TERMINAL_93);
		TERMINAL_235.addFollower(TERMINAL_94);
		TERMINAL_9.addFollower(TERMINAL_10);
		TERMINAL_10.addFollower(TERMINAL_236);
		TERMINAL_236.addFollower(TERMINAL_237);
		TERMINAL_236.addFollower(TERMINAL_238);
		TERMINAL_236.addFollower(TERMINAL_239);
		TERMINAL_236.addFollower(TERMINAL_240);
		TERMINAL_237.addFollower(TERMINAL_241);
		TERMINAL_241.addFollower(TERMINAL_242);
		TERMINAL_242.addFollower(TERMINAL_237);
		TERMINAL_242.addFollower(TERMINAL_238);
		TERMINAL_242.addFollower(TERMINAL_239);
		TERMINAL_242.addFollower(TERMINAL_240);
		TERMINAL_238.addFollower(TERMINAL_243);
		TERMINAL_243.addFollower(TERMINAL_183);
		TERMINAL_239.addFollower(TERMINAL_244);
		TERMINAL_244.addFollower(TERMINAL_245);
		TERMINAL_245.addFollower(TERMINAL_237);
		TERMINAL_245.addFollower(TERMINAL_238);
		TERMINAL_245.addFollower(TERMINAL_239);
		TERMINAL_245.addFollower(TERMINAL_240);
		TERMINAL_240.addFollower(TERMINAL_3);
		TERMINAL_240.addFollower(TERMINAL_4);
		TERMINAL_240.addFollower(TERMINAL_5);
		TERMINAL_240.addFollower(TERMINAL_6);
		TERMINAL_240.addFollower(TERMINAL_7);
		TERMINAL_240.addFollower(TERMINAL_8);
		TERMINAL_240.addFollower(TERMINAL_9);
		TERMINAL_240.addFollower(TERMINAL_10);
		TERMINAL_240.addFollower(TERMINAL_11);
		TERMINAL_240.addFollower(TERMINAL_12);
		TERMINAL_240.addFollower(TERMINAL_2);
		TERMINAL_11.addFollower(TERMINAL_12);
		TERMINAL_12.addFollower(TERMINAL_246);
		TERMINAL_246.addFollower(TERMINAL_95);
		TERMINAL_246.addFollower(TERMINAL_96);
		TERMINAL_246.addFollower(TERMINAL_97);
		TERMINAL_246.addFollower(TERMINAL_98);
		TERMINAL_246.addFollower(TERMINAL_99);
		TERMINAL_246.addFollower(TERMINAL_100);
		TERMINAL_246.addFollower(TERMINAL_101);
		TERMINAL_95.addFollower(TERMINAL_247);
		TERMINAL_247.addFollower(TERMINAL_248);
		TERMINAL_248.addFollower(TERMINAL_95);
		TERMINAL_248.addFollower(TERMINAL_96);
		TERMINAL_248.addFollower(TERMINAL_97);
		TERMINAL_248.addFollower(TERMINAL_98);
		TERMINAL_248.addFollower(TERMINAL_99);
		TERMINAL_248.addFollower(TERMINAL_100);
		TERMINAL_248.addFollower(TERMINAL_101);
		TERMINAL_96.addFollower(TERMINAL_249);
		TERMINAL_249.addFollower(TERMINAL_183);
		TERMINAL_97.addFollower(TERMINAL_250);
		TERMINAL_250.addFollower(TERMINAL_251);
		TERMINAL_251.addFollower(TERMINAL_95);
		TERMINAL_251.addFollower(TERMINAL_96);
		TERMINAL_251.addFollower(TERMINAL_97);
		TERMINAL_251.addFollower(TERMINAL_98);
		TERMINAL_251.addFollower(TERMINAL_99);
		TERMINAL_251.addFollower(TERMINAL_100);
		TERMINAL_251.addFollower(TERMINAL_101);
		TERMINAL_98.addFollower(TERMINAL_252);
		TERMINAL_252.addFollower(TERMINAL_253);
		TERMINAL_253.addFollower(TERMINAL_95);
		TERMINAL_253.addFollower(TERMINAL_96);
		TERMINAL_253.addFollower(TERMINAL_97);
		TERMINAL_253.addFollower(TERMINAL_98);
		TERMINAL_253.addFollower(TERMINAL_99);
		TERMINAL_253.addFollower(TERMINAL_100);
		TERMINAL_253.addFollower(TERMINAL_101);
		TERMINAL_99.addFollower(TERMINAL_254);
		TERMINAL_254.addFollower(TERMINAL_80);
		TERMINAL_254.addFollower(TERMINAL_6);
		TERMINAL_254.addFollower(TERMINAL_7);
		TERMINAL_254.addFollower(TERMINAL_8);
		TERMINAL_254.addFollower(TERMINAL_11);
		TERMINAL_254.addFollower(TERMINAL_12);
		TERMINAL_254.addFollower(TERMINAL_213);
		TERMINAL_254.addFollower(TERMINAL_214);
		TERMINAL_254.addFollower(TERMINAL_215);
		TERMINAL_254.addFollower(TERMINAL_216);
		TERMINAL_254.addFollower(TERMINAL_217);
		TERMINAL_254.addFollower(TERMINAL_218);
		TERMINAL_100.addFollower(TERMINAL_255);
		TERMINAL_255.addFollower(TERMINAL_256);
		TERMINAL_256.addFollower(TERMINAL_95);
		TERMINAL_256.addFollower(TERMINAL_96);
		TERMINAL_256.addFollower(TERMINAL_97);
		TERMINAL_256.addFollower(TERMINAL_98);
		TERMINAL_256.addFollower(TERMINAL_99);
		TERMINAL_256.addFollower(TERMINAL_100);
		TERMINAL_256.addFollower(TERMINAL_101);
		TERMINAL_101.addFollower(TERMINAL_3);
		TERMINAL_101.addFollower(TERMINAL_4);
		TERMINAL_101.addFollower(TERMINAL_5);
		TERMINAL_101.addFollower(TERMINAL_6);
		TERMINAL_101.addFollower(TERMINAL_7);
		TERMINAL_101.addFollower(TERMINAL_8);
		TERMINAL_101.addFollower(TERMINAL_9);
		TERMINAL_101.addFollower(TERMINAL_10);
		TERMINAL_101.addFollower(TERMINAL_11);
		TERMINAL_101.addFollower(TERMINAL_12);
		TERMINAL_101.addFollower(TERMINAL_2);
		TERMINAL_101.addFollower(TERMINAL_81);
		TERMINAL_101.addFollower(TERMINAL_82);
		TERMINAL_101.addFollower(TERMINAL_83);
		TERMINAL_101.addFollower(TERMINAL_84);
		TERMINAL_101.addFollower(TERMINAL_85);
		TERMINAL_101.addFollower(TERMINAL_86);
		TERMINAL_101.addFollower(TERMINAL_87);
		TERMINAL_101.addFollower(TERMINAL_88);
		TERMINAL_101.addFollower(TERMINAL_89);
		TERMINAL_101.addFollower(TERMINAL_90);
		TERMINAL_101.addFollower(TERMINAL_91);
		TERMINAL_101.addFollower(TERMINAL_92);
		TERMINAL_101.addFollower(TERMINAL_93);
		TERMINAL_101.addFollower(TERMINAL_94);
		TERMINAL_101.addFollower(TERMINAL_95);
		TERMINAL_101.addFollower(TERMINAL_96);
		TERMINAL_101.addFollower(TERMINAL_97);
		TERMINAL_101.addFollower(TERMINAL_98);
		TERMINAL_101.addFollower(TERMINAL_99);
		TERMINAL_101.addFollower(TERMINAL_100);
		TERMINAL_101.addFollower(TERMINAL_101);
		TERMINAL_101.addFollower(TERMINAL_102);
		TERMINAL_101.addFollower(TERMINAL_103);
		TERMINAL_101.addFollower(TERMINAL_104);
		TERMINAL_101.addFollower(TERMINAL_105);
		TERMINAL_101.addFollower(TERMINAL_106);
		TERMINAL_101.addFollower(TERMINAL_107);
		TERMINAL_101.addFollower(TERMINAL_108);
		TERMINAL_101.addFollower(TERMINAL_109);
		TERMINAL_101.addFollower(TERMINAL_110);
		TERMINAL_101.addFollower(TERMINAL_111);
		TERMINAL_101.addFollower(TERMINAL_112);
		TERMINAL_101.addFollower(TERMINAL_113);
		TERMINAL_101.addFollower(TERMINAL_114);
		TERMINAL_101.addFollower(TERMINAL_115);
		TERMINAL_101.addFollower(TERMINAL_116);
		TERMINAL_101.addFollower(TERMINAL_117);
		TERMINAL_101.addFollower(TERMINAL_118);
		TERMINAL_101.addFollower(TERMINAL_119);
		TERMINAL_101.addFollower(TERMINAL_120);
		TERMINAL_101.addFollower(TERMINAL_121);
		TERMINAL_101.addFollower(TERMINAL_122);
		TERMINAL_101.addFollower(TERMINAL_123);
		TERMINAL_101.addFollower(TERMINAL_124);
		TERMINAL_101.addFollower(TERMINAL_125);
		TERMINAL_101.addFollower(TERMINAL_126);
		TERMINAL_101.addFollower(TERMINAL_127);
		TERMINAL_101.addFollower(TERMINAL_128);
		TERMINAL_101.addFollower(TERMINAL_129);
		TERMINAL_101.addFollower(TERMINAL_130);
		TERMINAL_101.addFollower(TERMINAL_131);
		TERMINAL_101.addFollower(TERMINAL_132);
		TERMINAL_101.addFollower(TERMINAL_133);
		TERMINAL_101.addFollower(TERMINAL_134);
		TERMINAL_101.addFollower(TERMINAL_135);
		TERMINAL_101.addFollower(TERMINAL_136);
		TERMINAL_101.addFollower(TERMINAL_137);
		TERMINAL_101.addFollower(TERMINAL_138);
		TERMINAL_101.addFollower(TERMINAL_139);
		TERMINAL_101.addFollower(TERMINAL_140);
		TERMINAL_101.addFollower(TERMINAL_141);
		TERMINAL_101.addFollower(TERMINAL_142);
		TERMINAL_101.addFollower(TERMINAL_143);
		TERMINAL_101.addFollower(TERMINAL_144);
		TERMINAL_101.addFollower(TERMINAL_145);
		TERMINAL_101.addFollower(TERMINAL_146);
		TERMINAL_101.addFollower(TERMINAL_147);
		TERMINAL_101.addFollower(TERMINAL_148);
		TERMINAL_101.addFollower(TERMINAL_149);
		TERMINAL_101.addFollower(TERMINAL_150);
		TERMINAL_101.addFollower(TERMINAL_151);
		TERMINAL_101.addFollower(TERMINAL_152);
		TERMINAL_101.addFollower(TERMINAL_153);
		TERMINAL_101.addFollower(TERMINAL_154);
		TERMINAL_101.addFollower(TERMINAL_155);
		TERMINAL_101.addFollower(TERMINAL_156);
		TERMINAL_101.addFollower(TERMINAL_157);
		TERMINAL_101.addFollower(TERMINAL_158);
		TERMINAL_101.addFollower(TERMINAL_159);
		TERMINAL_101.addFollower(TERMINAL_160);
		TERMINAL_101.addFollower(TERMINAL_161);
		TERMINAL_101.addFollower(TERMINAL_162);
		TERMINAL_101.addFollower(TERMINAL_163);
		TERMINAL_101.addFollower(TERMINAL_164);
		TERMINAL_101.addFollower(TERMINAL_165);
		TERMINAL_101.addFollower(TERMINAL_166);
		TERMINAL_101.addFollower(TERMINAL_167);
		TERMINAL_183.addFollower(TERMINAL_257);
		TERMINAL_257.addFollower(TERMINAL_258);
		TERMINAL_257.addFollower(TERMINAL_259);
		TERMINAL_257.addFollower(TERMINAL_260);
		TERMINAL_257.addFollower(TERMINAL_261);
		TERMINAL_257.addFollower(TERMINAL_262);
		TERMINAL_257.addFollower(TERMINAL_263);
		TERMINAL_258.addFollower(TERMINAL_264);
		TERMINAL_264.addFollower(TERMINAL_265);
		TERMINAL_265.addFollower(TERMINAL_258);
		TERMINAL_265.addFollower(TERMINAL_259);
		TERMINAL_265.addFollower(TERMINAL_260);
		TERMINAL_265.addFollower(TERMINAL_261);
		TERMINAL_265.addFollower(TERMINAL_262);
		TERMINAL_265.addFollower(TERMINAL_263);
		TERMINAL_259.addFollower(TERMINAL_266);
		TERMINAL_266.addFollower(TERMINAL_183);
		TERMINAL_260.addFollower(TERMINAL_267);
		TERMINAL_267.addFollower(TERMINAL_268);
		TERMINAL_268.addFollower(TERMINAL_258);
		TERMINAL_268.addFollower(TERMINAL_259);
		TERMINAL_268.addFollower(TERMINAL_260);
		TERMINAL_268.addFollower(TERMINAL_261);
		TERMINAL_268.addFollower(TERMINAL_262);
		TERMINAL_268.addFollower(TERMINAL_263);
		TERMINAL_261.addFollower(TERMINAL_269);
		TERMINAL_269.addFollower(TERMINAL_270);
		TERMINAL_270.addFollower(TERMINAL_258);
		TERMINAL_270.addFollower(TERMINAL_259);
		TERMINAL_270.addFollower(TERMINAL_260);
		TERMINAL_270.addFollower(TERMINAL_261);
		TERMINAL_270.addFollower(TERMINAL_262);
		TERMINAL_270.addFollower(TERMINAL_263);
		TERMINAL_262.addFollower(TERMINAL_271);
		TERMINAL_271.addFollower(TERMINAL_272);
		TERMINAL_272.addFollower(TERMINAL_258);
		TERMINAL_272.addFollower(TERMINAL_259);
		TERMINAL_272.addFollower(TERMINAL_260);
		TERMINAL_272.addFollower(TERMINAL_261);
		TERMINAL_272.addFollower(TERMINAL_262);
		TERMINAL_272.addFollower(TERMINAL_263);
		TERMINAL_263.addFollower(TERMINAL_177);
		TERMINAL_263.addFollower(TERMINAL_178);
		TERMINAL_263.addFollower(TERMINAL_179);
		TERMINAL_263.addFollower(TERMINAL_185);
		TERMINAL_263.addFollower(TERMINAL_186);
		TERMINAL_263.addFollower(TERMINAL_187);
		TERMINAL_263.addFollower(TERMINAL_192);
		TERMINAL_263.addFollower(TERMINAL_193);
		TERMINAL_263.addFollower(TERMINAL_194);
		TERMINAL_263.addFollower(TERMINAL_195);
		TERMINAL_263.addFollower(TERMINAL_196);
		TERMINAL_263.addFollower(TERMINAL_197);
		TERMINAL_263.addFollower(TERMINAL_81);
		TERMINAL_263.addFollower(TERMINAL_82);
		TERMINAL_263.addFollower(TERMINAL_83);
		TERMINAL_263.addFollower(TERMINAL_84);
		TERMINAL_263.addFollower(TERMINAL_85);
		TERMINAL_263.addFollower(TERMINAL_86);
		TERMINAL_263.addFollower(TERMINAL_87);
		TERMINAL_263.addFollower(TERMINAL_88);
		TERMINAL_263.addFollower(TERMINAL_89);
		TERMINAL_263.addFollower(TERMINAL_90);
		TERMINAL_263.addFollower(TERMINAL_91);
		TERMINAL_263.addFollower(TERMINAL_92);
		TERMINAL_263.addFollower(TERMINAL_93);
		TERMINAL_263.addFollower(TERMINAL_94);
		TERMINAL_263.addFollower(TERMINAL_237);
		TERMINAL_263.addFollower(TERMINAL_238);
		TERMINAL_263.addFollower(TERMINAL_239);
		TERMINAL_263.addFollower(TERMINAL_240);
		TERMINAL_263.addFollower(TERMINAL_95);
		TERMINAL_263.addFollower(TERMINAL_96);
		TERMINAL_263.addFollower(TERMINAL_97);
		TERMINAL_263.addFollower(TERMINAL_98);
		TERMINAL_263.addFollower(TERMINAL_99);
		TERMINAL_263.addFollower(TERMINAL_100);
		TERMINAL_263.addFollower(TERMINAL_101);
		TERMINAL_263.addFollower(TERMINAL_258);
		TERMINAL_263.addFollower(TERMINAL_259);
		TERMINAL_263.addFollower(TERMINAL_260);
		TERMINAL_263.addFollower(TERMINAL_261);
		TERMINAL_263.addFollower(TERMINAL_262);
		TERMINAL_263.addFollower(TERMINAL_263);
		TERMINAL_263.addFollower(TERMINAL_102);
		TERMINAL_263.addFollower(TERMINAL_103);
		TERMINAL_263.addFollower(TERMINAL_104);
		TERMINAL_263.addFollower(TERMINAL_105);
		TERMINAL_263.addFollower(TERMINAL_106);
		TERMINAL_263.addFollower(TERMINAL_107);
		TERMINAL_263.addFollower(TERMINAL_108);
		TERMINAL_263.addFollower(TERMINAL_109);
		TERMINAL_263.addFollower(TERMINAL_110);
		TERMINAL_263.addFollower(TERMINAL_111);
		TERMINAL_263.addFollower(TERMINAL_112);
		TERMINAL_263.addFollower(TERMINAL_113);
		TERMINAL_263.addFollower(TERMINAL_114);
		TERMINAL_263.addFollower(TERMINAL_115);
		TERMINAL_263.addFollower(TERMINAL_116);
		TERMINAL_263.addFollower(TERMINAL_117);
		TERMINAL_263.addFollower(TERMINAL_118);
		TERMINAL_263.addFollower(TERMINAL_119);
		TERMINAL_263.addFollower(TERMINAL_120);
		TERMINAL_263.addFollower(TERMINAL_121);
		TERMINAL_263.addFollower(TERMINAL_122);
		TERMINAL_263.addFollower(TERMINAL_123);
		TERMINAL_263.addFollower(TERMINAL_124);
		TERMINAL_263.addFollower(TERMINAL_125);
		TERMINAL_263.addFollower(TERMINAL_126);
		TERMINAL_263.addFollower(TERMINAL_127);
		TERMINAL_263.addFollower(TERMINAL_128);
		TERMINAL_263.addFollower(TERMINAL_129);
		TERMINAL_263.addFollower(TERMINAL_130);
		TERMINAL_263.addFollower(TERMINAL_131);
		TERMINAL_263.addFollower(TERMINAL_132);
		TERMINAL_263.addFollower(TERMINAL_133);
		TERMINAL_263.addFollower(TERMINAL_134);
		TERMINAL_263.addFollower(TERMINAL_135);
		TERMINAL_263.addFollower(TERMINAL_136);
		TERMINAL_263.addFollower(TERMINAL_137);
		TERMINAL_263.addFollower(TERMINAL_138);
		TERMINAL_263.addFollower(TERMINAL_139);
		TERMINAL_263.addFollower(TERMINAL_273);
		TERMINAL_263.addFollower(TERMINAL_274);
		TERMINAL_263.addFollower(TERMINAL_275);
		TERMINAL_263.addFollower(TERMINAL_276);
		TERMINAL_263.addFollower(TERMINAL_140);
		TERMINAL_263.addFollower(TERMINAL_141);
		TERMINAL_263.addFollower(TERMINAL_142);
		TERMINAL_263.addFollower(TERMINAL_143);
		TERMINAL_263.addFollower(TERMINAL_144);
		TERMINAL_263.addFollower(TERMINAL_145);
		TERMINAL_263.addFollower(TERMINAL_146);
		TERMINAL_263.addFollower(TERMINAL_147);
		TERMINAL_263.addFollower(TERMINAL_148);
		TERMINAL_263.addFollower(TERMINAL_149);
		TERMINAL_263.addFollower(TERMINAL_150);
		TERMINAL_263.addFollower(TERMINAL_151);
		TERMINAL_263.addFollower(TERMINAL_152);
		TERMINAL_263.addFollower(TERMINAL_153);
		TERMINAL_263.addFollower(TERMINAL_154);
		TERMINAL_263.addFollower(TERMINAL_155);
		TERMINAL_263.addFollower(TERMINAL_156);
		TERMINAL_263.addFollower(TERMINAL_157);
		TERMINAL_263.addFollower(TERMINAL_158);
		TERMINAL_263.addFollower(TERMINAL_159);
		TERMINAL_263.addFollower(TERMINAL_160);
		TERMINAL_263.addFollower(TERMINAL_161);
		TERMINAL_263.addFollower(TERMINAL_162);
		TERMINAL_263.addFollower(TERMINAL_163);
		TERMINAL_263.addFollower(TERMINAL_164);
		TERMINAL_263.addFollower(TERMINAL_165);
		TERMINAL_263.addFollower(TERMINAL_166);
		TERMINAL_263.addFollower(TERMINAL_167);
		TERMINAL_263.addFollower(TERMINAL_277);
		TERMINAL_263.addFollower(TERMINAL_278);
		TERMINAL_263.addFollower(TERMINAL_279);
		TERMINAL_263.addFollower(TERMINAL_280);
		TERMINAL_263.addFollower(TERMINAL_281);
		TERMINAL_213.addFollower(TERMINAL_282);
		TERMINAL_282.addFollower(TERMINAL_102);
		TERMINAL_282.addFollower(TERMINAL_103);
		TERMINAL_282.addFollower(TERMINAL_104);
		TERMINAL_282.addFollower(TERMINAL_105);
		TERMINAL_282.addFollower(TERMINAL_106);
		TERMINAL_282.addFollower(TERMINAL_107);
		TERMINAL_282.addFollower(TERMINAL_108);
		TERMINAL_102.addFollower(TERMINAL_283);
		TERMINAL_283.addFollower(TERMINAL_284);
		TERMINAL_284.addFollower(TERMINAL_102);
		TERMINAL_284.addFollower(TERMINAL_103);
		TERMINAL_284.addFollower(TERMINAL_104);
		TERMINAL_284.addFollower(TERMINAL_105);
		TERMINAL_284.addFollower(TERMINAL_106);
		TERMINAL_284.addFollower(TERMINAL_107);
		TERMINAL_284.addFollower(TERMINAL_108);
		TERMINAL_103.addFollower(TERMINAL_285);
		TERMINAL_285.addFollower(TERMINAL_183);
		TERMINAL_104.addFollower(TERMINAL_286);
		TERMINAL_286.addFollower(TERMINAL_80);
		TERMINAL_286.addFollower(TERMINAL_6);
		TERMINAL_286.addFollower(TERMINAL_7);
		TERMINAL_286.addFollower(TERMINAL_8);
		TERMINAL_286.addFollower(TERMINAL_11);
		TERMINAL_286.addFollower(TERMINAL_12);
		TERMINAL_286.addFollower(TERMINAL_213);
		TERMINAL_286.addFollower(TERMINAL_214);
		TERMINAL_286.addFollower(TERMINAL_215);
		TERMINAL_286.addFollower(TERMINAL_216);
		TERMINAL_286.addFollower(TERMINAL_217);
		TERMINAL_286.addFollower(TERMINAL_218);
		TERMINAL_105.addFollower(TERMINAL_287);
		TERMINAL_287.addFollower(TERMINAL_288);
		TERMINAL_288.addFollower(TERMINAL_102);
		TERMINAL_288.addFollower(TERMINAL_103);
		TERMINAL_288.addFollower(TERMINAL_104);
		TERMINAL_288.addFollower(TERMINAL_105);
		TERMINAL_288.addFollower(TERMINAL_106);
		TERMINAL_288.addFollower(TERMINAL_107);
		TERMINAL_288.addFollower(TERMINAL_108);
		TERMINAL_106.addFollower(TERMINAL_289);
		TERMINAL_289.addFollower(TERMINAL_290);
		TERMINAL_290.addFollower(TERMINAL_102);
		TERMINAL_290.addFollower(TERMINAL_103);
		TERMINAL_290.addFollower(TERMINAL_104);
		TERMINAL_290.addFollower(TERMINAL_105);
		TERMINAL_290.addFollower(TERMINAL_106);
		TERMINAL_290.addFollower(TERMINAL_107);
		TERMINAL_290.addFollower(TERMINAL_108);
		TERMINAL_107.addFollower(TERMINAL_291);
		TERMINAL_291.addFollower(TERMINAL_292);
		TERMINAL_292.addFollower(TERMINAL_102);
		TERMINAL_292.addFollower(TERMINAL_103);
		TERMINAL_292.addFollower(TERMINAL_104);
		TERMINAL_292.addFollower(TERMINAL_105);
		TERMINAL_292.addFollower(TERMINAL_106);
		TERMINAL_292.addFollower(TERMINAL_107);
		TERMINAL_292.addFollower(TERMINAL_108);
		TERMINAL_108.addFollower(TERMINAL_81);
		TERMINAL_108.addFollower(TERMINAL_82);
		TERMINAL_108.addFollower(TERMINAL_83);
		TERMINAL_108.addFollower(TERMINAL_84);
		TERMINAL_108.addFollower(TERMINAL_85);
		TERMINAL_108.addFollower(TERMINAL_86);
		TERMINAL_108.addFollower(TERMINAL_87);
		TERMINAL_108.addFollower(TERMINAL_88);
		TERMINAL_108.addFollower(TERMINAL_89);
		TERMINAL_108.addFollower(TERMINAL_90);
		TERMINAL_108.addFollower(TERMINAL_91);
		TERMINAL_108.addFollower(TERMINAL_92);
		TERMINAL_108.addFollower(TERMINAL_93);
		TERMINAL_108.addFollower(TERMINAL_94);
		TERMINAL_108.addFollower(TERMINAL_95);
		TERMINAL_108.addFollower(TERMINAL_96);
		TERMINAL_108.addFollower(TERMINAL_97);
		TERMINAL_108.addFollower(TERMINAL_98);
		TERMINAL_108.addFollower(TERMINAL_99);
		TERMINAL_108.addFollower(TERMINAL_100);
		TERMINAL_108.addFollower(TERMINAL_101);
		TERMINAL_108.addFollower(TERMINAL_102);
		TERMINAL_108.addFollower(TERMINAL_103);
		TERMINAL_108.addFollower(TERMINAL_104);
		TERMINAL_108.addFollower(TERMINAL_105);
		TERMINAL_108.addFollower(TERMINAL_106);
		TERMINAL_108.addFollower(TERMINAL_107);
		TERMINAL_108.addFollower(TERMINAL_108);
		TERMINAL_108.addFollower(TERMINAL_109);
		TERMINAL_108.addFollower(TERMINAL_110);
		TERMINAL_108.addFollower(TERMINAL_111);
		TERMINAL_108.addFollower(TERMINAL_112);
		TERMINAL_108.addFollower(TERMINAL_113);
		TERMINAL_108.addFollower(TERMINAL_114);
		TERMINAL_108.addFollower(TERMINAL_115);
		TERMINAL_108.addFollower(TERMINAL_116);
		TERMINAL_108.addFollower(TERMINAL_117);
		TERMINAL_108.addFollower(TERMINAL_118);
		TERMINAL_108.addFollower(TERMINAL_119);
		TERMINAL_108.addFollower(TERMINAL_120);
		TERMINAL_108.addFollower(TERMINAL_121);
		TERMINAL_108.addFollower(TERMINAL_122);
		TERMINAL_108.addFollower(TERMINAL_123);
		TERMINAL_108.addFollower(TERMINAL_124);
		TERMINAL_108.addFollower(TERMINAL_125);
		TERMINAL_108.addFollower(TERMINAL_126);
		TERMINAL_108.addFollower(TERMINAL_127);
		TERMINAL_108.addFollower(TERMINAL_128);
		TERMINAL_108.addFollower(TERMINAL_129);
		TERMINAL_108.addFollower(TERMINAL_130);
		TERMINAL_108.addFollower(TERMINAL_131);
		TERMINAL_108.addFollower(TERMINAL_132);
		TERMINAL_108.addFollower(TERMINAL_133);
		TERMINAL_108.addFollower(TERMINAL_134);
		TERMINAL_108.addFollower(TERMINAL_135);
		TERMINAL_108.addFollower(TERMINAL_136);
		TERMINAL_108.addFollower(TERMINAL_137);
		TERMINAL_108.addFollower(TERMINAL_138);
		TERMINAL_108.addFollower(TERMINAL_139);
		TERMINAL_108.addFollower(TERMINAL_140);
		TERMINAL_108.addFollower(TERMINAL_141);
		TERMINAL_108.addFollower(TERMINAL_142);
		TERMINAL_108.addFollower(TERMINAL_143);
		TERMINAL_108.addFollower(TERMINAL_144);
		TERMINAL_108.addFollower(TERMINAL_145);
		TERMINAL_108.addFollower(TERMINAL_146);
		TERMINAL_108.addFollower(TERMINAL_147);
		TERMINAL_108.addFollower(TERMINAL_148);
		TERMINAL_108.addFollower(TERMINAL_149);
		TERMINAL_108.addFollower(TERMINAL_150);
		TERMINAL_108.addFollower(TERMINAL_151);
		TERMINAL_108.addFollower(TERMINAL_152);
		TERMINAL_108.addFollower(TERMINAL_153);
		TERMINAL_108.addFollower(TERMINAL_154);
		TERMINAL_108.addFollower(TERMINAL_155);
		TERMINAL_108.addFollower(TERMINAL_156);
		TERMINAL_108.addFollower(TERMINAL_157);
		TERMINAL_108.addFollower(TERMINAL_158);
		TERMINAL_108.addFollower(TERMINAL_159);
		TERMINAL_108.addFollower(TERMINAL_160);
		TERMINAL_108.addFollower(TERMINAL_161);
		TERMINAL_108.addFollower(TERMINAL_162);
		TERMINAL_108.addFollower(TERMINAL_163);
		TERMINAL_108.addFollower(TERMINAL_164);
		TERMINAL_108.addFollower(TERMINAL_165);
		TERMINAL_108.addFollower(TERMINAL_166);
		TERMINAL_108.addFollower(TERMINAL_167);
	}
	public static void wire2() {
		TERMINAL_214.addFollower(TERMINAL_293);
		TERMINAL_293.addFollower(TERMINAL_109);
		TERMINAL_293.addFollower(TERMINAL_110);
		TERMINAL_293.addFollower(TERMINAL_111);
		TERMINAL_293.addFollower(TERMINAL_112);
		TERMINAL_293.addFollower(TERMINAL_113);
		TERMINAL_293.addFollower(TERMINAL_114);
		TERMINAL_293.addFollower(TERMINAL_115);
		TERMINAL_293.addFollower(TERMINAL_116);
		TERMINAL_109.addFollower(TERMINAL_294);
		TERMINAL_294.addFollower(TERMINAL_295);
		TERMINAL_295.addFollower(TERMINAL_109);
		TERMINAL_295.addFollower(TERMINAL_110);
		TERMINAL_295.addFollower(TERMINAL_111);
		TERMINAL_295.addFollower(TERMINAL_112);
		TERMINAL_295.addFollower(TERMINAL_113);
		TERMINAL_295.addFollower(TERMINAL_114);
		TERMINAL_295.addFollower(TERMINAL_115);
		TERMINAL_295.addFollower(TERMINAL_116);
		TERMINAL_110.addFollower(TERMINAL_296);
		TERMINAL_296.addFollower(TERMINAL_183);
		TERMINAL_111.addFollower(TERMINAL_297);
		TERMINAL_297.addFollower(TERMINAL_80);
		TERMINAL_297.addFollower(TERMINAL_6);
		TERMINAL_297.addFollower(TERMINAL_7);
		TERMINAL_297.addFollower(TERMINAL_8);
		TERMINAL_297.addFollower(TERMINAL_11);
		TERMINAL_297.addFollower(TERMINAL_12);
		TERMINAL_297.addFollower(TERMINAL_213);
		TERMINAL_297.addFollower(TERMINAL_214);
		TERMINAL_297.addFollower(TERMINAL_215);
		TERMINAL_297.addFollower(TERMINAL_216);
		TERMINAL_297.addFollower(TERMINAL_217);
		TERMINAL_297.addFollower(TERMINAL_218);
		TERMINAL_112.addFollower(TERMINAL_298);
		TERMINAL_298.addFollower(TERMINAL_299);
		TERMINAL_299.addFollower(TERMINAL_109);
		TERMINAL_299.addFollower(TERMINAL_110);
		TERMINAL_299.addFollower(TERMINAL_111);
		TERMINAL_299.addFollower(TERMINAL_112);
		TERMINAL_299.addFollower(TERMINAL_113);
		TERMINAL_299.addFollower(TERMINAL_114);
		TERMINAL_299.addFollower(TERMINAL_115);
		TERMINAL_299.addFollower(TERMINAL_116);
		TERMINAL_113.addFollower(TERMINAL_300);
		TERMINAL_300.addFollower(TERMINAL_301);
		TERMINAL_301.addFollower(TERMINAL_109);
		TERMINAL_301.addFollower(TERMINAL_110);
		TERMINAL_301.addFollower(TERMINAL_111);
		TERMINAL_301.addFollower(TERMINAL_112);
		TERMINAL_301.addFollower(TERMINAL_113);
		TERMINAL_301.addFollower(TERMINAL_114);
		TERMINAL_301.addFollower(TERMINAL_115);
		TERMINAL_301.addFollower(TERMINAL_116);
		TERMINAL_114.addFollower(TERMINAL_302);
		TERMINAL_302.addFollower(TERMINAL_303);
		TERMINAL_303.addFollower(TERMINAL_109);
		TERMINAL_303.addFollower(TERMINAL_110);
		TERMINAL_303.addFollower(TERMINAL_111);
		TERMINAL_303.addFollower(TERMINAL_112);
		TERMINAL_303.addFollower(TERMINAL_113);
		TERMINAL_303.addFollower(TERMINAL_114);
		TERMINAL_303.addFollower(TERMINAL_115);
		TERMINAL_303.addFollower(TERMINAL_116);
		TERMINAL_115.addFollower(TERMINAL_304);
		TERMINAL_304.addFollower(TERMINAL_215);
		TERMINAL_116.addFollower(TERMINAL_81);
		TERMINAL_116.addFollower(TERMINAL_82);
		TERMINAL_116.addFollower(TERMINAL_83);
		TERMINAL_116.addFollower(TERMINAL_84);
		TERMINAL_116.addFollower(TERMINAL_85);
		TERMINAL_116.addFollower(TERMINAL_86);
		TERMINAL_116.addFollower(TERMINAL_87);
		TERMINAL_116.addFollower(TERMINAL_88);
		TERMINAL_116.addFollower(TERMINAL_89);
		TERMINAL_116.addFollower(TERMINAL_90);
		TERMINAL_116.addFollower(TERMINAL_91);
		TERMINAL_116.addFollower(TERMINAL_92);
		TERMINAL_116.addFollower(TERMINAL_93);
		TERMINAL_116.addFollower(TERMINAL_94);
		TERMINAL_116.addFollower(TERMINAL_95);
		TERMINAL_116.addFollower(TERMINAL_96);
		TERMINAL_116.addFollower(TERMINAL_97);
		TERMINAL_116.addFollower(TERMINAL_98);
		TERMINAL_116.addFollower(TERMINAL_99);
		TERMINAL_116.addFollower(TERMINAL_100);
		TERMINAL_116.addFollower(TERMINAL_101);
		TERMINAL_116.addFollower(TERMINAL_102);
		TERMINAL_116.addFollower(TERMINAL_103);
		TERMINAL_116.addFollower(TERMINAL_104);
		TERMINAL_116.addFollower(TERMINAL_105);
		TERMINAL_116.addFollower(TERMINAL_106);
		TERMINAL_116.addFollower(TERMINAL_107);
		TERMINAL_116.addFollower(TERMINAL_108);
		TERMINAL_116.addFollower(TERMINAL_109);
		TERMINAL_116.addFollower(TERMINAL_110);
		TERMINAL_116.addFollower(TERMINAL_111);
		TERMINAL_116.addFollower(TERMINAL_112);
		TERMINAL_116.addFollower(TERMINAL_113);
		TERMINAL_116.addFollower(TERMINAL_114);
		TERMINAL_116.addFollower(TERMINAL_115);
		TERMINAL_116.addFollower(TERMINAL_116);
		TERMINAL_116.addFollower(TERMINAL_117);
		TERMINAL_116.addFollower(TERMINAL_118);
		TERMINAL_116.addFollower(TERMINAL_119);
		TERMINAL_116.addFollower(TERMINAL_120);
		TERMINAL_116.addFollower(TERMINAL_121);
		TERMINAL_116.addFollower(TERMINAL_122);
		TERMINAL_116.addFollower(TERMINAL_123);
		TERMINAL_116.addFollower(TERMINAL_124);
		TERMINAL_116.addFollower(TERMINAL_125);
		TERMINAL_116.addFollower(TERMINAL_126);
		TERMINAL_116.addFollower(TERMINAL_127);
		TERMINAL_116.addFollower(TERMINAL_128);
		TERMINAL_116.addFollower(TERMINAL_129);
		TERMINAL_116.addFollower(TERMINAL_130);
		TERMINAL_116.addFollower(TERMINAL_131);
		TERMINAL_116.addFollower(TERMINAL_132);
		TERMINAL_116.addFollower(TERMINAL_133);
		TERMINAL_116.addFollower(TERMINAL_134);
		TERMINAL_116.addFollower(TERMINAL_135);
		TERMINAL_116.addFollower(TERMINAL_136);
		TERMINAL_116.addFollower(TERMINAL_137);
		TERMINAL_116.addFollower(TERMINAL_138);
		TERMINAL_116.addFollower(TERMINAL_139);
		TERMINAL_116.addFollower(TERMINAL_140);
		TERMINAL_116.addFollower(TERMINAL_141);
		TERMINAL_116.addFollower(TERMINAL_142);
		TERMINAL_116.addFollower(TERMINAL_143);
		TERMINAL_116.addFollower(TERMINAL_144);
		TERMINAL_116.addFollower(TERMINAL_145);
		TERMINAL_116.addFollower(TERMINAL_146);
		TERMINAL_116.addFollower(TERMINAL_147);
		TERMINAL_116.addFollower(TERMINAL_148);
		TERMINAL_116.addFollower(TERMINAL_149);
		TERMINAL_116.addFollower(TERMINAL_150);
		TERMINAL_116.addFollower(TERMINAL_151);
		TERMINAL_116.addFollower(TERMINAL_152);
		TERMINAL_116.addFollower(TERMINAL_153);
		TERMINAL_116.addFollower(TERMINAL_154);
		TERMINAL_116.addFollower(TERMINAL_155);
		TERMINAL_116.addFollower(TERMINAL_156);
		TERMINAL_116.addFollower(TERMINAL_157);
		TERMINAL_116.addFollower(TERMINAL_158);
		TERMINAL_116.addFollower(TERMINAL_159);
		TERMINAL_116.addFollower(TERMINAL_160);
		TERMINAL_116.addFollower(TERMINAL_161);
		TERMINAL_116.addFollower(TERMINAL_162);
		TERMINAL_116.addFollower(TERMINAL_163);
		TERMINAL_116.addFollower(TERMINAL_164);
		TERMINAL_116.addFollower(TERMINAL_165);
		TERMINAL_116.addFollower(TERMINAL_166);
		TERMINAL_116.addFollower(TERMINAL_167);
		TERMINAL_215.addFollower(TERMINAL_305);
		TERMINAL_305.addFollower(TERMINAL_117);
		TERMINAL_305.addFollower(TERMINAL_118);
		TERMINAL_305.addFollower(TERMINAL_119);
		TERMINAL_305.addFollower(TERMINAL_120);
		TERMINAL_305.addFollower(TERMINAL_121);
		TERMINAL_305.addFollower(TERMINAL_122);
		TERMINAL_305.addFollower(TERMINAL_123);
		TERMINAL_305.addFollower(TERMINAL_124);
		TERMINAL_305.addFollower(TERMINAL_125);
		TERMINAL_305.addFollower(TERMINAL_126);
		TERMINAL_117.addFollower(TERMINAL_306);
		TERMINAL_306.addFollower(TERMINAL_307);
		TERMINAL_307.addFollower(TERMINAL_117);
		TERMINAL_307.addFollower(TERMINAL_118);
		TERMINAL_307.addFollower(TERMINAL_119);
		TERMINAL_307.addFollower(TERMINAL_120);
		TERMINAL_307.addFollower(TERMINAL_121);
		TERMINAL_307.addFollower(TERMINAL_122);
		TERMINAL_307.addFollower(TERMINAL_123);
		TERMINAL_307.addFollower(TERMINAL_124);
		TERMINAL_307.addFollower(TERMINAL_125);
		TERMINAL_307.addFollower(TERMINAL_126);
		TERMINAL_118.addFollower(TERMINAL_308);
		TERMINAL_308.addFollower(TERMINAL_183);
		TERMINAL_119.addFollower(TERMINAL_309);
		TERMINAL_309.addFollower(TERMINAL_80);
		TERMINAL_309.addFollower(TERMINAL_6);
		TERMINAL_309.addFollower(TERMINAL_7);
		TERMINAL_309.addFollower(TERMINAL_8);
		TERMINAL_309.addFollower(TERMINAL_11);
		TERMINAL_309.addFollower(TERMINAL_12);
		TERMINAL_309.addFollower(TERMINAL_213);
		TERMINAL_309.addFollower(TERMINAL_214);
		TERMINAL_309.addFollower(TERMINAL_215);
		TERMINAL_309.addFollower(TERMINAL_216);
		TERMINAL_309.addFollower(TERMINAL_217);
		TERMINAL_309.addFollower(TERMINAL_218);
		TERMINAL_120.addFollower(TERMINAL_310);
		TERMINAL_310.addFollower(TERMINAL_311);
		TERMINAL_311.addFollower(TERMINAL_117);
		TERMINAL_311.addFollower(TERMINAL_118);
		TERMINAL_311.addFollower(TERMINAL_119);
		TERMINAL_311.addFollower(TERMINAL_120);
		TERMINAL_311.addFollower(TERMINAL_121);
		TERMINAL_311.addFollower(TERMINAL_122);
		TERMINAL_311.addFollower(TERMINAL_123);
		TERMINAL_311.addFollower(TERMINAL_124);
		TERMINAL_311.addFollower(TERMINAL_125);
		TERMINAL_311.addFollower(TERMINAL_126);
		TERMINAL_121.addFollower(TERMINAL_312);
		TERMINAL_312.addFollower(TERMINAL_313);
		TERMINAL_313.addFollower(TERMINAL_117);
		TERMINAL_313.addFollower(TERMINAL_118);
		TERMINAL_313.addFollower(TERMINAL_119);
		TERMINAL_313.addFollower(TERMINAL_120);
		TERMINAL_313.addFollower(TERMINAL_121);
		TERMINAL_313.addFollower(TERMINAL_122);
		TERMINAL_313.addFollower(TERMINAL_123);
		TERMINAL_313.addFollower(TERMINAL_124);
		TERMINAL_313.addFollower(TERMINAL_125);
		TERMINAL_313.addFollower(TERMINAL_126);
		TERMINAL_122.addFollower(TERMINAL_314);
		TERMINAL_314.addFollower(TERMINAL_315);
		TERMINAL_315.addFollower(TERMINAL_117);
		TERMINAL_315.addFollower(TERMINAL_118);
		TERMINAL_315.addFollower(TERMINAL_119);
		TERMINAL_315.addFollower(TERMINAL_120);
		TERMINAL_315.addFollower(TERMINAL_121);
		TERMINAL_315.addFollower(TERMINAL_122);
		TERMINAL_315.addFollower(TERMINAL_123);
		TERMINAL_315.addFollower(TERMINAL_124);
		TERMINAL_315.addFollower(TERMINAL_125);
		TERMINAL_315.addFollower(TERMINAL_126);
		TERMINAL_123.addFollower(TERMINAL_316);
		TERMINAL_316.addFollower(TERMINAL_317);
		TERMINAL_317.addFollower(TERMINAL_117);
		TERMINAL_317.addFollower(TERMINAL_118);
		TERMINAL_317.addFollower(TERMINAL_119);
		TERMINAL_317.addFollower(TERMINAL_120);
		TERMINAL_317.addFollower(TERMINAL_121);
		TERMINAL_317.addFollower(TERMINAL_122);
		TERMINAL_317.addFollower(TERMINAL_123);
		TERMINAL_317.addFollower(TERMINAL_124);
		TERMINAL_317.addFollower(TERMINAL_125);
		TERMINAL_317.addFollower(TERMINAL_126);
		TERMINAL_124.addFollower(TERMINAL_318);
		TERMINAL_318.addFollower(TERMINAL_319);
		TERMINAL_319.addFollower(TERMINAL_117);
		TERMINAL_319.addFollower(TERMINAL_118);
		TERMINAL_319.addFollower(TERMINAL_119);
		TERMINAL_319.addFollower(TERMINAL_120);
		TERMINAL_319.addFollower(TERMINAL_121);
		TERMINAL_319.addFollower(TERMINAL_122);
		TERMINAL_319.addFollower(TERMINAL_123);
		TERMINAL_319.addFollower(TERMINAL_124);
		TERMINAL_319.addFollower(TERMINAL_125);
		TERMINAL_319.addFollower(TERMINAL_126);
		TERMINAL_125.addFollower(TERMINAL_320);
		TERMINAL_320.addFollower(TERMINAL_207);
		TERMINAL_126.addFollower(TERMINAL_81);
		TERMINAL_126.addFollower(TERMINAL_82);
		TERMINAL_126.addFollower(TERMINAL_83);
		TERMINAL_126.addFollower(TERMINAL_84);
		TERMINAL_126.addFollower(TERMINAL_85);
		TERMINAL_126.addFollower(TERMINAL_86);
		TERMINAL_126.addFollower(TERMINAL_87);
		TERMINAL_126.addFollower(TERMINAL_88);
		TERMINAL_126.addFollower(TERMINAL_89);
		TERMINAL_126.addFollower(TERMINAL_90);
		TERMINAL_126.addFollower(TERMINAL_91);
		TERMINAL_126.addFollower(TERMINAL_92);
		TERMINAL_126.addFollower(TERMINAL_93);
		TERMINAL_126.addFollower(TERMINAL_94);
		TERMINAL_126.addFollower(TERMINAL_95);
		TERMINAL_126.addFollower(TERMINAL_96);
		TERMINAL_126.addFollower(TERMINAL_97);
		TERMINAL_126.addFollower(TERMINAL_98);
		TERMINAL_126.addFollower(TERMINAL_99);
		TERMINAL_126.addFollower(TERMINAL_100);
		TERMINAL_126.addFollower(TERMINAL_101);
		TERMINAL_126.addFollower(TERMINAL_102);
		TERMINAL_126.addFollower(TERMINAL_103);
		TERMINAL_126.addFollower(TERMINAL_104);
		TERMINAL_126.addFollower(TERMINAL_105);
		TERMINAL_126.addFollower(TERMINAL_106);
		TERMINAL_126.addFollower(TERMINAL_107);
		TERMINAL_126.addFollower(TERMINAL_108);
		TERMINAL_126.addFollower(TERMINAL_109);
		TERMINAL_126.addFollower(TERMINAL_110);
		TERMINAL_126.addFollower(TERMINAL_111);
		TERMINAL_126.addFollower(TERMINAL_112);
		TERMINAL_126.addFollower(TERMINAL_113);
		TERMINAL_126.addFollower(TERMINAL_114);
		TERMINAL_126.addFollower(TERMINAL_115);
		TERMINAL_126.addFollower(TERMINAL_116);
		TERMINAL_126.addFollower(TERMINAL_117);
		TERMINAL_126.addFollower(TERMINAL_118);
		TERMINAL_126.addFollower(TERMINAL_119);
		TERMINAL_126.addFollower(TERMINAL_120);
		TERMINAL_126.addFollower(TERMINAL_121);
		TERMINAL_126.addFollower(TERMINAL_122);
		TERMINAL_126.addFollower(TERMINAL_123);
		TERMINAL_126.addFollower(TERMINAL_124);
		TERMINAL_126.addFollower(TERMINAL_125);
		TERMINAL_126.addFollower(TERMINAL_126);
		TERMINAL_126.addFollower(TERMINAL_127);
		TERMINAL_126.addFollower(TERMINAL_128);
		TERMINAL_126.addFollower(TERMINAL_129);
		TERMINAL_126.addFollower(TERMINAL_130);
		TERMINAL_126.addFollower(TERMINAL_131);
		TERMINAL_126.addFollower(TERMINAL_132);
		TERMINAL_126.addFollower(TERMINAL_133);
		TERMINAL_126.addFollower(TERMINAL_134);
		TERMINAL_126.addFollower(TERMINAL_135);
		TERMINAL_126.addFollower(TERMINAL_136);
		TERMINAL_126.addFollower(TERMINAL_137);
		TERMINAL_126.addFollower(TERMINAL_138);
		TERMINAL_126.addFollower(TERMINAL_139);
		TERMINAL_126.addFollower(TERMINAL_140);
		TERMINAL_126.addFollower(TERMINAL_141);
		TERMINAL_126.addFollower(TERMINAL_142);
		TERMINAL_126.addFollower(TERMINAL_143);
		TERMINAL_126.addFollower(TERMINAL_144);
		TERMINAL_126.addFollower(TERMINAL_145);
		TERMINAL_126.addFollower(TERMINAL_146);
		TERMINAL_126.addFollower(TERMINAL_147);
		TERMINAL_126.addFollower(TERMINAL_148);
		TERMINAL_126.addFollower(TERMINAL_149);
		TERMINAL_126.addFollower(TERMINAL_150);
		TERMINAL_126.addFollower(TERMINAL_151);
		TERMINAL_126.addFollower(TERMINAL_152);
		TERMINAL_126.addFollower(TERMINAL_153);
		TERMINAL_126.addFollower(TERMINAL_154);
		TERMINAL_126.addFollower(TERMINAL_155);
		TERMINAL_126.addFollower(TERMINAL_156);
		TERMINAL_126.addFollower(TERMINAL_157);
		TERMINAL_126.addFollower(TERMINAL_158);
		TERMINAL_126.addFollower(TERMINAL_159);
		TERMINAL_126.addFollower(TERMINAL_160);
		TERMINAL_126.addFollower(TERMINAL_161);
		TERMINAL_126.addFollower(TERMINAL_162);
		TERMINAL_126.addFollower(TERMINAL_163);
		TERMINAL_126.addFollower(TERMINAL_164);
		TERMINAL_126.addFollower(TERMINAL_165);
		TERMINAL_126.addFollower(TERMINAL_166);
		TERMINAL_126.addFollower(TERMINAL_167);
		TERMINAL_216.addFollower(TERMINAL_321);
		TERMINAL_321.addFollower(TERMINAL_127);
		TERMINAL_321.addFollower(TERMINAL_128);
		TERMINAL_321.addFollower(TERMINAL_129);
		TERMINAL_321.addFollower(TERMINAL_130);
		TERMINAL_321.addFollower(TERMINAL_131);
		TERMINAL_321.addFollower(TERMINAL_132);
		TERMINAL_127.addFollower(TERMINAL_322);
		TERMINAL_322.addFollower(TERMINAL_323);
		TERMINAL_323.addFollower(TERMINAL_127);
		TERMINAL_323.addFollower(TERMINAL_128);
		TERMINAL_323.addFollower(TERMINAL_129);
		TERMINAL_323.addFollower(TERMINAL_130);
		TERMINAL_323.addFollower(TERMINAL_131);
		TERMINAL_323.addFollower(TERMINAL_132);
		TERMINAL_128.addFollower(TERMINAL_324);
		TERMINAL_324.addFollower(TERMINAL_183);
		TERMINAL_129.addFollower(TERMINAL_325);
		TERMINAL_325.addFollower(TERMINAL_80);
		TERMINAL_325.addFollower(TERMINAL_6);
		TERMINAL_325.addFollower(TERMINAL_7);
		TERMINAL_325.addFollower(TERMINAL_8);
		TERMINAL_325.addFollower(TERMINAL_11);
		TERMINAL_325.addFollower(TERMINAL_12);
		TERMINAL_325.addFollower(TERMINAL_213);
		TERMINAL_325.addFollower(TERMINAL_214);
		TERMINAL_325.addFollower(TERMINAL_215);
		TERMINAL_325.addFollower(TERMINAL_216);
		TERMINAL_325.addFollower(TERMINAL_217);
		TERMINAL_325.addFollower(TERMINAL_218);
		TERMINAL_130.addFollower(TERMINAL_326);
		TERMINAL_326.addFollower(TERMINAL_327);
		TERMINAL_327.addFollower(TERMINAL_127);
		TERMINAL_327.addFollower(TERMINAL_128);
		TERMINAL_327.addFollower(TERMINAL_129);
		TERMINAL_327.addFollower(TERMINAL_130);
		TERMINAL_327.addFollower(TERMINAL_131);
		TERMINAL_327.addFollower(TERMINAL_132);
		TERMINAL_131.addFollower(TERMINAL_328);
		TERMINAL_328.addFollower(TERMINAL_329);
		TERMINAL_329.addFollower(TERMINAL_127);
		TERMINAL_329.addFollower(TERMINAL_128);
		TERMINAL_329.addFollower(TERMINAL_129);
		TERMINAL_329.addFollower(TERMINAL_130);
		TERMINAL_329.addFollower(TERMINAL_131);
		TERMINAL_329.addFollower(TERMINAL_132);
		TERMINAL_132.addFollower(TERMINAL_81);
		TERMINAL_132.addFollower(TERMINAL_82);
		TERMINAL_132.addFollower(TERMINAL_83);
		TERMINAL_132.addFollower(TERMINAL_84);
		TERMINAL_132.addFollower(TERMINAL_85);
		TERMINAL_132.addFollower(TERMINAL_86);
		TERMINAL_132.addFollower(TERMINAL_87);
		TERMINAL_132.addFollower(TERMINAL_88);
		TERMINAL_132.addFollower(TERMINAL_89);
		TERMINAL_132.addFollower(TERMINAL_90);
		TERMINAL_132.addFollower(TERMINAL_91);
		TERMINAL_132.addFollower(TERMINAL_92);
		TERMINAL_132.addFollower(TERMINAL_93);
		TERMINAL_132.addFollower(TERMINAL_94);
		TERMINAL_132.addFollower(TERMINAL_95);
		TERMINAL_132.addFollower(TERMINAL_96);
		TERMINAL_132.addFollower(TERMINAL_97);
		TERMINAL_132.addFollower(TERMINAL_98);
		TERMINAL_132.addFollower(TERMINAL_99);
		TERMINAL_132.addFollower(TERMINAL_100);
		TERMINAL_132.addFollower(TERMINAL_101);
		TERMINAL_132.addFollower(TERMINAL_102);
		TERMINAL_132.addFollower(TERMINAL_103);
		TERMINAL_132.addFollower(TERMINAL_104);
		TERMINAL_132.addFollower(TERMINAL_105);
		TERMINAL_132.addFollower(TERMINAL_106);
		TERMINAL_132.addFollower(TERMINAL_107);
		TERMINAL_132.addFollower(TERMINAL_108);
		TERMINAL_132.addFollower(TERMINAL_109);
		TERMINAL_132.addFollower(TERMINAL_110);
		TERMINAL_132.addFollower(TERMINAL_111);
		TERMINAL_132.addFollower(TERMINAL_112);
		TERMINAL_132.addFollower(TERMINAL_113);
		TERMINAL_132.addFollower(TERMINAL_114);
		TERMINAL_132.addFollower(TERMINAL_115);
		TERMINAL_132.addFollower(TERMINAL_116);
		TERMINAL_132.addFollower(TERMINAL_117);
		TERMINAL_132.addFollower(TERMINAL_118);
		TERMINAL_132.addFollower(TERMINAL_119);
		TERMINAL_132.addFollower(TERMINAL_120);
		TERMINAL_132.addFollower(TERMINAL_121);
		TERMINAL_132.addFollower(TERMINAL_122);
		TERMINAL_132.addFollower(TERMINAL_123);
		TERMINAL_132.addFollower(TERMINAL_124);
		TERMINAL_132.addFollower(TERMINAL_125);
		TERMINAL_132.addFollower(TERMINAL_126);
		TERMINAL_132.addFollower(TERMINAL_127);
		TERMINAL_132.addFollower(TERMINAL_128);
		TERMINAL_132.addFollower(TERMINAL_129);
		TERMINAL_132.addFollower(TERMINAL_130);
		TERMINAL_132.addFollower(TERMINAL_131);
		TERMINAL_132.addFollower(TERMINAL_132);
		TERMINAL_132.addFollower(TERMINAL_133);
		TERMINAL_132.addFollower(TERMINAL_134);
		TERMINAL_132.addFollower(TERMINAL_135);
		TERMINAL_132.addFollower(TERMINAL_136);
		TERMINAL_132.addFollower(TERMINAL_137);
		TERMINAL_132.addFollower(TERMINAL_138);
		TERMINAL_132.addFollower(TERMINAL_139);
		TERMINAL_132.addFollower(TERMINAL_140);
		TERMINAL_132.addFollower(TERMINAL_141);
		TERMINAL_132.addFollower(TERMINAL_142);
		TERMINAL_132.addFollower(TERMINAL_143);
		TERMINAL_132.addFollower(TERMINAL_144);
		TERMINAL_132.addFollower(TERMINAL_145);
		TERMINAL_132.addFollower(TERMINAL_146);
		TERMINAL_132.addFollower(TERMINAL_147);
		TERMINAL_132.addFollower(TERMINAL_148);
		TERMINAL_132.addFollower(TERMINAL_149);
		TERMINAL_132.addFollower(TERMINAL_150);
		TERMINAL_132.addFollower(TERMINAL_151);
		TERMINAL_132.addFollower(TERMINAL_152);
		TERMINAL_132.addFollower(TERMINAL_153);
		TERMINAL_132.addFollower(TERMINAL_154);
		TERMINAL_132.addFollower(TERMINAL_155);
		TERMINAL_132.addFollower(TERMINAL_156);
		TERMINAL_132.addFollower(TERMINAL_157);
		TERMINAL_132.addFollower(TERMINAL_158);
		TERMINAL_132.addFollower(TERMINAL_159);
		TERMINAL_132.addFollower(TERMINAL_160);
		TERMINAL_132.addFollower(TERMINAL_161);
		TERMINAL_132.addFollower(TERMINAL_162);
		TERMINAL_132.addFollower(TERMINAL_163);
		TERMINAL_132.addFollower(TERMINAL_164);
		TERMINAL_132.addFollower(TERMINAL_165);
		TERMINAL_132.addFollower(TERMINAL_166);
		TERMINAL_132.addFollower(TERMINAL_167);
		TERMINAL_217.addFollower(TERMINAL_330);
		TERMINAL_330.addFollower(TERMINAL_133);
		TERMINAL_330.addFollower(TERMINAL_134);
		TERMINAL_330.addFollower(TERMINAL_135);
		TERMINAL_330.addFollower(TERMINAL_136);
		TERMINAL_330.addFollower(TERMINAL_137);
		TERMINAL_330.addFollower(TERMINAL_138);
		TERMINAL_330.addFollower(TERMINAL_139);
		TERMINAL_133.addFollower(TERMINAL_331);
		TERMINAL_331.addFollower(TERMINAL_332);
		TERMINAL_332.addFollower(TERMINAL_133);
		TERMINAL_332.addFollower(TERMINAL_134);
		TERMINAL_332.addFollower(TERMINAL_135);
		TERMINAL_332.addFollower(TERMINAL_136);
		TERMINAL_332.addFollower(TERMINAL_137);
		TERMINAL_332.addFollower(TERMINAL_138);
		TERMINAL_332.addFollower(TERMINAL_139);
		TERMINAL_134.addFollower(TERMINAL_333);
		TERMINAL_333.addFollower(TERMINAL_183);
		TERMINAL_135.addFollower(TERMINAL_334);
		TERMINAL_334.addFollower(TERMINAL_80);
		TERMINAL_334.addFollower(TERMINAL_6);
		TERMINAL_334.addFollower(TERMINAL_7);
		TERMINAL_334.addFollower(TERMINAL_8);
		TERMINAL_334.addFollower(TERMINAL_11);
		TERMINAL_334.addFollower(TERMINAL_12);
		TERMINAL_334.addFollower(TERMINAL_213);
		TERMINAL_334.addFollower(TERMINAL_214);
		TERMINAL_334.addFollower(TERMINAL_215);
		TERMINAL_334.addFollower(TERMINAL_216);
		TERMINAL_334.addFollower(TERMINAL_217);
		TERMINAL_334.addFollower(TERMINAL_218);
		TERMINAL_136.addFollower(TERMINAL_335);
		TERMINAL_335.addFollower(TERMINAL_336);
		TERMINAL_336.addFollower(TERMINAL_133);
		TERMINAL_336.addFollower(TERMINAL_134);
		TERMINAL_336.addFollower(TERMINAL_135);
		TERMINAL_336.addFollower(TERMINAL_136);
		TERMINAL_336.addFollower(TERMINAL_137);
		TERMINAL_336.addFollower(TERMINAL_138);
		TERMINAL_336.addFollower(TERMINAL_139);
		TERMINAL_137.addFollower(TERMINAL_337);
		TERMINAL_337.addFollower(TERMINAL_338);
		TERMINAL_338.addFollower(TERMINAL_133);
		TERMINAL_338.addFollower(TERMINAL_134);
		TERMINAL_338.addFollower(TERMINAL_135);
		TERMINAL_338.addFollower(TERMINAL_136);
		TERMINAL_338.addFollower(TERMINAL_137);
		TERMINAL_338.addFollower(TERMINAL_138);
		TERMINAL_338.addFollower(TERMINAL_139);
		TERMINAL_138.addFollower(TERMINAL_339);
		TERMINAL_339.addFollower(TERMINAL_340);
		TERMINAL_340.addFollower(TERMINAL_133);
		TERMINAL_340.addFollower(TERMINAL_134);
		TERMINAL_340.addFollower(TERMINAL_135);
		TERMINAL_340.addFollower(TERMINAL_136);
		TERMINAL_340.addFollower(TERMINAL_137);
		TERMINAL_340.addFollower(TERMINAL_138);
		TERMINAL_340.addFollower(TERMINAL_139);
		TERMINAL_139.addFollower(TERMINAL_81);
		TERMINAL_139.addFollower(TERMINAL_82);
		TERMINAL_139.addFollower(TERMINAL_83);
		TERMINAL_139.addFollower(TERMINAL_84);
		TERMINAL_139.addFollower(TERMINAL_85);
		TERMINAL_139.addFollower(TERMINAL_86);
		TERMINAL_139.addFollower(TERMINAL_87);
		TERMINAL_139.addFollower(TERMINAL_88);
		TERMINAL_139.addFollower(TERMINAL_89);
		TERMINAL_139.addFollower(TERMINAL_90);
		TERMINAL_139.addFollower(TERMINAL_91);
		TERMINAL_139.addFollower(TERMINAL_92);
		TERMINAL_139.addFollower(TERMINAL_93);
		TERMINAL_139.addFollower(TERMINAL_94);
		TERMINAL_139.addFollower(TERMINAL_95);
		TERMINAL_139.addFollower(TERMINAL_96);
		TERMINAL_139.addFollower(TERMINAL_97);
		TERMINAL_139.addFollower(TERMINAL_98);
		TERMINAL_139.addFollower(TERMINAL_99);
		TERMINAL_139.addFollower(TERMINAL_100);
		TERMINAL_139.addFollower(TERMINAL_101);
		TERMINAL_139.addFollower(TERMINAL_102);
		TERMINAL_139.addFollower(TERMINAL_103);
		TERMINAL_139.addFollower(TERMINAL_104);
		TERMINAL_139.addFollower(TERMINAL_105);
		TERMINAL_139.addFollower(TERMINAL_106);
		TERMINAL_139.addFollower(TERMINAL_107);
		TERMINAL_139.addFollower(TERMINAL_108);
		TERMINAL_139.addFollower(TERMINAL_109);
		TERMINAL_139.addFollower(TERMINAL_110);
		TERMINAL_139.addFollower(TERMINAL_111);
		TERMINAL_139.addFollower(TERMINAL_112);
		TERMINAL_139.addFollower(TERMINAL_113);
		TERMINAL_139.addFollower(TERMINAL_114);
		TERMINAL_139.addFollower(TERMINAL_115);
		TERMINAL_139.addFollower(TERMINAL_116);
		TERMINAL_139.addFollower(TERMINAL_117);
		TERMINAL_139.addFollower(TERMINAL_118);
		TERMINAL_139.addFollower(TERMINAL_119);
		TERMINAL_139.addFollower(TERMINAL_120);
		TERMINAL_139.addFollower(TERMINAL_121);
		TERMINAL_139.addFollower(TERMINAL_122);
		TERMINAL_139.addFollower(TERMINAL_123);
		TERMINAL_139.addFollower(TERMINAL_124);
		TERMINAL_139.addFollower(TERMINAL_125);
		TERMINAL_139.addFollower(TERMINAL_126);
		TERMINAL_139.addFollower(TERMINAL_127);
		TERMINAL_139.addFollower(TERMINAL_128);
		TERMINAL_139.addFollower(TERMINAL_129);
		TERMINAL_139.addFollower(TERMINAL_130);
		TERMINAL_139.addFollower(TERMINAL_131);
		TERMINAL_139.addFollower(TERMINAL_132);
		TERMINAL_139.addFollower(TERMINAL_133);
		TERMINAL_139.addFollower(TERMINAL_134);
		TERMINAL_139.addFollower(TERMINAL_135);
		TERMINAL_139.addFollower(TERMINAL_136);
		TERMINAL_139.addFollower(TERMINAL_137);
		TERMINAL_139.addFollower(TERMINAL_138);
		TERMINAL_139.addFollower(TERMINAL_139);
		TERMINAL_139.addFollower(TERMINAL_140);
		TERMINAL_139.addFollower(TERMINAL_141);
		TERMINAL_139.addFollower(TERMINAL_142);
		TERMINAL_139.addFollower(TERMINAL_143);
		TERMINAL_139.addFollower(TERMINAL_144);
		TERMINAL_139.addFollower(TERMINAL_145);
		TERMINAL_139.addFollower(TERMINAL_146);
		TERMINAL_139.addFollower(TERMINAL_147);
		TERMINAL_139.addFollower(TERMINAL_148);
		TERMINAL_139.addFollower(TERMINAL_149);
		TERMINAL_139.addFollower(TERMINAL_150);
		TERMINAL_139.addFollower(TERMINAL_151);
		TERMINAL_139.addFollower(TERMINAL_152);
		TERMINAL_139.addFollower(TERMINAL_153);
		TERMINAL_139.addFollower(TERMINAL_154);
		TERMINAL_139.addFollower(TERMINAL_155);
		TERMINAL_139.addFollower(TERMINAL_156);
		TERMINAL_139.addFollower(TERMINAL_157);
		TERMINAL_139.addFollower(TERMINAL_158);
		TERMINAL_139.addFollower(TERMINAL_159);
		TERMINAL_139.addFollower(TERMINAL_160);
		TERMINAL_139.addFollower(TERMINAL_161);
		TERMINAL_139.addFollower(TERMINAL_162);
		TERMINAL_139.addFollower(TERMINAL_163);
		TERMINAL_139.addFollower(TERMINAL_164);
		TERMINAL_139.addFollower(TERMINAL_165);
		TERMINAL_139.addFollower(TERMINAL_166);
		TERMINAL_139.addFollower(TERMINAL_167);
		TERMINAL_218.addFollower(TERMINAL_341);
		TERMINAL_341.addFollower(TERMINAL_273);
		TERMINAL_341.addFollower(TERMINAL_274);
		TERMINAL_341.addFollower(TERMINAL_275);
		TERMINAL_341.addFollower(TERMINAL_276);
		TERMINAL_273.addFollower(TERMINAL_342);
		TERMINAL_342.addFollower(TERMINAL_343);
		TERMINAL_343.addFollower(TERMINAL_273);
		TERMINAL_343.addFollower(TERMINAL_274);
		TERMINAL_343.addFollower(TERMINAL_275);
		TERMINAL_343.addFollower(TERMINAL_276);
		TERMINAL_274.addFollower(TERMINAL_344);
		TERMINAL_344.addFollower(TERMINAL_183);
		TERMINAL_275.addFollower(TERMINAL_345);
		TERMINAL_345.addFollower(TERMINAL_346);
		TERMINAL_346.addFollower(TERMINAL_273);
		TERMINAL_346.addFollower(TERMINAL_274);
		TERMINAL_346.addFollower(TERMINAL_275);
		TERMINAL_346.addFollower(TERMINAL_276);
		TERMINAL_276.addFollower(TERMINAL_81);
		TERMINAL_276.addFollower(TERMINAL_82);
		TERMINAL_276.addFollower(TERMINAL_83);
		TERMINAL_276.addFollower(TERMINAL_84);
		TERMINAL_276.addFollower(TERMINAL_85);
		TERMINAL_276.addFollower(TERMINAL_86);
		TERMINAL_276.addFollower(TERMINAL_87);
		TERMINAL_276.addFollower(TERMINAL_88);
		TERMINAL_276.addFollower(TERMINAL_89);
		TERMINAL_276.addFollower(TERMINAL_90);
		TERMINAL_276.addFollower(TERMINAL_91);
		TERMINAL_276.addFollower(TERMINAL_92);
		TERMINAL_276.addFollower(TERMINAL_93);
		TERMINAL_276.addFollower(TERMINAL_94);
		TERMINAL_276.addFollower(TERMINAL_95);
		TERMINAL_276.addFollower(TERMINAL_96);
		TERMINAL_276.addFollower(TERMINAL_97);
		TERMINAL_276.addFollower(TERMINAL_98);
		TERMINAL_276.addFollower(TERMINAL_99);
		TERMINAL_276.addFollower(TERMINAL_100);
		TERMINAL_276.addFollower(TERMINAL_101);
		TERMINAL_276.addFollower(TERMINAL_102);
		TERMINAL_276.addFollower(TERMINAL_103);
		TERMINAL_276.addFollower(TERMINAL_104);
		TERMINAL_276.addFollower(TERMINAL_105);
		TERMINAL_276.addFollower(TERMINAL_106);
		TERMINAL_276.addFollower(TERMINAL_107);
		TERMINAL_276.addFollower(TERMINAL_108);
		TERMINAL_276.addFollower(TERMINAL_109);
		TERMINAL_276.addFollower(TERMINAL_110);
		TERMINAL_276.addFollower(TERMINAL_111);
		TERMINAL_276.addFollower(TERMINAL_112);
		TERMINAL_276.addFollower(TERMINAL_113);
		TERMINAL_276.addFollower(TERMINAL_114);
		TERMINAL_276.addFollower(TERMINAL_115);
		TERMINAL_276.addFollower(TERMINAL_116);
		TERMINAL_276.addFollower(TERMINAL_117);
		TERMINAL_276.addFollower(TERMINAL_118);
		TERMINAL_276.addFollower(TERMINAL_119);
		TERMINAL_276.addFollower(TERMINAL_120);
		TERMINAL_276.addFollower(TERMINAL_121);
		TERMINAL_276.addFollower(TERMINAL_122);
		TERMINAL_276.addFollower(TERMINAL_123);
		TERMINAL_276.addFollower(TERMINAL_124);
		TERMINAL_276.addFollower(TERMINAL_125);
		TERMINAL_276.addFollower(TERMINAL_126);
		TERMINAL_276.addFollower(TERMINAL_127);
		TERMINAL_276.addFollower(TERMINAL_128);
		TERMINAL_276.addFollower(TERMINAL_129);
		TERMINAL_276.addFollower(TERMINAL_130);
		TERMINAL_276.addFollower(TERMINAL_131);
		TERMINAL_276.addFollower(TERMINAL_132);
		TERMINAL_276.addFollower(TERMINAL_133);
		TERMINAL_276.addFollower(TERMINAL_134);
		TERMINAL_276.addFollower(TERMINAL_135);
		TERMINAL_276.addFollower(TERMINAL_136);
		TERMINAL_276.addFollower(TERMINAL_137);
		TERMINAL_276.addFollower(TERMINAL_138);
		TERMINAL_276.addFollower(TERMINAL_139);
		TERMINAL_276.addFollower(TERMINAL_140);
		TERMINAL_276.addFollower(TERMINAL_141);
		TERMINAL_276.addFollower(TERMINAL_142);
		TERMINAL_276.addFollower(TERMINAL_143);
		TERMINAL_276.addFollower(TERMINAL_144);
		TERMINAL_276.addFollower(TERMINAL_145);
		TERMINAL_276.addFollower(TERMINAL_146);
		TERMINAL_276.addFollower(TERMINAL_147);
		TERMINAL_276.addFollower(TERMINAL_148);
		TERMINAL_276.addFollower(TERMINAL_149);
		TERMINAL_276.addFollower(TERMINAL_150);
		TERMINAL_276.addFollower(TERMINAL_151);
		TERMINAL_276.addFollower(TERMINAL_152);
		TERMINAL_276.addFollower(TERMINAL_153);
		TERMINAL_276.addFollower(TERMINAL_154);
		TERMINAL_276.addFollower(TERMINAL_155);
		TERMINAL_276.addFollower(TERMINAL_156);
		TERMINAL_276.addFollower(TERMINAL_157);
		TERMINAL_276.addFollower(TERMINAL_158);
		TERMINAL_276.addFollower(TERMINAL_159);
		TERMINAL_276.addFollower(TERMINAL_160);
		TERMINAL_276.addFollower(TERMINAL_161);
		TERMINAL_276.addFollower(TERMINAL_162);
		TERMINAL_276.addFollower(TERMINAL_163);
		TERMINAL_276.addFollower(TERMINAL_164);
		TERMINAL_276.addFollower(TERMINAL_165);
		TERMINAL_276.addFollower(TERMINAL_166);
		TERMINAL_276.addFollower(TERMINAL_167);
		TERMINAL_46.addFollower(TERMINAL_53);
		TERMINAL_46.addFollower(TERMINAL_52);
		TERMINAL_46.addFollower(TERMINAL_51);
		TERMINAL_46.addFollower(TERMINAL_56);
		TERMINAL_46.addFollower(TERMINAL_48);
		TERMINAL_46.addFollower(TERMINAL_54);
		TERMINAL_46.addFollower(TERMINAL_57);
		TERMINAL_46.addFollower(TERMINAL_58);
		TERMINAL_46.addFollower(TERMINAL_59);
		TERMINAL_46.addFollower(TERMINAL_50);
		TERMINAL_46.addFollower(TERMINAL_49);
		TERMINAL_46.addFollower(TERMINAL_60);
		TERMINAL_46.addFollower(TERMINAL_55);
		TERMINAL_46.addFollower(TERMINAL_62);
		TERMINAL_46.addFollower(TERMINAL_46);
		TERMINAL_46.addFollower(TERMINAL_347);
		TERMINAL_46.addFollower(TERMINAL_348);
		TERMINAL_348.addFollower(TERMINAL_46);
		TERMINAL_348.addFollower(TERMINAL_47);
		TERMINAL_348.addFollower(TERMINAL_48);
		TERMINAL_348.addFollower(TERMINAL_49);
		TERMINAL_348.addFollower(TERMINAL_50);
		TERMINAL_348.addFollower(TERMINAL_51);
		TERMINAL_348.addFollower(TERMINAL_52);
		TERMINAL_348.addFollower(TERMINAL_53);
		TERMINAL_348.addFollower(TERMINAL_23);
		TERMINAL_348.addFollower(TERMINAL_54);
		TERMINAL_348.addFollower(TERMINAL_55);
		TERMINAL_348.addFollower(TERMINAL_56);
		TERMINAL_348.addFollower(TERMINAL_57);
		TERMINAL_348.addFollower(TERMINAL_58);
		TERMINAL_348.addFollower(TERMINAL_59);
		TERMINAL_348.addFollower(TERMINAL_60);
		TERMINAL_348.addFollower(TERMINAL_61);
		TERMINAL_348.addFollower(TERMINAL_62);
		TERMINAL_348.addFollower(TERMINAL_63);
		TERMINAL_348.addFollower(TERMINAL_64);
		TERMINAL_348.addFollower(TERMINAL_17);
		TERMINAL_348.addFollower(TERMINAL_18);
		TERMINAL_348.addFollower(TERMINAL_40);
		TERMINAL_348.addFollower(TERMINAL_347);
		TERMINAL_348.addFollower(TERMINAL_348);
		TERMINAL_348.addFollower(TERMINAL_349);
		TERMINAL_348.addFollower(TERMINAL_350);
		TERMINAL_348.addFollower(TERMINAL_351);
		TERMINAL_348.addFollower(TERMINAL_352);
		TERMINAL_348.addFollower(TERMINAL_353);
		TERMINAL_348.addFollower(TERMINAL_354);
		TERMINAL_348.addFollower(TERMINAL_355);
		TERMINAL_348.addFollower(TERMINAL_140);
		TERMINAL_348.addFollower(TERMINAL_141);
		TERMINAL_348.addFollower(TERMINAL_142);
		TERMINAL_348.addFollower(TERMINAL_143);
		TERMINAL_348.addFollower(TERMINAL_144);
		TERMINAL_348.addFollower(TERMINAL_145);
		TERMINAL_348.addFollower(TERMINAL_146);
		TERMINAL_348.addFollower(TERMINAL_147);
		TERMINAL_348.addFollower(TERMINAL_153);
		TERMINAL_348.addFollower(TERMINAL_154);
		TERMINAL_348.addFollower(TERMINAL_155);
		TERMINAL_348.addFollower(TERMINAL_156);
		TERMINAL_348.addFollower(TERMINAL_157);
		TERMINAL_348.addFollower(TERMINAL_158);
		TERMINAL_348.addFollower(TERMINAL_159);
		TERMINAL_348.addFollower(TERMINAL_160);
		TERMINAL_348.addFollower(TERMINAL_161);
		TERMINAL_348.addFollower(TERMINAL_162);
		TERMINAL_348.addFollower(TERMINAL_163);
		TERMINAL_348.addFollower(TERMINAL_164);
		TERMINAL_348.addFollower(TERMINAL_165);
		TERMINAL_348.addFollower(TERMINAL_166);
		TERMINAL_348.addFollower(TERMINAL_167);
		TERMINAL_347.addFollower(TERMINAL_356);
		TERMINAL_347.addFollower(TERMINAL_46);
		TERMINAL_347.addFollower(TERMINAL_47);
		TERMINAL_347.addFollower(TERMINAL_48);
		TERMINAL_347.addFollower(TERMINAL_49);
		TERMINAL_347.addFollower(TERMINAL_50);
		TERMINAL_347.addFollower(TERMINAL_51);
		TERMINAL_347.addFollower(TERMINAL_52);
		TERMINAL_347.addFollower(TERMINAL_53);
		TERMINAL_347.addFollower(TERMINAL_23);
		TERMINAL_347.addFollower(TERMINAL_54);
		TERMINAL_347.addFollower(TERMINAL_55);
		TERMINAL_347.addFollower(TERMINAL_56);
		TERMINAL_347.addFollower(TERMINAL_57);
		TERMINAL_347.addFollower(TERMINAL_58);
		TERMINAL_347.addFollower(TERMINAL_59);
		TERMINAL_347.addFollower(TERMINAL_60);
		TERMINAL_347.addFollower(TERMINAL_61);
		TERMINAL_347.addFollower(TERMINAL_62);
		TERMINAL_347.addFollower(TERMINAL_63);
		TERMINAL_347.addFollower(TERMINAL_64);
		TERMINAL_347.addFollower(TERMINAL_347);
		TERMINAL_347.addFollower(TERMINAL_348);
		TERMINAL_356.addFollower(TERMINAL_357);
		TERMINAL_357.addFollower(TERMINAL_358);
		TERMINAL_358.addFollower(TERMINAL_23);
	}
	public static void wire3() {
		TERMINAL_359.addFollower(TERMINAL_46);
		TERMINAL_359.addFollower(TERMINAL_47);
		TERMINAL_359.addFollower(TERMINAL_48);
		TERMINAL_359.addFollower(TERMINAL_49);
		TERMINAL_359.addFollower(TERMINAL_50);
		TERMINAL_359.addFollower(TERMINAL_51);
		TERMINAL_359.addFollower(TERMINAL_52);
		TERMINAL_359.addFollower(TERMINAL_53);
		TERMINAL_359.addFollower(TERMINAL_23);
		TERMINAL_359.addFollower(TERMINAL_54);
		TERMINAL_359.addFollower(TERMINAL_55);
		TERMINAL_359.addFollower(TERMINAL_56);
		TERMINAL_359.addFollower(TERMINAL_57);
		TERMINAL_359.addFollower(TERMINAL_58);
		TERMINAL_359.addFollower(TERMINAL_59);
		TERMINAL_359.addFollower(TERMINAL_60);
		TERMINAL_359.addFollower(TERMINAL_61);
		TERMINAL_359.addFollower(TERMINAL_62);
		TERMINAL_359.addFollower(TERMINAL_63);
		TERMINAL_359.addFollower(TERMINAL_64);
		TERMINAL_359.addFollower(TERMINAL_347);
		TERMINAL_359.addFollower(TERMINAL_348);
		TERMINAL_23.addFollower(TERMINAL_359);
		TERMINAL_23.addFollower(TERMINAL_360);
		TERMINAL_23.addFollower(TERMINAL_46);
		TERMINAL_23.addFollower(TERMINAL_47);
		TERMINAL_23.addFollower(TERMINAL_48);
		TERMINAL_23.addFollower(TERMINAL_49);
		TERMINAL_23.addFollower(TERMINAL_50);
		TERMINAL_23.addFollower(TERMINAL_51);
		TERMINAL_23.addFollower(TERMINAL_52);
		TERMINAL_23.addFollower(TERMINAL_53);
		TERMINAL_23.addFollower(TERMINAL_23);
		TERMINAL_23.addFollower(TERMINAL_54);
		TERMINAL_23.addFollower(TERMINAL_55);
		TERMINAL_23.addFollower(TERMINAL_56);
		TERMINAL_23.addFollower(TERMINAL_57);
		TERMINAL_23.addFollower(TERMINAL_58);
		TERMINAL_23.addFollower(TERMINAL_59);
		TERMINAL_23.addFollower(TERMINAL_60);
		TERMINAL_23.addFollower(TERMINAL_61);
		TERMINAL_23.addFollower(TERMINAL_62);
		TERMINAL_23.addFollower(TERMINAL_63);
		TERMINAL_23.addFollower(TERMINAL_64);
		TERMINAL_23.addFollower(TERMINAL_347);
		TERMINAL_23.addFollower(TERMINAL_348);
		TERMINAL_23.addFollower(TERMINAL_349);
		TERMINAL_23.addFollower(TERMINAL_352);
		TERMINAL_23.addFollower(TERMINAL_353);
		TERMINAL_23.addFollower(TERMINAL_354);
		TERMINAL_23.addFollower(TERMINAL_355);
		TERMINAL_23.addFollower(TERMINAL_140);
		TERMINAL_23.addFollower(TERMINAL_141);
		TERMINAL_23.addFollower(TERMINAL_142);
		TERMINAL_23.addFollower(TERMINAL_143);
		TERMINAL_23.addFollower(TERMINAL_144);
		TERMINAL_23.addFollower(TERMINAL_145);
		TERMINAL_23.addFollower(TERMINAL_146);
		TERMINAL_23.addFollower(TERMINAL_147);
		TERMINAL_23.addFollower(TERMINAL_153);
		TERMINAL_23.addFollower(TERMINAL_154);
		TERMINAL_23.addFollower(TERMINAL_155);
		TERMINAL_23.addFollower(TERMINAL_156);
		TERMINAL_23.addFollower(TERMINAL_157);
		TERMINAL_23.addFollower(TERMINAL_158);
		TERMINAL_23.addFollower(TERMINAL_159);
		TERMINAL_23.addFollower(TERMINAL_160);
		TERMINAL_23.addFollower(TERMINAL_161);
		TERMINAL_23.addFollower(TERMINAL_162);
		TERMINAL_23.addFollower(TERMINAL_163);
		TERMINAL_23.addFollower(TERMINAL_164);
		TERMINAL_23.addFollower(TERMINAL_165);
		TERMINAL_23.addFollower(TERMINAL_166);
		TERMINAL_23.addFollower(TERMINAL_167);
		TERMINAL_23.addFollower(TERMINAL_350);
		TERMINAL_23.addFollower(TERMINAL_351);
		TERMINAL_23.addFollower(TERMINAL_277);
		TERMINAL_23.addFollower(TERMINAL_278);
		TERMINAL_23.addFollower(TERMINAL_279);
		TERMINAL_23.addFollower(TERMINAL_280);
		TERMINAL_23.addFollower(TERMINAL_281);
		TERMINAL_47.addFollower(TERMINAL_46);
		TERMINAL_47.addFollower(TERMINAL_47);
		TERMINAL_47.addFollower(TERMINAL_48);
		TERMINAL_47.addFollower(TERMINAL_49);
		TERMINAL_47.addFollower(TERMINAL_50);
		TERMINAL_47.addFollower(TERMINAL_51);
		TERMINAL_47.addFollower(TERMINAL_52);
		TERMINAL_47.addFollower(TERMINAL_53);
		TERMINAL_47.addFollower(TERMINAL_23);
		TERMINAL_47.addFollower(TERMINAL_54);
		TERMINAL_47.addFollower(TERMINAL_55);
		TERMINAL_47.addFollower(TERMINAL_56);
		TERMINAL_47.addFollower(TERMINAL_57);
		TERMINAL_47.addFollower(TERMINAL_58);
		TERMINAL_47.addFollower(TERMINAL_59);
		TERMINAL_47.addFollower(TERMINAL_60);
		TERMINAL_47.addFollower(TERMINAL_61);
		TERMINAL_47.addFollower(TERMINAL_62);
		TERMINAL_47.addFollower(TERMINAL_63);
		TERMINAL_47.addFollower(TERMINAL_64);
		TERMINAL_48.addFollower(TERMINAL_46);
		TERMINAL_48.addFollower(TERMINAL_47);
		TERMINAL_48.addFollower(TERMINAL_48);
		TERMINAL_48.addFollower(TERMINAL_49);
		TERMINAL_48.addFollower(TERMINAL_50);
		TERMINAL_48.addFollower(TERMINAL_51);
		TERMINAL_48.addFollower(TERMINAL_52);
		TERMINAL_48.addFollower(TERMINAL_53);
		TERMINAL_48.addFollower(TERMINAL_23);
		TERMINAL_48.addFollower(TERMINAL_54);
		TERMINAL_48.addFollower(TERMINAL_55);
		TERMINAL_48.addFollower(TERMINAL_56);
		TERMINAL_48.addFollower(TERMINAL_57);
		TERMINAL_48.addFollower(TERMINAL_58);
		TERMINAL_48.addFollower(TERMINAL_59);
		TERMINAL_48.addFollower(TERMINAL_60);
		TERMINAL_48.addFollower(TERMINAL_61);
		TERMINAL_48.addFollower(TERMINAL_62);
		TERMINAL_48.addFollower(TERMINAL_63);
		TERMINAL_48.addFollower(TERMINAL_64);
		TERMINAL_48.addFollower(TERMINAL_347);
		TERMINAL_48.addFollower(TERMINAL_348);
		TERMINAL_48.addFollower(TERMINAL_349);
		TERMINAL_48.addFollower(TERMINAL_350);
		TERMINAL_48.addFollower(TERMINAL_351);
		TERMINAL_48.addFollower(TERMINAL_352);
		TERMINAL_48.addFollower(TERMINAL_353);
		TERMINAL_48.addFollower(TERMINAL_354);
		TERMINAL_48.addFollower(TERMINAL_355);
		TERMINAL_48.addFollower(TERMINAL_140);
		TERMINAL_48.addFollower(TERMINAL_141);
		TERMINAL_48.addFollower(TERMINAL_142);
		TERMINAL_48.addFollower(TERMINAL_143);
		TERMINAL_48.addFollower(TERMINAL_144);
		TERMINAL_48.addFollower(TERMINAL_145);
		TERMINAL_48.addFollower(TERMINAL_146);
		TERMINAL_48.addFollower(TERMINAL_147);
		TERMINAL_48.addFollower(TERMINAL_153);
		TERMINAL_48.addFollower(TERMINAL_154);
		TERMINAL_48.addFollower(TERMINAL_155);
		TERMINAL_48.addFollower(TERMINAL_156);
		TERMINAL_48.addFollower(TERMINAL_157);
		TERMINAL_48.addFollower(TERMINAL_158);
		TERMINAL_48.addFollower(TERMINAL_159);
		TERMINAL_48.addFollower(TERMINAL_160);
		TERMINAL_48.addFollower(TERMINAL_161);
		TERMINAL_48.addFollower(TERMINAL_162);
		TERMINAL_48.addFollower(TERMINAL_163);
		TERMINAL_48.addFollower(TERMINAL_164);
		TERMINAL_48.addFollower(TERMINAL_165);
		TERMINAL_48.addFollower(TERMINAL_166);
		TERMINAL_48.addFollower(TERMINAL_167);
		TERMINAL_49.addFollower(TERMINAL_46);
		TERMINAL_49.addFollower(TERMINAL_47);
		TERMINAL_49.addFollower(TERMINAL_48);
		TERMINAL_49.addFollower(TERMINAL_49);
		TERMINAL_49.addFollower(TERMINAL_50);
		TERMINAL_49.addFollower(TERMINAL_51);
		TERMINAL_49.addFollower(TERMINAL_52);
		TERMINAL_49.addFollower(TERMINAL_53);
		TERMINAL_49.addFollower(TERMINAL_23);
		TERMINAL_49.addFollower(TERMINAL_54);
		TERMINAL_49.addFollower(TERMINAL_55);
		TERMINAL_49.addFollower(TERMINAL_56);
		TERMINAL_49.addFollower(TERMINAL_57);
		TERMINAL_49.addFollower(TERMINAL_58);
		TERMINAL_49.addFollower(TERMINAL_59);
		TERMINAL_49.addFollower(TERMINAL_60);
		TERMINAL_49.addFollower(TERMINAL_61);
		TERMINAL_49.addFollower(TERMINAL_62);
		TERMINAL_49.addFollower(TERMINAL_63);
		TERMINAL_49.addFollower(TERMINAL_64);
		TERMINAL_49.addFollower(TERMINAL_347);
		TERMINAL_49.addFollower(TERMINAL_348);
		TERMINAL_49.addFollower(TERMINAL_349);
		TERMINAL_49.addFollower(TERMINAL_350);
		TERMINAL_49.addFollower(TERMINAL_351);
		TERMINAL_49.addFollower(TERMINAL_352);
		TERMINAL_49.addFollower(TERMINAL_353);
		TERMINAL_49.addFollower(TERMINAL_354);
		TERMINAL_49.addFollower(TERMINAL_355);
		TERMINAL_49.addFollower(TERMINAL_140);
		TERMINAL_49.addFollower(TERMINAL_141);
		TERMINAL_49.addFollower(TERMINAL_142);
		TERMINAL_49.addFollower(TERMINAL_143);
		TERMINAL_49.addFollower(TERMINAL_144);
		TERMINAL_49.addFollower(TERMINAL_145);
		TERMINAL_49.addFollower(TERMINAL_146);
		TERMINAL_49.addFollower(TERMINAL_147);
		TERMINAL_49.addFollower(TERMINAL_153);
		TERMINAL_49.addFollower(TERMINAL_154);
		TERMINAL_49.addFollower(TERMINAL_155);
		TERMINAL_49.addFollower(TERMINAL_156);
		TERMINAL_49.addFollower(TERMINAL_157);
		TERMINAL_49.addFollower(TERMINAL_158);
		TERMINAL_49.addFollower(TERMINAL_159);
		TERMINAL_49.addFollower(TERMINAL_160);
		TERMINAL_49.addFollower(TERMINAL_161);
		TERMINAL_49.addFollower(TERMINAL_162);
		TERMINAL_49.addFollower(TERMINAL_163);
		TERMINAL_49.addFollower(TERMINAL_164);
		TERMINAL_49.addFollower(TERMINAL_165);
		TERMINAL_49.addFollower(TERMINAL_166);
		TERMINAL_49.addFollower(TERMINAL_167);
		TERMINAL_50.addFollower(TERMINAL_46);
		TERMINAL_50.addFollower(TERMINAL_47);
		TERMINAL_50.addFollower(TERMINAL_48);
		TERMINAL_50.addFollower(TERMINAL_49);
		TERMINAL_50.addFollower(TERMINAL_50);
		TERMINAL_50.addFollower(TERMINAL_51);
		TERMINAL_50.addFollower(TERMINAL_52);
		TERMINAL_50.addFollower(TERMINAL_53);
		TERMINAL_50.addFollower(TERMINAL_23);
		TERMINAL_50.addFollower(TERMINAL_54);
		TERMINAL_50.addFollower(TERMINAL_55);
		TERMINAL_50.addFollower(TERMINAL_56);
		TERMINAL_50.addFollower(TERMINAL_57);
		TERMINAL_50.addFollower(TERMINAL_58);
		TERMINAL_50.addFollower(TERMINAL_59);
		TERMINAL_50.addFollower(TERMINAL_60);
		TERMINAL_50.addFollower(TERMINAL_61);
		TERMINAL_50.addFollower(TERMINAL_62);
		TERMINAL_50.addFollower(TERMINAL_63);
		TERMINAL_50.addFollower(TERMINAL_64);
		TERMINAL_50.addFollower(TERMINAL_347);
		TERMINAL_50.addFollower(TERMINAL_348);
		TERMINAL_50.addFollower(TERMINAL_349);
		TERMINAL_50.addFollower(TERMINAL_350);
		TERMINAL_50.addFollower(TERMINAL_351);
		TERMINAL_50.addFollower(TERMINAL_352);
		TERMINAL_50.addFollower(TERMINAL_353);
		TERMINAL_50.addFollower(TERMINAL_354);
		TERMINAL_50.addFollower(TERMINAL_355);
		TERMINAL_50.addFollower(TERMINAL_140);
		TERMINAL_50.addFollower(TERMINAL_141);
		TERMINAL_50.addFollower(TERMINAL_142);
		TERMINAL_50.addFollower(TERMINAL_143);
		TERMINAL_50.addFollower(TERMINAL_144);
		TERMINAL_50.addFollower(TERMINAL_145);
		TERMINAL_50.addFollower(TERMINAL_146);
		TERMINAL_50.addFollower(TERMINAL_147);
		TERMINAL_50.addFollower(TERMINAL_153);
		TERMINAL_50.addFollower(TERMINAL_154);
		TERMINAL_50.addFollower(TERMINAL_155);
		TERMINAL_50.addFollower(TERMINAL_156);
		TERMINAL_50.addFollower(TERMINAL_157);
		TERMINAL_50.addFollower(TERMINAL_158);
		TERMINAL_50.addFollower(TERMINAL_159);
		TERMINAL_50.addFollower(TERMINAL_160);
		TERMINAL_50.addFollower(TERMINAL_161);
		TERMINAL_50.addFollower(TERMINAL_162);
		TERMINAL_50.addFollower(TERMINAL_163);
		TERMINAL_50.addFollower(TERMINAL_164);
		TERMINAL_50.addFollower(TERMINAL_165);
		TERMINAL_50.addFollower(TERMINAL_166);
		TERMINAL_50.addFollower(TERMINAL_167);
		TERMINAL_51.addFollower(TERMINAL_56);
		TERMINAL_51.addFollower(TERMINAL_48);
		TERMINAL_51.addFollower(TERMINAL_54);
		TERMINAL_51.addFollower(TERMINAL_57);
		TERMINAL_51.addFollower(TERMINAL_58);
		TERMINAL_51.addFollower(TERMINAL_59);
		TERMINAL_51.addFollower(TERMINAL_50);
		TERMINAL_51.addFollower(TERMINAL_49);
		TERMINAL_51.addFollower(TERMINAL_60);
		TERMINAL_51.addFollower(TERMINAL_51);
		TERMINAL_361.addFollower(TERMINAL_48);
		TERMINAL_361.addFollower(TERMINAL_46);
		TERMINAL_361.addFollower(TERMINAL_56);
		TERMINAL_361.addFollower(TERMINAL_54);
		TERMINAL_361.addFollower(TERMINAL_57);
		TERMINAL_361.addFollower(TERMINAL_58);
		TERMINAL_361.addFollower(TERMINAL_59);
		TERMINAL_361.addFollower(TERMINAL_50);
		TERMINAL_361.addFollower(TERMINAL_49);
		TERMINAL_361.addFollower(TERMINAL_60);
		TERMINAL_361.addFollower(TERMINAL_55);
		TERMINAL_361.addFollower(TERMINAL_61);
		TERMINAL_361.addFollower(TERMINAL_53);
		TERMINAL_350.addFollower(TERMINAL_48);
		TERMINAL_351.addFollower(TERMINAL_46);
		TERMINAL_351.addFollower(TERMINAL_47);
		TERMINAL_351.addFollower(TERMINAL_48);
		TERMINAL_351.addFollower(TERMINAL_49);
		TERMINAL_351.addFollower(TERMINAL_50);
		TERMINAL_351.addFollower(TERMINAL_51);
		TERMINAL_351.addFollower(TERMINAL_52);
		TERMINAL_351.addFollower(TERMINAL_53);
		TERMINAL_351.addFollower(TERMINAL_23);
		TERMINAL_351.addFollower(TERMINAL_54);
		TERMINAL_351.addFollower(TERMINAL_55);
		TERMINAL_351.addFollower(TERMINAL_56);
		TERMINAL_351.addFollower(TERMINAL_57);
		TERMINAL_351.addFollower(TERMINAL_58);
		TERMINAL_351.addFollower(TERMINAL_59);
		TERMINAL_351.addFollower(TERMINAL_60);
		TERMINAL_351.addFollower(TERMINAL_61);
		TERMINAL_351.addFollower(TERMINAL_62);
		TERMINAL_351.addFollower(TERMINAL_63);
		TERMINAL_351.addFollower(TERMINAL_64);
		TERMINAL_351.addFollower(TERMINAL_347);
		TERMINAL_351.addFollower(TERMINAL_348);
		TERMINAL_351.addFollower(TERMINAL_349);
		TERMINAL_351.addFollower(TERMINAL_350);
		TERMINAL_351.addFollower(TERMINAL_351);
		TERMINAL_351.addFollower(TERMINAL_352);
		TERMINAL_351.addFollower(TERMINAL_353);
		TERMINAL_351.addFollower(TERMINAL_354);
		TERMINAL_351.addFollower(TERMINAL_355);
		TERMINAL_351.addFollower(TERMINAL_140);
		TERMINAL_351.addFollower(TERMINAL_141);
		TERMINAL_351.addFollower(TERMINAL_142);
		TERMINAL_351.addFollower(TERMINAL_143);
		TERMINAL_351.addFollower(TERMINAL_144);
		TERMINAL_351.addFollower(TERMINAL_145);
		TERMINAL_351.addFollower(TERMINAL_146);
		TERMINAL_351.addFollower(TERMINAL_147);
		TERMINAL_351.addFollower(TERMINAL_153);
		TERMINAL_351.addFollower(TERMINAL_154);
		TERMINAL_351.addFollower(TERMINAL_155);
		TERMINAL_351.addFollower(TERMINAL_156);
		TERMINAL_351.addFollower(TERMINAL_157);
		TERMINAL_351.addFollower(TERMINAL_158);
		TERMINAL_351.addFollower(TERMINAL_159);
		TERMINAL_351.addFollower(TERMINAL_160);
		TERMINAL_351.addFollower(TERMINAL_161);
		TERMINAL_351.addFollower(TERMINAL_162);
		TERMINAL_351.addFollower(TERMINAL_163);
		TERMINAL_351.addFollower(TERMINAL_164);
		TERMINAL_351.addFollower(TERMINAL_165);
		TERMINAL_351.addFollower(TERMINAL_166);
		TERMINAL_351.addFollower(TERMINAL_167);
		TERMINAL_52.addFollower(TERMINAL_46);
		TERMINAL_52.addFollower(TERMINAL_47);
		TERMINAL_52.addFollower(TERMINAL_48);
		TERMINAL_52.addFollower(TERMINAL_49);
		TERMINAL_52.addFollower(TERMINAL_50);
		TERMINAL_52.addFollower(TERMINAL_51);
		TERMINAL_52.addFollower(TERMINAL_52);
		TERMINAL_52.addFollower(TERMINAL_53);
		TERMINAL_52.addFollower(TERMINAL_23);
		TERMINAL_52.addFollower(TERMINAL_54);
		TERMINAL_52.addFollower(TERMINAL_55);
		TERMINAL_52.addFollower(TERMINAL_56);
		TERMINAL_52.addFollower(TERMINAL_57);
		TERMINAL_52.addFollower(TERMINAL_58);
		TERMINAL_52.addFollower(TERMINAL_59);
		TERMINAL_52.addFollower(TERMINAL_60);
		TERMINAL_52.addFollower(TERMINAL_61);
		TERMINAL_52.addFollower(TERMINAL_62);
		TERMINAL_52.addFollower(TERMINAL_63);
		TERMINAL_52.addFollower(TERMINAL_64);
		TERMINAL_52.addFollower(TERMINAL_349);
		TERMINAL_349.addFollower(TERMINAL_46);
		TERMINAL_349.addFollower(TERMINAL_47);
		TERMINAL_349.addFollower(TERMINAL_48);
		TERMINAL_349.addFollower(TERMINAL_49);
		TERMINAL_349.addFollower(TERMINAL_50);
		TERMINAL_349.addFollower(TERMINAL_51);
		TERMINAL_349.addFollower(TERMINAL_52);
		TERMINAL_349.addFollower(TERMINAL_53);
		TERMINAL_349.addFollower(TERMINAL_23);
		TERMINAL_349.addFollower(TERMINAL_54);
		TERMINAL_349.addFollower(TERMINAL_55);
		TERMINAL_349.addFollower(TERMINAL_56);
		TERMINAL_349.addFollower(TERMINAL_57);
		TERMINAL_349.addFollower(TERMINAL_58);
		TERMINAL_349.addFollower(TERMINAL_59);
		TERMINAL_349.addFollower(TERMINAL_60);
		TERMINAL_349.addFollower(TERMINAL_61);
		TERMINAL_349.addFollower(TERMINAL_62);
		TERMINAL_349.addFollower(TERMINAL_63);
		TERMINAL_349.addFollower(TERMINAL_64);
		TERMINAL_362.addFollower(TERMINAL_46);
		TERMINAL_362.addFollower(TERMINAL_47);
		TERMINAL_362.addFollower(TERMINAL_48);
		TERMINAL_362.addFollower(TERMINAL_49);
		TERMINAL_362.addFollower(TERMINAL_50);
		TERMINAL_362.addFollower(TERMINAL_51);
		TERMINAL_362.addFollower(TERMINAL_52);
		TERMINAL_362.addFollower(TERMINAL_53);
		TERMINAL_362.addFollower(TERMINAL_23);
		TERMINAL_362.addFollower(TERMINAL_54);
		TERMINAL_362.addFollower(TERMINAL_55);
		TERMINAL_362.addFollower(TERMINAL_56);
		TERMINAL_362.addFollower(TERMINAL_57);
		TERMINAL_362.addFollower(TERMINAL_58);
		TERMINAL_362.addFollower(TERMINAL_59);
		TERMINAL_362.addFollower(TERMINAL_60);
		TERMINAL_362.addFollower(TERMINAL_61);
		TERMINAL_362.addFollower(TERMINAL_62);
		TERMINAL_362.addFollower(TERMINAL_63);
		TERMINAL_362.addFollower(TERMINAL_64);
		TERMINAL_53.addFollower(TERMINAL_363);
		TERMINAL_363.addFollower(TERMINAL_364);
		TERMINAL_364.addFollower(TERMINAL_23);
		TERMINAL_360.addFollower(TERMINAL_46);
		TERMINAL_360.addFollower(TERMINAL_47);
		TERMINAL_360.addFollower(TERMINAL_48);
		TERMINAL_360.addFollower(TERMINAL_49);
		TERMINAL_360.addFollower(TERMINAL_50);
		TERMINAL_360.addFollower(TERMINAL_51);
		TERMINAL_360.addFollower(TERMINAL_52);
		TERMINAL_360.addFollower(TERMINAL_53);
		TERMINAL_360.addFollower(TERMINAL_23);
		TERMINAL_360.addFollower(TERMINAL_54);
		TERMINAL_360.addFollower(TERMINAL_55);
		TERMINAL_360.addFollower(TERMINAL_56);
		TERMINAL_360.addFollower(TERMINAL_57);
		TERMINAL_360.addFollower(TERMINAL_58);
		TERMINAL_360.addFollower(TERMINAL_59);
		TERMINAL_360.addFollower(TERMINAL_60);
		TERMINAL_360.addFollower(TERMINAL_61);
		TERMINAL_360.addFollower(TERMINAL_62);
		TERMINAL_360.addFollower(TERMINAL_63);
		TERMINAL_360.addFollower(TERMINAL_64);
		TERMINAL_54.addFollower(TERMINAL_46);
		TERMINAL_54.addFollower(TERMINAL_47);
		TERMINAL_54.addFollower(TERMINAL_48);
		TERMINAL_54.addFollower(TERMINAL_49);
		TERMINAL_54.addFollower(TERMINAL_50);
		TERMINAL_54.addFollower(TERMINAL_51);
		TERMINAL_54.addFollower(TERMINAL_52);
		TERMINAL_54.addFollower(TERMINAL_53);
		TERMINAL_54.addFollower(TERMINAL_23);
		TERMINAL_54.addFollower(TERMINAL_54);
		TERMINAL_54.addFollower(TERMINAL_55);
		TERMINAL_54.addFollower(TERMINAL_56);
		TERMINAL_54.addFollower(TERMINAL_57);
		TERMINAL_54.addFollower(TERMINAL_58);
		TERMINAL_54.addFollower(TERMINAL_59);
		TERMINAL_54.addFollower(TERMINAL_60);
		TERMINAL_54.addFollower(TERMINAL_61);
		TERMINAL_54.addFollower(TERMINAL_62);
		TERMINAL_54.addFollower(TERMINAL_63);
		TERMINAL_54.addFollower(TERMINAL_64);
		TERMINAL_54.addFollower(TERMINAL_347);
		TERMINAL_54.addFollower(TERMINAL_348);
		TERMINAL_54.addFollower(TERMINAL_349);
		TERMINAL_54.addFollower(TERMINAL_350);
		TERMINAL_54.addFollower(TERMINAL_351);
		TERMINAL_54.addFollower(TERMINAL_352);
		TERMINAL_54.addFollower(TERMINAL_353);
		TERMINAL_54.addFollower(TERMINAL_354);
		TERMINAL_54.addFollower(TERMINAL_355);
		TERMINAL_54.addFollower(TERMINAL_140);
		TERMINAL_54.addFollower(TERMINAL_141);
		TERMINAL_54.addFollower(TERMINAL_142);
		TERMINAL_54.addFollower(TERMINAL_143);
		TERMINAL_54.addFollower(TERMINAL_144);
		TERMINAL_54.addFollower(TERMINAL_145);
		TERMINAL_54.addFollower(TERMINAL_146);
		TERMINAL_54.addFollower(TERMINAL_147);
		TERMINAL_54.addFollower(TERMINAL_153);
		TERMINAL_54.addFollower(TERMINAL_154);
		TERMINAL_54.addFollower(TERMINAL_155);
		TERMINAL_54.addFollower(TERMINAL_156);
		TERMINAL_54.addFollower(TERMINAL_157);
		TERMINAL_54.addFollower(TERMINAL_158);
		TERMINAL_54.addFollower(TERMINAL_159);
		TERMINAL_54.addFollower(TERMINAL_160);
		TERMINAL_54.addFollower(TERMINAL_161);
		TERMINAL_54.addFollower(TERMINAL_162);
		TERMINAL_54.addFollower(TERMINAL_163);
		TERMINAL_54.addFollower(TERMINAL_164);
		TERMINAL_54.addFollower(TERMINAL_165);
		TERMINAL_54.addFollower(TERMINAL_166);
		TERMINAL_54.addFollower(TERMINAL_167);
		TERMINAL_54.addFollower(TERMINAL_365);
		TERMINAL_54.addFollower(TERMINAL_366);
		TERMINAL_55.addFollower(TERMINAL_46);
		TERMINAL_55.addFollower(TERMINAL_47);
		TERMINAL_55.addFollower(TERMINAL_48);
		TERMINAL_55.addFollower(TERMINAL_49);
		TERMINAL_55.addFollower(TERMINAL_50);
		TERMINAL_55.addFollower(TERMINAL_51);
		TERMINAL_55.addFollower(TERMINAL_52);
		TERMINAL_55.addFollower(TERMINAL_53);
		TERMINAL_55.addFollower(TERMINAL_23);
		TERMINAL_55.addFollower(TERMINAL_54);
		TERMINAL_55.addFollower(TERMINAL_55);
		TERMINAL_55.addFollower(TERMINAL_56);
		TERMINAL_55.addFollower(TERMINAL_57);
		TERMINAL_55.addFollower(TERMINAL_58);
		TERMINAL_55.addFollower(TERMINAL_59);
		TERMINAL_55.addFollower(TERMINAL_60);
		TERMINAL_55.addFollower(TERMINAL_61);
		TERMINAL_55.addFollower(TERMINAL_62);
		TERMINAL_55.addFollower(TERMINAL_63);
		TERMINAL_55.addFollower(TERMINAL_64);
		TERMINAL_55.addFollower(TERMINAL_353);
		TERMINAL_352.addFollower(TERMINAL_46);
		TERMINAL_352.addFollower(TERMINAL_47);
		TERMINAL_352.addFollower(TERMINAL_48);
		TERMINAL_352.addFollower(TERMINAL_49);
		TERMINAL_352.addFollower(TERMINAL_50);
		TERMINAL_352.addFollower(TERMINAL_51);
		TERMINAL_352.addFollower(TERMINAL_52);
		TERMINAL_352.addFollower(TERMINAL_53);
		TERMINAL_352.addFollower(TERMINAL_23);
		TERMINAL_352.addFollower(TERMINAL_54);
		TERMINAL_352.addFollower(TERMINAL_55);
		TERMINAL_352.addFollower(TERMINAL_56);
		TERMINAL_352.addFollower(TERMINAL_57);
		TERMINAL_352.addFollower(TERMINAL_58);
		TERMINAL_352.addFollower(TERMINAL_59);
		TERMINAL_352.addFollower(TERMINAL_60);
		TERMINAL_352.addFollower(TERMINAL_61);
		TERMINAL_352.addFollower(TERMINAL_62);
		TERMINAL_352.addFollower(TERMINAL_63);
		TERMINAL_352.addFollower(TERMINAL_64);
		TERMINAL_353.addFollower(TERMINAL_46);
		TERMINAL_353.addFollower(TERMINAL_47);
		TERMINAL_353.addFollower(TERMINAL_48);
		TERMINAL_353.addFollower(TERMINAL_49);
		TERMINAL_353.addFollower(TERMINAL_50);
		TERMINAL_353.addFollower(TERMINAL_51);
		TERMINAL_353.addFollower(TERMINAL_52);
		TERMINAL_353.addFollower(TERMINAL_53);
		TERMINAL_353.addFollower(TERMINAL_23);
		TERMINAL_353.addFollower(TERMINAL_54);
		TERMINAL_353.addFollower(TERMINAL_55);
		TERMINAL_353.addFollower(TERMINAL_56);
		TERMINAL_353.addFollower(TERMINAL_57);
		TERMINAL_353.addFollower(TERMINAL_58);
		TERMINAL_353.addFollower(TERMINAL_59);
		TERMINAL_353.addFollower(TERMINAL_60);
		TERMINAL_353.addFollower(TERMINAL_61);
		TERMINAL_353.addFollower(TERMINAL_62);
		TERMINAL_353.addFollower(TERMINAL_63);
		TERMINAL_353.addFollower(TERMINAL_64);
		TERMINAL_353.addFollower(TERMINAL_347);
		TERMINAL_353.addFollower(TERMINAL_348);
		TERMINAL_353.addFollower(TERMINAL_349);
		TERMINAL_353.addFollower(TERMINAL_350);
		TERMINAL_353.addFollower(TERMINAL_351);
		TERMINAL_353.addFollower(TERMINAL_352);
		TERMINAL_353.addFollower(TERMINAL_353);
		TERMINAL_353.addFollower(TERMINAL_354);
		TERMINAL_353.addFollower(TERMINAL_355);
		TERMINAL_353.addFollower(TERMINAL_140);
		TERMINAL_353.addFollower(TERMINAL_141);
		TERMINAL_353.addFollower(TERMINAL_142);
		TERMINAL_353.addFollower(TERMINAL_143);
		TERMINAL_353.addFollower(TERMINAL_144);
		TERMINAL_353.addFollower(TERMINAL_145);
		TERMINAL_353.addFollower(TERMINAL_146);
		TERMINAL_353.addFollower(TERMINAL_147);
		TERMINAL_353.addFollower(TERMINAL_153);
		TERMINAL_353.addFollower(TERMINAL_154);
		TERMINAL_353.addFollower(TERMINAL_155);
		TERMINAL_353.addFollower(TERMINAL_156);
		TERMINAL_353.addFollower(TERMINAL_157);
		TERMINAL_353.addFollower(TERMINAL_158);
		TERMINAL_353.addFollower(TERMINAL_159);
		TERMINAL_353.addFollower(TERMINAL_160);
		TERMINAL_353.addFollower(TERMINAL_161);
		TERMINAL_353.addFollower(TERMINAL_162);
		TERMINAL_353.addFollower(TERMINAL_163);
		TERMINAL_353.addFollower(TERMINAL_164);
		TERMINAL_353.addFollower(TERMINAL_165);
		TERMINAL_353.addFollower(TERMINAL_166);
		TERMINAL_353.addFollower(TERMINAL_167);
		TERMINAL_365.addFollower(TERMINAL_56);
		TERMINAL_365.addFollower(TERMINAL_48);
		TERMINAL_365.addFollower(TERMINAL_54);
		TERMINAL_365.addFollower(TERMINAL_57);
		TERMINAL_365.addFollower(TERMINAL_58);
		TERMINAL_365.addFollower(TERMINAL_59);
		TERMINAL_365.addFollower(TERMINAL_50);
		TERMINAL_365.addFollower(TERMINAL_49);
		TERMINAL_365.addFollower(TERMINAL_60);
		TERMINAL_365.addFollower(TERMINAL_55);
		TERMINAL_365.addFollower(TERMINAL_61);
		TERMINAL_365.addFollower(TERMINAL_64);
		TERMINAL_366.addFollower(TERMINAL_367);
		TERMINAL_367.addFollower(TERMINAL_56);
		TERMINAL_367.addFollower(TERMINAL_48);
		TERMINAL_367.addFollower(TERMINAL_54);
		TERMINAL_367.addFollower(TERMINAL_57);
		TERMINAL_367.addFollower(TERMINAL_58);
		TERMINAL_367.addFollower(TERMINAL_59);
		TERMINAL_367.addFollower(TERMINAL_50);
		TERMINAL_367.addFollower(TERMINAL_49);
		TERMINAL_367.addFollower(TERMINAL_60);
		TERMINAL_367.addFollower(TERMINAL_55);
		TERMINAL_367.addFollower(TERMINAL_61);
		TERMINAL_367.addFollower(TERMINAL_64);
		TERMINAL_57.addFollower(TERMINAL_46);
		TERMINAL_57.addFollower(TERMINAL_47);
		TERMINAL_57.addFollower(TERMINAL_48);
		TERMINAL_57.addFollower(TERMINAL_49);
		TERMINAL_57.addFollower(TERMINAL_50);
		TERMINAL_57.addFollower(TERMINAL_51);
		TERMINAL_57.addFollower(TERMINAL_52);
		TERMINAL_57.addFollower(TERMINAL_53);
		TERMINAL_57.addFollower(TERMINAL_23);
		TERMINAL_57.addFollower(TERMINAL_54);
		TERMINAL_57.addFollower(TERMINAL_55);
		TERMINAL_57.addFollower(TERMINAL_56);
		TERMINAL_57.addFollower(TERMINAL_57);
		TERMINAL_57.addFollower(TERMINAL_58);
		TERMINAL_57.addFollower(TERMINAL_59);
		TERMINAL_57.addFollower(TERMINAL_60);
		TERMINAL_57.addFollower(TERMINAL_61);
		TERMINAL_57.addFollower(TERMINAL_62);
		TERMINAL_57.addFollower(TERMINAL_63);
		TERMINAL_57.addFollower(TERMINAL_64);
		TERMINAL_57.addFollower(TERMINAL_347);
		TERMINAL_57.addFollower(TERMINAL_348);
		TERMINAL_57.addFollower(TERMINAL_349);
		TERMINAL_57.addFollower(TERMINAL_350);
		TERMINAL_57.addFollower(TERMINAL_351);
		TERMINAL_57.addFollower(TERMINAL_352);
		TERMINAL_57.addFollower(TERMINAL_353);
		TERMINAL_57.addFollower(TERMINAL_354);
		TERMINAL_57.addFollower(TERMINAL_355);
		TERMINAL_57.addFollower(TERMINAL_140);
		TERMINAL_57.addFollower(TERMINAL_141);
		TERMINAL_57.addFollower(TERMINAL_142);
		TERMINAL_57.addFollower(TERMINAL_143);
		TERMINAL_57.addFollower(TERMINAL_144);
		TERMINAL_57.addFollower(TERMINAL_145);
		TERMINAL_57.addFollower(TERMINAL_146);
		TERMINAL_57.addFollower(TERMINAL_147);
		TERMINAL_57.addFollower(TERMINAL_153);
		TERMINAL_57.addFollower(TERMINAL_154);
		TERMINAL_57.addFollower(TERMINAL_155);
		TERMINAL_57.addFollower(TERMINAL_156);
		TERMINAL_57.addFollower(TERMINAL_157);
		TERMINAL_57.addFollower(TERMINAL_158);
		TERMINAL_57.addFollower(TERMINAL_159);
		TERMINAL_57.addFollower(TERMINAL_160);
		TERMINAL_57.addFollower(TERMINAL_161);
		TERMINAL_57.addFollower(TERMINAL_162);
		TERMINAL_57.addFollower(TERMINAL_163);
		TERMINAL_57.addFollower(TERMINAL_164);
		TERMINAL_57.addFollower(TERMINAL_165);
		TERMINAL_57.addFollower(TERMINAL_166);
		TERMINAL_57.addFollower(TERMINAL_167);
		TERMINAL_57.addFollower(TERMINAL_365);
		TERMINAL_57.addFollower(TERMINAL_366);
		TERMINAL_59.addFollower(TERMINAL_46);
		TERMINAL_59.addFollower(TERMINAL_47);
		TERMINAL_59.addFollower(TERMINAL_48);
		TERMINAL_59.addFollower(TERMINAL_49);
		TERMINAL_59.addFollower(TERMINAL_50);
		TERMINAL_59.addFollower(TERMINAL_51);
		TERMINAL_59.addFollower(TERMINAL_52);
		TERMINAL_59.addFollower(TERMINAL_53);
		TERMINAL_59.addFollower(TERMINAL_23);
		TERMINAL_59.addFollower(TERMINAL_54);
		TERMINAL_59.addFollower(TERMINAL_55);
		TERMINAL_59.addFollower(TERMINAL_56);
		TERMINAL_59.addFollower(TERMINAL_57);
		TERMINAL_59.addFollower(TERMINAL_58);
		TERMINAL_59.addFollower(TERMINAL_59);
		TERMINAL_59.addFollower(TERMINAL_60);
		TERMINAL_59.addFollower(TERMINAL_61);
		TERMINAL_59.addFollower(TERMINAL_62);
		TERMINAL_59.addFollower(TERMINAL_63);
		TERMINAL_59.addFollower(TERMINAL_64);
		TERMINAL_59.addFollower(TERMINAL_347);
		TERMINAL_59.addFollower(TERMINAL_348);
		TERMINAL_59.addFollower(TERMINAL_349);
		TERMINAL_59.addFollower(TERMINAL_350);
		TERMINAL_59.addFollower(TERMINAL_351);
		TERMINAL_59.addFollower(TERMINAL_352);
		TERMINAL_59.addFollower(TERMINAL_353);
		TERMINAL_59.addFollower(TERMINAL_354);
		TERMINAL_59.addFollower(TERMINAL_355);
		TERMINAL_59.addFollower(TERMINAL_140);
		TERMINAL_59.addFollower(TERMINAL_141);
		TERMINAL_59.addFollower(TERMINAL_142);
		TERMINAL_59.addFollower(TERMINAL_143);
		TERMINAL_59.addFollower(TERMINAL_144);
		TERMINAL_59.addFollower(TERMINAL_145);
		TERMINAL_59.addFollower(TERMINAL_146);
		TERMINAL_59.addFollower(TERMINAL_147);
		TERMINAL_59.addFollower(TERMINAL_153);
		TERMINAL_59.addFollower(TERMINAL_154);
		TERMINAL_59.addFollower(TERMINAL_155);
		TERMINAL_59.addFollower(TERMINAL_156);
		TERMINAL_59.addFollower(TERMINAL_157);
		TERMINAL_59.addFollower(TERMINAL_158);
		TERMINAL_59.addFollower(TERMINAL_159);
		TERMINAL_59.addFollower(TERMINAL_160);
		TERMINAL_59.addFollower(TERMINAL_161);
		TERMINAL_59.addFollower(TERMINAL_162);
		TERMINAL_59.addFollower(TERMINAL_163);
		TERMINAL_59.addFollower(TERMINAL_164);
		TERMINAL_59.addFollower(TERMINAL_165);
		TERMINAL_59.addFollower(TERMINAL_166);
		TERMINAL_59.addFollower(TERMINAL_167);
		TERMINAL_56.addFollower(TERMINAL_48);
		TERMINAL_56.addFollower(TERMINAL_54);
		TERMINAL_56.addFollower(TERMINAL_57);
		TERMINAL_56.addFollower(TERMINAL_58);
		TERMINAL_56.addFollower(TERMINAL_59);
		TERMINAL_56.addFollower(TERMINAL_50);
		TERMINAL_56.addFollower(TERMINAL_49);
		TERMINAL_368.addFollower(TERMINAL_373);
		TERMINAL_373.addFollower(TERMINAL_368);
		TERMINAL_373.addFollower(TERMINAL_369);
		TERMINAL_373.addFollower(TERMINAL_370);
		TERMINAL_373.addFollower(TERMINAL_371);
		TERMINAL_373.addFollower(TERMINAL_372);
		TERMINAL_369.addFollower(TERMINAL_374);
		TERMINAL_374.addFollower(TERMINAL_375);
		TERMINAL_375.addFollower(TERMINAL_46);
		TERMINAL_375.addFollower(TERMINAL_47);
		TERMINAL_375.addFollower(TERMINAL_48);
		TERMINAL_375.addFollower(TERMINAL_49);
		TERMINAL_375.addFollower(TERMINAL_50);
		TERMINAL_375.addFollower(TERMINAL_51);
		TERMINAL_375.addFollower(TERMINAL_52);
		TERMINAL_375.addFollower(TERMINAL_53);
		TERMINAL_375.addFollower(TERMINAL_23);
		TERMINAL_375.addFollower(TERMINAL_54);
		TERMINAL_375.addFollower(TERMINAL_55);
		TERMINAL_375.addFollower(TERMINAL_56);
		TERMINAL_375.addFollower(TERMINAL_57);
		TERMINAL_375.addFollower(TERMINAL_58);
		TERMINAL_375.addFollower(TERMINAL_59);
		TERMINAL_375.addFollower(TERMINAL_60);
		TERMINAL_375.addFollower(TERMINAL_61);
		TERMINAL_375.addFollower(TERMINAL_62);
		TERMINAL_375.addFollower(TERMINAL_63);
		TERMINAL_375.addFollower(TERMINAL_64);
		TERMINAL_375.addFollower(TERMINAL_355);
		TERMINAL_354.addFollower(TERMINAL_46);
		TERMINAL_354.addFollower(TERMINAL_47);
		TERMINAL_354.addFollower(TERMINAL_48);
		TERMINAL_354.addFollower(TERMINAL_49);
		TERMINAL_354.addFollower(TERMINAL_50);
		TERMINAL_354.addFollower(TERMINAL_51);
		TERMINAL_354.addFollower(TERMINAL_52);
		TERMINAL_354.addFollower(TERMINAL_53);
		TERMINAL_354.addFollower(TERMINAL_23);
		TERMINAL_354.addFollower(TERMINAL_54);
		TERMINAL_354.addFollower(TERMINAL_55);
		TERMINAL_354.addFollower(TERMINAL_56);
		TERMINAL_354.addFollower(TERMINAL_57);
		TERMINAL_354.addFollower(TERMINAL_58);
		TERMINAL_354.addFollower(TERMINAL_59);
		TERMINAL_354.addFollower(TERMINAL_60);
		TERMINAL_354.addFollower(TERMINAL_61);
		TERMINAL_354.addFollower(TERMINAL_62);
		TERMINAL_354.addFollower(TERMINAL_63);
		TERMINAL_354.addFollower(TERMINAL_64);
		TERMINAL_355.addFollower(TERMINAL_368);
		TERMINAL_355.addFollower(TERMINAL_369);
		TERMINAL_355.addFollower(TERMINAL_370);
		TERMINAL_355.addFollower(TERMINAL_371);
		TERMINAL_355.addFollower(TERMINAL_372);
		TERMINAL_370.addFollower(TERMINAL_376);
		TERMINAL_376.addFollower(TERMINAL_368);
		TERMINAL_376.addFollower(TERMINAL_369);
		TERMINAL_376.addFollower(TERMINAL_370);
		TERMINAL_376.addFollower(TERMINAL_371);
		TERMINAL_376.addFollower(TERMINAL_372);
		TERMINAL_371.addFollower(TERMINAL_377);
		TERMINAL_377.addFollower(TERMINAL_368);
		TERMINAL_377.addFollower(TERMINAL_369);
		TERMINAL_377.addFollower(TERMINAL_370);
		TERMINAL_377.addFollower(TERMINAL_371);
		TERMINAL_377.addFollower(TERMINAL_372);
		TERMINAL_372.addFollower(TERMINAL_46);
		TERMINAL_372.addFollower(TERMINAL_47);
		TERMINAL_372.addFollower(TERMINAL_48);
		TERMINAL_372.addFollower(TERMINAL_49);
		TERMINAL_372.addFollower(TERMINAL_50);
		TERMINAL_372.addFollower(TERMINAL_51);
		TERMINAL_372.addFollower(TERMINAL_52);
		TERMINAL_372.addFollower(TERMINAL_53);
		TERMINAL_372.addFollower(TERMINAL_23);
		TERMINAL_372.addFollower(TERMINAL_54);
		TERMINAL_372.addFollower(TERMINAL_55);
		TERMINAL_372.addFollower(TERMINAL_56);
		TERMINAL_372.addFollower(TERMINAL_57);
		TERMINAL_372.addFollower(TERMINAL_58);
		TERMINAL_372.addFollower(TERMINAL_59);
		TERMINAL_372.addFollower(TERMINAL_60);
		TERMINAL_372.addFollower(TERMINAL_61);
		TERMINAL_372.addFollower(TERMINAL_62);
		TERMINAL_372.addFollower(TERMINAL_63);
		TERMINAL_372.addFollower(TERMINAL_64);
		TERMINAL_378.addFollower(TERMINAL_46);
		TERMINAL_378.addFollower(TERMINAL_47);
		TERMINAL_378.addFollower(TERMINAL_48);
		TERMINAL_378.addFollower(TERMINAL_49);
		TERMINAL_378.addFollower(TERMINAL_50);
		TERMINAL_378.addFollower(TERMINAL_51);
		TERMINAL_378.addFollower(TERMINAL_52);
		TERMINAL_378.addFollower(TERMINAL_53);
		TERMINAL_378.addFollower(TERMINAL_23);
		TERMINAL_378.addFollower(TERMINAL_54);
		TERMINAL_378.addFollower(TERMINAL_55);
		TERMINAL_378.addFollower(TERMINAL_56);
		TERMINAL_378.addFollower(TERMINAL_57);
		TERMINAL_378.addFollower(TERMINAL_58);
		TERMINAL_378.addFollower(TERMINAL_59);
		TERMINAL_378.addFollower(TERMINAL_60);
		TERMINAL_378.addFollower(TERMINAL_61);
		TERMINAL_378.addFollower(TERMINAL_62);
		TERMINAL_378.addFollower(TERMINAL_63);
		TERMINAL_378.addFollower(TERMINAL_64);
		TERMINAL_378.addFollower(TERMINAL_347);
		TERMINAL_378.addFollower(TERMINAL_348);
		TERMINAL_378.addFollower(TERMINAL_349);
		TERMINAL_378.addFollower(TERMINAL_350);
		TERMINAL_378.addFollower(TERMINAL_351);
		TERMINAL_378.addFollower(TERMINAL_352);
		TERMINAL_378.addFollower(TERMINAL_353);
		TERMINAL_378.addFollower(TERMINAL_354);
		TERMINAL_378.addFollower(TERMINAL_355);
		TERMINAL_378.addFollower(TERMINAL_140);
		TERMINAL_378.addFollower(TERMINAL_141);
		TERMINAL_378.addFollower(TERMINAL_142);
		TERMINAL_378.addFollower(TERMINAL_143);
		TERMINAL_378.addFollower(TERMINAL_144);
		TERMINAL_378.addFollower(TERMINAL_145);
		TERMINAL_378.addFollower(TERMINAL_146);
		TERMINAL_378.addFollower(TERMINAL_147);
		TERMINAL_378.addFollower(TERMINAL_153);
		TERMINAL_378.addFollower(TERMINAL_154);
		TERMINAL_378.addFollower(TERMINAL_155);
		TERMINAL_378.addFollower(TERMINAL_156);
		TERMINAL_378.addFollower(TERMINAL_157);
		TERMINAL_378.addFollower(TERMINAL_158);
		TERMINAL_378.addFollower(TERMINAL_159);
		TERMINAL_378.addFollower(TERMINAL_160);
		TERMINAL_378.addFollower(TERMINAL_161);
		TERMINAL_378.addFollower(TERMINAL_162);
		TERMINAL_378.addFollower(TERMINAL_163);
		TERMINAL_378.addFollower(TERMINAL_164);
		TERMINAL_378.addFollower(TERMINAL_165);
		TERMINAL_378.addFollower(TERMINAL_166);
		TERMINAL_378.addFollower(TERMINAL_167);
		TERMINAL_378.addFollower(TERMINAL_365);
		TERMINAL_378.addFollower(TERMINAL_366);
		TERMINAL_379.addFollower(TERMINAL_384);
		TERMINAL_384.addFollower(TERMINAL_379);
		TERMINAL_384.addFollower(TERMINAL_380);
		TERMINAL_384.addFollower(TERMINAL_381);
		TERMINAL_384.addFollower(TERMINAL_382);
		TERMINAL_384.addFollower(TERMINAL_383);
		TERMINAL_380.addFollower(TERMINAL_385);
		TERMINAL_385.addFollower(TERMINAL_386);
		TERMINAL_386.addFollower(TERMINAL_46);
		TERMINAL_386.addFollower(TERMINAL_47);
		TERMINAL_386.addFollower(TERMINAL_48);
		TERMINAL_386.addFollower(TERMINAL_49);
		TERMINAL_386.addFollower(TERMINAL_50);
		TERMINAL_386.addFollower(TERMINAL_51);
		TERMINAL_386.addFollower(TERMINAL_52);
		TERMINAL_386.addFollower(TERMINAL_53);
		TERMINAL_386.addFollower(TERMINAL_23);
		TERMINAL_386.addFollower(TERMINAL_54);
		TERMINAL_386.addFollower(TERMINAL_55);
		TERMINAL_386.addFollower(TERMINAL_56);
		TERMINAL_386.addFollower(TERMINAL_57);
		TERMINAL_386.addFollower(TERMINAL_58);
		TERMINAL_386.addFollower(TERMINAL_59);
		TERMINAL_386.addFollower(TERMINAL_60);
		TERMINAL_386.addFollower(TERMINAL_61);
		TERMINAL_386.addFollower(TERMINAL_62);
		TERMINAL_386.addFollower(TERMINAL_63);
		TERMINAL_386.addFollower(TERMINAL_64);
		TERMINAL_386.addFollower(TERMINAL_387);
		TERMINAL_388.addFollower(TERMINAL_46);
		TERMINAL_388.addFollower(TERMINAL_47);
		TERMINAL_388.addFollower(TERMINAL_48);
		TERMINAL_388.addFollower(TERMINAL_49);
		TERMINAL_388.addFollower(TERMINAL_50);
		TERMINAL_388.addFollower(TERMINAL_51);
		TERMINAL_388.addFollower(TERMINAL_52);
		TERMINAL_388.addFollower(TERMINAL_53);
		TERMINAL_388.addFollower(TERMINAL_23);
		TERMINAL_388.addFollower(TERMINAL_54);
		TERMINAL_388.addFollower(TERMINAL_55);
		TERMINAL_388.addFollower(TERMINAL_56);
		TERMINAL_388.addFollower(TERMINAL_57);
		TERMINAL_388.addFollower(TERMINAL_58);
		TERMINAL_388.addFollower(TERMINAL_59);
		TERMINAL_388.addFollower(TERMINAL_60);
		TERMINAL_388.addFollower(TERMINAL_61);
		TERMINAL_388.addFollower(TERMINAL_62);
		TERMINAL_388.addFollower(TERMINAL_63);
		TERMINAL_388.addFollower(TERMINAL_64);
		TERMINAL_387.addFollower(TERMINAL_379);
		TERMINAL_387.addFollower(TERMINAL_380);
		TERMINAL_387.addFollower(TERMINAL_381);
		TERMINAL_387.addFollower(TERMINAL_382);
		TERMINAL_387.addFollower(TERMINAL_383);
		TERMINAL_381.addFollower(TERMINAL_389);
		TERMINAL_389.addFollower(TERMINAL_379);
		TERMINAL_389.addFollower(TERMINAL_380);
		TERMINAL_389.addFollower(TERMINAL_381);
		TERMINAL_389.addFollower(TERMINAL_382);
		TERMINAL_389.addFollower(TERMINAL_383);
		TERMINAL_382.addFollower(TERMINAL_390);
		TERMINAL_390.addFollower(TERMINAL_379);
		TERMINAL_390.addFollower(TERMINAL_380);
		TERMINAL_390.addFollower(TERMINAL_381);
		TERMINAL_390.addFollower(TERMINAL_382);
		TERMINAL_390.addFollower(TERMINAL_383);
		TERMINAL_383.addFollower(TERMINAL_46);
		TERMINAL_383.addFollower(TERMINAL_47);
		TERMINAL_383.addFollower(TERMINAL_48);
		TERMINAL_383.addFollower(TERMINAL_49);
		TERMINAL_383.addFollower(TERMINAL_50);
		TERMINAL_383.addFollower(TERMINAL_51);
		TERMINAL_383.addFollower(TERMINAL_52);
		TERMINAL_383.addFollower(TERMINAL_53);
		TERMINAL_383.addFollower(TERMINAL_23);
		TERMINAL_383.addFollower(TERMINAL_54);
		TERMINAL_383.addFollower(TERMINAL_55);
		TERMINAL_383.addFollower(TERMINAL_56);
		TERMINAL_383.addFollower(TERMINAL_57);
		TERMINAL_383.addFollower(TERMINAL_58);
		TERMINAL_383.addFollower(TERMINAL_59);
		TERMINAL_383.addFollower(TERMINAL_60);
		TERMINAL_383.addFollower(TERMINAL_61);
		TERMINAL_383.addFollower(TERMINAL_62);
		TERMINAL_383.addFollower(TERMINAL_63);
		TERMINAL_383.addFollower(TERMINAL_64);
		TERMINAL_391.addFollower(TERMINAL_399);
		TERMINAL_399.addFollower(TERMINAL_391);
		TERMINAL_399.addFollower(TERMINAL_392);
		TERMINAL_399.addFollower(TERMINAL_393);
		TERMINAL_399.addFollower(TERMINAL_394);
		TERMINAL_399.addFollower(TERMINAL_395);
		TERMINAL_399.addFollower(TERMINAL_396);
		TERMINAL_399.addFollower(TERMINAL_397);
		TERMINAL_399.addFollower(TERMINAL_398);
		TERMINAL_399.addFollower(TERMINAL_46);
		TERMINAL_399.addFollower(TERMINAL_47);
		TERMINAL_399.addFollower(TERMINAL_48);
		TERMINAL_399.addFollower(TERMINAL_49);
		TERMINAL_399.addFollower(TERMINAL_50);
		TERMINAL_399.addFollower(TERMINAL_51);
		TERMINAL_399.addFollower(TERMINAL_52);
		TERMINAL_399.addFollower(TERMINAL_53);
		TERMINAL_399.addFollower(TERMINAL_23);
		TERMINAL_399.addFollower(TERMINAL_54);
		TERMINAL_399.addFollower(TERMINAL_55);
		TERMINAL_399.addFollower(TERMINAL_56);
		TERMINAL_399.addFollower(TERMINAL_57);
		TERMINAL_399.addFollower(TERMINAL_58);
		TERMINAL_399.addFollower(TERMINAL_59);
		TERMINAL_399.addFollower(TERMINAL_60);
		TERMINAL_399.addFollower(TERMINAL_61);
		TERMINAL_399.addFollower(TERMINAL_62);
		TERMINAL_399.addFollower(TERMINAL_63);
		TERMINAL_399.addFollower(TERMINAL_64);
		TERMINAL_399.addFollower(TERMINAL_347);
		TERMINAL_399.addFollower(TERMINAL_348);
		TERMINAL_399.addFollower(TERMINAL_349);
		TERMINAL_399.addFollower(TERMINAL_350);
		TERMINAL_399.addFollower(TERMINAL_351);
		TERMINAL_399.addFollower(TERMINAL_352);
		TERMINAL_399.addFollower(TERMINAL_353);
		TERMINAL_399.addFollower(TERMINAL_354);
		TERMINAL_399.addFollower(TERMINAL_355);
		TERMINAL_399.addFollower(TERMINAL_140);
		TERMINAL_399.addFollower(TERMINAL_141);
		TERMINAL_399.addFollower(TERMINAL_142);
		TERMINAL_399.addFollower(TERMINAL_143);
		TERMINAL_399.addFollower(TERMINAL_144);
		TERMINAL_399.addFollower(TERMINAL_145);
		TERMINAL_399.addFollower(TERMINAL_146);
		TERMINAL_399.addFollower(TERMINAL_147);
		TERMINAL_399.addFollower(TERMINAL_153);
		TERMINAL_399.addFollower(TERMINAL_154);
		TERMINAL_399.addFollower(TERMINAL_155);
		TERMINAL_399.addFollower(TERMINAL_156);
		TERMINAL_399.addFollower(TERMINAL_157);
		TERMINAL_399.addFollower(TERMINAL_158);
		TERMINAL_399.addFollower(TERMINAL_159);
		TERMINAL_399.addFollower(TERMINAL_160);
		TERMINAL_399.addFollower(TERMINAL_161);
		TERMINAL_399.addFollower(TERMINAL_162);
		TERMINAL_399.addFollower(TERMINAL_163);
		TERMINAL_399.addFollower(TERMINAL_164);
		TERMINAL_399.addFollower(TERMINAL_165);
		TERMINAL_399.addFollower(TERMINAL_166);
		TERMINAL_399.addFollower(TERMINAL_167);
		TERMINAL_399.addFollower(TERMINAL_365);
		TERMINAL_399.addFollower(TERMINAL_366);
		TERMINAL_392.addFollower(TERMINAL_400);
		TERMINAL_400.addFollower(TERMINAL_401);
		TERMINAL_401.addFollower(TERMINAL_46);
		TERMINAL_401.addFollower(TERMINAL_47);
		TERMINAL_401.addFollower(TERMINAL_48);
		TERMINAL_401.addFollower(TERMINAL_49);
		TERMINAL_401.addFollower(TERMINAL_50);
		TERMINAL_401.addFollower(TERMINAL_51);
		TERMINAL_401.addFollower(TERMINAL_52);
		TERMINAL_401.addFollower(TERMINAL_53);
		TERMINAL_401.addFollower(TERMINAL_23);
		TERMINAL_401.addFollower(TERMINAL_54);
		TERMINAL_401.addFollower(TERMINAL_55);
		TERMINAL_401.addFollower(TERMINAL_56);
		TERMINAL_401.addFollower(TERMINAL_57);
		TERMINAL_401.addFollower(TERMINAL_58);
		TERMINAL_401.addFollower(TERMINAL_59);
		TERMINAL_401.addFollower(TERMINAL_60);
		TERMINAL_401.addFollower(TERMINAL_61);
		TERMINAL_401.addFollower(TERMINAL_62);
		TERMINAL_401.addFollower(TERMINAL_63);
		TERMINAL_401.addFollower(TERMINAL_64);
		TERMINAL_401.addFollower(TERMINAL_402);
		TERMINAL_403.addFollower(TERMINAL_46);
		TERMINAL_403.addFollower(TERMINAL_47);
		TERMINAL_403.addFollower(TERMINAL_48);
		TERMINAL_403.addFollower(TERMINAL_49);
		TERMINAL_403.addFollower(TERMINAL_50);
		TERMINAL_403.addFollower(TERMINAL_51);
		TERMINAL_403.addFollower(TERMINAL_52);
		TERMINAL_403.addFollower(TERMINAL_53);
		TERMINAL_403.addFollower(TERMINAL_23);
		TERMINAL_403.addFollower(TERMINAL_54);
		TERMINAL_403.addFollower(TERMINAL_55);
		TERMINAL_403.addFollower(TERMINAL_56);
		TERMINAL_403.addFollower(TERMINAL_57);
		TERMINAL_403.addFollower(TERMINAL_58);
		TERMINAL_403.addFollower(TERMINAL_59);
		TERMINAL_403.addFollower(TERMINAL_60);
		TERMINAL_403.addFollower(TERMINAL_61);
		TERMINAL_403.addFollower(TERMINAL_62);
		TERMINAL_403.addFollower(TERMINAL_63);
		TERMINAL_403.addFollower(TERMINAL_64);
		TERMINAL_402.addFollower(TERMINAL_391);
		TERMINAL_402.addFollower(TERMINAL_392);
		TERMINAL_402.addFollower(TERMINAL_393);
		TERMINAL_402.addFollower(TERMINAL_394);
		TERMINAL_402.addFollower(TERMINAL_395);
		TERMINAL_402.addFollower(TERMINAL_396);
		TERMINAL_402.addFollower(TERMINAL_397);
		TERMINAL_402.addFollower(TERMINAL_398);
		TERMINAL_402.addFollower(TERMINAL_46);
		TERMINAL_402.addFollower(TERMINAL_47);
		TERMINAL_402.addFollower(TERMINAL_48);
		TERMINAL_402.addFollower(TERMINAL_49);
		TERMINAL_402.addFollower(TERMINAL_50);
		TERMINAL_402.addFollower(TERMINAL_51);
		TERMINAL_402.addFollower(TERMINAL_52);
		TERMINAL_402.addFollower(TERMINAL_53);
		TERMINAL_402.addFollower(TERMINAL_23);
		TERMINAL_402.addFollower(TERMINAL_54);
		TERMINAL_402.addFollower(TERMINAL_55);
		TERMINAL_402.addFollower(TERMINAL_56);
		TERMINAL_402.addFollower(TERMINAL_57);
		TERMINAL_402.addFollower(TERMINAL_58);
		TERMINAL_402.addFollower(TERMINAL_59);
		TERMINAL_402.addFollower(TERMINAL_60);
		TERMINAL_402.addFollower(TERMINAL_61);
		TERMINAL_402.addFollower(TERMINAL_62);
		TERMINAL_402.addFollower(TERMINAL_63);
		TERMINAL_402.addFollower(TERMINAL_64);
		TERMINAL_402.addFollower(TERMINAL_347);
		TERMINAL_402.addFollower(TERMINAL_348);
		TERMINAL_402.addFollower(TERMINAL_349);
		TERMINAL_402.addFollower(TERMINAL_350);
		TERMINAL_402.addFollower(TERMINAL_351);
		TERMINAL_402.addFollower(TERMINAL_352);
		TERMINAL_402.addFollower(TERMINAL_353);
		TERMINAL_402.addFollower(TERMINAL_354);
		TERMINAL_402.addFollower(TERMINAL_355);
		TERMINAL_402.addFollower(TERMINAL_140);
		TERMINAL_402.addFollower(TERMINAL_141);
		TERMINAL_402.addFollower(TERMINAL_142);
		TERMINAL_402.addFollower(TERMINAL_143);
		TERMINAL_402.addFollower(TERMINAL_144);
		TERMINAL_402.addFollower(TERMINAL_145);
		TERMINAL_402.addFollower(TERMINAL_146);
		TERMINAL_402.addFollower(TERMINAL_147);
		TERMINAL_402.addFollower(TERMINAL_153);
		TERMINAL_402.addFollower(TERMINAL_154);
		TERMINAL_402.addFollower(TERMINAL_155);
		TERMINAL_402.addFollower(TERMINAL_156);
		TERMINAL_402.addFollower(TERMINAL_157);
		TERMINAL_402.addFollower(TERMINAL_158);
		TERMINAL_402.addFollower(TERMINAL_159);
		TERMINAL_402.addFollower(TERMINAL_160);
		TERMINAL_402.addFollower(TERMINAL_161);
		TERMINAL_402.addFollower(TERMINAL_162);
		TERMINAL_402.addFollower(TERMINAL_163);
		TERMINAL_402.addFollower(TERMINAL_164);
		TERMINAL_402.addFollower(TERMINAL_165);
		TERMINAL_402.addFollower(TERMINAL_166);
		TERMINAL_402.addFollower(TERMINAL_167);
		TERMINAL_402.addFollower(TERMINAL_365);
		TERMINAL_402.addFollower(TERMINAL_366);
		TERMINAL_393.addFollower(TERMINAL_404);
		TERMINAL_404.addFollower(TERMINAL_391);
		TERMINAL_404.addFollower(TERMINAL_392);
		TERMINAL_404.addFollower(TERMINAL_393);
		TERMINAL_404.addFollower(TERMINAL_394);
		TERMINAL_404.addFollower(TERMINAL_395);
		TERMINAL_404.addFollower(TERMINAL_396);
		TERMINAL_404.addFollower(TERMINAL_397);
		TERMINAL_404.addFollower(TERMINAL_398);
		TERMINAL_404.addFollower(TERMINAL_46);
		TERMINAL_404.addFollower(TERMINAL_47);
		TERMINAL_404.addFollower(TERMINAL_48);
		TERMINAL_404.addFollower(TERMINAL_49);
		TERMINAL_404.addFollower(TERMINAL_50);
		TERMINAL_404.addFollower(TERMINAL_51);
		TERMINAL_404.addFollower(TERMINAL_52);
		TERMINAL_404.addFollower(TERMINAL_53);
		TERMINAL_404.addFollower(TERMINAL_23);
		TERMINAL_404.addFollower(TERMINAL_54);
		TERMINAL_404.addFollower(TERMINAL_55);
		TERMINAL_404.addFollower(TERMINAL_56);
		TERMINAL_404.addFollower(TERMINAL_57);
		TERMINAL_404.addFollower(TERMINAL_58);
		TERMINAL_404.addFollower(TERMINAL_59);
		TERMINAL_404.addFollower(TERMINAL_60);
		TERMINAL_404.addFollower(TERMINAL_61);
		TERMINAL_404.addFollower(TERMINAL_62);
		TERMINAL_404.addFollower(TERMINAL_63);
		TERMINAL_404.addFollower(TERMINAL_64);
		TERMINAL_404.addFollower(TERMINAL_347);
		TERMINAL_404.addFollower(TERMINAL_348);
		TERMINAL_404.addFollower(TERMINAL_349);
		TERMINAL_404.addFollower(TERMINAL_350);
		TERMINAL_404.addFollower(TERMINAL_351);
		TERMINAL_404.addFollower(TERMINAL_352);
		TERMINAL_404.addFollower(TERMINAL_353);
		TERMINAL_404.addFollower(TERMINAL_354);
		TERMINAL_404.addFollower(TERMINAL_355);
		TERMINAL_404.addFollower(TERMINAL_140);
		TERMINAL_404.addFollower(TERMINAL_141);
		TERMINAL_404.addFollower(TERMINAL_142);
		TERMINAL_404.addFollower(TERMINAL_143);
		TERMINAL_404.addFollower(TERMINAL_144);
		TERMINAL_404.addFollower(TERMINAL_145);
		TERMINAL_404.addFollower(TERMINAL_146);
		TERMINAL_404.addFollower(TERMINAL_147);
		TERMINAL_404.addFollower(TERMINAL_153);
		TERMINAL_404.addFollower(TERMINAL_154);
		TERMINAL_404.addFollower(TERMINAL_155);
		TERMINAL_404.addFollower(TERMINAL_156);
		TERMINAL_404.addFollower(TERMINAL_157);
		TERMINAL_404.addFollower(TERMINAL_158);
		TERMINAL_404.addFollower(TERMINAL_159);
		TERMINAL_404.addFollower(TERMINAL_160);
		TERMINAL_404.addFollower(TERMINAL_161);
		TERMINAL_404.addFollower(TERMINAL_162);
		TERMINAL_404.addFollower(TERMINAL_163);
		TERMINAL_404.addFollower(TERMINAL_164);
		TERMINAL_404.addFollower(TERMINAL_165);
		TERMINAL_404.addFollower(TERMINAL_166);
		TERMINAL_404.addFollower(TERMINAL_167);
		TERMINAL_404.addFollower(TERMINAL_365);
		TERMINAL_404.addFollower(TERMINAL_366);
		TERMINAL_394.addFollower(TERMINAL_405);
		TERMINAL_405.addFollower(TERMINAL_391);
		TERMINAL_405.addFollower(TERMINAL_392);
		TERMINAL_405.addFollower(TERMINAL_393);
		TERMINAL_405.addFollower(TERMINAL_394);
		TERMINAL_405.addFollower(TERMINAL_395);
		TERMINAL_405.addFollower(TERMINAL_396);
		TERMINAL_405.addFollower(TERMINAL_397);
		TERMINAL_405.addFollower(TERMINAL_398);
		TERMINAL_405.addFollower(TERMINAL_46);
		TERMINAL_405.addFollower(TERMINAL_47);
		TERMINAL_405.addFollower(TERMINAL_48);
		TERMINAL_405.addFollower(TERMINAL_49);
		TERMINAL_405.addFollower(TERMINAL_50);
		TERMINAL_405.addFollower(TERMINAL_51);
		TERMINAL_405.addFollower(TERMINAL_52);
		TERMINAL_405.addFollower(TERMINAL_53);
		TERMINAL_405.addFollower(TERMINAL_23);
		TERMINAL_405.addFollower(TERMINAL_54);
		TERMINAL_405.addFollower(TERMINAL_55);
		TERMINAL_405.addFollower(TERMINAL_56);
		TERMINAL_405.addFollower(TERMINAL_57);
		TERMINAL_405.addFollower(TERMINAL_58);
		TERMINAL_405.addFollower(TERMINAL_59);
		TERMINAL_405.addFollower(TERMINAL_60);
		TERMINAL_405.addFollower(TERMINAL_61);
		TERMINAL_405.addFollower(TERMINAL_62);
		TERMINAL_405.addFollower(TERMINAL_63);
		TERMINAL_405.addFollower(TERMINAL_64);
		TERMINAL_405.addFollower(TERMINAL_347);
		TERMINAL_405.addFollower(TERMINAL_348);
		TERMINAL_405.addFollower(TERMINAL_349);
		TERMINAL_405.addFollower(TERMINAL_350);
		TERMINAL_405.addFollower(TERMINAL_351);
		TERMINAL_405.addFollower(TERMINAL_352);
		TERMINAL_405.addFollower(TERMINAL_353);
		TERMINAL_405.addFollower(TERMINAL_354);
		TERMINAL_405.addFollower(TERMINAL_355);
		TERMINAL_405.addFollower(TERMINAL_140);
		TERMINAL_405.addFollower(TERMINAL_141);
		TERMINAL_405.addFollower(TERMINAL_142);
		TERMINAL_405.addFollower(TERMINAL_143);
		TERMINAL_405.addFollower(TERMINAL_144);
		TERMINAL_405.addFollower(TERMINAL_145);
		TERMINAL_405.addFollower(TERMINAL_146);
		TERMINAL_405.addFollower(TERMINAL_147);
		TERMINAL_405.addFollower(TERMINAL_153);
		TERMINAL_405.addFollower(TERMINAL_154);
		TERMINAL_405.addFollower(TERMINAL_155);
		TERMINAL_405.addFollower(TERMINAL_156);
		TERMINAL_405.addFollower(TERMINAL_157);
		TERMINAL_405.addFollower(TERMINAL_158);
		TERMINAL_405.addFollower(TERMINAL_159);
		TERMINAL_405.addFollower(TERMINAL_160);
		TERMINAL_405.addFollower(TERMINAL_161);
		TERMINAL_405.addFollower(TERMINAL_162);
		TERMINAL_405.addFollower(TERMINAL_163);
		TERMINAL_405.addFollower(TERMINAL_164);
		TERMINAL_405.addFollower(TERMINAL_165);
		TERMINAL_405.addFollower(TERMINAL_166);
		TERMINAL_405.addFollower(TERMINAL_167);
		TERMINAL_405.addFollower(TERMINAL_365);
		TERMINAL_405.addFollower(TERMINAL_366);
		TERMINAL_395.addFollower(TERMINAL_46);
		TERMINAL_395.addFollower(TERMINAL_47);
		TERMINAL_395.addFollower(TERMINAL_48);
		TERMINAL_395.addFollower(TERMINAL_49);
		TERMINAL_395.addFollower(TERMINAL_50);
		TERMINAL_395.addFollower(TERMINAL_51);
		TERMINAL_395.addFollower(TERMINAL_52);
		TERMINAL_395.addFollower(TERMINAL_53);
		TERMINAL_395.addFollower(TERMINAL_23);
		TERMINAL_395.addFollower(TERMINAL_54);
		TERMINAL_395.addFollower(TERMINAL_55);
		TERMINAL_395.addFollower(TERMINAL_56);
		TERMINAL_395.addFollower(TERMINAL_57);
		TERMINAL_395.addFollower(TERMINAL_58);
		TERMINAL_395.addFollower(TERMINAL_59);
		TERMINAL_395.addFollower(TERMINAL_60);
		TERMINAL_395.addFollower(TERMINAL_61);
		TERMINAL_395.addFollower(TERMINAL_62);
		TERMINAL_395.addFollower(TERMINAL_63);
		TERMINAL_395.addFollower(TERMINAL_64);
		TERMINAL_396.addFollower(TERMINAL_46);
		TERMINAL_396.addFollower(TERMINAL_47);
		TERMINAL_396.addFollower(TERMINAL_48);
		TERMINAL_396.addFollower(TERMINAL_49);
		TERMINAL_396.addFollower(TERMINAL_50);
		TERMINAL_396.addFollower(TERMINAL_51);
		TERMINAL_396.addFollower(TERMINAL_52);
		TERMINAL_396.addFollower(TERMINAL_53);
		TERMINAL_396.addFollower(TERMINAL_23);
		TERMINAL_396.addFollower(TERMINAL_54);
		TERMINAL_396.addFollower(TERMINAL_55);
		TERMINAL_396.addFollower(TERMINAL_56);
		TERMINAL_396.addFollower(TERMINAL_57);
		TERMINAL_396.addFollower(TERMINAL_58);
		TERMINAL_396.addFollower(TERMINAL_59);
		TERMINAL_396.addFollower(TERMINAL_60);
		TERMINAL_396.addFollower(TERMINAL_61);
		TERMINAL_396.addFollower(TERMINAL_62);
		TERMINAL_396.addFollower(TERMINAL_63);
		TERMINAL_396.addFollower(TERMINAL_64);
		TERMINAL_397.addFollower(TERMINAL_46);
		TERMINAL_397.addFollower(TERMINAL_47);
		TERMINAL_397.addFollower(TERMINAL_48);
		TERMINAL_397.addFollower(TERMINAL_49);
		TERMINAL_397.addFollower(TERMINAL_50);
		TERMINAL_397.addFollower(TERMINAL_51);
		TERMINAL_397.addFollower(TERMINAL_52);
		TERMINAL_397.addFollower(TERMINAL_53);
		TERMINAL_397.addFollower(TERMINAL_23);
		TERMINAL_397.addFollower(TERMINAL_54);
		TERMINAL_397.addFollower(TERMINAL_55);
		TERMINAL_397.addFollower(TERMINAL_56);
		TERMINAL_397.addFollower(TERMINAL_57);
		TERMINAL_397.addFollower(TERMINAL_58);
		TERMINAL_397.addFollower(TERMINAL_59);
		TERMINAL_397.addFollower(TERMINAL_60);
		TERMINAL_397.addFollower(TERMINAL_61);
		TERMINAL_397.addFollower(TERMINAL_62);
		TERMINAL_397.addFollower(TERMINAL_63);
		TERMINAL_397.addFollower(TERMINAL_64);
		TERMINAL_398.addFollower(TERMINAL_46);
		TERMINAL_398.addFollower(TERMINAL_47);
		TERMINAL_398.addFollower(TERMINAL_48);
		TERMINAL_398.addFollower(TERMINAL_49);
		TERMINAL_398.addFollower(TERMINAL_50);
		TERMINAL_398.addFollower(TERMINAL_51);
		TERMINAL_398.addFollower(TERMINAL_52);
		TERMINAL_398.addFollower(TERMINAL_53);
		TERMINAL_398.addFollower(TERMINAL_23);
		TERMINAL_398.addFollower(TERMINAL_54);
		TERMINAL_398.addFollower(TERMINAL_55);
		TERMINAL_398.addFollower(TERMINAL_56);
		TERMINAL_398.addFollower(TERMINAL_57);
		TERMINAL_398.addFollower(TERMINAL_58);
		TERMINAL_398.addFollower(TERMINAL_59);
		TERMINAL_398.addFollower(TERMINAL_60);
		TERMINAL_398.addFollower(TERMINAL_61);
		TERMINAL_398.addFollower(TERMINAL_62);
		TERMINAL_398.addFollower(TERMINAL_63);
		TERMINAL_398.addFollower(TERMINAL_64);
		TERMINAL_60.addFollower(TERMINAL_48);
		TERMINAL_60.addFollower(TERMINAL_54);
		TERMINAL_60.addFollower(TERMINAL_57);
		TERMINAL_60.addFollower(TERMINAL_58);
		TERMINAL_60.addFollower(TERMINAL_59);
		TERMINAL_60.addFollower(TERMINAL_50);
		TERMINAL_60.addFollower(TERMINAL_49);
		TERMINAL_406.addFollower(TERMINAL_415);
		TERMINAL_415.addFollower(TERMINAL_406);
		TERMINAL_415.addFollower(TERMINAL_407);
		TERMINAL_415.addFollower(TERMINAL_408);
		TERMINAL_415.addFollower(TERMINAL_409);
		TERMINAL_415.addFollower(TERMINAL_410);
		TERMINAL_415.addFollower(TERMINAL_411);
		TERMINAL_415.addFollower(TERMINAL_412);
		TERMINAL_415.addFollower(TERMINAL_413);
		TERMINAL_415.addFollower(TERMINAL_414);
		TERMINAL_407.addFollower(TERMINAL_416);
		TERMINAL_416.addFollower(TERMINAL_417);
		TERMINAL_417.addFollower(TERMINAL_46);
		TERMINAL_417.addFollower(TERMINAL_47);
		TERMINAL_417.addFollower(TERMINAL_48);
		TERMINAL_417.addFollower(TERMINAL_49);
		TERMINAL_417.addFollower(TERMINAL_50);
		TERMINAL_417.addFollower(TERMINAL_51);
		TERMINAL_417.addFollower(TERMINAL_52);
		TERMINAL_417.addFollower(TERMINAL_53);
		TERMINAL_417.addFollower(TERMINAL_23);
		TERMINAL_417.addFollower(TERMINAL_54);
		TERMINAL_417.addFollower(TERMINAL_55);
		TERMINAL_417.addFollower(TERMINAL_56);
		TERMINAL_417.addFollower(TERMINAL_57);
		TERMINAL_417.addFollower(TERMINAL_58);
		TERMINAL_417.addFollower(TERMINAL_59);
		TERMINAL_417.addFollower(TERMINAL_60);
		TERMINAL_417.addFollower(TERMINAL_61);
		TERMINAL_417.addFollower(TERMINAL_62);
		TERMINAL_417.addFollower(TERMINAL_63);
		TERMINAL_417.addFollower(TERMINAL_64);
		TERMINAL_417.addFollower(TERMINAL_418);
		TERMINAL_419.addFollower(TERMINAL_46);
		TERMINAL_419.addFollower(TERMINAL_47);
		TERMINAL_419.addFollower(TERMINAL_48);
		TERMINAL_419.addFollower(TERMINAL_49);
		TERMINAL_419.addFollower(TERMINAL_50);
		TERMINAL_419.addFollower(TERMINAL_51);
		TERMINAL_419.addFollower(TERMINAL_52);
		TERMINAL_419.addFollower(TERMINAL_53);
		TERMINAL_419.addFollower(TERMINAL_23);
		TERMINAL_419.addFollower(TERMINAL_54);
		TERMINAL_419.addFollower(TERMINAL_55);
		TERMINAL_419.addFollower(TERMINAL_56);
		TERMINAL_419.addFollower(TERMINAL_57);
		TERMINAL_419.addFollower(TERMINAL_58);
		TERMINAL_419.addFollower(TERMINAL_59);
		TERMINAL_419.addFollower(TERMINAL_60);
		TERMINAL_419.addFollower(TERMINAL_61);
		TERMINAL_419.addFollower(TERMINAL_62);
		TERMINAL_419.addFollower(TERMINAL_63);
		TERMINAL_419.addFollower(TERMINAL_64);
		TERMINAL_418.addFollower(TERMINAL_406);
		TERMINAL_418.addFollower(TERMINAL_407);
		TERMINAL_418.addFollower(TERMINAL_408);
		TERMINAL_418.addFollower(TERMINAL_409);
		TERMINAL_418.addFollower(TERMINAL_410);
		TERMINAL_418.addFollower(TERMINAL_411);
		TERMINAL_418.addFollower(TERMINAL_412);
		TERMINAL_418.addFollower(TERMINAL_413);
		TERMINAL_418.addFollower(TERMINAL_414);
		TERMINAL_408.addFollower(TERMINAL_420);
		TERMINAL_420.addFollower(TERMINAL_406);
		TERMINAL_420.addFollower(TERMINAL_407);
		TERMINAL_420.addFollower(TERMINAL_408);
		TERMINAL_420.addFollower(TERMINAL_409);
		TERMINAL_420.addFollower(TERMINAL_410);
		TERMINAL_420.addFollower(TERMINAL_411);
		TERMINAL_420.addFollower(TERMINAL_412);
		TERMINAL_420.addFollower(TERMINAL_413);
		TERMINAL_420.addFollower(TERMINAL_414);
		TERMINAL_409.addFollower(TERMINAL_421);
		TERMINAL_421.addFollower(TERMINAL_406);
		TERMINAL_421.addFollower(TERMINAL_407);
		TERMINAL_421.addFollower(TERMINAL_408);
		TERMINAL_421.addFollower(TERMINAL_409);
		TERMINAL_421.addFollower(TERMINAL_410);
		TERMINAL_421.addFollower(TERMINAL_411);
		TERMINAL_421.addFollower(TERMINAL_412);
		TERMINAL_421.addFollower(TERMINAL_413);
		TERMINAL_421.addFollower(TERMINAL_414);
		TERMINAL_410.addFollower(TERMINAL_46);
		TERMINAL_410.addFollower(TERMINAL_47);
		TERMINAL_410.addFollower(TERMINAL_48);
		TERMINAL_410.addFollower(TERMINAL_49);
		TERMINAL_410.addFollower(TERMINAL_50);
		TERMINAL_410.addFollower(TERMINAL_51);
		TERMINAL_410.addFollower(TERMINAL_52);
		TERMINAL_410.addFollower(TERMINAL_53);
		TERMINAL_410.addFollower(TERMINAL_23);
		TERMINAL_410.addFollower(TERMINAL_54);
		TERMINAL_410.addFollower(TERMINAL_55);
		TERMINAL_410.addFollower(TERMINAL_56);
		TERMINAL_410.addFollower(TERMINAL_57);
		TERMINAL_410.addFollower(TERMINAL_58);
		TERMINAL_410.addFollower(TERMINAL_59);
		TERMINAL_410.addFollower(TERMINAL_60);
		TERMINAL_410.addFollower(TERMINAL_61);
		TERMINAL_410.addFollower(TERMINAL_62);
		TERMINAL_410.addFollower(TERMINAL_63);
		TERMINAL_410.addFollower(TERMINAL_64);
		TERMINAL_411.addFollower(TERMINAL_46);
		TERMINAL_411.addFollower(TERMINAL_47);
		TERMINAL_411.addFollower(TERMINAL_48);
		TERMINAL_411.addFollower(TERMINAL_49);
		TERMINAL_411.addFollower(TERMINAL_50);
		TERMINAL_411.addFollower(TERMINAL_51);
		TERMINAL_411.addFollower(TERMINAL_52);
		TERMINAL_411.addFollower(TERMINAL_53);
		TERMINAL_411.addFollower(TERMINAL_23);
		TERMINAL_411.addFollower(TERMINAL_54);
		TERMINAL_411.addFollower(TERMINAL_55);
		TERMINAL_411.addFollower(TERMINAL_56);
		TERMINAL_411.addFollower(TERMINAL_57);
		TERMINAL_411.addFollower(TERMINAL_58);
		TERMINAL_411.addFollower(TERMINAL_59);
		TERMINAL_411.addFollower(TERMINAL_60);
		TERMINAL_411.addFollower(TERMINAL_61);
		TERMINAL_411.addFollower(TERMINAL_62);
		TERMINAL_411.addFollower(TERMINAL_63);
		TERMINAL_411.addFollower(TERMINAL_64);
		TERMINAL_412.addFollower(TERMINAL_46);
		TERMINAL_412.addFollower(TERMINAL_47);
		TERMINAL_412.addFollower(TERMINAL_48);
		TERMINAL_412.addFollower(TERMINAL_49);
		TERMINAL_412.addFollower(TERMINAL_50);
		TERMINAL_412.addFollower(TERMINAL_51);
		TERMINAL_412.addFollower(TERMINAL_52);
		TERMINAL_412.addFollower(TERMINAL_53);
		TERMINAL_412.addFollower(TERMINAL_23);
		TERMINAL_412.addFollower(TERMINAL_54);
		TERMINAL_412.addFollower(TERMINAL_55);
		TERMINAL_412.addFollower(TERMINAL_56);
		TERMINAL_412.addFollower(TERMINAL_57);
		TERMINAL_412.addFollower(TERMINAL_58);
		TERMINAL_412.addFollower(TERMINAL_59);
		TERMINAL_412.addFollower(TERMINAL_60);
		TERMINAL_412.addFollower(TERMINAL_61);
		TERMINAL_412.addFollower(TERMINAL_62);
		TERMINAL_412.addFollower(TERMINAL_63);
		TERMINAL_412.addFollower(TERMINAL_64);
		TERMINAL_413.addFollower(TERMINAL_46);
		TERMINAL_413.addFollower(TERMINAL_47);
		TERMINAL_413.addFollower(TERMINAL_48);
		TERMINAL_413.addFollower(TERMINAL_49);
		TERMINAL_413.addFollower(TERMINAL_50);
		TERMINAL_413.addFollower(TERMINAL_51);
		TERMINAL_413.addFollower(TERMINAL_52);
		TERMINAL_413.addFollower(TERMINAL_53);
		TERMINAL_413.addFollower(TERMINAL_23);
		TERMINAL_413.addFollower(TERMINAL_54);
		TERMINAL_413.addFollower(TERMINAL_55);
		TERMINAL_413.addFollower(TERMINAL_56);
		TERMINAL_413.addFollower(TERMINAL_57);
		TERMINAL_413.addFollower(TERMINAL_58);
		TERMINAL_413.addFollower(TERMINAL_59);
		TERMINAL_413.addFollower(TERMINAL_60);
		TERMINAL_413.addFollower(TERMINAL_61);
		TERMINAL_413.addFollower(TERMINAL_62);
		TERMINAL_413.addFollower(TERMINAL_63);
		TERMINAL_413.addFollower(TERMINAL_64);
		TERMINAL_414.addFollower(TERMINAL_422);
		TERMINAL_414.addFollower(TERMINAL_423);
		TERMINAL_414.addFollower(TERMINAL_424);
		TERMINAL_414.addFollower(TERMINAL_425);
		TERMINAL_414.addFollower(TERMINAL_46);
		TERMINAL_414.addFollower(TERMINAL_47);
		TERMINAL_414.addFollower(TERMINAL_48);
		TERMINAL_414.addFollower(TERMINAL_49);
		TERMINAL_414.addFollower(TERMINAL_50);
		TERMINAL_414.addFollower(TERMINAL_51);
		TERMINAL_414.addFollower(TERMINAL_52);
		TERMINAL_414.addFollower(TERMINAL_53);
		TERMINAL_414.addFollower(TERMINAL_23);
		TERMINAL_414.addFollower(TERMINAL_54);
		TERMINAL_414.addFollower(TERMINAL_55);
		TERMINAL_414.addFollower(TERMINAL_56);
		TERMINAL_414.addFollower(TERMINAL_57);
		TERMINAL_414.addFollower(TERMINAL_58);
		TERMINAL_414.addFollower(TERMINAL_59);
		TERMINAL_414.addFollower(TERMINAL_60);
		TERMINAL_414.addFollower(TERMINAL_61);
		TERMINAL_414.addFollower(TERMINAL_62);
		TERMINAL_414.addFollower(TERMINAL_63);
		TERMINAL_414.addFollower(TERMINAL_64);
		TERMINAL_414.addFollower(TERMINAL_347);
		TERMINAL_414.addFollower(TERMINAL_348);
		TERMINAL_414.addFollower(TERMINAL_349);
		TERMINAL_414.addFollower(TERMINAL_350);
		TERMINAL_414.addFollower(TERMINAL_351);
		TERMINAL_414.addFollower(TERMINAL_352);
		TERMINAL_414.addFollower(TERMINAL_353);
		TERMINAL_414.addFollower(TERMINAL_354);
		TERMINAL_414.addFollower(TERMINAL_355);
		TERMINAL_414.addFollower(TERMINAL_140);
		TERMINAL_414.addFollower(TERMINAL_141);
		TERMINAL_414.addFollower(TERMINAL_142);
		TERMINAL_414.addFollower(TERMINAL_143);
		TERMINAL_414.addFollower(TERMINAL_144);
		TERMINAL_414.addFollower(TERMINAL_145);
		TERMINAL_414.addFollower(TERMINAL_146);
		TERMINAL_414.addFollower(TERMINAL_147);
		TERMINAL_414.addFollower(TERMINAL_153);
		TERMINAL_414.addFollower(TERMINAL_154);
		TERMINAL_414.addFollower(TERMINAL_155);
		TERMINAL_414.addFollower(TERMINAL_156);
		TERMINAL_414.addFollower(TERMINAL_157);
		TERMINAL_414.addFollower(TERMINAL_158);
		TERMINAL_414.addFollower(TERMINAL_159);
		TERMINAL_414.addFollower(TERMINAL_160);
		TERMINAL_414.addFollower(TERMINAL_161);
		TERMINAL_414.addFollower(TERMINAL_162);
		TERMINAL_414.addFollower(TERMINAL_163);
		TERMINAL_414.addFollower(TERMINAL_164);
		TERMINAL_414.addFollower(TERMINAL_165);
		TERMINAL_414.addFollower(TERMINAL_166);
		TERMINAL_414.addFollower(TERMINAL_167);
		TERMINAL_414.addFollower(TERMINAL_365);
		TERMINAL_414.addFollower(TERMINAL_366);
		TERMINAL_422.addFollower(TERMINAL_46);
		TERMINAL_422.addFollower(TERMINAL_47);
		TERMINAL_422.addFollower(TERMINAL_48);
		TERMINAL_422.addFollower(TERMINAL_49);
		TERMINAL_422.addFollower(TERMINAL_50);
		TERMINAL_422.addFollower(TERMINAL_51);
		TERMINAL_422.addFollower(TERMINAL_52);
		TERMINAL_422.addFollower(TERMINAL_53);
		TERMINAL_422.addFollower(TERMINAL_23);
		TERMINAL_422.addFollower(TERMINAL_54);
		TERMINAL_422.addFollower(TERMINAL_55);
		TERMINAL_422.addFollower(TERMINAL_56);
		TERMINAL_422.addFollower(TERMINAL_57);
		TERMINAL_422.addFollower(TERMINAL_58);
		TERMINAL_422.addFollower(TERMINAL_59);
		TERMINAL_422.addFollower(TERMINAL_60);
		TERMINAL_422.addFollower(TERMINAL_61);
		TERMINAL_422.addFollower(TERMINAL_62);
		TERMINAL_422.addFollower(TERMINAL_63);
		TERMINAL_422.addFollower(TERMINAL_64);
		TERMINAL_423.addFollower(TERMINAL_46);
		TERMINAL_423.addFollower(TERMINAL_47);
		TERMINAL_423.addFollower(TERMINAL_48);
		TERMINAL_423.addFollower(TERMINAL_49);
		TERMINAL_423.addFollower(TERMINAL_50);
		TERMINAL_423.addFollower(TERMINAL_51);
		TERMINAL_423.addFollower(TERMINAL_52);
		TERMINAL_423.addFollower(TERMINAL_53);
		TERMINAL_423.addFollower(TERMINAL_23);
		TERMINAL_423.addFollower(TERMINAL_54);
		TERMINAL_423.addFollower(TERMINAL_55);
		TERMINAL_423.addFollower(TERMINAL_56);
		TERMINAL_423.addFollower(TERMINAL_57);
		TERMINAL_423.addFollower(TERMINAL_58);
		TERMINAL_423.addFollower(TERMINAL_59);
		TERMINAL_423.addFollower(TERMINAL_60);
		TERMINAL_423.addFollower(TERMINAL_61);
		TERMINAL_423.addFollower(TERMINAL_62);
		TERMINAL_423.addFollower(TERMINAL_63);
		TERMINAL_423.addFollower(TERMINAL_64);
		TERMINAL_424.addFollower(TERMINAL_46);
		TERMINAL_424.addFollower(TERMINAL_47);
		TERMINAL_424.addFollower(TERMINAL_48);
		TERMINAL_424.addFollower(TERMINAL_49);
		TERMINAL_424.addFollower(TERMINAL_50);
		TERMINAL_424.addFollower(TERMINAL_51);
		TERMINAL_424.addFollower(TERMINAL_52);
		TERMINAL_424.addFollower(TERMINAL_53);
		TERMINAL_424.addFollower(TERMINAL_23);
		TERMINAL_424.addFollower(TERMINAL_54);
		TERMINAL_424.addFollower(TERMINAL_55);
		TERMINAL_424.addFollower(TERMINAL_56);
		TERMINAL_424.addFollower(TERMINAL_57);
		TERMINAL_424.addFollower(TERMINAL_58);
		TERMINAL_424.addFollower(TERMINAL_59);
		TERMINAL_424.addFollower(TERMINAL_60);
		TERMINAL_424.addFollower(TERMINAL_61);
		TERMINAL_424.addFollower(TERMINAL_62);
		TERMINAL_424.addFollower(TERMINAL_63);
		TERMINAL_424.addFollower(TERMINAL_64);
		TERMINAL_425.addFollower(TERMINAL_46);
		TERMINAL_425.addFollower(TERMINAL_47);
		TERMINAL_425.addFollower(TERMINAL_48);
		TERMINAL_425.addFollower(TERMINAL_49);
		TERMINAL_425.addFollower(TERMINAL_50);
		TERMINAL_425.addFollower(TERMINAL_51);
		TERMINAL_425.addFollower(TERMINAL_52);
		TERMINAL_425.addFollower(TERMINAL_53);
		TERMINAL_425.addFollower(TERMINAL_23);
		TERMINAL_425.addFollower(TERMINAL_54);
		TERMINAL_425.addFollower(TERMINAL_55);
		TERMINAL_425.addFollower(TERMINAL_56);
		TERMINAL_425.addFollower(TERMINAL_57);
		TERMINAL_425.addFollower(TERMINAL_58);
		TERMINAL_425.addFollower(TERMINAL_59);
		TERMINAL_425.addFollower(TERMINAL_60);
		TERMINAL_425.addFollower(TERMINAL_61);
		TERMINAL_425.addFollower(TERMINAL_62);
		TERMINAL_425.addFollower(TERMINAL_63);
		TERMINAL_425.addFollower(TERMINAL_64);
		TERMINAL_61.addFollower(TERMINAL_426);
		TERMINAL_426.addFollower(TERMINAL_140);
		TERMINAL_426.addFollower(TERMINAL_141);
		TERMINAL_426.addFollower(TERMINAL_142);
		TERMINAL_426.addFollower(TERMINAL_143);
		TERMINAL_426.addFollower(TERMINAL_144);
		TERMINAL_426.addFollower(TERMINAL_145);
		TERMINAL_426.addFollower(TERMINAL_146);
		TERMINAL_426.addFollower(TERMINAL_147);
		TERMINAL_140.addFollower(TERMINAL_427);
		TERMINAL_427.addFollower(TERMINAL_428);
		TERMINAL_428.addFollower(TERMINAL_140);
		TERMINAL_428.addFollower(TERMINAL_141);
		TERMINAL_428.addFollower(TERMINAL_142);
		TERMINAL_428.addFollower(TERMINAL_143);
		TERMINAL_428.addFollower(TERMINAL_144);
		TERMINAL_428.addFollower(TERMINAL_145);
		TERMINAL_428.addFollower(TERMINAL_146);
		TERMINAL_428.addFollower(TERMINAL_147);
		TERMINAL_141.addFollower(TERMINAL_429);
		TERMINAL_429.addFollower(TERMINAL_183);
		TERMINAL_142.addFollower(TERMINAL_430);
		TERMINAL_430.addFollower(TERMINAL_80);
		TERMINAL_430.addFollower(TERMINAL_6);
		TERMINAL_430.addFollower(TERMINAL_7);
		TERMINAL_430.addFollower(TERMINAL_8);
		TERMINAL_430.addFollower(TERMINAL_11);
		TERMINAL_430.addFollower(TERMINAL_12);
		TERMINAL_430.addFollower(TERMINAL_213);
		TERMINAL_430.addFollower(TERMINAL_214);
		TERMINAL_430.addFollower(TERMINAL_215);
		TERMINAL_430.addFollower(TERMINAL_216);
		TERMINAL_430.addFollower(TERMINAL_217);
		TERMINAL_430.addFollower(TERMINAL_218);
		TERMINAL_143.addFollower(TERMINAL_431);
		TERMINAL_431.addFollower(TERMINAL_432);
		TERMINAL_432.addFollower(TERMINAL_140);
		TERMINAL_432.addFollower(TERMINAL_141);
		TERMINAL_432.addFollower(TERMINAL_142);
		TERMINAL_432.addFollower(TERMINAL_143);
		TERMINAL_432.addFollower(TERMINAL_144);
		TERMINAL_432.addFollower(TERMINAL_145);
		TERMINAL_432.addFollower(TERMINAL_146);
		TERMINAL_432.addFollower(TERMINAL_147);
	}
	public static void wire4() {
		TERMINAL_144.addFollower(TERMINAL_433);
		TERMINAL_433.addFollower(TERMINAL_46);
		TERMINAL_433.addFollower(TERMINAL_47);
		TERMINAL_433.addFollower(TERMINAL_48);
		TERMINAL_433.addFollower(TERMINAL_49);
		TERMINAL_433.addFollower(TERMINAL_50);
		TERMINAL_433.addFollower(TERMINAL_51);
		TERMINAL_433.addFollower(TERMINAL_52);
		TERMINAL_433.addFollower(TERMINAL_53);
		TERMINAL_433.addFollower(TERMINAL_23);
		TERMINAL_433.addFollower(TERMINAL_54);
		TERMINAL_433.addFollower(TERMINAL_55);
		TERMINAL_433.addFollower(TERMINAL_56);
		TERMINAL_433.addFollower(TERMINAL_57);
		TERMINAL_433.addFollower(TERMINAL_58);
		TERMINAL_433.addFollower(TERMINAL_59);
		TERMINAL_433.addFollower(TERMINAL_60);
		TERMINAL_433.addFollower(TERMINAL_61);
		TERMINAL_433.addFollower(TERMINAL_62);
		TERMINAL_433.addFollower(TERMINAL_63);
		TERMINAL_433.addFollower(TERMINAL_64);
		TERMINAL_145.addFollower(TERMINAL_434);
		TERMINAL_434.addFollower(TERMINAL_435);
		TERMINAL_435.addFollower(TERMINAL_140);
		TERMINAL_435.addFollower(TERMINAL_141);
		TERMINAL_435.addFollower(TERMINAL_142);
		TERMINAL_435.addFollower(TERMINAL_143);
		TERMINAL_435.addFollower(TERMINAL_144);
		TERMINAL_435.addFollower(TERMINAL_145);
		TERMINAL_435.addFollower(TERMINAL_146);
		TERMINAL_435.addFollower(TERMINAL_147);
		TERMINAL_146.addFollower(TERMINAL_436);
		TERMINAL_436.addFollower(TERMINAL_437);
		TERMINAL_437.addFollower(TERMINAL_140);
		TERMINAL_437.addFollower(TERMINAL_141);
		TERMINAL_437.addFollower(TERMINAL_142);
		TERMINAL_437.addFollower(TERMINAL_143);
		TERMINAL_437.addFollower(TERMINAL_144);
		TERMINAL_437.addFollower(TERMINAL_145);
		TERMINAL_437.addFollower(TERMINAL_146);
		TERMINAL_437.addFollower(TERMINAL_147);
		TERMINAL_147.addFollower(TERMINAL_46);
		TERMINAL_147.addFollower(TERMINAL_47);
		TERMINAL_147.addFollower(TERMINAL_48);
		TERMINAL_147.addFollower(TERMINAL_49);
		TERMINAL_147.addFollower(TERMINAL_50);
		TERMINAL_147.addFollower(TERMINAL_51);
		TERMINAL_147.addFollower(TERMINAL_52);
		TERMINAL_147.addFollower(TERMINAL_53);
		TERMINAL_147.addFollower(TERMINAL_23);
		TERMINAL_147.addFollower(TERMINAL_54);
		TERMINAL_147.addFollower(TERMINAL_55);
		TERMINAL_147.addFollower(TERMINAL_56);
		TERMINAL_147.addFollower(TERMINAL_57);
		TERMINAL_147.addFollower(TERMINAL_58);
		TERMINAL_147.addFollower(TERMINAL_59);
		TERMINAL_147.addFollower(TERMINAL_60);
		TERMINAL_147.addFollower(TERMINAL_61);
		TERMINAL_147.addFollower(TERMINAL_62);
		TERMINAL_147.addFollower(TERMINAL_63);
		TERMINAL_147.addFollower(TERMINAL_64);
		TERMINAL_147.addFollower(TERMINAL_347);
		TERMINAL_147.addFollower(TERMINAL_348);
		TERMINAL_147.addFollower(TERMINAL_349);
		TERMINAL_147.addFollower(TERMINAL_350);
		TERMINAL_147.addFollower(TERMINAL_351);
		TERMINAL_147.addFollower(TERMINAL_352);
		TERMINAL_147.addFollower(TERMINAL_353);
		TERMINAL_147.addFollower(TERMINAL_354);
		TERMINAL_147.addFollower(TERMINAL_355);
		TERMINAL_147.addFollower(TERMINAL_140);
		TERMINAL_147.addFollower(TERMINAL_141);
		TERMINAL_147.addFollower(TERMINAL_142);
		TERMINAL_147.addFollower(TERMINAL_143);
		TERMINAL_147.addFollower(TERMINAL_144);
		TERMINAL_147.addFollower(TERMINAL_145);
		TERMINAL_147.addFollower(TERMINAL_146);
		TERMINAL_147.addFollower(TERMINAL_147);
		TERMINAL_147.addFollower(TERMINAL_153);
		TERMINAL_147.addFollower(TERMINAL_154);
		TERMINAL_147.addFollower(TERMINAL_155);
		TERMINAL_147.addFollower(TERMINAL_156);
		TERMINAL_147.addFollower(TERMINAL_157);
		TERMINAL_147.addFollower(TERMINAL_158);
		TERMINAL_147.addFollower(TERMINAL_159);
		TERMINAL_147.addFollower(TERMINAL_160);
		TERMINAL_147.addFollower(TERMINAL_161);
		TERMINAL_147.addFollower(TERMINAL_162);
		TERMINAL_147.addFollower(TERMINAL_163);
		TERMINAL_147.addFollower(TERMINAL_164);
		TERMINAL_147.addFollower(TERMINAL_165);
		TERMINAL_147.addFollower(TERMINAL_166);
		TERMINAL_147.addFollower(TERMINAL_167);
		TERMINAL_62.addFollower(TERMINAL_438);
		TERMINAL_438.addFollower(TERMINAL_148);
		TERMINAL_438.addFollower(TERMINAL_149);
		TERMINAL_438.addFollower(TERMINAL_150);
		TERMINAL_438.addFollower(TERMINAL_151);
		TERMINAL_438.addFollower(TERMINAL_152);
		TERMINAL_148.addFollower(TERMINAL_439);
		TERMINAL_439.addFollower(TERMINAL_440);
		TERMINAL_440.addFollower(TERMINAL_148);
		TERMINAL_440.addFollower(TERMINAL_149);
		TERMINAL_440.addFollower(TERMINAL_150);
		TERMINAL_440.addFollower(TERMINAL_151);
		TERMINAL_440.addFollower(TERMINAL_152);
		TERMINAL_149.addFollower(TERMINAL_441);
		TERMINAL_441.addFollower(TERMINAL_183);
		TERMINAL_150.addFollower(TERMINAL_442);
		TERMINAL_442.addFollower(TERMINAL_80);
		TERMINAL_442.addFollower(TERMINAL_6);
		TERMINAL_442.addFollower(TERMINAL_7);
		TERMINAL_442.addFollower(TERMINAL_8);
		TERMINAL_442.addFollower(TERMINAL_11);
		TERMINAL_442.addFollower(TERMINAL_12);
		TERMINAL_442.addFollower(TERMINAL_213);
		TERMINAL_442.addFollower(TERMINAL_214);
		TERMINAL_442.addFollower(TERMINAL_215);
		TERMINAL_442.addFollower(TERMINAL_216);
		TERMINAL_442.addFollower(TERMINAL_217);
		TERMINAL_442.addFollower(TERMINAL_218);
		TERMINAL_151.addFollower(TERMINAL_443);
		TERMINAL_443.addFollower(TERMINAL_444);
		TERMINAL_444.addFollower(TERMINAL_148);
		TERMINAL_444.addFollower(TERMINAL_149);
		TERMINAL_444.addFollower(TERMINAL_150);
		TERMINAL_444.addFollower(TERMINAL_151);
		TERMINAL_444.addFollower(TERMINAL_152);
		TERMINAL_152.addFollower(TERMINAL_46);
		TERMINAL_152.addFollower(TERMINAL_47);
		TERMINAL_152.addFollower(TERMINAL_48);
		TERMINAL_152.addFollower(TERMINAL_49);
		TERMINAL_152.addFollower(TERMINAL_50);
		TERMINAL_152.addFollower(TERMINAL_51);
		TERMINAL_152.addFollower(TERMINAL_52);
		TERMINAL_152.addFollower(TERMINAL_53);
		TERMINAL_152.addFollower(TERMINAL_23);
		TERMINAL_152.addFollower(TERMINAL_54);
		TERMINAL_152.addFollower(TERMINAL_55);
		TERMINAL_152.addFollower(TERMINAL_56);
		TERMINAL_152.addFollower(TERMINAL_57);
		TERMINAL_152.addFollower(TERMINAL_58);
		TERMINAL_152.addFollower(TERMINAL_59);
		TERMINAL_152.addFollower(TERMINAL_60);
		TERMINAL_152.addFollower(TERMINAL_61);
		TERMINAL_152.addFollower(TERMINAL_62);
		TERMINAL_152.addFollower(TERMINAL_63);
		TERMINAL_152.addFollower(TERMINAL_64);
		TERMINAL_152.addFollower(TERMINAL_347);
		TERMINAL_152.addFollower(TERMINAL_348);
		TERMINAL_152.addFollower(TERMINAL_349);
		TERMINAL_152.addFollower(TERMINAL_350);
		TERMINAL_152.addFollower(TERMINAL_351);
		TERMINAL_152.addFollower(TERMINAL_352);
		TERMINAL_152.addFollower(TERMINAL_353);
		TERMINAL_152.addFollower(TERMINAL_354);
		TERMINAL_152.addFollower(TERMINAL_355);
		TERMINAL_152.addFollower(TERMINAL_140);
		TERMINAL_152.addFollower(TERMINAL_141);
		TERMINAL_152.addFollower(TERMINAL_142);
		TERMINAL_152.addFollower(TERMINAL_143);
		TERMINAL_152.addFollower(TERMINAL_144);
		TERMINAL_152.addFollower(TERMINAL_145);
		TERMINAL_152.addFollower(TERMINAL_146);
		TERMINAL_152.addFollower(TERMINAL_147);
		TERMINAL_152.addFollower(TERMINAL_153);
		TERMINAL_152.addFollower(TERMINAL_154);
		TERMINAL_152.addFollower(TERMINAL_155);
		TERMINAL_152.addFollower(TERMINAL_156);
		TERMINAL_152.addFollower(TERMINAL_157);
		TERMINAL_152.addFollower(TERMINAL_158);
		TERMINAL_152.addFollower(TERMINAL_159);
		TERMINAL_152.addFollower(TERMINAL_160);
		TERMINAL_152.addFollower(TERMINAL_161);
		TERMINAL_152.addFollower(TERMINAL_162);
		TERMINAL_152.addFollower(TERMINAL_163);
		TERMINAL_152.addFollower(TERMINAL_164);
		TERMINAL_152.addFollower(TERMINAL_165);
		TERMINAL_152.addFollower(TERMINAL_166);
		TERMINAL_152.addFollower(TERMINAL_167);
		TERMINAL_58.addFollower(TERMINAL_445);
		TERMINAL_445.addFollower(TERMINAL_153);
		TERMINAL_445.addFollower(TERMINAL_154);
		TERMINAL_445.addFollower(TERMINAL_155);
		TERMINAL_445.addFollower(TERMINAL_156);
		TERMINAL_445.addFollower(TERMINAL_157);
		TERMINAL_445.addFollower(TERMINAL_158);
		TERMINAL_445.addFollower(TERMINAL_159);
		TERMINAL_445.addFollower(TERMINAL_160);
		TERMINAL_153.addFollower(TERMINAL_446);
		TERMINAL_446.addFollower(TERMINAL_447);
		TERMINAL_447.addFollower(TERMINAL_153);
		TERMINAL_447.addFollower(TERMINAL_154);
		TERMINAL_447.addFollower(TERMINAL_155);
		TERMINAL_447.addFollower(TERMINAL_156);
		TERMINAL_447.addFollower(TERMINAL_157);
		TERMINAL_447.addFollower(TERMINAL_158);
		TERMINAL_447.addFollower(TERMINAL_159);
		TERMINAL_447.addFollower(TERMINAL_160);
		TERMINAL_154.addFollower(TERMINAL_448);
		TERMINAL_448.addFollower(TERMINAL_183);
		TERMINAL_155.addFollower(TERMINAL_449);
		TERMINAL_449.addFollower(TERMINAL_80);
		TERMINAL_449.addFollower(TERMINAL_6);
		TERMINAL_449.addFollower(TERMINAL_7);
		TERMINAL_449.addFollower(TERMINAL_8);
		TERMINAL_449.addFollower(TERMINAL_11);
		TERMINAL_449.addFollower(TERMINAL_12);
		TERMINAL_449.addFollower(TERMINAL_213);
		TERMINAL_449.addFollower(TERMINAL_214);
		TERMINAL_449.addFollower(TERMINAL_215);
		TERMINAL_449.addFollower(TERMINAL_216);
		TERMINAL_449.addFollower(TERMINAL_217);
		TERMINAL_449.addFollower(TERMINAL_218);
		TERMINAL_156.addFollower(TERMINAL_450);
		TERMINAL_450.addFollower(TERMINAL_451);
		TERMINAL_451.addFollower(TERMINAL_153);
		TERMINAL_451.addFollower(TERMINAL_154);
		TERMINAL_451.addFollower(TERMINAL_155);
		TERMINAL_451.addFollower(TERMINAL_156);
		TERMINAL_451.addFollower(TERMINAL_157);
		TERMINAL_451.addFollower(TERMINAL_158);
		TERMINAL_451.addFollower(TERMINAL_159);
		TERMINAL_451.addFollower(TERMINAL_160);
		TERMINAL_157.addFollower(TERMINAL_452);
		TERMINAL_452.addFollower(TERMINAL_46);
		TERMINAL_452.addFollower(TERMINAL_47);
		TERMINAL_452.addFollower(TERMINAL_48);
		TERMINAL_452.addFollower(TERMINAL_49);
		TERMINAL_452.addFollower(TERMINAL_50);
		TERMINAL_452.addFollower(TERMINAL_51);
		TERMINAL_452.addFollower(TERMINAL_52);
		TERMINAL_452.addFollower(TERMINAL_53);
		TERMINAL_452.addFollower(TERMINAL_23);
		TERMINAL_452.addFollower(TERMINAL_54);
		TERMINAL_452.addFollower(TERMINAL_55);
		TERMINAL_452.addFollower(TERMINAL_56);
		TERMINAL_452.addFollower(TERMINAL_57);
		TERMINAL_452.addFollower(TERMINAL_58);
		TERMINAL_452.addFollower(TERMINAL_59);
		TERMINAL_452.addFollower(TERMINAL_60);
		TERMINAL_452.addFollower(TERMINAL_61);
		TERMINAL_452.addFollower(TERMINAL_62);
		TERMINAL_452.addFollower(TERMINAL_63);
		TERMINAL_452.addFollower(TERMINAL_64);
		TERMINAL_158.addFollower(TERMINAL_453);
		TERMINAL_453.addFollower(TERMINAL_454);
		TERMINAL_454.addFollower(TERMINAL_153);
		TERMINAL_454.addFollower(TERMINAL_154);
		TERMINAL_454.addFollower(TERMINAL_155);
		TERMINAL_454.addFollower(TERMINAL_156);
		TERMINAL_454.addFollower(TERMINAL_157);
		TERMINAL_454.addFollower(TERMINAL_158);
		TERMINAL_454.addFollower(TERMINAL_159);
		TERMINAL_454.addFollower(TERMINAL_160);
		TERMINAL_159.addFollower(TERMINAL_455);
		TERMINAL_455.addFollower(TERMINAL_456);
		TERMINAL_456.addFollower(TERMINAL_153);
		TERMINAL_456.addFollower(TERMINAL_154);
		TERMINAL_456.addFollower(TERMINAL_155);
		TERMINAL_456.addFollower(TERMINAL_156);
		TERMINAL_456.addFollower(TERMINAL_157);
		TERMINAL_456.addFollower(TERMINAL_158);
		TERMINAL_456.addFollower(TERMINAL_159);
		TERMINAL_456.addFollower(TERMINAL_160);
		TERMINAL_160.addFollower(TERMINAL_46);
		TERMINAL_160.addFollower(TERMINAL_47);
		TERMINAL_160.addFollower(TERMINAL_48);
		TERMINAL_160.addFollower(TERMINAL_49);
		TERMINAL_160.addFollower(TERMINAL_50);
		TERMINAL_160.addFollower(TERMINAL_51);
		TERMINAL_160.addFollower(TERMINAL_52);
		TERMINAL_160.addFollower(TERMINAL_53);
		TERMINAL_160.addFollower(TERMINAL_23);
		TERMINAL_160.addFollower(TERMINAL_54);
		TERMINAL_160.addFollower(TERMINAL_55);
		TERMINAL_160.addFollower(TERMINAL_56);
		TERMINAL_160.addFollower(TERMINAL_57);
		TERMINAL_160.addFollower(TERMINAL_58);
		TERMINAL_160.addFollower(TERMINAL_59);
		TERMINAL_160.addFollower(TERMINAL_60);
		TERMINAL_160.addFollower(TERMINAL_61);
		TERMINAL_160.addFollower(TERMINAL_62);
		TERMINAL_160.addFollower(TERMINAL_63);
		TERMINAL_160.addFollower(TERMINAL_64);
		TERMINAL_160.addFollower(TERMINAL_347);
		TERMINAL_160.addFollower(TERMINAL_348);
		TERMINAL_160.addFollower(TERMINAL_349);
		TERMINAL_160.addFollower(TERMINAL_350);
		TERMINAL_160.addFollower(TERMINAL_351);
		TERMINAL_160.addFollower(TERMINAL_352);
		TERMINAL_160.addFollower(TERMINAL_353);
		TERMINAL_160.addFollower(TERMINAL_354);
		TERMINAL_160.addFollower(TERMINAL_355);
		TERMINAL_160.addFollower(TERMINAL_140);
		TERMINAL_160.addFollower(TERMINAL_141);
		TERMINAL_160.addFollower(TERMINAL_142);
		TERMINAL_160.addFollower(TERMINAL_143);
		TERMINAL_160.addFollower(TERMINAL_144);
		TERMINAL_160.addFollower(TERMINAL_145);
		TERMINAL_160.addFollower(TERMINAL_146);
		TERMINAL_160.addFollower(TERMINAL_147);
		TERMINAL_160.addFollower(TERMINAL_153);
		TERMINAL_160.addFollower(TERMINAL_154);
		TERMINAL_160.addFollower(TERMINAL_155);
		TERMINAL_160.addFollower(TERMINAL_156);
		TERMINAL_160.addFollower(TERMINAL_157);
		TERMINAL_160.addFollower(TERMINAL_158);
		TERMINAL_160.addFollower(TERMINAL_159);
		TERMINAL_160.addFollower(TERMINAL_160);
		TERMINAL_160.addFollower(TERMINAL_161);
		TERMINAL_160.addFollower(TERMINAL_162);
		TERMINAL_160.addFollower(TERMINAL_163);
		TERMINAL_160.addFollower(TERMINAL_164);
		TERMINAL_160.addFollower(TERMINAL_165);
		TERMINAL_160.addFollower(TERMINAL_166);
		TERMINAL_160.addFollower(TERMINAL_167);
		TERMINAL_63.addFollower(TERMINAL_457);
		TERMINAL_457.addFollower(TERMINAL_161);
		TERMINAL_457.addFollower(TERMINAL_162);
		TERMINAL_457.addFollower(TERMINAL_163);
		TERMINAL_457.addFollower(TERMINAL_164);
		TERMINAL_457.addFollower(TERMINAL_165);
		TERMINAL_457.addFollower(TERMINAL_166);
		TERMINAL_457.addFollower(TERMINAL_167);
		TERMINAL_161.addFollower(TERMINAL_458);
		TERMINAL_458.addFollower(TERMINAL_459);
		TERMINAL_459.addFollower(TERMINAL_161);
		TERMINAL_459.addFollower(TERMINAL_162);
		TERMINAL_459.addFollower(TERMINAL_163);
		TERMINAL_459.addFollower(TERMINAL_164);
		TERMINAL_459.addFollower(TERMINAL_165);
		TERMINAL_459.addFollower(TERMINAL_166);
		TERMINAL_459.addFollower(TERMINAL_167);
		TERMINAL_162.addFollower(TERMINAL_460);
		TERMINAL_460.addFollower(TERMINAL_183);
		TERMINAL_163.addFollower(TERMINAL_461);
		TERMINAL_461.addFollower(TERMINAL_80);
		TERMINAL_461.addFollower(TERMINAL_6);
		TERMINAL_461.addFollower(TERMINAL_7);
		TERMINAL_461.addFollower(TERMINAL_8);
		TERMINAL_461.addFollower(TERMINAL_11);
		TERMINAL_461.addFollower(TERMINAL_12);
		TERMINAL_461.addFollower(TERMINAL_213);
		TERMINAL_461.addFollower(TERMINAL_214);
		TERMINAL_461.addFollower(TERMINAL_215);
		TERMINAL_461.addFollower(TERMINAL_216);
		TERMINAL_461.addFollower(TERMINAL_217);
		TERMINAL_461.addFollower(TERMINAL_218);
		TERMINAL_164.addFollower(TERMINAL_462);
		TERMINAL_462.addFollower(TERMINAL_463);
		TERMINAL_463.addFollower(TERMINAL_161);
		TERMINAL_463.addFollower(TERMINAL_162);
		TERMINAL_463.addFollower(TERMINAL_163);
		TERMINAL_463.addFollower(TERMINAL_164);
		TERMINAL_463.addFollower(TERMINAL_165);
		TERMINAL_463.addFollower(TERMINAL_166);
		TERMINAL_463.addFollower(TERMINAL_167);
		TERMINAL_165.addFollower(TERMINAL_464);
		TERMINAL_464.addFollower(TERMINAL_465);
		TERMINAL_166.addFollower(TERMINAL_466);
		TERMINAL_466.addFollower(TERMINAL_46);
		TERMINAL_466.addFollower(TERMINAL_47);
		TERMINAL_466.addFollower(TERMINAL_48);
		TERMINAL_466.addFollower(TERMINAL_49);
		TERMINAL_466.addFollower(TERMINAL_50);
		TERMINAL_466.addFollower(TERMINAL_51);
		TERMINAL_466.addFollower(TERMINAL_52);
		TERMINAL_466.addFollower(TERMINAL_53);
		TERMINAL_466.addFollower(TERMINAL_23);
		TERMINAL_466.addFollower(TERMINAL_54);
		TERMINAL_466.addFollower(TERMINAL_55);
		TERMINAL_466.addFollower(TERMINAL_56);
		TERMINAL_466.addFollower(TERMINAL_57);
		TERMINAL_466.addFollower(TERMINAL_58);
		TERMINAL_466.addFollower(TERMINAL_59);
		TERMINAL_466.addFollower(TERMINAL_60);
		TERMINAL_466.addFollower(TERMINAL_61);
		TERMINAL_466.addFollower(TERMINAL_62);
		TERMINAL_466.addFollower(TERMINAL_63);
		TERMINAL_466.addFollower(TERMINAL_64);
		TERMINAL_167.addFollower(TERMINAL_46);
		TERMINAL_167.addFollower(TERMINAL_47);
		TERMINAL_167.addFollower(TERMINAL_48);
		TERMINAL_167.addFollower(TERMINAL_49);
		TERMINAL_167.addFollower(TERMINAL_50);
		TERMINAL_167.addFollower(TERMINAL_51);
		TERMINAL_167.addFollower(TERMINAL_52);
		TERMINAL_167.addFollower(TERMINAL_53);
		TERMINAL_167.addFollower(TERMINAL_23);
		TERMINAL_167.addFollower(TERMINAL_54);
		TERMINAL_167.addFollower(TERMINAL_55);
		TERMINAL_167.addFollower(TERMINAL_56);
		TERMINAL_167.addFollower(TERMINAL_57);
		TERMINAL_167.addFollower(TERMINAL_58);
		TERMINAL_167.addFollower(TERMINAL_59);
		TERMINAL_167.addFollower(TERMINAL_60);
		TERMINAL_167.addFollower(TERMINAL_61);
		TERMINAL_167.addFollower(TERMINAL_62);
		TERMINAL_167.addFollower(TERMINAL_63);
		TERMINAL_167.addFollower(TERMINAL_64);
		TERMINAL_167.addFollower(TERMINAL_347);
		TERMINAL_167.addFollower(TERMINAL_348);
		TERMINAL_167.addFollower(TERMINAL_349);
		TERMINAL_167.addFollower(TERMINAL_350);
		TERMINAL_167.addFollower(TERMINAL_351);
		TERMINAL_167.addFollower(TERMINAL_352);
		TERMINAL_167.addFollower(TERMINAL_353);
		TERMINAL_167.addFollower(TERMINAL_354);
		TERMINAL_167.addFollower(TERMINAL_355);
		TERMINAL_167.addFollower(TERMINAL_140);
		TERMINAL_167.addFollower(TERMINAL_141);
		TERMINAL_167.addFollower(TERMINAL_142);
		TERMINAL_167.addFollower(TERMINAL_143);
		TERMINAL_167.addFollower(TERMINAL_144);
		TERMINAL_167.addFollower(TERMINAL_145);
		TERMINAL_167.addFollower(TERMINAL_146);
		TERMINAL_167.addFollower(TERMINAL_147);
		TERMINAL_167.addFollower(TERMINAL_153);
		TERMINAL_167.addFollower(TERMINAL_154);
		TERMINAL_167.addFollower(TERMINAL_155);
		TERMINAL_167.addFollower(TERMINAL_156);
		TERMINAL_167.addFollower(TERMINAL_157);
		TERMINAL_167.addFollower(TERMINAL_158);
		TERMINAL_167.addFollower(TERMINAL_159);
		TERMINAL_167.addFollower(TERMINAL_160);
		TERMINAL_167.addFollower(TERMINAL_161);
		TERMINAL_167.addFollower(TERMINAL_162);
		TERMINAL_167.addFollower(TERMINAL_163);
		TERMINAL_167.addFollower(TERMINAL_164);
		TERMINAL_167.addFollower(TERMINAL_165);
		TERMINAL_167.addFollower(TERMINAL_166);
		TERMINAL_167.addFollower(TERMINAL_167);
		TERMINAL_465.addFollower(TERMINAL_467);
		TERMINAL_467.addFollower(TERMINAL_277);
		TERMINAL_467.addFollower(TERMINAL_278);
		TERMINAL_467.addFollower(TERMINAL_279);
		TERMINAL_467.addFollower(TERMINAL_280);
		TERMINAL_467.addFollower(TERMINAL_281);
		TERMINAL_277.addFollower(TERMINAL_468);
		TERMINAL_468.addFollower(TERMINAL_469);
		TERMINAL_469.addFollower(TERMINAL_277);
		TERMINAL_469.addFollower(TERMINAL_278);
		TERMINAL_469.addFollower(TERMINAL_279);
		TERMINAL_469.addFollower(TERMINAL_280);
		TERMINAL_469.addFollower(TERMINAL_281);
		TERMINAL_278.addFollower(TERMINAL_470);
		TERMINAL_470.addFollower(TERMINAL_183);
		TERMINAL_279.addFollower(TERMINAL_471);
		TERMINAL_471.addFollower(TERMINAL_472);
		TERMINAL_472.addFollower(TERMINAL_277);
		TERMINAL_472.addFollower(TERMINAL_278);
		TERMINAL_472.addFollower(TERMINAL_279);
		TERMINAL_472.addFollower(TERMINAL_280);
		TERMINAL_472.addFollower(TERMINAL_281);
		TERMINAL_280.addFollower(TERMINAL_473);
		TERMINAL_473.addFollower(TERMINAL_23);
		TERMINAL_281.addFollower(TERMINAL_161);
		TERMINAL_281.addFollower(TERMINAL_162);
		TERMINAL_281.addFollower(TERMINAL_163);
		TERMINAL_281.addFollower(TERMINAL_164);
		TERMINAL_281.addFollower(TERMINAL_165);
		TERMINAL_281.addFollower(TERMINAL_166);
		TERMINAL_281.addFollower(TERMINAL_167);
		TERMINAL_64.addFollower(TERMINAL_46);
		TERMINAL_64.addFollower(TERMINAL_47);
		TERMINAL_64.addFollower(TERMINAL_48);
		TERMINAL_64.addFollower(TERMINAL_49);
		TERMINAL_64.addFollower(TERMINAL_50);
		TERMINAL_64.addFollower(TERMINAL_51);
		TERMINAL_64.addFollower(TERMINAL_52);
		TERMINAL_64.addFollower(TERMINAL_53);
		TERMINAL_64.addFollower(TERMINAL_23);
		TERMINAL_64.addFollower(TERMINAL_54);
		TERMINAL_64.addFollower(TERMINAL_55);
		TERMINAL_64.addFollower(TERMINAL_56);
		TERMINAL_64.addFollower(TERMINAL_57);
		TERMINAL_64.addFollower(TERMINAL_58);
		TERMINAL_64.addFollower(TERMINAL_59);
		TERMINAL_64.addFollower(TERMINAL_60);
		TERMINAL_64.addFollower(TERMINAL_61);
		TERMINAL_64.addFollower(TERMINAL_62);
		TERMINAL_64.addFollower(TERMINAL_63);
		TERMINAL_64.addFollower(TERMINAL_64);
		TERMINAL_64.addFollower(TERMINAL_347);
		TERMINAL_64.addFollower(TERMINAL_348);
		TERMINAL_64.addFollower(TERMINAL_349);
		TERMINAL_64.addFollower(TERMINAL_350);
		TERMINAL_64.addFollower(TERMINAL_351);
		TERMINAL_64.addFollower(TERMINAL_352);
		TERMINAL_64.addFollower(TERMINAL_353);
		TERMINAL_64.addFollower(TERMINAL_354);
		TERMINAL_64.addFollower(TERMINAL_355);
		TERMINAL_64.addFollower(TERMINAL_140);
		TERMINAL_64.addFollower(TERMINAL_141);
		TERMINAL_64.addFollower(TERMINAL_142);
		TERMINAL_64.addFollower(TERMINAL_143);
		TERMINAL_64.addFollower(TERMINAL_144);
		TERMINAL_64.addFollower(TERMINAL_145);
		TERMINAL_64.addFollower(TERMINAL_146);
		TERMINAL_64.addFollower(TERMINAL_147);
		TERMINAL_64.addFollower(TERMINAL_153);
		TERMINAL_64.addFollower(TERMINAL_154);
		TERMINAL_64.addFollower(TERMINAL_155);
		TERMINAL_64.addFollower(TERMINAL_156);
		TERMINAL_64.addFollower(TERMINAL_157);
		TERMINAL_64.addFollower(TERMINAL_158);
		TERMINAL_64.addFollower(TERMINAL_159);
		TERMINAL_64.addFollower(TERMINAL_160);
		TERMINAL_64.addFollower(TERMINAL_161);
		TERMINAL_64.addFollower(TERMINAL_162);
		TERMINAL_64.addFollower(TERMINAL_163);
		TERMINAL_64.addFollower(TERMINAL_164);
		TERMINAL_64.addFollower(TERMINAL_165);
		TERMINAL_64.addFollower(TERMINAL_166);
		TERMINAL_64.addFollower(TERMINAL_167);
	}
	// wire the terminals
	static {
		wire0();
		wire1();
		wire2();
		wire3();
		wire4();
	}
}

start returns [ org.eclipse.emf.ecore.EObject element = null]
:
	{
		// follow set for start rule(s)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 0));
		expectedElementsIndexOfLastCompleteElement = expectedElements.size() - 1;
	}
	(
		c0 = parse_org_kermeta_language_structure_ModelingUnit{ element = c0; }
		|  		c1 = parse_org_kermeta_language_structure_Model{ element = c1; }
		|  		c2 = parse_org_kermeta_language_structure_Property{ element = c2; }
		|  		c3 = parse_org_kermeta_language_structure_Operation{ element = c3; }
		|  		c4 = parse_org_kermeta_language_structure_Parameter{ element = c4; }
		|  		c5 = parse_org_kermeta_language_structure_MultiplicityElement{ element = c5; }
		|  		c6 = parse_org_kermeta_language_behavior_TypeReference{ element = c6; }
	)
	EOF	
;

parse_org_kermeta_language_structure_ModelingUnit returns [org.kermeta.language.structure.ModelingUnit element = null]
@init{
}
:
	(
		(
			(
				a0_0 = parse_org_kermeta_language_structure_Require				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelingUnit();
					}
					if (a0_0 != null) {
						if (a0_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODELING_UNIT__REQUIRES, a0_0);
							completedElement(a0_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a0_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 1));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 1));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 1));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 1));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 1));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 1));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 1));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 1));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 1));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 1));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 1));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 1));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 1));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 2));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 2));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 2));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 2));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 2));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 2));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 2));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 2));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 2));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 2));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 2));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 2));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 2));
	}
	
	(
		(
			(
				a1_0 = parse_org_kermeta_language_structure_Using				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelingUnit();
					}
					if (a1_0 != null) {
						if (a1_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODELING_UNIT__USINGS, a1_0);
							completedElement(a1_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a1_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 3));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 3));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 3));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 3));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 3));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 3));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 3));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 3));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 3));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 3));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 3));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 3));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 4));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 4));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 4));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 4));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 4));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 4));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 4));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 4));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 4));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 4));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 4));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 4));
	}
	
	(
		(
			(
				a2_0 = parse_org_kermeta_language_structure_Package				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelingUnit();
					}
					if (a2_0 != null) {
						if (a2_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODELING_UNIT__PACKAGES, a2_0);
							completedElement(a2_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a2_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 5));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 5));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 5));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 5));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 5));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 5));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 5));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 5));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 5));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 5));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 5));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 6));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 6));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 6));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 6));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 6));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 6));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 6));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 6));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 6));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 6));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 6));
	}
	
;

parse_org_kermeta_language_structure_Using returns [org.kermeta.language.structure.Using element = null]
@init{
}
:
	a0 = 'using' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createUsing();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 7));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 7));
	}
	
	(
		(
			a1 = QUALIFIEDNAME			
			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createUsing();
				}
				if (a1 != null) {
					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QUALIFIEDNAME");
					tokenResolver.setOptions(getOptions());
					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
					tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.USING__QUALIFIED_NAME), result);
					java.lang.Object resolvedObject = result.getResolvedToken();
					if (resolvedObject == null) {
						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
					}
					java.lang.String resolved = (java.lang.String)resolvedObject;
					if (resolved != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.USING__QUALIFIED_NAME), resolved);
						completedElement(resolved);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 8));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 8));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 8));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 8));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 8));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 8));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 8));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 8));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 8));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 8));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 8));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 8));
		}
		
		
		|		(
			a2 = STRING			
			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createUsing();
				}
				if (a2 != null) {
					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
					tokenResolver.setOptions(getOptions());
					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
					tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.USING__QUALIFIED_NAME), result);
					java.lang.Object resolvedObject = result.getResolvedToken();
					if (resolvedObject == null) {
						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
					}
					java.lang.String resolved = (java.lang.String)resolvedObject;
					if (resolved != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.USING__QUALIFIED_NAME), resolved);
						completedElement(resolved);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 9));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 9));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 9));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 9));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 9));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 9));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 9));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 9));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 9));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 9));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 9));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 9));
		}
		
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 10));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 10));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 10));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 10));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 10));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 10));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 10));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 10));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 10));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 10));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 10));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 10));
	}
	
;

parse_org_kermeta_language_structure_Require returns [org.kermeta.language.structure.Require element = null]
@init{
}
:
	a0 = 'require' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createRequire();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 11));
	}
	
	(
		a1 = STRING_LITERAL		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createRequire();
			}
			if (a1 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING_LITERAL");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.REQUIRE__URI), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
				}
				java.lang.String resolved = (java.lang.String)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.REQUIRE__URI), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 12));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 12));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 12));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 12));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 12));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 12));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 12));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 12));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 12));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 12));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 12));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 12));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 12));
	}
	
;

parse_org_kermeta_language_structure_Package returns [org.kermeta.language.structure.Package element = null]
@init{
}
:
	(
		a0 = 'package' {
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
			}
			collectHiddenTokens(element);
			copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
		}
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 13));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 13));
		}
		
		(
			(
				(
					a1 = STRING					
					{
						if (terminateParsing) {
							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
						}
						if (element == null) {
							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
						}
						if (a1 != null) {
							org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
							tokenResolver.setOptions(getOptions());
							org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
							tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NESTING_PACKAGE), result);
							java.lang.Object resolvedObject = result.getResolvedToken();
							if (resolvedObject == null) {
								addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
							}
							String resolved = (String) resolvedObject;
							org.kermeta.language.structure.Package proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
							collectHiddenTokens(element);
							registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Package, org.kermeta.language.structure.Package>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getPackageNestingPackageReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NESTING_PACKAGE), resolved, proxy);
							if (proxy != null) {
								element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NESTING_PACKAGE), proxy);
								completedElement(proxy);
							}
							collectHiddenTokens(element);
							copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
							copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, proxy);
						}
					}
				)
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 14));
				}
				
				a2 = '.' {
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
				}
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 15));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 15));
				}
				
			)
			
		)*		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 16));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 16));
		}
		
		(
			a3 = STRING			
			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
				}
				if (a3 != null) {
					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
					tokenResolver.setOptions(getOptions());
					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
					tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), result);
					java.lang.Object resolvedObject = result.getResolvedToken();
					if (resolvedObject == null) {
						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a3).getLine(), ((org.antlr.runtime.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a3).getStartIndex(), ((org.antlr.runtime.CommonToken) a3).getStopIndex());
					}
					java.lang.String resolved = (java.lang.String)resolvedObject;
					if (resolved != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), resolved);
						completedElement(resolved);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken) a3, element);
				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 17));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 17));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 17));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 17));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 17));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 17));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 17));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 17));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 17));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 17));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_30, 17));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_31, 17));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 17));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 17));
		}
		
		(
			(
				(
					(
						(
							a4_0 = parse_org_kermeta_language_structure_TypeDefinition							{
								if (terminateParsing) {
									throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
								}
								if (element == null) {
									element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
								}
								if (a4_0 != null) {
									if (a4_0 != null) {
										addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__OWNED_TYPE_DEFINITION, a4_0);
										completedElement(a4_0);
									}
									collectHiddenTokens(element);
									copyLocalizationInfos(a4_0, element); 								}
							}
						)
						{
							// expected elements (follow set)
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 18));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 18));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 18));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 18));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 18));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 18));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 18));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 18));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 18));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 18));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 18));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 18));
						}
						
					)
					
				)+				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 19));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 19));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 19));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 19));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 19));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 19));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 19));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 19));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 19));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 19));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 19));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 19));
				}
				
				
				|				a5 = '{' {
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
				}
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 20));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 20));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 20));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 20));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 20));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 20));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 20));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 20));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 20));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 20));
				}
				
				(
					(
						(
							a6_0 = parse_org_kermeta_language_structure_TypeDefinition							{
								if (terminateParsing) {
									throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
								}
								if (element == null) {
									element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
								}
								if (a6_0 != null) {
									if (a6_0 != null) {
										addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__OWNED_TYPE_DEFINITION, a6_0);
										completedElement(a6_0);
									}
									collectHiddenTokens(element);
									copyLocalizationInfos(a6_0, element); 								}
							}
						)
						{
							// expected elements (follow set)
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 21));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 21));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 21));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 21));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 21));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 21));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 21));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 21));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 21));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 21));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_33, 21));
						}
						
					)
					
				)+				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 22));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 22));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 22));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 22));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 22));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 22));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 22));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 22));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 22));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 22));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_33, 22));
				}
				
				a7 = '}' {
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
				}
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 23));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 23));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 23));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 23));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 23));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 23));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 23));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 23));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 23));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 23));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 23));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 23));
				}
				
				
				|				a8 = '{' {
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
				}
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 24));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 24));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 24));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 24));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 24));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 24));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 24));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 24));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 24));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 24));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 24));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 24));
				}
				
				(
					(
						(
							a9_0 = parse_org_kermeta_language_structure_Package							{
								if (terminateParsing) {
									throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
								}
								if (element == null) {
									element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
								}
								if (a9_0 != null) {
									if (a9_0 != null) {
										addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__NESTED_PACKAGE, a9_0);
										completedElement(a9_0);
									}
									collectHiddenTokens(element);
									copyLocalizationInfos(a9_0, element); 								}
							}
						)
						{
							// expected elements (follow set)
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 25));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 25));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 25));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 25));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 25));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 25));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 25));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 25));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 25));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 25));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 25));
							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 25));
						}
						
					)
					
				)*				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 26));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 26));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 26));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 26));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 26));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 26));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 26));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 26));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 26));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 26));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 26));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 26));
				}
				
				a10 = '}' {
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
				}
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 27));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 27));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 27));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 27));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 27));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 27));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 27));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 27));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 27));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 27));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 27));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 27));
				}
				
			)
			
		)?		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 28));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 28));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 28));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 28));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 28));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 28));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 28));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 28));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 28));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 28));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 28));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 28));
		}
		
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 29));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 29));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 29));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 29));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 29));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 29));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 29));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 29));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 29));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 29));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 29));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 29));
	}
	
	
	|	(
		(
			(
				(
					a11_0 = parse_org_kermeta_language_structure_TypeDefinition					{
						if (terminateParsing) {
							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
						}
						if (element == null) {
							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
						}
						if (a11_0 != null) {
							if (a11_0 != null) {
								addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__OWNED_TYPE_DEFINITION, a11_0);
								completedElement(a11_0);
							}
							collectHiddenTokens(element);
							copyLocalizationInfos(a11_0, element); 						}
					}
				)
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 30));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 30));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 30));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 30));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 30));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 30));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 30));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 30));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 30));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 30));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 30));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 30));
				}
				
			)
			
		)+		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 31));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 31));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 31));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 31));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 31));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 31));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 31));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 31));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 31));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 31));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 31));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 31));
		}
		
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 32));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 32));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 32));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 32));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 32));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 32));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 32));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 32));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 32));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 32));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 32));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 32));
	}
	
;

parse_org_kermeta_language_structure_ClassDefinition returns [org.kermeta.language.structure.ClassDefinition element = null]
@init{
}
:
	(
		(
			a0 = 'aspect' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 33));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 33));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 34));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 34));
	}
	
	(
		(
			a1 = 'abstract' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 35));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 36));
	}
	
	a2 = 'class' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_34, 37));
	}
	
	(
		a3 = STRING		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
			}
			if (a3 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__NAME), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a3).getLine(), ((org.antlr.runtime.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a3).getStartIndex(), ((org.antlr.runtime.CommonToken) a3).getStopIndex());
				}
				java.lang.String resolved = (java.lang.String)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__NAME), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a3, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_35, 38));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 38));
	}
	
	(
		(
			a4 = 'inherits' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 39));
			}
			
			(
				a5 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
					}
					if (a5 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a5).getLine(), ((org.antlr.runtime.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a5).getStartIndex(), ((org.antlr.runtime.CommonToken) a5).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ClassDefinition, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getClassDefinitionSuperTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_38, 40));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 40));
			}
			
			(
				(
					a6 = ',' {
						if (element == null) {
							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
					}
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_39, 41));
					}
					
					(
						a7 = STRING						
						{
							if (terminateParsing) {
								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
							}
							if (element == null) {
								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
							}
							if (a7 != null) {
								org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
								tokenResolver.setOptions(getOptions());
								org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
								tokenResolver.resolve(a7.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), result);
								java.lang.Object resolvedObject = result.getResolvedToken();
								if (resolvedObject == null) {
									addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a7).getLine(), ((org.antlr.runtime.CommonToken) a7).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a7).getStartIndex(), ((org.antlr.runtime.CommonToken) a7).getStopIndex());
								}
								String resolved = (String) resolvedObject;
								org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
								collectHiddenTokens(element);
								registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ClassDefinition, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getClassDefinitionSuperTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), resolved, proxy);
								if (proxy != null) {
									addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE, proxy);
									completedElement(proxy);
								}
								collectHiddenTokens(element);
								copyLocalizationInfos((org.antlr.runtime.CommonToken) a7, element);
								copyLocalizationInfos((org.antlr.runtime.CommonToken) a7, proxy);
							}
						}
					)
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_38, 42));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 42));
					}
					
				)
				
			)*			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_38, 43));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 43));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 44));
	}
	
	a8 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 45));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 45));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 45));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 45));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 45));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 45));
	}
	
	(
		(
			(
				a9_0 = parse_org_kermeta_language_structure_Constraint				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
					}
					if (a9_0 != null) {
						if (a9_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__INV, a9_0);
							completedElement(a9_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a9_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 46));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 46));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 46));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 46));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 46));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 46));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 47));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 47));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 47));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 47));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 47));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 47));
	}
	
	(
		(
			(
				a10_0 = parse_org_kermeta_language_structure_Property				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
					}
					if (a10_0 != null) {
						if (a10_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__OWNED_ATTRIBUTE, a10_0);
							completedElement(a10_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a10_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 48));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 48));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 48));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 48));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 48));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 48));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 49));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 49));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 49));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 49));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 49));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 49));
	}
	
	(
		(
			(
				a11_0 = parse_org_kermeta_language_structure_Operation				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
					}
					if (a11_0 != null) {
						if (a11_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__OWNED_OPERATION, a11_0);
							completedElement(a11_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a11_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 50));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 50));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 50));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 51));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 51));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 51));
	}
	
	a12 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 52));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 52));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 52));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 52));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 52));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 52));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 52));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 52));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 52));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 52));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 52));
	}
	
;

parse_org_kermeta_language_structure_Property returns [org.kermeta.language.structure.Property element = null]
@init{
}
:
	(
		(
			a0 = 'attribute' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 53));
			}
			
			
			|			a1 = 'reference' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 54));
			}
			
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 55));
		}
		
		(
			a2 = STRING			
			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
				}
				if (a2 != null) {
					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
					tokenResolver.setOptions(getOptions());
					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
					tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), result);
					java.lang.Object resolvedObject = result.getResolvedToken();
					if (resolvedObject == null) {
						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
					}
					java.lang.String resolved = (java.lang.String)resolvedObject;
					if (resolved != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), resolved);
						completedElement(resolved);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_42, 56));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 56));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 56));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 56));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 56));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 56));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 56));
		}
		
		(
			(
				a3 = ':' {
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
				}
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 57));
				}
				
				(
					a4 = STRING					
					{
						if (terminateParsing) {
							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
						}
						if (element == null) {
							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
						}
						if (a4 != null) {
							org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
							tokenResolver.setOptions(getOptions());
							org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
							tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), result);
							java.lang.Object resolvedObject = result.getResolvedToken();
							if (resolvedObject == null) {
								addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
							}
							String resolved = (String) resolvedObject;
							org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
							collectHiddenTokens(element);
							registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), resolved, proxy);
							if (proxy != null) {
								element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), proxy);
								completedElement(proxy);
							}
							collectHiddenTokens(element);
							copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
							copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
						}
					}
				)
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 58));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 58));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 58));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 58));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 58));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 58));
				}
				
			)
			
		)?		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 59));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 59));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 59));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 59));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 59));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 59));
		}
		
		
		|		a5 = 'property' {
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
			}
			collectHiddenTokens(element);
			copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
		}
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 60));
		}
		
		(
			a6 = STRING			
			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
				}
				if (a6 != null) {
					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
					tokenResolver.setOptions(getOptions());
					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
					tokenResolver.resolve(a6.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), result);
					java.lang.Object resolvedObject = result.getResolvedToken();
					if (resolvedObject == null) {
						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a6).getLine(), ((org.antlr.runtime.CommonToken) a6).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a6).getStartIndex(), ((org.antlr.runtime.CommonToken) a6).getStopIndex());
					}
					java.lang.String resolved = (java.lang.String)resolvedObject;
					if (resolved != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), resolved);
						completedElement(resolved);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken) a6, element);
				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 61));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 61));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 61));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 61));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 61));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 61));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 61));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 61));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 61));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 61));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 61));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 61));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 61));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 61));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 61));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 61));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 61));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 61));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 61));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 61));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 61));
		}
		
		(
			(
				a7 = ':' {
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
				}
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 62));
				}
				
				(
					a8 = STRING					
					{
						if (terminateParsing) {
							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
						}
						if (element == null) {
							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
						}
						if (a8 != null) {
							org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
							tokenResolver.setOptions(getOptions());
							org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
							tokenResolver.resolve(a8.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), result);
							java.lang.Object resolvedObject = result.getResolvedToken();
							if (resolvedObject == null) {
								addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a8).getLine(), ((org.antlr.runtime.CommonToken) a8).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a8).getStartIndex(), ((org.antlr.runtime.CommonToken) a8).getStopIndex());
							}
							String resolved = (String) resolvedObject;
							org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
							collectHiddenTokens(element);
							registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), resolved, proxy);
							if (proxy != null) {
								element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), proxy);
								completedElement(proxy);
							}
							collectHiddenTokens(element);
							copyLocalizationInfos((org.antlr.runtime.CommonToken) a8, element);
							copyLocalizationInfos((org.antlr.runtime.CommonToken) a8, proxy);
						}
					}
				)
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 63));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 63));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 63));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 63));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 63));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 63));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 63));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 63));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 63));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 63));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 63));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 63));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 63));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 63));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 63));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 63));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 63));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 63));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 63));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 63));
				}
				
			)
			
		)?		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 64));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 64));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 64));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 64));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 64));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 64));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 64));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 64));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 64));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 64));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 64));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 64));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 64));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 64));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 64));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 64));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 64));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 64));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 64));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 64));
		}
		
		(
			a9_0 = parse_org_kermeta_language_behavior_Expression			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
				}
				if (a9_0 != null) {
					if (a9_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__GETTER_BODY), a9_0);
						completedElement(a9_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a9_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 65));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 65));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 65));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 65));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 65));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 65));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 65));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 65));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 65));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 65));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 65));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 65));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 65));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 65));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 65));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 65));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 65));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 65));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 65));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 65));
		}
		
		(
			a10_0 = parse_org_kermeta_language_behavior_Expression			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
				}
				if (a10_0 != null) {
					if (a10_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__SETTER_BODY), a10_0);
						completedElement(a10_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a10_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 66));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 66));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 66));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 66));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 66));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 66));
		}
		
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 67));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 67));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 67));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 67));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 67));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 67));
	}
	
;

parse_org_kermeta_language_structure_Operation returns [org.kermeta.language.structure.Operation element = null]
@init{
}
:
	(
		(
			a0_0 = parse_org_kermeta_language_structure_Constraint			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
				}
				if (a0_0 != null) {
					if (a0_0 != null) {
						addObjectToList(element, org.kermeta.language.structure.StructurePackage.OPERATION__PRE, a0_0);
						completedElement(a0_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a0_0, element); 				}
			}
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 68));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 68));
	}
	
	(
		(
			a1_0 = parse_org_kermeta_language_structure_Constraint			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
				}
				if (a1_0 != null) {
					if (a1_0 != null) {
						addObjectToList(element, org.kermeta.language.structure.StructurePackage.OPERATION__POST, a1_0);
						completedElement(a1_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a1_0, element); 				}
			}
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 69));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 69));
	}
	
	a2 = 'operation' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 70));
	}
	
	(
		a3 = STRING		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
			}
			if (a3 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__NAME), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a3).getLine(), ((org.antlr.runtime.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a3).getStartIndex(), ((org.antlr.runtime.CommonToken) a3).getStopIndex());
				}
				java.lang.String resolved = (java.lang.String)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__NAME), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a3, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 71));
	}
	
	a4 = '(' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 72));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 72));
	}
	
	(
		(
			(
				a5_0 = parse_org_kermeta_language_structure_Parameter				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
					}
					if (a5_0 != null) {
						if (a5_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OPERATION__OWNED_PARAMETER, a5_0);
							completedElement(a5_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a5_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 73));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 73));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 73));
			}
			
			(
				(
					a6 = ':' {
						if (element == null) {
							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
					}
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 74));
					}
					
					(
						a7 = STRING						
						{
							if (terminateParsing) {
								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
							}
							if (element == null) {
								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
							}
							if (a7 != null) {
								org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
								tokenResolver.setOptions(getOptions());
								org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
								tokenResolver.resolve(a7.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), result);
								java.lang.Object resolvedObject = result.getResolvedToken();
								if (resolvedObject == null) {
									addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a7).getLine(), ((org.antlr.runtime.CommonToken) a7).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a7).getStartIndex(), ((org.antlr.runtime.CommonToken) a7).getStopIndex());
								}
								String resolved = (String) resolvedObject;
								org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
								collectHiddenTokens(element);
								registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), resolved, proxy);
								if (proxy != null) {
									element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), proxy);
									completedElement(proxy);
								}
								collectHiddenTokens(element);
								copyLocalizationInfos((org.antlr.runtime.CommonToken) a7, element);
								copyLocalizationInfos((org.antlr.runtime.CommonToken) a7, proxy);
							}
						}
					)
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 75));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 75));
					}
					
				)
				
			)?			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 76));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 76));
			}
			
			(
				(
					a8 = ',' {
						if (element == null) {
							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
					}
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 77));
					}
					
					(
						a9_0 = parse_org_kermeta_language_structure_Parameter						{
							if (terminateParsing) {
								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
							}
							if (element == null) {
								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
							}
							if (a9_0 != null) {
								if (a9_0 != null) {
									addObjectToList(element, org.kermeta.language.structure.StructurePackage.OPERATION__OWNED_PARAMETER, a9_0);
									completedElement(a9_0);
								}
								collectHiddenTokens(element);
								copyLocalizationInfos(a9_0, element); 							}
						}
					)
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_72, 78));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 78));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 78));
					}
					
					(
						(
							a10 = ':' {
								if (element == null) {
									element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
								}
								collectHiddenTokens(element);
								copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
							}
							{
								// expected elements (follow set)
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_73, 79));
							}
							
							(
								a11 = STRING								
								{
									if (terminateParsing) {
										throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
									}
									if (element == null) {
										element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
									}
									if (a11 != null) {
										org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
										tokenResolver.setOptions(getOptions());
										org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
										tokenResolver.resolve(a11.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), result);
										java.lang.Object resolvedObject = result.getResolvedToken();
										if (resolvedObject == null) {
											addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a11).getLine(), ((org.antlr.runtime.CommonToken) a11).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a11).getStartIndex(), ((org.antlr.runtime.CommonToken) a11).getStopIndex());
										}
										String resolved = (String) resolvedObject;
										org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
										collectHiddenTokens(element);
										registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), resolved, proxy);
										if (proxy != null) {
											element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), proxy);
											completedElement(proxy);
										}
										collectHiddenTokens(element);
										copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, element);
										copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, proxy);
									}
								}
							)
							{
								// expected elements (follow set)
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 80));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 80));
							}
							
						)
						
					)?					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 81));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 81));
					}
					
				)
				
			)*			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 82));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 82));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 83));
	}
	
	a12 = ')' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_74, 84));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_75, 84));
	}
	
	(
		(
			a13 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_76, 85));
			}
			
			(
				a14 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
					}
					if (a14 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a14.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a14).getLine(), ((org.antlr.runtime.CommonToken) a14).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a14).getStartIndex(), ((org.antlr.runtime.CommonToken) a14).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a14, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a14, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_75, 86));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_75, 87));
	}
	
	a15 = 'is' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 88));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_77, 88));
	}
	
	(
		(
			a16_0 = parse_org_kermeta_language_behavior_Block			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
				}
				if (a16_0 != null) {
					if (a16_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__BODY), a16_0);
						completedElement(a16_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a16_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 89));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 89));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 89));
		}
		
		
		|		a17 = 'abstract' {
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
			}
			collectHiddenTokens(element);
			copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
		}
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 90));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 90));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 90));
		}
		
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 91));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 91));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 91));
	}
	
;

parse_org_kermeta_language_structure_Parameter returns [org.kermeta.language.structure.Parameter element = null]
@init{
}
:
	(
		a0 = STRING		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createParameter();
			}
			if (a0 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__NAME), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
				}
				java.lang.String resolved = (java.lang.String)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__NAME), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 92));
	}
	
	a1 = ':' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createParameter();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 93));
	}
	
	(
		a2 = STRING		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createParameter();
			}
			if (a2 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__TYPE), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
				}
				String resolved = (String) resolvedObject;
				org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
				collectHiddenTokens(element);
				registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__TYPE), resolved, proxy);
				if (proxy != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__TYPE), proxy);
					completedElement(proxy);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, proxy);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 94));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 94));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 94));
	}
	
;

parse_org_kermeta_language_structure_Class returns [org.kermeta.language.structure.Class element = null]
@init{
}
:
	(
		a0 = STRING		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
			}
			if (a0 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS__TYPE_DEFINITION), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
				}
				String resolved = (String) resolvedObject;
				org.kermeta.language.structure.ClassDefinition proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
				collectHiddenTokens(element);
				registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ParameterizedType, org.kermeta.language.structure.GenericTypeDefinition>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getParameterizedTypeTypeDefinitionReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS__TYPE_DEFINITION), resolved, proxy);
				if (proxy != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS__TYPE_DEFINITION), proxy);
					completedElement(proxy);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, proxy);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 95));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 95));
	}
	
;

parse_org_kermeta_language_structure_Enumeration returns [org.kermeta.language.structure.Enumeration element = null]
@init{
}
:
	a0 = 'enumeration' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 96));
	}
	
	(
		a1 = STRING		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
			}
			if (a1 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION__NAME), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
				}
				java.lang.String resolved = (java.lang.String)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION__NAME), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_169, 97));
	}
	
	a2 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 98));
	}
	
	(
		(
			a3_0 = parse_org_kermeta_language_structure_EnumerationLiteral			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
				}
				if (a3_0 != null) {
					if (a3_0 != null) {
						addObjectToList(element, org.kermeta.language.structure.StructurePackage.ENUMERATION__OWNED_LITERAL, a3_0);
						completedElement(a3_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a3_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_171, 99));
		}
		
		a4 = ';' {
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
			}
			collectHiddenTokens(element);
			copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
		}
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 100));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 100));
		}
		
		(
			(
				(
					a5_0 = parse_org_kermeta_language_structure_EnumerationLiteral					{
						if (terminateParsing) {
							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
						}
						if (element == null) {
							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
						}
						if (a5_0 != null) {
							if (a5_0 != null) {
								addObjectToList(element, org.kermeta.language.structure.StructurePackage.ENUMERATION__OWNED_LITERAL, a5_0);
								completedElement(a5_0);
							}
							collectHiddenTokens(element);
							copyLocalizationInfos(a5_0, element); 						}
					}
				)
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 101));
				}
				
				a6 = ';' {
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
				}
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 102));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 102));
				}
				
			)
			
		)*		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 103));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 103));
		}
		
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 104));
	}
	
	a7 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 105));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 105));
	}
	
;

parse_org_kermeta_language_structure_EnumerationLiteral returns [org.kermeta.language.structure.EnumerationLiteral element = null]
@init{
}
:
	(
		a0 = STRING		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumerationLiteral();
			}
			if (a0 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION_LITERAL__NAME), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
				}
				java.lang.String resolved = (java.lang.String)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION_LITERAL__NAME), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_171, 106));
	}
	
;

parse_org_kermeta_language_structure_Constraint returns [org.kermeta.language.structure.Constraint element = null]
@init{
}
:
	(
		a0 = STRING		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createConstraint();
			}
			if (a0 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__STEREOTYPE), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
				}
				org.kermeta.language.structure.ConstraintType resolved = (org.kermeta.language.structure.ConstraintType)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__STEREOTYPE), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_174, 107));
	}
	
	(
		a1 = STRING		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createConstraint();
			}
			if (a1 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__LANGUAGE), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
				}
				org.kermeta.language.structure.ConstraintLanguage resolved = (org.kermeta.language.structure.ConstraintLanguage)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__LANGUAGE), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 108));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 108));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 108));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 108));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 108));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 108));
	}
	
;

parse_org_kermeta_language_structure_Object returns [org.kermeta.language.structure.Object element = null]
@init{
}
:
	a0 = 'Object' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_176, 109));
	}
	
	a1 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 110));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 110));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_179, 110));
	}
	
	(
		(
			a2 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_180, 111));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_181, 112));
			}
			
			(
				a4 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 113));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 113));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_179, 113));
			}
			
			
			|			a5 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_182, 114));
			}
			
			a6 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 115));
			}
			
			(
				a7_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT__OWNED_TAGS, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 116));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 116));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_179, 116));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_179, 117));
	}
	
	a8 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
	}
	{
		// expected elements (follow set)
	}
	
	|//derived choice rules for sub-classes: 
	
	c0 = parse_org_kermeta_language_structure_ModelingUnit{ element = c0; /* this is a subclass choice */ }
	|	c1 = parse_org_kermeta_language_structure_Using{ element = c1; /* this is a subclass choice */ }
	|	c2 = parse_org_kermeta_language_structure_Require{ element = c2; /* this is a subclass choice */ }
	|	c3 = parse_org_kermeta_language_structure_Package{ element = c3; /* this is a subclass choice */ }
	|	c4 = parse_org_kermeta_language_structure_ClassDefinition{ element = c4; /* this is a subclass choice */ }
	|	c5 = parse_org_kermeta_language_structure_Property{ element = c5; /* this is a subclass choice */ }
	|	c6 = parse_org_kermeta_language_structure_Operation{ element = c6; /* this is a subclass choice */ }
	|	c7 = parse_org_kermeta_language_structure_Parameter{ element = c7; /* this is a subclass choice */ }
	|	c8 = parse_org_kermeta_language_structure_Class{ element = c8; /* this is a subclass choice */ }
	|	c9 = parse_org_kermeta_language_structure_Enumeration{ element = c9; /* this is a subclass choice */ }
	|	c10 = parse_org_kermeta_language_structure_EnumerationLiteral{ element = c10; /* this is a subclass choice */ }
	|	c11 = parse_org_kermeta_language_structure_Constraint{ element = c11; /* this is a subclass choice */ }
	|	c12 = parse_org_kermeta_language_structure_Model{ element = c12; /* this is a subclass choice */ }
	|	c13 = parse_org_kermeta_language_structure_ModelType{ element = c13; /* this is a subclass choice */ }
	|	c14 = parse_org_kermeta_language_structure_TypeVariableBinding{ element = c14; /* this is a subclass choice */ }
	|	c15 = parse_org_kermeta_language_structure_MultiplicityElement{ element = c15; /* this is a subclass choice */ }
	|	c16 = parse_org_kermeta_language_structure_TypeDefinition{ element = c16; /* this is a subclass choice */ }
	|	c17 = parse_org_kermeta_language_structure_PrimitiveType{ element = c17; /* this is a subclass choice */ }
	|	c18 = parse_org_kermeta_language_structure_Tag{ element = c18; /* this is a subclass choice */ }
	|	c19 = parse_org_kermeta_language_structure_ObjectTypeVariable{ element = c19; /* this is a subclass choice */ }
	|	c20 = parse_org_kermeta_language_structure_ModelTypeVariable{ element = c20; /* this is a subclass choice */ }
	|	c21 = parse_org_kermeta_language_structure_VirtualType{ element = c21; /* this is a subclass choice */ }
	|	c22 = parse_org_kermeta_language_structure_ProductType{ element = c22; /* this is a subclass choice */ }
	|	c23 = parse_org_kermeta_language_structure_FunctionType{ element = c23; /* this is a subclass choice */ }
	|	c24 = parse_org_kermeta_language_structure_VoidType{ element = c24; /* this is a subclass choice */ }
	|	c25 = parse_org_kermeta_language_behavior_Block{ element = c25; /* this is a subclass choice */ }
	|	c26 = parse_org_kermeta_language_behavior_Rescue{ element = c26; /* this is a subclass choice */ }
	|	c27 = parse_org_kermeta_language_behavior_TypeReference{ element = c27; /* this is a subclass choice */ }
	|	c28 = parse_org_kermeta_language_behavior_Raise{ element = c28; /* this is a subclass choice */ }
	|	c29 = parse_org_kermeta_language_behavior_BooleanLiteral{ element = c29; /* this is a subclass choice */ }
	|	c30 = parse_org_kermeta_language_behavior_IntegerLiteral{ element = c30; /* this is a subclass choice */ }
	|	c31 = parse_org_kermeta_language_behavior_StringLiteral{ element = c31; /* this is a subclass choice */ }
	|	c32 = parse_org_kermeta_language_behavior_Conditional{ element = c32; /* this is a subclass choice */ }
	|	c33 = parse_org_kermeta_language_behavior_Loop{ element = c33; /* this is a subclass choice */ }
	|	c34 = parse_org_kermeta_language_behavior_VariableDecl{ element = c34; /* this is a subclass choice */ }
	|	c35 = parse_org_kermeta_language_behavior_TypeLiteral{ element = c35; /* this is a subclass choice */ }
	|	c36 = parse_org_kermeta_language_behavior_CallResult{ element = c36; /* this is a subclass choice */ }
	|	c37 = parse_org_kermeta_language_behavior_CallSuperOperation{ element = c37; /* this is a subclass choice */ }
	|	c38 = parse_org_kermeta_language_behavior_Assignment{ element = c38; /* this is a subclass choice */ }
	|	c39 = parse_org_kermeta_language_behavior_CallVariable{ element = c39; /* this is a subclass choice */ }
	|	c40 = parse_org_kermeta_language_behavior_SelfExpression{ element = c40; /* this is a subclass choice */ }
	|	c41 = parse_org_kermeta_language_behavior_CallFeature{ element = c41; /* this is a subclass choice */ }
	|	c42 = parse_org_kermeta_language_behavior_CallValue{ element = c42; /* this is a subclass choice */ }
	|	c43 = parse_org_kermeta_language_behavior_EmptyExpression{ element = c43; /* this is a subclass choice */ }
	|	c44 = parse_org_kermeta_language_behavior_JavaStaticCall{ element = c44; /* this is a subclass choice */ }
	|	c45 = parse_org_kermeta_language_behavior_LambdaExpression{ element = c45; /* this is a subclass choice */ }
	|	c46 = parse_org_kermeta_language_behavior_LambdaParameter{ element = c46; /* this is a subclass choice */ }
	|	c47 = parse_org_kermeta_language_behavior_VoidLiteral{ element = c47; /* this is a subclass choice */ }
	
;

parse_org_kermeta_language_structure_Model returns [org.kermeta.language.structure.Model element = null]
@init{
}
:
	a0 = 'Model' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_184, 119));
	}
	
	a1 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_185, 120));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_186, 120));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_187, 120));
	}
	
	(
		(
			a2 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_188, 121));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_189, 122));
			}
			
			(
				a4 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_185, 123));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_186, 123));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_187, 123));
			}
			
			
			|			a5 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_190, 124));
			}
			
			a6 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 125));
			}
			
			(
				a7_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL__OWNED_TAGS, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_185, 126));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_186, 126));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_187, 126));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_185, 127));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_186, 127));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_187, 127));
	}
	
	a8 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
	}
	{
		// expected elements (follow set)
	}
	
;

parse_org_kermeta_language_structure_ModelType returns [org.kermeta.language.structure.ModelType element = null]
@init{
}
:
	(
		(
			a0 = STRING			
			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
				}
				if (a0 != null) {
					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
					tokenResolver.setOptions(getOptions());
					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__IS_ASPECT), result);
					java.lang.Object resolvedObject = result.getResolvedToken();
					if (resolvedObject == null) {
						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
					}
					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
					if (resolved != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__IS_ASPECT), resolved);
						completedElement(resolved);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
				}
			}
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 129));
	}
	
	a1 = 'ModelType' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_191, 130));
	}
	
	a2 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 131));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 131));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 131));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 131));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 131));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 131));
	}
	
	(
		(
			a3 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 132));
			}
			
			a4 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_199, 133));
			}
			
			(
				a5 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
					}
					if (a5 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a5).getLine(), ((org.antlr.runtime.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a5).getStartIndex(), ((org.antlr.runtime.CommonToken) a5).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 134));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 134));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 134));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 134));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 134));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 134));
			}
			
			
			|			a6 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_200, 135));
			}
			
			a7 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 136));
			}
			
			(
				a8_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
					}
					if (a8_0 != null) {
						if (a8_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE__OWNED_TAGS, a8_0);
							completedElement(a8_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a8_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 137));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 137));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 137));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 137));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 137));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 137));
			}
			
			
			|			a9 = 'typeContainer' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_201, 138));
			}
			
			a10 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_202, 139));
			}
			
			(
				a11 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
					}
					if (a11 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a11.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TYPE_CONTAINER), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a11).getLine(), ((org.antlr.runtime.CommonToken) a11).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a11).getStartIndex(), ((org.antlr.runtime.CommonToken) a11).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.behavior.Raise proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TYPE_CONTAINER), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TYPE_CONTAINER), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 140));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 140));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 140));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 140));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 140));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 140));
			}
			
			
			|			a12 = 'name' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_203, 141));
			}
			
			a13 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_204, 142));
			}
			
			(
				a14 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
					}
					if (a14 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a14.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__NAME), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a14).getLine(), ((org.antlr.runtime.CommonToken) a14).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a14).getStartIndex(), ((org.antlr.runtime.CommonToken) a14).getStopIndex());
						}
						java.lang.String resolved = (java.lang.String)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__NAME), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a14, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 143));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 143));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 143));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 143));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 143));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 143));
			}
			
			
			|			a15 = 'includedTypeDefinition' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_205, 144));
			}
			
			a16 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a16, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_206, 145));
			}
			
			(
				a17 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
					}
					if (a17 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a17.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__INCLUDED_TYPE_DEFINITION), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a17).getLine(), ((org.antlr.runtime.CommonToken) a17).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a17).getStartIndex(), ((org.antlr.runtime.CommonToken) a17).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.TypeDefinition proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ModelType, org.kermeta.language.structure.TypeDefinition>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getModelTypeIncludedTypeDefinitionReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__INCLUDED_TYPE_DEFINITION), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE__INCLUDED_TYPE_DEFINITION, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a17, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a17, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 146));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 146));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 146));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 146));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 146));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 146));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 147));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 147));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 147));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 147));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 147));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 147));
	}
	
	a18 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 148));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 148));
	}
	
;

parse_org_kermeta_language_structure_TypeVariableBinding returns [org.kermeta.language.structure.TypeVariableBinding element = null]
@init{
}
:
	a0 = 'TypeVariableBinding' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_208, 149));
	}
	
	a1 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 150));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 150));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 150));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 150));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 150));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 150));
	}
	
	(
		(
			a2 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_209, 151));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_210, 152));
			}
			
			(
				a4 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 153));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 153));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 153));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 153));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 153));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 153));
			}
			
			
			|			a5 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_211, 154));
			}
			
			a6 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 155));
			}
			
			(
				a7_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__OWNED_TAGS, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 156));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 156));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 156));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 156));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 156));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 156));
			}
			
			
			|			a8 = 'containedType' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_212, 157));
			}
			
			a9 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 158));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 158));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 158));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 158));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 158));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 158));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 158));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 158));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 158));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 158));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 158));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 158));
			}
			
			(
				a10_0 = parse_org_kermeta_language_structure_Type				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
					}
					if (a10_0 != null) {
						if (a10_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__CONTAINED_TYPE, a10_0);
							completedElement(a10_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a10_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 159));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 159));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 159));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 159));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 159));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 159));
			}
			
			
			|			a11 = 'variable' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_219, 160));
			}
			
			a12 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_220, 161));
			}
			
			(
				a13 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
					}
					if (a13 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__VARIABLE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariableBinding, org.kermeta.language.structure.TypeVariable>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableBindingVariableReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__VARIABLE), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__VARIABLE), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 162));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 162));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 162));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 162));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 162));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 162));
			}
			
			
			|			a14 = 'type' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_221, 163));
			}
			
			a15 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_222, 164));
			}
			
			(
				a16 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
					}
					if (a16 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TYPE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariableBinding, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableBindingTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TYPE), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TYPE), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 165));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 165));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 165));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 165));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 165));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 165));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 166));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 166));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 166));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 166));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 166));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 166));
	}
	
	a17 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 167));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 167));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 167));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 167));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 167));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 167));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 167));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 167));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 167));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 167));
	}
	
;

parse_org_kermeta_language_structure_MultiplicityElement returns [org.kermeta.language.structure.MultiplicityElement element = null]
@init{
}
:
	(
		(
			a0 = STRING			
			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				if (a0 != null) {
					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
					tokenResolver.setOptions(getOptions());
					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_ORDERED), result);
					java.lang.Object resolvedObject = result.getResolvedToken();
					if (resolvedObject == null) {
						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
					}
					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
					if (resolved != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_ORDERED), resolved);
						completedElement(resolved);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
				}
			}
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 168));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 168));
	}
	
	(
		(
			a1 = STRING			
			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				if (a1 != null) {
					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
					tokenResolver.setOptions(getOptions());
					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
					tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_UNIQUE), result);
					java.lang.Object resolvedObject = result.getResolvedToken();
					if (resolvedObject == null) {
						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
					}
					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
					if (resolved != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_UNIQUE), resolved);
						completedElement(resolved);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
				}
			}
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 169));
	}
	
	a2 = 'MultiplicityElement' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_223, 170));
	}
	
	a3 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 171));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 171));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 171));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 171));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 171));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 171));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 171));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 171));
	}
	
	(
		(
			a4 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_224, 172));
			}
			
			a5 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_225, 173));
			}
			
			(
				a6 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
					}
					if (a6 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a6.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a6).getLine(), ((org.antlr.runtime.CommonToken) a6).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a6).getStartIndex(), ((org.antlr.runtime.CommonToken) a6).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a6, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a6, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 174));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 174));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 174));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 174));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 174));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 174));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 174));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 174));
			}
			
			
			|			a7 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_226, 175));
			}
			
			a8 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 176));
			}
			
			(
				a9_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
					}
					if (a9_0 != null) {
						if (a9_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__OWNED_TAGS, a9_0);
							completedElement(a9_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a9_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 177));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 177));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 177));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 177));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 177));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 177));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 177));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 177));
			}
			
			
			|			a10 = 'containedType' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 178));
			}
			
			a11 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 179));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 179));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 179));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 179));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 179));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 179));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 179));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 179));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 179));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 179));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 179));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 179));
			}
			
			(
				a12_0 = parse_org_kermeta_language_structure_Type				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
					}
					if (a12_0 != null) {
						if (a12_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__CONTAINED_TYPE, a12_0);
							completedElement(a12_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a12_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 180));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 180));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 180));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 180));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 180));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 180));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 180));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 180));
			}
			
			
			|			a13 = 'name' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_228, 181));
			}
			
			a14 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_229, 182));
			}
			
			(
				a15 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
					}
					if (a15 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a15.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__NAME), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a15).getLine(), ((org.antlr.runtime.CommonToken) a15).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a15).getStartIndex(), ((org.antlr.runtime.CommonToken) a15).getStopIndex());
						}
						java.lang.String resolved = (java.lang.String)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__NAME), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a15, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 183));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 183));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 183));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 183));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 183));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 183));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 183));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 183));
			}
			
			
			|			a16 = 'type' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a16, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_230, 184));
			}
			
			a17 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_231, 185));
			}
			
			(
				a18 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
					}
					if (a18 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a18.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TYPE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a18).getLine(), ((org.antlr.runtime.CommonToken) a18).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a18).getStartIndex(), ((org.antlr.runtime.CommonToken) a18).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TYPE), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TYPE), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a18, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a18, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 186));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 186));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 186));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 186));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 186));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 186));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 186));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 186));
			}
			
			
			|			a19 = 'lower' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a19, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_232, 187));
			}
			
			a20 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_233, 188));
			}
			
			(
				a21 = INTEGER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
					}
					if (a21 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a21.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__LOWER), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a21).getLine(), ((org.antlr.runtime.CommonToken) a21).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a21).getStartIndex(), ((org.antlr.runtime.CommonToken) a21).getStopIndex());
						}
						java.lang.Integer resolved = (java.lang.Integer)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__LOWER), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a21, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 189));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 189));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 189));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 189));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 189));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 189));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 189));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 189));
			}
			
			
			|			a22 = 'upper' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a22, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_234, 190));
			}
			
			a23 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_235, 191));
			}
			
			(
				a24 = INTEGER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
					}
					if (a24 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a24.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__UPPER), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a24).getLine(), ((org.antlr.runtime.CommonToken) a24).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a24).getStartIndex(), ((org.antlr.runtime.CommonToken) a24).getStopIndex());
						}
						java.lang.Integer resolved = (java.lang.Integer)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__UPPER), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a24, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 192));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 192));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 192));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 192));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 192));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 192));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 192));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 192));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 193));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 193));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 193));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 193));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 193));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 193));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 193));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 193));
	}
	
	a25 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a25, element);
	}
	{
		// expected elements (follow set)
	}
	
	|//derived choice rules for sub-classes: 
	
	c0 = parse_org_kermeta_language_structure_Property{ element = c0; /* this is a subclass choice */ }
	|	c1 = parse_org_kermeta_language_structure_Operation{ element = c1; /* this is a subclass choice */ }
	|	c2 = parse_org_kermeta_language_structure_Parameter{ element = c2; /* this is a subclass choice */ }
	|	c3 = parse_org_kermeta_language_behavior_TypeReference{ element = c3; /* this is a subclass choice */ }
	
;

parse_org_kermeta_language_structure_TypeDefinition returns [org.kermeta.language.structure.TypeDefinition element = null]
@init{
}
:
	(
		(
			a0 = STRING			
			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
				}
				if (a0 != null) {
					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
					tokenResolver.setOptions(getOptions());
					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__IS_ASPECT), result);
					java.lang.Object resolvedObject = result.getResolvedToken();
					if (resolvedObject == null) {
						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
					}
					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
					if (resolved != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__IS_ASPECT), resolved);
						completedElement(resolved);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
				}
			}
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 195));
	}
	
	a1 = 'TypeDefinition' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_236, 196));
	}
	
	a2 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_237, 197));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 197));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 197));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 197));
	}
	
	(
		(
			a3 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_241, 198));
			}
			
			a4 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_242, 199));
			}
			
			(
				a5 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
					}
					if (a5 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a5).getLine(), ((org.antlr.runtime.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a5).getStartIndex(), ((org.antlr.runtime.CommonToken) a5).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_237, 200));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 200));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 200));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 200));
			}
			
			
			|			a6 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_243, 201));
			}
			
			a7 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 202));
			}
			
			(
				a8_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
					}
					if (a8_0 != null) {
						if (a8_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__OWNED_TAGS, a8_0);
							completedElement(a8_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a8_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_237, 203));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 203));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 203));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 203));
			}
			
			
			|			a9 = 'name' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_244, 204));
			}
			
			a10 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_245, 205));
			}
			
			(
				a11 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
					}
					if (a11 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a11.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__NAME), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a11).getLine(), ((org.antlr.runtime.CommonToken) a11).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a11).getStartIndex(), ((org.antlr.runtime.CommonToken) a11).getStopIndex());
						}
						java.lang.String resolved = (java.lang.String)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__NAME), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_237, 206));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 206));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 206));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 206));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_237, 207));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 207));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 207));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 207));
	}
	
	a12 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 208));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 208));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 208));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 208));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 208));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 208));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 208));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 208));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 208));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 208));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 208));
	}
	
	|//derived choice rules for sub-classes: 
	
	c0 = parse_org_kermeta_language_structure_ClassDefinition{ element = c0; /* this is a subclass choice */ }
	|	c1 = parse_org_kermeta_language_structure_Enumeration{ element = c1; /* this is a subclass choice */ }
	|	c2 = parse_org_kermeta_language_structure_ModelType{ element = c2; /* this is a subclass choice */ }
	|	c3 = parse_org_kermeta_language_structure_PrimitiveType{ element = c3; /* this is a subclass choice */ }
	
;

parse_org_kermeta_language_structure_PrimitiveType returns [org.kermeta.language.structure.PrimitiveType element = null]
@init{
}
:
	(
		(
			a0 = STRING			
			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
				}
				if (a0 != null) {
					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
					tokenResolver.setOptions(getOptions());
					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__IS_ASPECT), result);
					java.lang.Object resolvedObject = result.getResolvedToken();
					if (resolvedObject == null) {
						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
					}
					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
					if (resolved != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__IS_ASPECT), resolved);
						completedElement(resolved);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
				}
			}
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 209));
	}
	
	a1 = 'PrimitiveType' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_246, 210));
	}
	
	a2 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 211));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 211));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 211));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 211));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 211));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 211));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 211));
	}
	
	(
		(
			a3 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_247, 212));
			}
			
			a4 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_248, 213));
			}
			
			(
				a5 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
					}
					if (a5 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a5).getLine(), ((org.antlr.runtime.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a5).getStartIndex(), ((org.antlr.runtime.CommonToken) a5).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 214));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 214));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 214));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 214));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 214));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 214));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 214));
			}
			
			
			|			a6 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_249, 215));
			}
			
			a7 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 216));
			}
			
			(
				a8_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
					}
					if (a8_0 != null) {
						if (a8_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__OWNED_TAGS, a8_0);
							completedElement(a8_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a8_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 217));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 217));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 217));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 217));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 217));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 217));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 217));
			}
			
			
			|			a9 = 'typeContainer' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_250, 218));
			}
			
			a10 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_251, 219));
			}
			
			(
				a11 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
					}
					if (a11 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a11.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__TYPE_CONTAINER), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a11).getLine(), ((org.antlr.runtime.CommonToken) a11).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a11).getStartIndex(), ((org.antlr.runtime.CommonToken) a11).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.behavior.Raise proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__TYPE_CONTAINER), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__TYPE_CONTAINER), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 220));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 220));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 220));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 220));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 220));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 220));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 220));
			}
			
			
			|			a12 = 'name' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_252, 221));
			}
			
			a13 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_253, 222));
			}
			
			(
				a14 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
					}
					if (a14 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a14.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__NAME), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a14).getLine(), ((org.antlr.runtime.CommonToken) a14).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a14).getStartIndex(), ((org.antlr.runtime.CommonToken) a14).getStopIndex());
						}
						java.lang.String resolved = (java.lang.String)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__NAME), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a14, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 223));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 223));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 223));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 223));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 223));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 223));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 223));
			}
			
			
			|			a15 = 'containedType' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_254, 224));
			}
			
			a16 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a16, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 225));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 225));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 225));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 225));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 225));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 225));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 225));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 225));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 225));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 225));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 225));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 225));
			}
			
			(
				a17_0 = parse_org_kermeta_language_structure_Type				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
					}
					if (a17_0 != null) {
						if (a17_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__CONTAINED_TYPE, a17_0);
							completedElement(a17_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a17_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 226));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 226));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 226));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 226));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 226));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 226));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 226));
			}
			
			
			|			a18 = 'instanceType' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_255, 227));
			}
			
			a19 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a19, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_256, 228));
			}
			
			(
				a20 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
					}
					if (a20 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a20.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__INSTANCE_TYPE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a20).getLine(), ((org.antlr.runtime.CommonToken) a20).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a20).getStartIndex(), ((org.antlr.runtime.CommonToken) a20).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.PrimitiveType, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getPrimitiveTypeInstanceTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__INSTANCE_TYPE), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__INSTANCE_TYPE), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a20, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a20, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 229));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 229));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 229));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 229));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 229));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 229));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 229));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 230));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 230));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 230));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 230));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 230));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 230));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 230));
	}
	
	a21 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a21, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 231));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 231));
	}
	
;

parse_org_kermeta_language_structure_Tag returns [org.kermeta.language.structure.Tag element = null]
@init{
}
:
	a0 = 'Tag' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_257, 232));
	}
	
	a1 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_258, 233));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_259, 233));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_260, 233));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_261, 233));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_262, 233));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_263, 233));
	}
	
	(
		(
			a2 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_264, 234));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_265, 235));
			}
			
			(
				a4 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TAG__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_258, 236));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_259, 236));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_260, 236));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_261, 236));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_262, 236));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_263, 236));
			}
			
			
			|			a5 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_266, 237));
			}
			
			a6 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 238));
			}
			
			(
				a7_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TAG__OWNED_TAGS, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_258, 239));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_259, 239));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_260, 239));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_261, 239));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_262, 239));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_263, 239));
			}
			
			
			|			a8 = 'name' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_267, 240));
			}
			
			a9 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_268, 241));
			}
			
			(
				a10 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
					}
					if (a10 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a10.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__NAME), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a10).getLine(), ((org.antlr.runtime.CommonToken) a10).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a10).getStartIndex(), ((org.antlr.runtime.CommonToken) a10).getStopIndex());
						}
						java.lang.String resolved = (java.lang.String)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__NAME), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_258, 242));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_259, 242));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_260, 242));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_261, 242));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_262, 242));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_263, 242));
			}
			
			
			|			a11 = 'value' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_269, 243));
			}
			
			a12 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_270, 244));
			}
			
			(
				a13 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
					}
					if (a13 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__VALUE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
						}
						java.lang.String resolved = (java.lang.String)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__VALUE), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_258, 245));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_259, 245));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_260, 245));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_261, 245));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_262, 245));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_263, 245));
			}
			
			
			|			a14 = 'object' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_271, 246));
			}
			
			a15 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_272, 247));
			}
			
			(
				a16 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
					}
					if (a16 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__OBJECT), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Object proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Tag, org.kermeta.language.structure.Object>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTagObjectReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__OBJECT), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TAG__OBJECT, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_258, 248));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_259, 248));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_260, 248));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_261, 248));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_262, 248));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_263, 248));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_258, 249));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_259, 249));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_260, 249));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_261, 249));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_262, 249));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_263, 249));
	}
	
	a17 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_179, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_185, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_186, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_187, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_237, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_258, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_259, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_260, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_261, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_262, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_263, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_273, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_274, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_275, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_276, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_277, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_278, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_279, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_280, 250));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_281, 250));
	}
	
;

parse_org_kermeta_language_structure_ObjectTypeVariable returns [org.kermeta.language.structure.ObjectTypeVariable element = null]
@init{
}
:
	a0 = 'ObjectTypeVariable' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_282, 251));
	}
	
	a1 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 252));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 252));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 252));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 252));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 252));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 252));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 252));
	}
	
	(
		(
			a2 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_283, 253));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_284, 254));
			}
			
			(
				a4 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 255));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 255));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 255));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 255));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 255));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 255));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 255));
			}
			
			
			|			a5 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_285, 256));
			}
			
			a6 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 257));
			}
			
			(
				a7_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__OWNED_TAGS, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 258));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 258));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 258));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 258));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 258));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 258));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 258));
			}
			
			
			|			a8 = 'containedType' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_286, 259));
			}
			
			a9 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 260));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 260));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 260));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 260));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 260));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 260));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 260));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 260));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 260));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 260));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 260));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 260));
			}
			
			(
				a10_0 = parse_org_kermeta_language_structure_Type				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
					}
					if (a10_0 != null) {
						if (a10_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__CONTAINED_TYPE, a10_0);
							completedElement(a10_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a10_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 261));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 261));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 261));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 261));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 261));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 261));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 261));
			}
			
			
			|			a11 = 'typeContainer' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_287, 262));
			}
			
			a12 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_288, 263));
			}
			
			(
				a13 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
					}
					if (a13 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TYPE_CONTAINER), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.behavior.Raise proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TYPE_CONTAINER), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TYPE_CONTAINER), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 264));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 264));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 264));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 264));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 264));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 264));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 264));
			}
			
			
			|			a14 = 'name' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_289, 265));
			}
			
			a15 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_290, 266));
			}
			
			(
				a16 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
					}
					if (a16 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__NAME), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
						}
						java.lang.String resolved = (java.lang.String)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__NAME), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 267));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 267));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 267));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 267));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 267));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 267));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 267));
			}
			
			
			|			a17 = 'supertype' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_291, 268));
			}
			
			a18 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_292, 269));
			}
			
			(
				a19 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
					}
					if (a19 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__SUPERTYPE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariable, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableSupertypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__SUPERTYPE), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__SUPERTYPE), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 270));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 270));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 270));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 270));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 270));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 270));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 270));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 271));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 271));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 271));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 271));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 271));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 271));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 271));
	}
	
	a20 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 272));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 272));
	}
	
	|//derived choice rules for sub-classes: 
	
	c0 = parse_org_kermeta_language_structure_VirtualType{ element = c0; /* this is a subclass choice */ }
	
;

parse_org_kermeta_language_structure_ModelTypeVariable returns [org.kermeta.language.structure.ModelTypeVariable element = null]
@init{
}
:
	a0 = 'ModelTypeVariable' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_293, 273));
	}
	
	a1 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 274));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 274));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 274));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 274));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 274));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 274));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 274));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 274));
	}
	
	(
		(
			a2 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_294, 275));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_295, 276));
			}
			
			(
				a4 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 277));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 277));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 277));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 277));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 277));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 277));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 277));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 277));
			}
			
			
			|			a5 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_296, 278));
			}
			
			a6 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 279));
			}
			
			(
				a7_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__OWNED_TAGS, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 280));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 280));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 280));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 280));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 280));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 280));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 280));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 280));
			}
			
			
			|			a8 = 'containedType' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_297, 281));
			}
			
			a9 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 282));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 282));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 282));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 282));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 282));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 282));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 282));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 282));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 282));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 282));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 282));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 282));
			}
			
			(
				a10_0 = parse_org_kermeta_language_structure_Type				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
					}
					if (a10_0 != null) {
						if (a10_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__CONTAINED_TYPE, a10_0);
							completedElement(a10_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a10_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 283));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 283));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 283));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 283));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 283));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 283));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 283));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 283));
			}
			
			
			|			a11 = 'typeContainer' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_298, 284));
			}
			
			a12 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_299, 285));
			}
			
			(
				a13 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
					}
					if (a13 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TYPE_CONTAINER), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.behavior.Raise proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TYPE_CONTAINER), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TYPE_CONTAINER), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 286));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 286));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 286));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 286));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 286));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 286));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 286));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 286));
			}
			
			
			|			a14 = 'name' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_300, 287));
			}
			
			a15 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 288));
			}
			
			(
				a16 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
					}
					if (a16 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__NAME), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
						}
						java.lang.String resolved = (java.lang.String)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__NAME), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 289));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 289));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 289));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 289));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 289));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 289));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 289));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 289));
			}
			
			
			|			a17 = 'supertype' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 290));
			}
			
			a18 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 291));
			}
			
			(
				a19 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
					}
					if (a19 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__SUPERTYPE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariable, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableSupertypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__SUPERTYPE), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__SUPERTYPE), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 292));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 292));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 292));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 292));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 292));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 292));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 292));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 292));
			}
			
			
			|			a20 = 'virtualType' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 293));
			}
			
			a21 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a21, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 294));
			}
			
			(
				a22_0 = parse_org_kermeta_language_structure_VirtualType				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
					}
					if (a22_0 != null) {
						if (a22_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__VIRTUAL_TYPE, a22_0);
							completedElement(a22_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a22_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 295));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 295));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 295));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 295));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 295));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 295));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 295));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 295));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 296));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 296));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 296));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 296));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 296));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 296));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 296));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 296));
	}
	
	a23 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 297));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 297));
	}
	
;

parse_org_kermeta_language_structure_VirtualType returns [org.kermeta.language.structure.VirtualType element = null]
@init{
}
:
	a0 = 'VirtualType' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 298));
	}
	
	a1 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 299));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 299));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 299));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 299));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 299));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 299));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 299));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 299));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 299));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 299));
	}
	
	(
		(
			a2 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 300));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 301));
			}
			
			(
				a4 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 302));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 302));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 302));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 302));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 302));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 302));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 302));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 302));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 302));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 302));
			}
			
			
			|			a5 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 303));
			}
			
			a6 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 304));
			}
			
			(
				a7_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__OWNED_TAGS, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 305));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 305));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 305));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 305));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 305));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 305));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 305));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 305));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 305));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 305));
			}
			
			
			|			a8 = 'containedType' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 306));
			}
			
			a9 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 307));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 307));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 307));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 307));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 307));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 307));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 307));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 307));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 307));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 307));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 307));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 307));
			}
			
			(
				a10_0 = parse_org_kermeta_language_structure_Type				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
					}
					if (a10_0 != null) {
						if (a10_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CONTAINED_TYPE, a10_0);
							completedElement(a10_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a10_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 308));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 308));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 308));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 308));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 308));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 308));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 308));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 308));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 308));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 308));
			}
			
			
			|			a11 = 'typeContainer' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 309));
			}
			
			a12 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 310));
			}
			
			(
				a13 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
					}
					if (a13 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_CONTAINER), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.behavior.Raise proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_CONTAINER), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_CONTAINER), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 311));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 311));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 311));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 311));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 311));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 311));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 311));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 311));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 311));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 311));
			}
			
			
			|			a14 = 'name' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 312));
			}
			
			a15 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 313));
			}
			
			(
				a16 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
					}
					if (a16 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__NAME), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
						}
						java.lang.String resolved = (java.lang.String)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__NAME), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 314));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 314));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 314));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 314));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 314));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 314));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 314));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 314));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 314));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 314));
			}
			
			
			|			a17 = 'supertype' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 315));
			}
			
			a18 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 316));
			}
			
			(
				a19 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
					}
					if (a19 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__SUPERTYPE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariable, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableSupertypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__SUPERTYPE), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__SUPERTYPE), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 317));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 317));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 317));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 317));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 317));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 317));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 317));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 317));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 317));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 317));
			}
			
			
			|			a20 = 'classDefinition' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 318));
			}
			
			a21 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a21, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 319));
			}
			
			(
				a22 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
					}
					if (a22 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a22.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CLASS_DEFINITION), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a22).getLine(), ((org.antlr.runtime.CommonToken) a22).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a22).getStartIndex(), ((org.antlr.runtime.CommonToken) a22).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.ClassDefinition proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.VirtualType, org.kermeta.language.structure.ClassDefinition>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getVirtualTypeClassDefinitionReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CLASS_DEFINITION), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CLASS_DEFINITION), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a22, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a22, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 320));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 320));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 320));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 320));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 320));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 320));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 320));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 320));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 320));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 320));
			}
			
			
			|			a23 = 'modelType' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 321));
			}
			
			a24 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a24, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 322));
			}
			
			(
				a25 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
					}
					if (a25 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a25.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__MODEL_TYPE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a25).getLine(), ((org.antlr.runtime.CommonToken) a25).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a25).getStartIndex(), ((org.antlr.runtime.CommonToken) a25).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.ModelTypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.VirtualType, org.kermeta.language.structure.ModelTypeVariable>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getVirtualTypeModelTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__MODEL_TYPE), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__MODEL_TYPE), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a25, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a25, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 323));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 323));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 323));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 323));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 323));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 323));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 323));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 323));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 323));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 323));
			}
			
			
			|			a26 = 'typeParamBinding' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a26, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 324));
			}
			
			a27 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a27, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_207, 325));
			}
			
			(
				a28_0 = parse_org_kermeta_language_structure_TypeVariableBinding				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
					}
					if (a28_0 != null) {
						if (a28_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_PARAM_BINDING, a28_0);
							completedElement(a28_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a28_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 326));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 326));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 326));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 326));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 326));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 326));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 326));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 326));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 326));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 326));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 327));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 327));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 327));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 327));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 327));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 327));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 327));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 327));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 327));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 327));
	}
	
	a29 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a29, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 328));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 328));
	}
	
;

parse_org_kermeta_language_structure_ProductType returns [org.kermeta.language.structure.ProductType element = null]
@init{
}
:
	a0 = 'ProductType' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 329));
	}
	
	a1 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 330));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 330));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 330));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 330));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 330));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 330));
	}
	
	(
		(
			a2 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 331));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 332));
			}
			
			(
				a4 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 333));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 333));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 333));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 333));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 333));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 333));
			}
			
			
			|			a5 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_324, 334));
			}
			
			a6 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 335));
			}
			
			(
				a7_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__OWNED_TAGS, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 336));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 336));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 336));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 336));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 336));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 336));
			}
			
			
			|			a8 = 'containedType' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_325, 337));
			}
			
			a9 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 338));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 338));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 338));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 338));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 338));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 338));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 338));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 338));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 338));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 338));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 338));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 338));
			}
			
			(
				a10_0 = parse_org_kermeta_language_structure_Type				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
					}
					if (a10_0 != null) {
						if (a10_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__CONTAINED_TYPE, a10_0);
							completedElement(a10_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a10_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 339));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 339));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 339));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 339));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 339));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 339));
			}
			
			
			|			a11 = 'typeContainer' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 340));
			}
			
			a12 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 341));
			}
			
			(
				a13 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
					}
					if (a13 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE_CONTAINER), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.behavior.Raise proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE_CONTAINER), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE_CONTAINER), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 342));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 342));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 342));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 342));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 342));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 342));
			}
			
			
			|			a14 = 'type' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 343));
			}
			
			a15 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 344));
			}
			
			(
				a16 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
					}
					if (a16 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ProductType, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getProductTypeTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 345));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 345));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 345));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 345));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 345));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 345));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 346));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 346));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 346));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 346));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 346));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 346));
	}
	
	a17 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 347));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 347));
	}
	
;

parse_org_kermeta_language_structure_FunctionType returns [org.kermeta.language.structure.FunctionType element = null]
@init{
}
:
	a0 = 'FunctionType' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 348));
	}
	
	a1 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 349));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 349));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 349));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 349));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 349));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 349));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 349));
	}
	
	(
		(
			a2 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 350));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 351));
			}
			
			(
				a4 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 352));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 352));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 352));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 352));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 352));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 352));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 352));
			}
			
			
			|			a5 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 353));
			}
			
			a6 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 354));
			}
			
			(
				a7_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__OWNED_TAGS, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 355));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 355));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 355));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 355));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 355));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 355));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 355));
			}
			
			
			|			a8 = 'containedType' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 356));
			}
			
			a9 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 357));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 357));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 357));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 357));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 357));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 357));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 357));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 357));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 357));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 357));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 357));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 357));
			}
			
			(
				a10_0 = parse_org_kermeta_language_structure_Type				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
					}
					if (a10_0 != null) {
						if (a10_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__CONTAINED_TYPE, a10_0);
							completedElement(a10_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a10_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 358));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 358));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 358));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 358));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 358));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 358));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 358));
			}
			
			
			|			a11 = 'typeContainer' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 359));
			}
			
			a12 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 360));
			}
			
			(
				a13 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
					}
					if (a13 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TYPE_CONTAINER), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.behavior.Raise proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TYPE_CONTAINER), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TYPE_CONTAINER), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 361));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 361));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 361));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 361));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 361));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 361));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 361));
			}
			
			
			|			a14 = 'left' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 362));
			}
			
			a15 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 363));
			}
			
			(
				a16 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
					}
					if (a16 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__LEFT), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.FunctionType, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getFunctionTypeLeftReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__LEFT), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__LEFT), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 364));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 364));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 364));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 364));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 364));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 364));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 364));
			}
			
			
			|			a17 = 'right' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 365));
			}
			
			a18 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_340, 366));
			}
			
			(
				a19 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
					}
					if (a19 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__RIGHT), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.FunctionType, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getFunctionTypeRightReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__RIGHT), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__RIGHT), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 367));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 367));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 367));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 367));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 367));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 367));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 367));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 368));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 368));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 368));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 368));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 368));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 368));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 368));
	}
	
	a20 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 369));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 369));
	}
	
;

parse_org_kermeta_language_structure_VoidType returns [org.kermeta.language.structure.VoidType element = null]
@init{
}
:
	a0 = 'VoidType' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_341, 370));
	}
	
	a1 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_273, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_274, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_275, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_276, 371));
	}
	
	(
		(
			a2 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_342, 372));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_343, 373));
			}
			
			(
				a4 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VOID_TYPE__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VOID_TYPE__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VOID_TYPE__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_273, 374));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_274, 374));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_275, 374));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_276, 374));
			}
			
			
			|			a5 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_344, 375));
			}
			
			a6 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 376));
			}
			
			(
				a7_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VOID_TYPE__OWNED_TAGS, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_273, 377));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_274, 377));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_275, 377));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_276, 377));
			}
			
			
			|			a8 = 'typeContainer' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_345, 378));
			}
			
			a9 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 379));
			}
			
			(
				a10 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
					}
					if (a10 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a10.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VOID_TYPE__TYPE_CONTAINER), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a10).getLine(), ((org.antlr.runtime.CommonToken) a10).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a10).getStartIndex(), ((org.antlr.runtime.CommonToken) a10).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.behavior.Raise proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VOID_TYPE__TYPE_CONTAINER), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VOID_TYPE__TYPE_CONTAINER), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_273, 380));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_274, 380));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_275, 380));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_276, 380));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_273, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_274, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_275, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_276, 381));
	}
	
	a11 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 382));
	}
	
;

parse_org_kermeta_language_behavior_Block returns [org.kermeta.language.behavior.Block element = null]
@init{
}
:
	a0 = 'do' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 383));
	}
	
	(
		(
			(
				a1_0 = parse_org_kermeta_language_behavior_VariableDecl				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
					}
					if (a1_0 != null) {
						if (a1_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a1_0);
							completedElement(a1_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a1_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 384));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 384));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 384));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 384));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 384));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 384));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 384));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 384));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 384));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 384));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 384));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 384));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 384));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 384));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 384));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 384));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 384));
			}
			
			
			|			(
				a2_0 = parse_org_kermeta_language_behavior_Loop				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
					}
					if (a2_0 != null) {
						if (a2_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a2_0);
							completedElement(a2_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a2_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 385));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 385));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 385));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 385));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 385));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 385));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 385));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 385));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 385));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 385));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 385));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 385));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 385));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 385));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 385));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 385));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 385));
			}
			
			
			|			(
				a3_0 = parse_org_kermeta_language_behavior_Conditional				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
					}
					if (a3_0 != null) {
						if (a3_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a3_0);
							completedElement(a3_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a3_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 386));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 386));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 386));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 386));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 386));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 386));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 386));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 386));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 386));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 386));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 386));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 386));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 386));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 386));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 386));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 386));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 386));
			}
			
			
			|			(
				a4_0 = parse_org_kermeta_language_behavior_Assignment				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
					}
					if (a4_0 != null) {
						if (a4_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a4_0);
							completedElement(a4_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a4_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 387));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 387));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 387));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 387));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 387));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 387));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 387));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 387));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 387));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 387));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 387));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 387));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 387));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 387));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 387));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 387));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 387));
			}
			
			
			|			(
				a5_0 = parse_org_kermeta_language_behavior_CallFeature				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
					}
					if (a5_0 != null) {
						if (a5_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a5_0);
							completedElement(a5_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a5_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 388));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 388));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 388));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 388));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 388));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 388));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 388));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 388));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 388));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 388));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 388));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 388));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 388));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 388));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 388));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 388));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 388));
			}
			
			
			|			(
				a6_0 = parse_org_kermeta_language_behavior_CallVariable				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
					}
					if (a6_0 != null) {
						if (a6_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a6_0);
							completedElement(a6_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a6_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 389));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 389));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 389));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 389));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 389));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 389));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 389));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 389));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 389));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 389));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 389));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 389));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 389));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 389));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 389));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 389));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 389));
			}
			
			
			|			(
				a7_0 = parse_org_kermeta_language_behavior_CallSuperOperation				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 390));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 390));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 390));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 390));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 390));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 390));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 390));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 390));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 390));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 390));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 390));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 390));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 390));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 390));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 390));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 390));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 390));
			}
			
			
			|			(
				a8_0 = parse_org_kermeta_language_behavior_CallResult				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
					}
					if (a8_0 != null) {
						if (a8_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a8_0);
							completedElement(a8_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a8_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 391));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 391));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 391));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 391));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 391));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 391));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 391));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 391));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 391));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 391));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 391));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 391));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 391));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 391));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 391));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 391));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 391));
			}
			
			
			|			(
				a9_0 = parse_org_kermeta_language_behavior_JavaStaticCall				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
					}
					if (a9_0 != null) {
						if (a9_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a9_0);
							completedElement(a9_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a9_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 392));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 392));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 392));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 392));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 392));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 392));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 392));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 392));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 392));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 392));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 392));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 392));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 392));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 392));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 392));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 392));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 392));
			}
			
			
			|			(
				a10_0 = parse_org_kermeta_language_behavior_EmptyExpression				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
					}
					if (a10_0 != null) {
						if (a10_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a10_0);
							completedElement(a10_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a10_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 393));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 393));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 393));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 393));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 393));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 393));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 393));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 393));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 393));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 393));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 393));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 393));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 393));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 393));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 393));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 393));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 393));
			}
			
			
			|			(
				a11_0 = parse_org_kermeta_language_behavior_Block				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
					}
					if (a11_0 != null) {
						if (a11_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a11_0);
							completedElement(a11_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a11_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 394));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 394));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 394));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 394));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 394));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 394));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 394));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 394));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 394));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 394));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 394));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 394));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 394));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 394));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 394));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 394));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 394));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 395));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 395));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 395));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 395));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 395));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 395));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 395));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 395));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 395));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 395));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 395));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 395));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 395));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 395));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 395));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 395));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 395));
	}
	
	(
		(
			(
				a12_0 = parse_org_kermeta_language_behavior_Rescue				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
					}
					if (a12_0 != null) {
						if (a12_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__RESCUE_BLOCK, a12_0);
							completedElement(a12_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a12_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 396));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 396));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 397));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 397));
	}
	
	a13 = 'end' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 398));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 398));
	}
	
;

parse_org_kermeta_language_behavior_Rescue returns [org.kermeta.language.behavior.Rescue element = null]
@init{
}
:
	a0 = 'rescue' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 399));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 399));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 399));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 399));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 399));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 399));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 399));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 399));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 399));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 399));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 399));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 399));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 399));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 399));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 399));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 399));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 399));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 399));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 399));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 399));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 399));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 399));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 399));
	}
	
	(
		(
			a1 = '(' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 400));
			}
			
			(
				a2 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
					}
					if (a2 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RESCUE__EXCEPTION_NAME), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
						}
						java.lang.String resolved = (java.lang.String)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RESCUE__EXCEPTION_NAME), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 401));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 402));
			}
			
			(
				a4_0 = parse_org_kermeta_language_behavior_TypeReference				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
					}
					if (a4_0 != null) {
						if (a4_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RESCUE__EXCEPTION_TYPE), a4_0);
							completedElement(a4_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a4_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_359, 403));
			}
			
			a5 = ')' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 404));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 404));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 404));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 404));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 404));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 404));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 404));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 404));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 404));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 404));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 404));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 404));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 404));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 404));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 404));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 404));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 404));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 404));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 404));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 404));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 404));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 404));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 405));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 405));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 405));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 405));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 405));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 405));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 405));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 405));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 405));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 405));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 405));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 405));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 405));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 405));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 405));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 405));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 405));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 405));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 405));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 405));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 405));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 405));
	}
	
	(
		(
			(
				a6_0 = parse_org_kermeta_language_behavior_Expression				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
					}
					if (a6_0 != null) {
						if (a6_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.RESCUE__BODY, a6_0);
							completedElement(a6_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a6_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 406));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 406));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 407));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 407));
	}
	
;

parse_org_kermeta_language_behavior_TypeReference returns [org.kermeta.language.behavior.TypeReference element = null]
@init{
}
:
	(
		a0 = STRING		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createTypeReference();
			}
			if (a0 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_REFERENCE__TYPE), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
				}
				String resolved = (String) resolvedObject;
				org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
				collectHiddenTokens(element);
				registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_REFERENCE__TYPE), resolved, proxy);
				if (proxy != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_REFERENCE__TYPE), proxy);
					completedElement(proxy);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, proxy);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_359, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_360, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_277, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_278, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_279, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_280, 408));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_281, 408));
	}
	
;

parse_org_kermeta_language_behavior_Raise returns [org.kermeta.language.behavior.Raise element = null]
@init{
}
:
	a0 = 'raise' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 409));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 409));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 409));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 409));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 409));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 409));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 409));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 409));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 409));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 409));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 409));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 409));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 409));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 409));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 409));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 409));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 409));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 409));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 409));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 409));
	}
	
	(
		a1_0 = parse_org_kermeta_language_behavior_Expression		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
			}
			if (a1_0 != null) {
				if (a1_0 != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RAISE__EXPRESSION), a1_0);
					completedElement(a1_0);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos(a1_0, element); 			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 410));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 410));
	}
	
;

parse_org_kermeta_language_behavior_BooleanLiteral returns [org.kermeta.language.behavior.BooleanLiteral element = null]
@init{
}
:
	(
		a0 = BOOLEAN		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBooleanLiteral();
			}
			if (a0 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("BOOLEAN");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.BOOLEAN_LITERAL__VALUE), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
				}
				java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.BOOLEAN_LITERAL__VALUE), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 411));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 411));
	}
	
;

parse_org_kermeta_language_behavior_IntegerLiteral returns [org.kermeta.language.behavior.IntegerLiteral element = null]
@init{
}
:
	(
		a0 = INTEGER		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createIntegerLiteral();
			}
			if (a0 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.INTEGER_LITERAL__VALUE), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
				}
				java.lang.Integer resolved = (java.lang.Integer)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.INTEGER_LITERAL__VALUE), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 412));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 412));
	}
	
;

parse_org_kermeta_language_behavior_StringLiteral returns [org.kermeta.language.behavior.StringLiteral element = null]
@init{
}
:
	(
		a0 = STRING_LITERAL		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createStringLiteral();
			}
			if (a0 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING_LITERAL");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.STRING_LITERAL__VALUE), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
				}
				java.lang.String resolved = (java.lang.String)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.STRING_LITERAL__VALUE), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 413));
	}
	
;

parse_org_kermeta_language_behavior_Conditional returns [org.kermeta.language.behavior.Conditional element = null]
@init{
}
:
	a0 = 'if' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 414));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 414));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 414));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 414));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 414));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 414));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 414));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 414));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 414));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 414));
	}
	
	(
		(
			a1_0 = parse_org_kermeta_language_behavior_CallFeature			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
				}
				if (a1_0 != null) {
					if (a1_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__CONDITION), a1_0);
						completedElement(a1_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a1_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_361, 415));
		}
		
		
		|		(
			a2_0 = parse_org_kermeta_language_behavior_Conditional			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
				}
				if (a2_0 != null) {
					if (a2_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__CONDITION), a2_0);
						completedElement(a2_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a2_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_361, 416));
		}
		
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_361, 417));
	}
	
	a3 = 'then' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 418));
	}
	
	(
		(
			a4_0 = parse_org_kermeta_language_behavior_BooleanLiteral			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
				}
				if (a4_0 != null) {
					if (a4_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a4_0);
						completedElement(a4_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a4_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 419));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 419));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 419));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 419));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 419));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 419));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 419));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 419));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 419));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 419));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 419));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 419));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 419));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 419));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 419));
		}
		
		
		|		(
			a5_0 = parse_org_kermeta_language_behavior_Block			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
				}
				if (a5_0 != null) {
					if (a5_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a5_0);
						completedElement(a5_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a5_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 420));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 420));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 420));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 420));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 420));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 420));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 420));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 420));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 420));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 420));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 420));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 420));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 420));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 420));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 420));
		}
		
		
		|		(
			a6_0 = parse_org_kermeta_language_behavior_Assignment			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
				}
				if (a6_0 != null) {
					if (a6_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a6_0);
						completedElement(a6_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a6_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 421));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 421));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 421));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 421));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 421));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 421));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 421));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 421));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 421));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 421));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 421));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 421));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 421));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 421));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 421));
		}
		
		
		|		(
			a7_0 = parse_org_kermeta_language_behavior_CallFeature			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
				}
				if (a7_0 != null) {
					if (a7_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a7_0);
						completedElement(a7_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a7_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 422));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 422));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 422));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 422));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 422));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 422));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 422));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 422));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 422));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 422));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 422));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 422));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 422));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 422));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 422));
		}
		
		
		|		(
			a8_0 = parse_org_kermeta_language_behavior_CallSuperOperation			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
				}
				if (a8_0 != null) {
					if (a8_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a8_0);
						completedElement(a8_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a8_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 423));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 423));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 423));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 423));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 423));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 423));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 423));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 423));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 423));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 423));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 423));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 423));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 423));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 423));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 423));
		}
		
		
		|		(
			a9_0 = parse_org_kermeta_language_behavior_CallResult			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
				}
				if (a9_0 != null) {
					if (a9_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a9_0);
						completedElement(a9_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a9_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 424));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 424));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 424));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 424));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 424));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 424));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 424));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 424));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 424));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 424));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 424));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 424));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 424));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 424));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 424));
		}
		
		
		|		(
			a10_0 = parse_org_kermeta_language_behavior_CallVariable			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
				}
				if (a10_0 != null) {
					if (a10_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a10_0);
						completedElement(a10_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a10_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 425));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 425));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 425));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 425));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 425));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 425));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 425));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 425));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 425));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 425));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 425));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 425));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 425));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 425));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 425));
		}
		
		
		|		(
			a11_0 = parse_org_kermeta_language_behavior_CallValue			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
				}
				if (a11_0 != null) {
					if (a11_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a11_0);
						completedElement(a11_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a11_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 426));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 426));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 426));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 426));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 426));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 426));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 426));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 426));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 426));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 426));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 426));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 426));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 426));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 426));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 426));
		}
		
		
		|		(
			a12_0 = parse_org_kermeta_language_behavior_VariableDecl			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
				}
				if (a12_0 != null) {
					if (a12_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a12_0);
						completedElement(a12_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a12_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 427));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 427));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 427));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 427));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 427));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 427));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 427));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 427));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 427));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 427));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 427));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 427));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 427));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 427));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 427));
		}
		
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 428));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 428));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 428));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 428));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 428));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 428));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 428));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 428));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 428));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 428));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 428));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 428));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 428));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 428));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 428));
	}
	
	(
		(
			a13 = 'else' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 429));
			}
			
			(
				a14_0 = parse_org_kermeta_language_behavior_BooleanLiteral				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
					}
					if (a14_0 != null) {
						if (a14_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a14_0);
							completedElement(a14_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a14_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 430));
			}
			
			
			|			(
				a15_0 = parse_org_kermeta_language_behavior_Block				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
					}
					if (a15_0 != null) {
						if (a15_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a15_0);
							completedElement(a15_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a15_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 431));
			}
			
			
			|			(
				a16_0 = parse_org_kermeta_language_behavior_Assignment				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
					}
					if (a16_0 != null) {
						if (a16_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a16_0);
							completedElement(a16_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a16_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 432));
			}
			
			
			|			(
				a17_0 = parse_org_kermeta_language_behavior_CallFeature				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
					}
					if (a17_0 != null) {
						if (a17_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a17_0);
							completedElement(a17_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a17_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 433));
			}
			
			
			|			(
				a18_0 = parse_org_kermeta_language_behavior_CallSuperOperation				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
					}
					if (a18_0 != null) {
						if (a18_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a18_0);
							completedElement(a18_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a18_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 434));
			}
			
			
			|			(
				a19_0 = parse_org_kermeta_language_behavior_CallResult				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
					}
					if (a19_0 != null) {
						if (a19_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a19_0);
							completedElement(a19_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a19_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 435));
			}
			
			
			|			(
				a20_0 = parse_org_kermeta_language_behavior_VariableDecl				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
					}
					if (a20_0 != null) {
						if (a20_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a20_0);
							completedElement(a20_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a20_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 436));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 436));
			}
			
			(
				a21_0 = parse_org_kermeta_language_behavior_CallVariable				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
					}
					if (a21_0 != null) {
						if (a21_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a21_0);
							completedElement(a21_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a21_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 437));
			}
			
			
			|			(
				a22_0 = parse_org_kermeta_language_behavior_CallValue				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
					}
					if (a22_0 != null) {
						if (a22_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a22_0);
							completedElement(a22_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a22_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 438));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 439));
	}
	
	a23 = 'end' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 440));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 440));
	}
	
;

parse_org_kermeta_language_behavior_Loop returns [org.kermeta.language.behavior.Loop element = null]
@init{
}
:
	a0 = 'from' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 441));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 441));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 441));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 441));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 441));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 441));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 441));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 441));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 441));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 441));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 441));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 441));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 441));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 441));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 441));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 441));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 441));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 441));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 441));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 441));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 441));
	}
	
	(
		(
			(
				a1_0 = parse_org_kermeta_language_behavior_Expression				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
					}
					if (a1_0 != null) {
						if (a1_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LOOP__INITIALIZATION), a1_0);
							completedElement(a1_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a1_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 442));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 443));
	}
	
	a2 = 'until' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 444));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 444));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 444));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 444));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 444));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 444));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 444));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 444));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 444));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 444));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 444));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 444));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 444));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 444));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 444));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 444));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 444));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 444));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 444));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 444));
	}
	
	(
		a3_0 = parse_org_kermeta_language_behavior_Expression		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
			}
			if (a3_0 != null) {
				if (a3_0 != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LOOP__STOP_CONDITION), a3_0);
					completedElement(a3_0);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos(a3_0, element); 			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_362, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 445));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 445));
	}
	
	(
		(
			a4 = 'loop' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 446));
			}
			
			(
				(
					a5_0 = parse_org_kermeta_language_behavior_Expression					{
						if (terminateParsing) {
							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
						}
						if (element == null) {
							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
						}
						if (a5_0 != null) {
							if (a5_0 != null) {
								element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LOOP__BODY), a5_0);
								completedElement(a5_0);
							}
							collectHiddenTokens(element);
							copyLocalizationInfos(a5_0, element); 						}
					}
				)
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 447));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 447));
				}
				
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 448));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 449));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 449));
	}
	
;

parse_org_kermeta_language_behavior_VariableDecl returns [org.kermeta.language.behavior.VariableDecl element = null]
@init{
}
:
	a0 = 'var' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_363, 450));
	}
	
	(
		a1 = STRING		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
			}
			if (a1 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__IDENTIFIER), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
				}
				java.lang.String resolved = (java.lang.String)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__IDENTIFIER), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_364, 451));
	}
	
	a2 = ':' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 452));
	}
	
	(
		a3_0 = parse_org_kermeta_language_behavior_TypeReference		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
			}
			if (a3_0 != null) {
				if (a3_0 != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__TYPE), a3_0);
					completedElement(a3_0);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos(a3_0, element); 			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_360, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 453));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 453));
	}
	
	(
		(
			a4 = 'init' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 454));
			}
			
			(
				a5_0 = parse_org_kermeta_language_behavior_Expression				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
					}
					if (a5_0 != null) {
						if (a5_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__INITIALIZATION), a5_0);
							completedElement(a5_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a5_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 455));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 456));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 456));
	}
	
;

parse_org_kermeta_language_behavior_TypeLiteral returns [org.kermeta.language.behavior.TypeLiteral element = null]
@init{
}
:
	(
		a0_0 = parse_org_kermeta_language_behavior_TypeReference		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createTypeLiteral();
			}
			if (a0_0 != null) {
				if (a0_0 != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_LITERAL__TYPEREF), a0_0);
					completedElement(a0_0);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos(a0_0, element); 			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 457));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 457));
	}
	
;

parse_org_kermeta_language_behavior_CallResult returns [org.kermeta.language.behavior.CallResult element = null]
@init{
}
:
	a0 = 'result' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallResult();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 458));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 458));
	}
	
;

parse_org_kermeta_language_behavior_CallSuperOperation returns [org.kermeta.language.behavior.CallSuperOperation element = null]
@init{
}
:
	a0 = 'super(' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 459));
	}
	
	(
		(
			(
				a1_0 = parse_org_kermeta_language_behavior_Expression				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
					}
					if (a1_0 != null) {
						if (a1_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_SUPER_OPERATION__PARAMETERS, a1_0);
							completedElement(a1_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a1_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 460));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 460));
			}
			
			(
				(
					a2 = ',' {
						if (element == null) {
							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
					}
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 461));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 461));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 461));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 461));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 461));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 461));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 461));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 461));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 461));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 461));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 461));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 461));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 461));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 461));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 461));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 461));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 461));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 461));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 461));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 461));
					}
					
					(
						a3_0 = parse_org_kermeta_language_behavior_Expression						{
							if (terminateParsing) {
								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
							}
							if (element == null) {
								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
							}
							if (a3_0 != null) {
								if (a3_0 != null) {
									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_SUPER_OPERATION__PARAMETERS, a3_0);
									completedElement(a3_0);
								}
								collectHiddenTokens(element);
								copyLocalizationInfos(a3_0, element); 							}
						}
					)
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 462));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 462));
					}
					
				)
				
			)*			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 463));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 463));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 464));
	}
	
	a4 = ')' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 465));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 465));
	}
	
;

parse_org_kermeta_language_behavior_Assignment returns [org.kermeta.language.behavior.Assignment element = null]
@init{
}
:
	(
		(
			(
				a0_0 = parse_org_kermeta_language_behavior_CallFeature				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
					}
					if (a0_0 != null) {
						if (a0_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__TARGET), a0_0);
							completedElement(a0_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a0_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 466));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 466));
			}
			
			
			|			(
				a1_0 = parse_org_kermeta_language_behavior_CallVariable				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
					}
					if (a1_0 != null) {
						if (a1_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__TARGET), a1_0);
							completedElement(a1_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a1_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 467));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 467));
			}
			
			
			|			(
				a2_0 = parse_org_kermeta_language_behavior_CallResult				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
					}
					if (a2_0 != null) {
						if (a2_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__TARGET), a2_0);
							completedElement(a2_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a2_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 468));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 468));
			}
			
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 469));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 469));
		}
		
		(
			a3 = ':=' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 470));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 470));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 470));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 470));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 470));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 470));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 470));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 470));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 470));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 470));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 470));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 470));
			}
			
			
			|			(
				a4 = CASTED				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("CASTED");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__IS_CAST), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__IS_CAST), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_367, 471));
			}
			
			a5 = '=' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 472));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 472));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 472));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 472));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 472));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 472));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 472));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 472));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 472));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 472));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 472));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 472));
			}
			
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 473));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 473));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 473));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 473));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 473));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 473));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 473));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 473));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 473));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 473));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 473));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 473));
		}
		
		(
			(
				a6_0 = parse_org_kermeta_language_behavior_CallFeature				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
					}
					if (a6_0 != null) {
						if (a6_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a6_0);
							completedElement(a6_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a6_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 474));
			}
			
			
			|			(
				a7_0 = parse_org_kermeta_language_behavior_SelfExpression				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 475));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 475));
			}
			
			
			|			(
				a8_0 = parse_org_kermeta_language_behavior_CallSuperOperation				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
					}
					if (a8_0 != null) {
						if (a8_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a8_0);
							completedElement(a8_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a8_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 476));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 476));
			}
			
			
			|			(
				a9_0 = parse_org_kermeta_language_behavior_CallResult				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
					}
					if (a9_0 != null) {
						if (a9_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a9_0);
							completedElement(a9_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a9_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 477));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 477));
			}
			
			
			|			(
				a10_0 = parse_org_kermeta_language_behavior_CallValue				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
					}
					if (a10_0 != null) {
						if (a10_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a10_0);
							completedElement(a10_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a10_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 478));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 478));
			}
			
			
			|			(
				a11_0 = parse_org_kermeta_language_behavior_CallVariable				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
					}
					if (a11_0 != null) {
						if (a11_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a11_0);
							completedElement(a11_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a11_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 479));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 479));
			}
			
			
			|			(
				a12_0 = parse_org_kermeta_language_behavior_VoidLiteral				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
					}
					if (a12_0 != null) {
						if (a12_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a12_0);
							completedElement(a12_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a12_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 480));
			}
			
			
			|			(
				a13_0 = parse_org_kermeta_language_behavior_IntegerLiteral				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
					}
					if (a13_0 != null) {
						if (a13_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a13_0);
							completedElement(a13_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a13_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 481));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 481));
			}
			
			
			|			(
				a14_0 = parse_org_kermeta_language_behavior_BooleanLiteral				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
					}
					if (a14_0 != null) {
						if (a14_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a14_0);
							completedElement(a14_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a14_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 482));
			}
			
			
			|			(
				a15_0 = parse_org_kermeta_language_behavior_StringLiteral				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
					}
					if (a15_0 != null) {
						if (a15_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a15_0);
							completedElement(a15_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a15_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 483));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 483));
			}
			
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 484));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 484));
		}
		
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 485));
	}
	
;

parse_org_kermeta_language_behavior_CallVariable returns [org.kermeta.language.behavior.CallVariable element = null]
@init{
}
:
	(
		a0 = STRING		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallVariable();
			}
			if (a0 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VARIABLE__NAME), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
				}
				java.lang.String resolved = (java.lang.String)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VARIABLE__NAME), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 486));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 486));
	}
	
	|//derived choice rules for sub-classes: 
	
	c0 = parse_org_kermeta_language_behavior_CallResult{ element = c0; /* this is a subclass choice */ }
	
;

parse_org_kermeta_language_behavior_SelfExpression returns [org.kermeta.language.behavior.SelfExpression element = null]
@init{
}
:
	a0 = 'self' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createSelfExpression();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 487));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 487));
	}
	
;

parse_org_kermeta_language_behavior_CallFeature returns [org.kermeta.language.behavior.CallFeature element = null]
@init{
}
:
	a0 = '(' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 488));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 488));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 488));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 488));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 488));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 488));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 488));
	}
	
	(
		(
			a1_0 = parse_org_kermeta_language_behavior_BooleanLiteral			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a1_0 != null) {
					if (a1_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a1_0);
						completedElement(a1_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a1_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 489));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 489));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 489));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 489));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 489));
		}
		
		
		|		(
			a2_0 = parse_org_kermeta_language_behavior_CallVariable			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a2_0 != null) {
					if (a2_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a2_0);
						completedElement(a2_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a2_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 490));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 490));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 490));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 490));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 490));
		}
		
		
		|		(
			a3_0 = parse_org_kermeta_language_behavior_JavaStaticCall			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a3_0 != null) {
					if (a3_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a3_0);
						completedElement(a3_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a3_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 491));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 491));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 491));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 491));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 491));
		}
		
		
		|		(
			a4_0 = parse_org_kermeta_language_behavior_SelfExpression			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a4_0 != null) {
					if (a4_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a4_0);
						completedElement(a4_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a4_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 492));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 492));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 492));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 492));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 492));
		}
		
		
		|		(
			a5_0 = parse_org_kermeta_language_behavior_StringLiteral			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a5_0 != null) {
					if (a5_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a5_0);
						completedElement(a5_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a5_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 493));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 493));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 493));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 493));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 493));
		}
		
		
		|		(
			a6_0 = parse_org_kermeta_language_behavior_IntegerLiteral			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a6_0 != null) {
					if (a6_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a6_0);
						completedElement(a6_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a6_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 494));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 494));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 494));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 494));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 494));
		}
		
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 495));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 495));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 495));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 495));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 495));
	}
	
	(
		(
			a7 = '.' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_373, 496));
			}
			
			(
				a8 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					if (a8 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a8.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a8).getLine(), ((org.antlr.runtime.CommonToken) a8).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a8).getStartIndex(), ((org.antlr.runtime.CommonToken) a8).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Property proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Property>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticPropertyReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a8, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a8, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 497));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 497));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 497));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 497));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 497));
			}
			
			
			|			a9 = '.' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_374, 498));
			}
			
			(
				a10 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					if (a10 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a10.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a10).getLine(), ((org.antlr.runtime.CommonToken) a10).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a10).getStartIndex(), ((org.antlr.runtime.CommonToken) a10).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_375, 499));
			}
			
			a11 = '(' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 500));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 500));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 500));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 500));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 500));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 500));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 500));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 500));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 500));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 500));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 500));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 500));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 500));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 500));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 500));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 500));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 500));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 500));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 500));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 500));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 500));
			}
			
			(
				(
					(
						a12_0 = parse_org_kermeta_language_behavior_Expression						{
							if (terminateParsing) {
								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
							}
							if (element == null) {
								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
							}
							if (a12_0 != null) {
								if (a12_0 != null) {
									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a12_0);
									completedElement(a12_0);
								}
								collectHiddenTokens(element);
								copyLocalizationInfos(a12_0, element); 							}
						}
					)
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 501));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 501));
					}
					
					(
						(
							a13 = ',' {
								if (element == null) {
									element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
								}
								collectHiddenTokens(element);
								copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
							}
							{
								// expected elements (follow set)
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 502));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 502));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 502));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 502));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 502));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 502));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 502));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 502));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 502));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 502));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 502));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 502));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 502));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 502));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 502));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 502));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 502));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 502));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 502));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 502));
							}
							
							(
								a14_0 = parse_org_kermeta_language_behavior_Expression								{
									if (terminateParsing) {
										throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
									}
									if (element == null) {
										element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
									}
									if (a14_0 != null) {
										if (a14_0 != null) {
											addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a14_0);
											completedElement(a14_0);
										}
										collectHiddenTokens(element);
										copyLocalizationInfos(a14_0, element); 									}
								}
							)
							{
								// expected elements (follow set)
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 503));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 503));
							}
							
						)
						
					)*					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 504));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 504));
					}
					
				)
				
			)?			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 505));
			}
			
			a15 = ')' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 506));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 506));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 506));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 506));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 506));
			}
			
			
			|			a16 = '.' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a16, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_376, 507));
			}
			
			(
				a17 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					if (a17 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a17.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a17).getLine(), ((org.antlr.runtime.CommonToken) a17).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a17).getStartIndex(), ((org.antlr.runtime.CommonToken) a17).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.EnumerationLiteral proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumerationLiteral();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.EnumerationLiteral>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticEnumLiteralReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a17, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a17, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 508));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 508));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 508));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 508));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 508));
			}
			
			
			|			a18 = '.' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_377, 509));
			}
			
			(
				a19 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					if (a19 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 510));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 510));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 510));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 510));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 510));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 511));
	}
	
	a20 = '==' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 512));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 512));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 512));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 512));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 512));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 512));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 512));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 512));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 512));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 512));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 512));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 512));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 512));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 512));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 512));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 512));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 512));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 512));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 512));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 512));
	}
	
	(
		a21_0 = parse_org_kermeta_language_behavior_Expression		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
			}
			if (a21_0 != null) {
				if (a21_0 != null) {
					addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a21_0);
					completedElement(a21_0);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos(a21_0, element); 			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_378, 513));
	}
	
	a22 = ')' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a22, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 514));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 514));
	}
	
	
	|	(
		(
			a23_0 = parse_org_kermeta_language_behavior_BooleanLiteral			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a23_0 != null) {
					if (a23_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a23_0);
						completedElement(a23_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a23_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 515));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 515));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 515));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 515));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 515));
		}
		
		
		|		(
			a24_0 = parse_org_kermeta_language_behavior_CallVariable			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a24_0 != null) {
					if (a24_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a24_0);
						completedElement(a24_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a24_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 516));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 516));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 516));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 516));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 516));
		}
		
		
		|		(
			a25_0 = parse_org_kermeta_language_behavior_JavaStaticCall			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a25_0 != null) {
					if (a25_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a25_0);
						completedElement(a25_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a25_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 517));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 517));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 517));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 517));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 517));
		}
		
		
		|		(
			a26_0 = parse_org_kermeta_language_behavior_SelfExpression			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a26_0 != null) {
					if (a26_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a26_0);
						completedElement(a26_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a26_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 518));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 518));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 518));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 518));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 518));
		}
		
		
		|		(
			a27_0 = parse_org_kermeta_language_behavior_StringLiteral			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a27_0 != null) {
					if (a27_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a27_0);
						completedElement(a27_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a27_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 519));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 519));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 519));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 519));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 519));
		}
		
		
		|		(
			a28_0 = parse_org_kermeta_language_behavior_IntegerLiteral			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a28_0 != null) {
					if (a28_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a28_0);
						completedElement(a28_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a28_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 520));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 520));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 520));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 520));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 520));
		}
		
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 521));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 521));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 521));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 521));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 521));
	}
	
	(
		(
			a29 = '.' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a29, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_384, 522));
			}
			
			(
				a30 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					if (a30 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a30.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a30).getLine(), ((org.antlr.runtime.CommonToken) a30).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a30).getStartIndex(), ((org.antlr.runtime.CommonToken) a30).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Property proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Property>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticPropertyReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a30, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a30, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 523));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 523));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 523));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 523));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 523));
			}
			
			
			|			a31 = '.' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a31, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_385, 524));
			}
			
			(
				a32 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					if (a32 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a32.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a32).getLine(), ((org.antlr.runtime.CommonToken) a32).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a32).getStartIndex(), ((org.antlr.runtime.CommonToken) a32).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a32, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a32, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_386, 525));
			}
			
			a33 = '(' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a33, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_387, 526));
			}
			
			(
				(
					(
						a34_0 = parse_org_kermeta_language_behavior_Expression						{
							if (terminateParsing) {
								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
							}
							if (element == null) {
								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
							}
							if (a34_0 != null) {
								if (a34_0 != null) {
									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a34_0);
									completedElement(a34_0);
								}
								collectHiddenTokens(element);
								copyLocalizationInfos(a34_0, element); 							}
						}
					)
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_388, 527));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_387, 527));
					}
					
					(
						(
							a35 = ',' {
								if (element == null) {
									element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
								}
								collectHiddenTokens(element);
								copyLocalizationInfos((org.antlr.runtime.CommonToken)a35, element);
							}
							{
								// expected elements (follow set)
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 528));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 528));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 528));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 528));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 528));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 528));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 528));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 528));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 528));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 528));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 528));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 528));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 528));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 528));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 528));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 528));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 528));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 528));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 528));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 528));
							}
							
							(
								a36_0 = parse_org_kermeta_language_behavior_Expression								{
									if (terminateParsing) {
										throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
									}
									if (element == null) {
										element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
									}
									if (a36_0 != null) {
										if (a36_0 != null) {
											addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a36_0);
											completedElement(a36_0);
										}
										collectHiddenTokens(element);
										copyLocalizationInfos(a36_0, element); 									}
								}
							)
							{
								// expected elements (follow set)
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_388, 529));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_387, 529));
							}
							
						)
						
					)*					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_388, 530));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_387, 530));
					}
					
				)
				
			)?			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_387, 531));
			}
			
			a37 = ')' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a37, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 532));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 532));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 532));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 532));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 532));
			}
			
			
			|			a38 = '.' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a38, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_389, 533));
			}
			
			(
				a39 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					if (a39 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a39.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a39).getLine(), ((org.antlr.runtime.CommonToken) a39).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a39).getStartIndex(), ((org.antlr.runtime.CommonToken) a39).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.EnumerationLiteral proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumerationLiteral();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.EnumerationLiteral>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticEnumLiteralReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a39, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a39, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 534));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 534));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 534));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 534));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 534));
			}
			
			
			|			a40 = '.' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a40, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_390, 535));
			}
			
			(
				a41 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					if (a41 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a41.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a41).getLine(), ((org.antlr.runtime.CommonToken) a41).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a41).getStartIndex(), ((org.antlr.runtime.CommonToken) a41).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a41, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a41, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 536));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 536));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 536));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 536));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 536));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 537));
	}
	
	a42 = '==' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a42, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 538));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 538));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 538));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 538));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 538));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 538));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 538));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 538));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 538));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 538));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 538));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 538));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 538));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 538));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 538));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 538));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 538));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 538));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 538));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 538));
	}
	
	(
		a43_0 = parse_org_kermeta_language_behavior_Expression		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
			}
			if (a43_0 != null) {
				if (a43_0 != null) {
					addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a43_0);
					completedElement(a43_0);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos(a43_0, element); 			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 539));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 539));
	}
	
	
	|	(
		(
			a44_0 = parse_org_kermeta_language_behavior_BooleanLiteral			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a44_0 != null) {
					if (a44_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a44_0);
						completedElement(a44_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a44_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_391, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_392, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_393, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_394, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_398, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 540));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 540));
		}
		
		
		|		(
			a45_0 = parse_org_kermeta_language_behavior_CallVariable			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a45_0 != null) {
					if (a45_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a45_0);
						completedElement(a45_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a45_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_391, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_392, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_393, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_394, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_398, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 541));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 541));
		}
		
		
		|		(
			a46_0 = parse_org_kermeta_language_behavior_JavaStaticCall			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a46_0 != null) {
					if (a46_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a46_0);
						completedElement(a46_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a46_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_391, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_392, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_393, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_394, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_398, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 542));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 542));
		}
		
		
		|		(
			a47_0 = parse_org_kermeta_language_behavior_SelfExpression			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a47_0 != null) {
					if (a47_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a47_0);
						completedElement(a47_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a47_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_391, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_392, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_393, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_394, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_398, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 543));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 543));
		}
		
		
		|		(
			a48_0 = parse_org_kermeta_language_behavior_StringLiteral			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a48_0 != null) {
					if (a48_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a48_0);
						completedElement(a48_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a48_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_391, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_392, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_393, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_394, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_398, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 544));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 544));
		}
		
		
		|		(
			a49_0 = parse_org_kermeta_language_behavior_IntegerLiteral			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a49_0 != null) {
					if (a49_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a49_0);
						completedElement(a49_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a49_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_391, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_392, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_393, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_394, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_398, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 545));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 545));
		}
		
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_391, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_392, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_393, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_394, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_398, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 546));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 546));
	}
	
	(
		(
			a50 = '.' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a50, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_399, 547));
			}
			
			(
				a51 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					if (a51 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a51.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a51).getLine(), ((org.antlr.runtime.CommonToken) a51).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a51).getStartIndex(), ((org.antlr.runtime.CommonToken) a51).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Property proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Property>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticPropertyReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a51, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a51, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_391, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_392, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_393, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_394, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_398, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 548));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 548));
			}
			
			
			|			a52 = '.' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a52, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_400, 549));
			}
			
			(
				a53 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					if (a53 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a53.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a53).getLine(), ((org.antlr.runtime.CommonToken) a53).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a53).getStartIndex(), ((org.antlr.runtime.CommonToken) a53).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a53, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a53, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_401, 550));
			}
			
			a54 = '(' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a54, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 551));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 551));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 551));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 551));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 551));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 551));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 551));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 551));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 551));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 551));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 551));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 551));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 551));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 551));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 551));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 551));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 551));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 551));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 551));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 551));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_402, 551));
			}
			
			(
				(
					(
						a55_0 = parse_org_kermeta_language_behavior_Expression						{
							if (terminateParsing) {
								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
							}
							if (element == null) {
								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
							}
							if (a55_0 != null) {
								if (a55_0 != null) {
									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a55_0);
									completedElement(a55_0);
								}
								collectHiddenTokens(element);
								copyLocalizationInfos(a55_0, element); 							}
						}
					)
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_403, 552));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_402, 552));
					}
					
					(
						(
							a56 = ',' {
								if (element == null) {
									element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
								}
								collectHiddenTokens(element);
								copyLocalizationInfos((org.antlr.runtime.CommonToken)a56, element);
							}
							{
								// expected elements (follow set)
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 553));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 553));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 553));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 553));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 553));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 553));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 553));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 553));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 553));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 553));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 553));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 553));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 553));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 553));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 553));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 553));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 553));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 553));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 553));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 553));
							}
							
							(
								a57_0 = parse_org_kermeta_language_behavior_Expression								{
									if (terminateParsing) {
										throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
									}
									if (element == null) {
										element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
									}
									if (a57_0 != null) {
										if (a57_0 != null) {
											addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a57_0);
											completedElement(a57_0);
										}
										collectHiddenTokens(element);
										copyLocalizationInfos(a57_0, element); 									}
								}
							)
							{
								// expected elements (follow set)
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_403, 554));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_402, 554));
							}
							
						)
						
					)*					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_403, 555));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_402, 555));
					}
					
				)
				
			)?			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_402, 556));
			}
			
			a58 = ')' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a58, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_391, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_392, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_393, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_394, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_398, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 557));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 557));
			}
			
			
			|			a59 = '.' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a59, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_404, 558));
			}
			
			(
				a60 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					if (a60 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a60.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a60).getLine(), ((org.antlr.runtime.CommonToken) a60).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a60).getStartIndex(), ((org.antlr.runtime.CommonToken) a60).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.EnumerationLiteral proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumerationLiteral();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.EnumerationLiteral>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticEnumLiteralReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a60, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a60, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_391, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_392, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_393, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_394, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_398, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 559));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 559));
			}
			
			
			|			a61 = '.' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a61, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_405, 560));
			}
			
			(
				a62 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					if (a62 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a62.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a62).getLine(), ((org.antlr.runtime.CommonToken) a62).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a62).getStartIndex(), ((org.antlr.runtime.CommonToken) a62).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a62, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a62, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_391, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_392, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_393, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_394, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_398, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 561));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_391, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_392, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_393, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_394, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_398, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 562));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 562));
	}
	
	(
		(
			(
				a63 = '+' {
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken)a63, element);
				}
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 563));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 563));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 563));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 563));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 563));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 563));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 563));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 563));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 563));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 563));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 563));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 563));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 563));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 563));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 563));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 563));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 563));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 563));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 563));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 563));
				}
				
				
				|				a64 = '-' {
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken)a64, element);
				}
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 564));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 564));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 564));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 564));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 564));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 564));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 564));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 564));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 564));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 564));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 564));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 564));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 564));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 564));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 564));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 564));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 564));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 564));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 564));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 564));
				}
				
				
				|				a65 = '/' {
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken)a65, element);
				}
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 565));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 565));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 565));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 565));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 565));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 565));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 565));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 565));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 565));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 565));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 565));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 565));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 565));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 565));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 565));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 565));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 565));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 565));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 565));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 565));
				}
				
				
				|				a66 = '*' {
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken)a66, element);
				}
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 566));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 566));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 566));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 566));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 566));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 566));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 566));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 566));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 566));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 566));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 566));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 566));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 566));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 566));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 566));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 566));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 566));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 566));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 566));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 566));
				}
				
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 567));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 567));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 567));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 567));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 567));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 567));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 567));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 567));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 567));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 567));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 567));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 567));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 567));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 567));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 567));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 567));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 567));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 567));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 567));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 567));
			}
			
			(
				a67_0 = parse_org_kermeta_language_behavior_Expression				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					if (a67_0 != null) {
						if (a67_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a67_0);
							completedElement(a67_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a67_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_398, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 568));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 568));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_398, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 569));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 569));
	}
	
	
	|	a68 = '(' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a68, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 570));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 570));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 570));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 570));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 570));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 570));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 570));
	}
	
	(
		(
			a69_0 = parse_org_kermeta_language_behavior_BooleanLiteral			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a69_0 != null) {
					if (a69_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a69_0);
						completedElement(a69_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a69_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_406, 571));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_407, 571));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_408, 571));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_409, 571));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_410, 571));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_411, 571));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_412, 571));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_413, 571));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_414, 571));
		}
		
		
		|		(
			a70_0 = parse_org_kermeta_language_behavior_CallVariable			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a70_0 != null) {
					if (a70_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a70_0);
						completedElement(a70_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a70_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_406, 572));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_407, 572));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_408, 572));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_409, 572));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_410, 572));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_411, 572));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_412, 572));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_413, 572));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_414, 572));
		}
		
		
		|		(
			a71_0 = parse_org_kermeta_language_behavior_JavaStaticCall			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a71_0 != null) {
					if (a71_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a71_0);
						completedElement(a71_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a71_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_406, 573));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_407, 573));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_408, 573));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_409, 573));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_410, 573));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_411, 573));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_412, 573));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_413, 573));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_414, 573));
		}
		
		
		|		(
			a72_0 = parse_org_kermeta_language_behavior_SelfExpression			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a72_0 != null) {
					if (a72_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a72_0);
						completedElement(a72_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a72_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_406, 574));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_407, 574));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_408, 574));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_409, 574));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_410, 574));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_411, 574));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_412, 574));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_413, 574));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_414, 574));
		}
		
		
		|		(
			a73_0 = parse_org_kermeta_language_behavior_StringLiteral			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a73_0 != null) {
					if (a73_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a73_0);
						completedElement(a73_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a73_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_406, 575));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_407, 575));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_408, 575));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_409, 575));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_410, 575));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_411, 575));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_412, 575));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_413, 575));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_414, 575));
		}
		
		
		|		(
			a74_0 = parse_org_kermeta_language_behavior_IntegerLiteral			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a74_0 != null) {
					if (a74_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a74_0);
						completedElement(a74_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a74_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_406, 576));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_407, 576));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_408, 576));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_409, 576));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_410, 576));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_411, 576));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_412, 576));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_413, 576));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_414, 576));
		}
		
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_406, 577));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_407, 577));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_408, 577));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_409, 577));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_410, 577));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_411, 577));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_412, 577));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_413, 577));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_414, 577));
	}
	
	(
		(
			a75 = '.' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a75, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_415, 578));
			}
			
			(
				a76 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					if (a76 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a76.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a76).getLine(), ((org.antlr.runtime.CommonToken) a76).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a76).getStartIndex(), ((org.antlr.runtime.CommonToken) a76).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Property proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Property>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticPropertyReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a76, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a76, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_406, 579));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_407, 579));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_408, 579));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_409, 579));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_410, 579));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_411, 579));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_412, 579));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_413, 579));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_414, 579));
			}
			
			
			|			a77 = '.' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a77, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_416, 580));
			}
			
			(
				a78 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					if (a78 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a78.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a78).getLine(), ((org.antlr.runtime.CommonToken) a78).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a78).getStartIndex(), ((org.antlr.runtime.CommonToken) a78).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a78, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a78, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_417, 581));
			}
			
			a79 = '(' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a79, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 582));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 582));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 582));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 582));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 582));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 582));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 582));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 582));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 582));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 582));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 582));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 582));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 582));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 582));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 582));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 582));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 582));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 582));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 582));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 582));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_418, 582));
			}
			
			(
				(
					(
						a80_0 = parse_org_kermeta_language_behavior_Expression						{
							if (terminateParsing) {
								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
							}
							if (element == null) {
								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
							}
							if (a80_0 != null) {
								if (a80_0 != null) {
									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a80_0);
									completedElement(a80_0);
								}
								collectHiddenTokens(element);
								copyLocalizationInfos(a80_0, element); 							}
						}
					)
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_419, 583));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_418, 583));
					}
					
					(
						(
							a81 = ',' {
								if (element == null) {
									element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
								}
								collectHiddenTokens(element);
								copyLocalizationInfos((org.antlr.runtime.CommonToken)a81, element);
							}
							{
								// expected elements (follow set)
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 584));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 584));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 584));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 584));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 584));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 584));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 584));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 584));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 584));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 584));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 584));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 584));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 584));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 584));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 584));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 584));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 584));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 584));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 584));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 584));
							}
							
							(
								a82_0 = parse_org_kermeta_language_behavior_Expression								{
									if (terminateParsing) {
										throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
									}
									if (element == null) {
										element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
									}
									if (a82_0 != null) {
										if (a82_0 != null) {
											addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a82_0);
											completedElement(a82_0);
										}
										collectHiddenTokens(element);
										copyLocalizationInfos(a82_0, element); 									}
								}
							)
							{
								// expected elements (follow set)
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_419, 585));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_418, 585));
							}
							
						)
						
					)*					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_419, 586));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_418, 586));
					}
					
				)
				
			)?			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_418, 587));
			}
			
			a83 = ')' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a83, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_406, 588));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_407, 588));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_408, 588));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_409, 588));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_410, 588));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_411, 588));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_412, 588));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_413, 588));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_414, 588));
			}
			
			
			|			a84 = '.' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a84, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_420, 589));
			}
			
			(
				a85 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					if (a85 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a85.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a85).getLine(), ((org.antlr.runtime.CommonToken) a85).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a85).getStartIndex(), ((org.antlr.runtime.CommonToken) a85).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.EnumerationLiteral proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumerationLiteral();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.EnumerationLiteral>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticEnumLiteralReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a85, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a85, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_406, 590));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_407, 590));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_408, 590));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_409, 590));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_410, 590));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_411, 590));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_412, 590));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_413, 590));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_414, 590));
			}
			
			
			|			a86 = '.' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a86, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_421, 591));
			}
			
			(
				a87 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					if (a87 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a87.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a87).getLine(), ((org.antlr.runtime.CommonToken) a87).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a87).getStartIndex(), ((org.antlr.runtime.CommonToken) a87).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a87, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a87, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_406, 592));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_407, 592));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_408, 592));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_409, 592));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_410, 592));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_411, 592));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_412, 592));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_413, 592));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_414, 592));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_406, 593));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_407, 593));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_408, 593));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_409, 593));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_410, 593));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_411, 593));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_412, 593));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_413, 593));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_414, 593));
	}
	
	(
		(
			(
				a88 = '+' {
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken)a88, element);
				}
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 594));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 594));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 594));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 594));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 594));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 594));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 594));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 594));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 594));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 594));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 594));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 594));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 594));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 594));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 594));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 594));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 594));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 594));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 594));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 594));
				}
				
				
				|				a89 = '-' {
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken)a89, element);
				}
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 595));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 595));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 595));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 595));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 595));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 595));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 595));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 595));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 595));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 595));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 595));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 595));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 595));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 595));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 595));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 595));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 595));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 595));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 595));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 595));
				}
				
				
				|				a90 = '/' {
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken)a90, element);
				}
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 596));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 596));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 596));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 596));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 596));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 596));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 596));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 596));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 596));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 596));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 596));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 596));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 596));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 596));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 596));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 596));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 596));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 596));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 596));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 596));
				}
				
				
				|				a91 = '*' {
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken)a91, element);
				}
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 597));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 597));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 597));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 597));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 597));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 597));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 597));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 597));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 597));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 597));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 597));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 597));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 597));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 597));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 597));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 597));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 597));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 597));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 597));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 597));
				}
				
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 598));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 598));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 598));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 598));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 598));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 598));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 598));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 598));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 598));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 598));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 598));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 598));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 598));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 598));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 598));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 598));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 598));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 598));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 598));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 598));
			}
			
			(
				a92_0 = parse_org_kermeta_language_behavior_Expression				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					if (a92_0 != null) {
						if (a92_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a92_0);
							completedElement(a92_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a92_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_410, 599));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_411, 599));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_412, 599));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_413, 599));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_414, 599));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_410, 600));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_411, 600));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_412, 600));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_413, 600));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_414, 600));
	}
	
	a93 = ')' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a93, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_422, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_423, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_424, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_425, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 601));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 601));
	}
	
	(
		(
			(
				a94 = '+' {
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken)a94, element);
				}
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 602));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 602));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 602));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 602));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 602));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 602));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 602));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 602));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 602));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 602));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 602));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 602));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 602));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 602));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 602));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 602));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 602));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 602));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 602));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 602));
				}
				
				
				|				a95 = '-' {
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken)a95, element);
				}
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 603));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 603));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 603));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 603));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 603));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 603));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 603));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 603));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 603));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 603));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 603));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 603));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 603));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 603));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 603));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 603));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 603));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 603));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 603));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 603));
				}
				
				
				|				a96 = '/' {
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken)a96, element);
				}
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 604));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 604));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 604));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 604));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 604));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 604));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 604));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 604));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 604));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 604));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 604));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 604));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 604));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 604));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 604));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 604));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 604));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 604));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 604));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 604));
				}
				
				
				|				a97 = '*' {
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken)a97, element);
				}
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 605));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 605));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 605));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 605));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 605));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 605));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 605));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 605));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 605));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 605));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 605));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 605));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 605));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 605));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 605));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 605));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 605));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 605));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 605));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 605));
				}
				
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 606));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 606));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 606));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 606));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 606));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 606));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 606));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 606));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 606));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 606));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 606));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 606));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 606));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 606));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 606));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 606));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 606));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 606));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 606));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 606));
			}
			
			(
				a98_0 = parse_org_kermeta_language_behavior_Expression				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					if (a98_0 != null) {
						if (a98_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a98_0);
							completedElement(a98_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a98_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_422, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_423, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_424, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_425, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 607));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 607));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_422, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_423, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_424, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_425, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 608));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 608));
	}
	
;

parse_org_kermeta_language_behavior_CallValue returns [org.kermeta.language.behavior.CallValue element = null]
@init{
}
:
	a0 = 'CallValue' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_426, 609));
	}
	
	a1 = '{' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 610));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 610));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 610));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 610));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 610));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 610));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 610));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 610));
	}
	
	(
		(
			a2 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_427, 611));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_428, 612));
			}
			
			(
				a4 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 613));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 613));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 613));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 613));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 613));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 613));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 613));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 613));
			}
			
			
			|			a5 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_429, 614));
			}
			
			a6 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 615));
			}
			
			(
				a7_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__OWNED_TAGS, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 616));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 616));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 616));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 616));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 616));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 616));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 616));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 616));
			}
			
			
			|			a8 = 'containedType' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_430, 617));
			}
			
			a9 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 618));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 618));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 618));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 618));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 618));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 618));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 618));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 618));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 618));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 618));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 618));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 618));
			}
			
			(
				a10_0 = parse_org_kermeta_language_structure_Type				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
					}
					if (a10_0 != null) {
						if (a10_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__CONTAINED_TYPE, a10_0);
							completedElement(a10_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a10_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 619));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 619));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 619));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 619));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 619));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 619));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 619));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 619));
			}
			
			
			|			a11 = 'staticType' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_431, 620));
			}
			
			a12 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_432, 621));
			}
			
			(
				a13 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
					}
					if (a13 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__STATIC_TYPE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.Expression, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getExpressionStaticTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__STATIC_TYPE), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__STATIC_TYPE), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 622));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 622));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 622));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 622));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 622));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 622));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 622));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 622));
			}
			
			
			|			a14 = 'parameters' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_433, 623));
			}
			
			a15 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 624));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 624));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 624));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 624));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 624));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 624));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 624));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 624));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 624));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 624));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 624));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 624));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 624));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 624));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 624));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 624));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 624));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 624));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 624));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 624));
			}
			
			(
				a16_0 = parse_org_kermeta_language_behavior_Expression				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
					}
					if (a16_0 != null) {
						if (a16_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__PARAMETERS, a16_0);
							completedElement(a16_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a16_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 625));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 625));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 625));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 625));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 625));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 625));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 625));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 625));
			}
			
			
			|			a17 = 'name' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_434, 626));
			}
			
			a18 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_435, 627));
			}
			
			(
				a19 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
					}
					if (a19 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__NAME), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
						}
						java.lang.String resolved = (java.lang.String)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__NAME), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 628));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 628));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 628));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 628));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 628));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 628));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 628));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 628));
			}
			
			
			|			a20 = 'staticTypeVariableBindings' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_436, 629));
			}
			
			a21 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a21, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_437, 630));
			}
			
			(
				a22 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
					}
					if (a22 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a22.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__STATIC_TYPE_VARIABLE_BINDINGS), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a22).getLine(), ((org.antlr.runtime.CommonToken) a22).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a22).getStartIndex(), ((org.antlr.runtime.CommonToken) a22).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallExpression, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallExpressionStaticTypeVariableBindingsReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__STATIC_TYPE_VARIABLE_BINDINGS), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__STATIC_TYPE_VARIABLE_BINDINGS, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a22, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a22, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 631));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 631));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 631));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 631));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 631));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 631));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 631));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 631));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 632));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 632));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 632));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 632));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 632));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 632));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 632));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 632));
	}
	
	a23 = '}' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 633));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 633));
	}
	
;

parse_org_kermeta_language_behavior_EmptyExpression returns [org.kermeta.language.behavior.EmptyExpression element = null]
@init{
}
:
	a0 = 'EmptyExpression' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_438, 634));
	}
	
	a1 = '{' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 635));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 635));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 635));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 635));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 635));
	}
	
	(
		(
			a2 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_439, 636));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_440, 637));
			}
			
			(
				a4 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 638));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 638));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 638));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 638));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 638));
			}
			
			
			|			a5 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_441, 639));
			}
			
			a6 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 640));
			}
			
			(
				a7_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__OWNED_TAGS, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 641));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 641));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 641));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 641));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 641));
			}
			
			
			|			a8 = 'containedType' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_442, 642));
			}
			
			a9 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 643));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 643));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 643));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 643));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 643));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 643));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 643));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 643));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 643));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 643));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 643));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 643));
			}
			
			(
				a10_0 = parse_org_kermeta_language_structure_Type				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
					}
					if (a10_0 != null) {
						if (a10_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__CONTAINED_TYPE, a10_0);
							completedElement(a10_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a10_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 644));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 644));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 644));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 644));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 644));
			}
			
			
			|			a11 = 'staticType' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_443, 645));
			}
			
			a12 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_444, 646));
			}
			
			(
				a13 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
					}
					if (a13 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__STATIC_TYPE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.Expression, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getExpressionStaticTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__STATIC_TYPE), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__STATIC_TYPE), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 647));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 647));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 647));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 647));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 647));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 648));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 648));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 648));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 648));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 648));
	}
	
	a14 = '}' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 649));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 649));
	}
	
;

parse_org_kermeta_language_behavior_JavaStaticCall returns [org.kermeta.language.behavior.JavaStaticCall element = null]
@init{
}
:
	a0 = 'JavaStaticCall' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_445, 650));
	}
	
	a1 = '{' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 651));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 651));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 651));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 651));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 651));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 651));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 651));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 651));
	}
	
	(
		(
			a2 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_446, 652));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_447, 653));
			}
			
			(
				a4 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 654));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 654));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 654));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 654));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 654));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 654));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 654));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 654));
			}
			
			
			|			a5 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_448, 655));
			}
			
			a6 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 656));
			}
			
			(
				a7_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__OWNED_TAGS, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 657));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 657));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 657));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 657));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 657));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 657));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 657));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 657));
			}
			
			
			|			a8 = 'containedType' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_449, 658));
			}
			
			a9 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 659));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 659));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 659));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 659));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 659));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 659));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 659));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 659));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 659));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 659));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 659));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 659));
			}
			
			(
				a10_0 = parse_org_kermeta_language_structure_Type				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
					}
					if (a10_0 != null) {
						if (a10_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__CONTAINED_TYPE, a10_0);
							completedElement(a10_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a10_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 660));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 660));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 660));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 660));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 660));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 660));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 660));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 660));
			}
			
			
			|			a11 = 'staticType' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_450, 661));
			}
			
			a12 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_451, 662));
			}
			
			(
				a13 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
					}
					if (a13 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__STATIC_TYPE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.Expression, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getExpressionStaticTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__STATIC_TYPE), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__STATIC_TYPE), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 663));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 663));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 663));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 663));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 663));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 663));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 663));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 663));
			}
			
			
			|			a14 = 'parameters' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_452, 664));
			}
			
			a15 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 665));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 665));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 665));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 665));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 665));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 665));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 665));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 665));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 665));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 665));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 665));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 665));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 665));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 665));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 665));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 665));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 665));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 665));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 665));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 665));
			}
			
			(
				a16_0 = parse_org_kermeta_language_behavior_Expression				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
					}
					if (a16_0 != null) {
						if (a16_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__PARAMETERS, a16_0);
							completedElement(a16_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a16_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 666));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 666));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 666));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 666));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 666));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 666));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 666));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 666));
			}
			
			
			|			a17 = 'jclass' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_453, 667));
			}
			
			a18 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_454, 668));
			}
			
			(
				a19 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
					}
					if (a19 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JCLASS), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
						}
						java.lang.String resolved = (java.lang.String)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JCLASS), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 669));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 669));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 669));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 669));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 669));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 669));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 669));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 669));
			}
			
			
			|			a20 = 'jmethod' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_455, 670));
			}
			
			a21 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a21, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_456, 671));
			}
			
			(
				a22 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
					}
					if (a22 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a22.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JMETHOD), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a22).getLine(), ((org.antlr.runtime.CommonToken) a22).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a22).getStartIndex(), ((org.antlr.runtime.CommonToken) a22).getStopIndex());
						}
						java.lang.String resolved = (java.lang.String)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JMETHOD), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a22, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 672));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 672));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 672));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 672));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 672));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 672));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 672));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 672));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 673));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 673));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 673));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 673));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 673));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 673));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 673));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 673));
	}
	
	a23 = '}' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 674));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 674));
	}
	
;

parse_org_kermeta_language_behavior_LambdaExpression returns [org.kermeta.language.behavior.LambdaExpression element = null]
@init{
}
:
	a0 = 'LambdaExpression' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_457, 675));
	}
	
	a1 = '{' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 676));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 676));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 676));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 676));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 676));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 676));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 676));
	}
	
	(
		(
			a2 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_458, 677));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_459, 678));
			}
			
			(
				a4 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 679));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 679));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 679));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 679));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 679));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 679));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 679));
			}
			
			
			|			a5 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_460, 680));
			}
			
			a6 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 681));
			}
			
			(
				a7_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__OWNED_TAGS, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 682));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 682));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 682));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 682));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 682));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 682));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 682));
			}
			
			
			|			a8 = 'containedType' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_461, 683));
			}
			
			a9 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 684));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 684));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 684));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 684));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 684));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 684));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 684));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 684));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 684));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 684));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 684));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 684));
			}
			
			(
				a10_0 = parse_org_kermeta_language_structure_Type				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
					}
					if (a10_0 != null) {
						if (a10_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__CONTAINED_TYPE, a10_0);
							completedElement(a10_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a10_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 685));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 685));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 685));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 685));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 685));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 685));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 685));
			}
			
			
			|			a11 = 'staticType' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_462, 686));
			}
			
			a12 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_463, 687));
			}
			
			(
				a13 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
					}
					if (a13 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__STATIC_TYPE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.Expression, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getExpressionStaticTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__STATIC_TYPE), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__STATIC_TYPE), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 688));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 688));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 688));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 688));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 688));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 688));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 688));
			}
			
			
			|			a14 = 'parameters' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_464, 689));
			}
			
			a15 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_465, 690));
			}
			
			(
				a16_0 = parse_org_kermeta_language_behavior_LambdaParameter				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
					}
					if (a16_0 != null) {
						if (a16_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__PARAMETERS, a16_0);
							completedElement(a16_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a16_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 691));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 691));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 691));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 691));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 691));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 691));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 691));
			}
			
			
			|			a17 = 'body' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_466, 692));
			}
			
			a18 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 693));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 693));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 693));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 693));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 693));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 693));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 693));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 693));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 693));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 693));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 693));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 693));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 693));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 693));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 693));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 693));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 693));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 693));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 693));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 693));
			}
			
			(
				a19_0 = parse_org_kermeta_language_behavior_Expression				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
					}
					if (a19_0 != null) {
						if (a19_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__BODY), a19_0);
							completedElement(a19_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a19_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 694));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 694));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 694));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 694));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 694));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 694));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 694));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 695));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 695));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 695));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 695));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 695));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 695));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 695));
	}
	
	a20 = '}' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 696));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 696));
	}
	
;

parse_org_kermeta_language_behavior_LambdaParameter returns [org.kermeta.language.behavior.LambdaParameter element = null]
@init{
}
:
	a0 = 'LambdaParameter' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_467, 697));
	}
	
	a1 = '{' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_277, 698));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_278, 698));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_279, 698));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_280, 698));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_281, 698));
	}
	
	(
		(
			a2 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_468, 699));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_469, 700));
			}
			
			(
				a4 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_277, 701));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_278, 701));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_279, 701));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_280, 701));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_281, 701));
			}
			
			
			|			a5 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_470, 702));
			}
			
			a6 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 703));
			}
			
			(
				a7_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__OWNED_TAGS, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_277, 704));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_278, 704));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_279, 704));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_280, 704));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_281, 704));
			}
			
			
			|			a8 = 'name' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_471, 705));
			}
			
			a9 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_472, 706));
			}
			
			(
				a10 = STRING				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
					}
					if (a10 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a10.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__NAME), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a10).getLine(), ((org.antlr.runtime.CommonToken) a10).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a10).getStartIndex(), ((org.antlr.runtime.CommonToken) a10).getStopIndex());
						}
						java.lang.String resolved = (java.lang.String)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__NAME), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_277, 707));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_278, 707));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_279, 707));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_280, 707));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_281, 707));
			}
			
			
			|			a11 = 'type' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_473, 708));
			}
			
			a12 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 709));
			}
			
			(
				a13_0 = parse_org_kermeta_language_behavior_TypeReference				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
					}
					if (a13_0 != null) {
						if (a13_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TYPE), a13_0);
							completedElement(a13_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a13_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_277, 710));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_278, 710));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_279, 710));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_280, 710));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_281, 710));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_277, 711));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_278, 711));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_279, 711));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_280, 711));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_281, 711));
	}
	
	a14 = '}' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 712));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 712));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 712));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 712));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 712));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 712));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 712));
	}
	
;

parse_org_kermeta_language_behavior_VoidLiteral returns [org.kermeta.language.behavior.VoidLiteral element = null]
@init{
}
:
	a0 = 'Void' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVoidLiteral();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 713));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 713));
	}
	
;

parse_org_kermeta_language_behavior_Expression returns [org.kermeta.language.behavior.Expression element = null]
:
	c0 = parse_org_kermeta_language_behavior_Block{ element = c0; /* this is a subclass choice */ }
	|	c1 = parse_org_kermeta_language_behavior_Raise{ element = c1; /* this is a subclass choice */ }
	|	c2 = parse_org_kermeta_language_behavior_BooleanLiteral{ element = c2; /* this is a subclass choice */ }
	|	c3 = parse_org_kermeta_language_behavior_IntegerLiteral{ element = c3; /* this is a subclass choice */ }
	|	c4 = parse_org_kermeta_language_behavior_StringLiteral{ element = c4; /* this is a subclass choice */ }
	|	c5 = parse_org_kermeta_language_behavior_Conditional{ element = c5; /* this is a subclass choice */ }
	|	c6 = parse_org_kermeta_language_behavior_Loop{ element = c6; /* this is a subclass choice */ }
	|	c7 = parse_org_kermeta_language_behavior_VariableDecl{ element = c7; /* this is a subclass choice */ }
	|	c8 = parse_org_kermeta_language_behavior_TypeLiteral{ element = c8; /* this is a subclass choice */ }
	|	c9 = parse_org_kermeta_language_behavior_CallResult{ element = c9; /* this is a subclass choice */ }
	|	c10 = parse_org_kermeta_language_behavior_CallSuperOperation{ element = c10; /* this is a subclass choice */ }
	|	c11 = parse_org_kermeta_language_behavior_Assignment{ element = c11; /* this is a subclass choice */ }
	|	c12 = parse_org_kermeta_language_behavior_CallVariable{ element = c12; /* this is a subclass choice */ }
	|	c13 = parse_org_kermeta_language_behavior_SelfExpression{ element = c13; /* this is a subclass choice */ }
	|	c14 = parse_org_kermeta_language_behavior_CallFeature{ element = c14; /* this is a subclass choice */ }
	|	c15 = parse_org_kermeta_language_behavior_CallValue{ element = c15; /* this is a subclass choice */ }
	|	c16 = parse_org_kermeta_language_behavior_EmptyExpression{ element = c16; /* this is a subclass choice */ }
	|	c17 = parse_org_kermeta_language_behavior_JavaStaticCall{ element = c17; /* this is a subclass choice */ }
	|	c18 = parse_org_kermeta_language_behavior_LambdaExpression{ element = c18; /* this is a subclass choice */ }
	|	c19 = parse_org_kermeta_language_behavior_VoidLiteral{ element = c19; /* this is a subclass choice */ }
	
;

parse_org_kermeta_language_structure_Type returns [org.kermeta.language.structure.Type element = null]
:
	c0 = parse_org_kermeta_language_structure_Class{ element = c0; /* this is a subclass choice */ }
	|	c1 = parse_org_kermeta_language_structure_Enumeration{ element = c1; /* this is a subclass choice */ }
	|	c2 = parse_org_kermeta_language_structure_ModelType{ element = c2; /* this is a subclass choice */ }
	|	c3 = parse_org_kermeta_language_structure_PrimitiveType{ element = c3; /* this is a subclass choice */ }
	|	c4 = parse_org_kermeta_language_structure_ObjectTypeVariable{ element = c4; /* this is a subclass choice */ }
	|	c5 = parse_org_kermeta_language_structure_ModelTypeVariable{ element = c5; /* this is a subclass choice */ }
	|	c6 = parse_org_kermeta_language_structure_VirtualType{ element = c6; /* this is a subclass choice */ }
	|	c7 = parse_org_kermeta_language_structure_ProductType{ element = c7; /* this is a subclass choice */ }
	|	c8 = parse_org_kermeta_language_structure_FunctionType{ element = c8; /* this is a subclass choice */ }
	|	c9 = parse_org_kermeta_language_structure_VoidType{ element = c9; /* this is a subclass choice */ }
	
;

SL_COMMENT:
	'//'(~('\n'|'\r'))*
	{ _channel = 99; }
;
ML_COMMENT:
	'/*'.*'*/'	{ _channel = 99; }
;
INTEGER:
	('-')?('1'..'9')('0'..'9')*|'0';
FLOAT:
	('-')?(('1'..'9') ('0'..'9')* | '0') '.' ('0'..'9')+ 	{ _channel = 99; }
;
BOOLEAN:
	'true'|'false';
STRING_LITERAL:
	('"'('\\'('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')|('\\''u'('0'..'9'|'a'..'f'|'A'..'F')('0'..'9'|'a'..'f'|'A'..'F')('0'..'9'|'a'..'f'|'A'..'F')('0'..'9'|'a'..'f'|'A'..'F'))|'\\'('0'..'7')|~('\\'|'"'))*'"')|('kermeta')
;
STRING:
	('0'..'9'|'a'..'z'(('_'|'-')('a'..'z'))*|'A'..'Z'(('_'|'-')('A'..'Z'))* |'A'..'Z' ('_'|'-')? ('a'..'z') |'a'..'z' ('_'|'-')? ('A'..'Z'))+;
QUALIFIEDNAME:
	('0'..'9'|'a'..'z'|'A'..'Z')+ ('::' ('0'..'9'|'a'..'z'|'A'..'Z')+ )+ ;
CASTED:
	'?';
TEXT:
	('A'..'Z' | 'a'..'z' | '0'..'9' | '_' | '-' )+	{ _channel = 99; }
;
WHITESPACE:
	(' ' | '\t' | '\f')
	{ _channel = 99; }
;
LINEBREAK:
	('\r\n' | '\r' | '\n')
	{ _channel = 99; }
;

