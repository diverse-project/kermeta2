grammar Kermeta;

options {
	superClass = KermetaANTLRParserBase;
	backtrack = true;
	memoize = true;
}

@lexer::header {
	package org.kermeta.language.emftexteditor.mopp;
}

@lexer::members {
	public java.util.List<org.antlr.runtime.RecognitionException> lexerExceptions  = new java.util.ArrayList<org.antlr.runtime.RecognitionException>();
	public java.util.List<java.lang.Integer> lexerExceptionsPosition = new java.util.ArrayList<java.lang.Integer>();
	
	public void reportError(org.antlr.runtime.RecognitionException e) {
		lexerExceptions.add(e);
		lexerExceptionsPosition.add(((org.antlr.runtime.ANTLRStringStream) input).index());
	}
}
@header{
	package org.kermeta.language.emftexteditor.mopp;
}

@members{
	private org.kermeta.language.emftexteditor.IKermetaTokenResolverFactory tokenResolverFactory = new org.kermeta.language.emftexteditor.mopp.KermetaTokenResolverFactory();
	@SuppressWarnings("unused")
	
	private int lastPosition;
	private org.kermeta.language.emftexteditor.mopp.KermetaTokenResolveResult tokenResolveResult = new org.kermeta.language.emftexteditor.mopp.KermetaTokenResolveResult();
	private boolean rememberExpectedElements = false;
	private java.lang.Object parseToIndexTypeObject;
	private int lastTokenIndex = 0;
	private java.util.List<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal> expectedElements = new java.util.ArrayList<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal>();
	private int mismatchedTokenRecoveryTries = 0;
	private java.util.Map<?, ?> options;
	//helper lists to allow a lexer to pass errors to its parser
	protected java.util.List<org.antlr.runtime.RecognitionException> lexerExceptions = java.util.Collections.synchronizedList(new java.util.ArrayList<org.antlr.runtime.RecognitionException>());
	protected java.util.List<java.lang.Integer> lexerExceptionsPosition = java.util.Collections.synchronizedList(new java.util.ArrayList<java.lang.Integer>());
	private int stopIncludingHiddenTokens;
	private int stopExcludingHiddenTokens;
	private java.util.Collection<org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>> postParseCommands;
	private boolean terminateParsing;
	private int tokenIndexOfLastCompleteElement;
	private int expectedElementsIndexOfLastCompleteElement;
	
	protected void addErrorToResource(final java.lang.String errorMessage, final int line, final int charPositionInLine, final int startIndex, final int stopIndex) {
		postParseCommands.add(new org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>() {
			public boolean execute(org.kermeta.language.emftexteditor.IKermetaTextResource resource) {
				if (resource == null) {
					// the resource can be null if the parser is used for
					// code completion
					return true;
				}
				resource.addProblem(new org.kermeta.language.emftexteditor.IKermetaProblem() {
					public org.kermeta.language.emftexteditor.KermetaEProblemType getType() {
						return org.kermeta.language.emftexteditor.KermetaEProblemType.ERROR;
					}
					public java.lang.String getMessage() {
						return errorMessage;
					}
				}, line, charPositionInLine, startIndex, stopIndex);
				return true;
			}
		});
	}
	
	public void addExpectedElement(org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal expectedElement) {
		if (!this.rememberExpectedElements) {
			return;
		}
		setPosition(expectedElement, input.index());
		this.expectedElements.add(expectedElement);
	}
	
	protected void addMapEntry(org.eclipse.emf.ecore.EObject element, org.eclipse.emf.ecore.EStructuralFeature structuralFeature, org.kermeta.language.emftexteditor.mopp.KermetaDummyEObject dummy) {
		java.lang.Object value = element.eGet(structuralFeature);
		java.lang.Object mapKey = dummy.getValueByName("key");
		java.lang.Object mapValue = dummy.getValueByName("value");
		if (value instanceof org.eclipse.emf.common.util.EMap<?, ?>) {
			org.eclipse.emf.common.util.EMap<java.lang.Object, java.lang.Object> valueMap = org.kermeta.language.emftexteditor.util.KermetaMapUtil.castToEMap(value);
			if (mapKey != null && mapValue != null) {
				valueMap.put(mapKey, mapValue);
			}
		}
	}
	
	@SuppressWarnings("unchecked")
	
	private boolean addObjectToList(org.eclipse.emf.ecore.EObject element, int featureID, java.lang.Object proxy) {
		return ((java.util.List<java.lang.Object>) element.eGet(element.eClass().getEStructuralFeature(featureID))).add(proxy);
	}
	
	protected org.eclipse.emf.ecore.EObject apply(org.eclipse.emf.ecore.EObject target, java.util.List<org.eclipse.emf.ecore.EObject> dummyEObjects) {
		org.eclipse.emf.ecore.EObject currentTarget = target;
		for (org.eclipse.emf.ecore.EObject object : dummyEObjects) {
			assert(object instanceof org.kermeta.language.emftexteditor.mopp.KermetaDummyEObject);
			org.kermeta.language.emftexteditor.mopp.KermetaDummyEObject dummy = (org.kermeta.language.emftexteditor.mopp.KermetaDummyEObject) object;
			org.eclipse.emf.ecore.EObject newEObject = dummy.applyTo(currentTarget);
			currentTarget = newEObject;
		}
		return currentTarget;
	}
	
	protected void collectHiddenTokens(org.eclipse.emf.ecore.EObject element) {
		int currentPos = getTokenStream().index();
		if (currentPos == 0) {
			return;
		}
		int endPos = currentPos - 1;
		for (; endPos >= this.lastPosition; endPos--) {
			org.antlr.runtime.Token token = getTokenStream().get(endPos);
			int _channel = token.getChannel();
			if (_channel != 99) {
				break;
			}
		}
		for (int pos = this.lastPosition; pos < endPos; pos++) {
			org.antlr.runtime.Token token = getTokenStream().get(pos);
			int _channel = token.getChannel();
			if (_channel == 99) {
				if (token.getType() == KermetaLexer.SL_COMMENT) {
					org.eclipse.emf.ecore.EStructuralFeature feature = element.eClass().getEStructuralFeature("comments");
					if (feature != null) {
						// call token resolver
						org.kermeta.language.emftexteditor.IKermetaTokenResolver resolvedResolver = tokenResolverFactory.createCollectInTokenResolver("comments");
						resolvedResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult resolvedResult = getFreshTokenResolveResult();
						resolvedResolver.resolve(token.getText(), feature, resolvedResult);
						java.lang.Object resolvedObject = resolvedResult.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(resolvedResult.getErrorMessage(), ((org.antlr.runtime.CommonToken) token).getLine(), ((org.antlr.runtime.CommonToken) token).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) token).getStartIndex(), ((org.antlr.runtime.CommonToken) token).getStopIndex());
						}
						if (java.lang.String.class.isInstance(resolvedObject)) {
							((java.util.List) element.eGet(feature)).add((java.lang.String) resolvedObject);
						} else {
							System.out.println("WARNING: Attribute comments for token " + token + " has wrong type in element " + element + " (expected java.lang.String).");
						}
					} else {
						System.out.println("WARNING: Attribute comments for token " + token + " was not found in element " + element + ".");
					}
				}
				if (token.getType() == KermetaLexer.ML_COMMENT) {
					org.eclipse.emf.ecore.EStructuralFeature feature = element.eClass().getEStructuralFeature("comments");
					if (feature != null) {
						// call token resolver
						org.kermeta.language.emftexteditor.IKermetaTokenResolver resolvedResolver = tokenResolverFactory.createCollectInTokenResolver("comments");
						resolvedResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult resolvedResult = getFreshTokenResolveResult();
						resolvedResolver.resolve(token.getText(), feature, resolvedResult);
						java.lang.Object resolvedObject = resolvedResult.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(resolvedResult.getErrorMessage(), ((org.antlr.runtime.CommonToken) token).getLine(), ((org.antlr.runtime.CommonToken) token).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) token).getStartIndex(), ((org.antlr.runtime.CommonToken) token).getStopIndex());
						}
						if (java.lang.String.class.isInstance(resolvedObject)) {
							((java.util.List) element.eGet(feature)).add((java.lang.String) resolvedObject);
						} else {
							System.out.println("WARNING: Attribute comments for token " + token + " has wrong type in element " + element + " (expected java.lang.String).");
						}
					} else {
						System.out.println("WARNING: Attribute comments for token " + token + " was not found in element " + element + ".");
					}
				}
			}
		}
		this.lastPosition = (endPos < 0 ? 0 : endPos);
	}
	
	protected void copyLocalizationInfos(final org.eclipse.emf.ecore.EObject source, final org.eclipse.emf.ecore.EObject target) {
		postParseCommands.add(new org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>() {
			public boolean execute(org.kermeta.language.emftexteditor.IKermetaTextResource resource) {
				org.kermeta.language.emftexteditor.IKermetaLocationMap locationMap = resource.getLocationMap();
				if (locationMap == null) {
					// the locationMap can be null if the parser is used for
					// code completion
					return true;
				}
				locationMap.setCharStart(target, locationMap.getCharStart(source));
				locationMap.setCharEnd(target, locationMap.getCharEnd(source));
				locationMap.setColumn(target, locationMap.getColumn(source));
				locationMap.setLine(target, locationMap.getLine(source));
				return true;
			}
		});
	}
	
	protected void copyLocalizationInfos(final org.antlr.runtime.CommonToken source, final org.eclipse.emf.ecore.EObject target) {
		postParseCommands.add(new org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>() {
			public boolean execute(org.kermeta.language.emftexteditor.IKermetaTextResource resource) {
				org.kermeta.language.emftexteditor.IKermetaLocationMap locationMap = resource.getLocationMap();
				if (locationMap == null) {
					// the locationMap can be null if the parser is used for
					// code completion
					return true;
				}
				if (source == null) {
					return true;
				}
				locationMap.setCharStart(target, source.getStartIndex());
				locationMap.setCharEnd(target, source.getStopIndex());
				locationMap.setColumn(target, source.getCharPositionInLine());
				locationMap.setLine(target, source.getLine());
				return true;
			}
		});
	}
	
	public org.kermeta.language.emftexteditor.IKermetaTextParser createInstance(java.io.InputStream actualInputStream, java.lang.String encoding) {
		try {
			if (encoding == null) {
				return new KermetaParser(new org.antlr.runtime.CommonTokenStream(new KermetaLexer(new org.antlr.runtime.ANTLRInputStream(actualInputStream))));
			} else {
				return new KermetaParser(new org.antlr.runtime.CommonTokenStream(new KermetaLexer(new org.antlr.runtime.ANTLRInputStream(actualInputStream, encoding))));
			}
		} catch (java.io.IOException e) {
			org.kermeta.language.emftexteditor.mopp.KermetaPlugin.logError("Error while creating parser.", e);
			return null;
		}
	}
	
	// This default constructor is only used to call createInstance() on it
	public KermetaParser() {
		super(null);
	}
	
	protected org.eclipse.emf.ecore.EObject doParse() throws org.antlr.runtime.RecognitionException {
		this.lastPosition = 0;
		// required because the lexer class can not be subclassed
		((KermetaLexer) getTokenStream().getTokenSource()).lexerExceptions = lexerExceptions;
		((KermetaLexer) getTokenStream().getTokenSource()).lexerExceptionsPosition = lexerExceptionsPosition;
		java.lang.Object typeObject = getTypeObject();
		if (typeObject == null) {
			return start();
		} else if (typeObject instanceof org.eclipse.emf.ecore.EClass) {
			org.eclipse.emf.ecore.EClass type = (org.eclipse.emf.ecore.EClass) typeObject;
			if (type.getInstanceClass() == org.kermeta.language.structure.ModelingUnit.class) {
				return parse_org_kermeta_language_structure_ModelingUnit();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.Using.class) {
				return parse_org_kermeta_language_structure_Using();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.Require.class) {
				return parse_org_kermeta_language_structure_Require();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.Package.class) {
				return parse_org_kermeta_language_structure_Package();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.ClassDefinition.class) {
				return parse_org_kermeta_language_structure_ClassDefinition();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.Property.class) {
				return parse_org_kermeta_language_structure_Property();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.Operation.class) {
				return parse_org_kermeta_language_structure_Operation();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.Parameter.class) {
				return parse_org_kermeta_language_structure_Parameter();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.Class.class) {
				return parse_org_kermeta_language_structure_Class();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.Enumeration.class) {
				return parse_org_kermeta_language_structure_Enumeration();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.EnumerationLiteral.class) {
				return parse_org_kermeta_language_structure_EnumerationLiteral();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.Constraint.class) {
				return parse_org_kermeta_language_structure_Constraint();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.PrimitiveType.class) {
				return parse_org_kermeta_language_structure_PrimitiveType();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.UnresolvedType.class) {
				return parse_org_kermeta_language_structure_UnresolvedType();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.VoidType.class) {
				return parse_org_kermeta_language_structure_VoidType();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.Object.class) {
				return parse_org_kermeta_language_structure_Object();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.Model.class) {
				return parse_org_kermeta_language_structure_Model();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.ModelType.class) {
				return parse_org_kermeta_language_structure_ModelType();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.TypeVariableBinding.class) {
				return parse_org_kermeta_language_structure_TypeVariableBinding();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.MultiplicityElement.class) {
				return parse_org_kermeta_language_structure_MultiplicityElement();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.TypeDefinition.class) {
				return parse_org_kermeta_language_structure_TypeDefinition();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.Tag.class) {
				return parse_org_kermeta_language_structure_Tag();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.ObjectTypeVariable.class) {
				return parse_org_kermeta_language_structure_ObjectTypeVariable();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.ModelTypeVariable.class) {
				return parse_org_kermeta_language_structure_ModelTypeVariable();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.VirtualType.class) {
				return parse_org_kermeta_language_structure_VirtualType();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.ProductType.class) {
				return parse_org_kermeta_language_structure_ProductType();
			}
			if (type.getInstanceClass() == org.kermeta.language.structure.FunctionType.class) {
				return parse_org_kermeta_language_structure_FunctionType();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.Block.class) {
				return parse_org_kermeta_language_behavior_Block();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.Rescue.class) {
				return parse_org_kermeta_language_behavior_Rescue();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.TypeReference.class) {
				return parse_org_kermeta_language_behavior_TypeReference();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.Raise.class) {
				return parse_org_kermeta_language_behavior_Raise();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.BooleanLiteral.class) {
				return parse_org_kermeta_language_behavior_BooleanLiteral();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.IntegerLiteral.class) {
				return parse_org_kermeta_language_behavior_IntegerLiteral();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.StringLiteral.class) {
				return parse_org_kermeta_language_behavior_StringLiteral();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.Conditional.class) {
				return parse_org_kermeta_language_behavior_Conditional();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.Loop.class) {
				return parse_org_kermeta_language_behavior_Loop();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.VariableDecl.class) {
				return parse_org_kermeta_language_behavior_VariableDecl();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.TypeLiteral.class) {
				return parse_org_kermeta_language_behavior_TypeLiteral();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.CallResult.class) {
				return parse_org_kermeta_language_behavior_CallResult();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.CallSuperOperation.class) {
				return parse_org_kermeta_language_behavior_CallSuperOperation();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.Assignment.class) {
				return parse_org_kermeta_language_behavior_Assignment();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.CallVariable.class) {
				return parse_org_kermeta_language_behavior_CallVariable();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.SelfExpression.class) {
				return parse_org_kermeta_language_behavior_SelfExpression();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.CallFeature.class) {
				return parse_org_kermeta_language_behavior_CallFeature();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.JavaStaticCall.class) {
				return parse_org_kermeta_language_behavior_JavaStaticCall();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.VoidLiteral.class) {
				return parse_org_kermeta_language_behavior_VoidLiteral();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.CallValue.class) {
				return parse_org_kermeta_language_behavior_CallValue();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.EmptyExpression.class) {
				return parse_org_kermeta_language_behavior_EmptyExpression();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.LambdaExpression.class) {
				return parse_org_kermeta_language_behavior_LambdaExpression();
			}
			if (type.getInstanceClass() == org.kermeta.language.behavior.LambdaParameter.class) {
				return parse_org_kermeta_language_behavior_LambdaParameter();
			}
		}
		throw new org.kermeta.language.emftexteditor.mopp.KermetaUnexpectedContentTypeException(typeObject);
	}
	
	private org.kermeta.language.emftexteditor.mopp.KermetaTokenResolveResult getFreshTokenResolveResult() {
		tokenResolveResult.clear();
		return tokenResolveResult;
	}
	
	public int getMismatchedTokenRecoveryTries() {
		return mismatchedTokenRecoveryTries;
	}
	
	public java.lang.Object getMissingSymbol(org.antlr.runtime.IntStream arg0, org.antlr.runtime.RecognitionException arg1, int arg2, org.antlr.runtime.BitSet arg3) {
		mismatchedTokenRecoveryTries++;
		return super.getMissingSymbol(arg0, arg1, arg2, arg3);
	}
	
	protected java.util.Map<?,?> getOptions() {
		return options;
	}
	
	public org.kermeta.language.emftexteditor.mopp.KermetaMetaInformation getMetaInformation() {
		return new org.kermeta.language.emftexteditor.mopp.KermetaMetaInformation();
	}
	
	public java.lang.Object getParseToIndexTypeObject() {
		return parseToIndexTypeObject;
	}
	
	protected org.kermeta.language.emftexteditor.mopp.KermetaReferenceResolverSwitch getReferenceResolverSwitch() {
		return (org.kermeta.language.emftexteditor.mopp.KermetaReferenceResolverSwitch) getMetaInformation().getReferenceResolverSwitch();
	}
	
	protected java.lang.Object getTypeObject() {
		java.lang.Object typeObject = getParseToIndexTypeObject();
		if (typeObject != null) {
			return typeObject;
		}
		java.util.Map<?,?> options = getOptions();
		if (options != null) {
			typeObject = options.get(org.kermeta.language.emftexteditor.IKermetaOptions.RESOURCE_CONTENT_TYPE);
		}
		return typeObject;
	}
	
	// Implementation that calls {@link #doParse()}  and handles the thrown
	// RecognitionExceptions.
	public org.kermeta.language.emftexteditor.IKermetaParseResult parse() {
		terminateParsing = false;
		postParseCommands = new java.util.ArrayList<org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>>();
		org.kermeta.language.emftexteditor.mopp.KermetaParseResult parseResult = new org.kermeta.language.emftexteditor.mopp.KermetaParseResult();
		try {
			org.eclipse.emf.ecore.EObject result =  doParse();
			if (lexerExceptions.isEmpty()) {
				parseResult.setRoot(result);
			}
		} catch (org.antlr.runtime.RecognitionException re) {
			reportError(re);
		} catch (java.lang.IllegalArgumentException iae) {
			if ("The 'no null' constraint is violated".equals(iae.getMessage())) {
				//? can be caused if a null is set on EMF models where not allowed;
				//? this will just happen if other errors occurred before
			} else {
				iae.printStackTrace();
			}
		}
		for (org.antlr.runtime.RecognitionException re : lexerExceptions) {
			reportLexicalError(re);
		}
		parseResult.getPostParseCommands().addAll(postParseCommands);
		return parseResult;
	}
	
	public java.util.List<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal> parseToExpectedElements(org.eclipse.emf.ecore.EClass type, org.kermeta.language.emftexteditor.IKermetaTextResource dummyResource) {
		rememberExpectedElements = true;
		parseToIndexTypeObject = type;
		final org.antlr.runtime.CommonTokenStream tokenStream = (org.antlr.runtime.CommonTokenStream) getTokenStream();
		org.kermeta.language.emftexteditor.IKermetaParseResult result = parse();
		if (result != null) {
			org.eclipse.emf.ecore.EObject root = result.getRoot();
			if (root != null) {
				dummyResource.getContents().add(root);
			}
			for (org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource> command : result.getPostParseCommands()) {
				command.execute(dummyResource);
			}
		}
		// remove all expected elements that were added after the last complete element
		expectedElements = expectedElements.subList(0, expectedElementsIndexOfLastCompleteElement + 1);
		int lastFollowSetID = expectedElements.get(expectedElementsIndexOfLastCompleteElement).getFollowSetID();
		java.util.Set<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal> currentFollowSet = new java.util.LinkedHashSet<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal>();
		java.util.List<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal> newFollowSet = new java.util.ArrayList<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal>();
		for (int i = expectedElementsIndexOfLastCompleteElement; i >= 0; i--) {
			org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal expectedElementI = expectedElements.get(i);
			if (expectedElementI.getFollowSetID() == lastFollowSetID) {
				currentFollowSet.add(expectedElementI);
			} else {
				break;
			}
		}
		int followSetID = 605;
		int i;
		for (i = tokenIndexOfLastCompleteElement; i < tokenStream.size(); i++) {
			org.antlr.runtime.CommonToken nextToken = (org.antlr.runtime.CommonToken) tokenStream.get(i);
			if (nextToken.getChannel() == 99) {
				// hidden tokens do not reduce the follow set
			} else {
				// now that we have found the next visible token the position for that expected terminals
				// can be set
				for (org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal nextFollow : newFollowSet) {
					lastTokenIndex = 0;
					setPosition(nextFollow, i);
				}
				newFollowSet.clear();
				// normal tokens do reduce the follow set - only elements that match the token are kept
				for (org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal nextFollow : currentFollowSet) {
					if (nextFollow.getTerminal().getTokenName().equals(getTokenNames()[nextToken.getType()])) {
						// keep this one - it matches
						java.util.Collection<org.kermeta.language.emftexteditor.IKermetaExpectedElement> newFollowers = nextFollow.getTerminal().getFollowers();
						for (org.kermeta.language.emftexteditor.IKermetaExpectedElement newFollower : newFollowers) {
							org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal newFollowTerminal = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(newFollower, followSetID);
							newFollowSet.add(newFollowTerminal);
							expectedElements.add(newFollowTerminal);
						}
					}
				}
				currentFollowSet.clear();
				currentFollowSet.addAll(newFollowSet);
			}
			followSetID++;
		}
		// after the last token in the stream we must set the position for the elements that were
		// added during the last iteration of the loop
		for (org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal nextFollow : newFollowSet) {
			lastTokenIndex = 0;
			setPosition(nextFollow, i);
		}
		return this.expectedElements;
	}
	
	public void setPosition(org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal expectedElement, int tokenIndex) {
		int currentIndex = java.lang.Math.max(0, tokenIndex);
		for (int index = lastTokenIndex; index < currentIndex; index++) {
			if (index >= input.size()) {
				break;
			}
			org.antlr.runtime.CommonToken tokenAtIndex = (org.antlr.runtime.CommonToken) input.get(index);
			stopIncludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
			if (tokenAtIndex.getChannel() != 99) {
				stopExcludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
			}
		}
		lastTokenIndex = java.lang.Math.max(0, currentIndex);
		expectedElement.setPosition(stopExcludingHiddenTokens, stopIncludingHiddenTokens);
	}
	
	public java.lang.Object recoverFromMismatchedToken(org.antlr.runtime.IntStream input, int ttype, org.antlr.runtime.BitSet follow) throws org.antlr.runtime.RecognitionException {
		if (!rememberExpectedElements) {
			return super.recoverFromMismatchedToken(input, ttype, follow);
		} else {
			return null;
		}
	}
	protected <ContainerType extends org.eclipse.emf.ecore.EObject, ReferenceType extends org.eclipse.emf.ecore.EObject> void registerContextDependentProxy(final org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<ContainerType, ReferenceType> factory, final ContainerType element, final org.eclipse.emf.ecore.EReference reference, final String id, final org.eclipse.emf.ecore.EObject proxy) {
		postParseCommands.add(new org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>() {
			public boolean execute(org.kermeta.language.emftexteditor.IKermetaTextResource resource) {
				if (resource == null) {
					// the resource can be null if the parser is used for
					// code completion
					return true;
				}
				resource.registerContextDependentProxy(factory, element, reference, id, proxy);
				return true;
			}
		});
	}
	
	// Translates errors thrown by the parser into human readable messages.
	public void reportError(final org.antlr.runtime.RecognitionException e)  {
		java.lang.String message = e.getMessage();
		if (e instanceof org.antlr.runtime.MismatchedTokenException) {
			org.antlr.runtime.MismatchedTokenException mte = (org.antlr.runtime.MismatchedTokenException) e;
			java.lang.String tokenName = "<unknown>";
			if (mte.expecting == Token.EOF) {
				tokenName = "EOF";
			} else {
				tokenName = getTokenNames()[mte.expecting];
				tokenName = org.kermeta.language.emftexteditor.util.KermetaStringUtil.formatTokenName(tokenName);
			}
			message = "Syntax error on token \"" + e.token.getText() + "\", \"" + tokenName + "\" expected";
		} else if (e instanceof org.antlr.runtime.MismatchedTreeNodeException) {
			org.antlr.runtime.MismatchedTreeNodeException mtne = (org.antlr.runtime.MismatchedTreeNodeException) e;
			java.lang.String tokenName = "<unknown>";
			if (mtne.expecting == Token.EOF) {
				tokenName = "EOF";
			} else {
				tokenName = getTokenNames()[mtne.expecting];
			}
			message = "mismatched tree node: "+"xxx" +"; expecting " + tokenName;
		} else if (e instanceof org.antlr.runtime.NoViableAltException) {
			message = "Syntax error on token \"" + e.token.getText() + "\", check following tokens";
		} else if (e instanceof org.antlr.runtime.EarlyExitException) {
			message = "Syntax error on token \"" + e.token.getText() + "\", delete this token";
		} else if (e instanceof org.antlr.runtime.MismatchedSetException) {
			org.antlr.runtime.MismatchedSetException mse = (org.antlr.runtime.MismatchedSetException) e;
			message = "mismatched token: " + e.token + "; expecting set " + mse.expecting;
		} else if (e instanceof org.antlr.runtime.MismatchedNotSetException) {
			org.antlr.runtime.MismatchedNotSetException mse = (org.antlr.runtime.MismatchedNotSetException) e;
			message = "mismatched token: " +  e.token + "; expecting set " + mse.expecting;
		} else if (e instanceof org.antlr.runtime.FailedPredicateException) {
			org.antlr.runtime.FailedPredicateException fpe = (org.antlr.runtime.FailedPredicateException) e;
			message = "rule " + fpe.ruleName + " failed predicate: {" +  fpe.predicateText+"}?";
		}
		// the resource may be null if the parse is used for code completion
		final java.lang.String finalMessage = message;
		if (e.token instanceof org.antlr.runtime.CommonToken) {
			final org.antlr.runtime.CommonToken ct = (org.antlr.runtime.CommonToken) e.token;
			addErrorToResource(finalMessage, ct.getCharPositionInLine(), ct.getLine(), ct.getStartIndex(), ct.getStopIndex());
		} else {
			addErrorToResource(finalMessage, e.token.getCharPositionInLine(), e.token.getLine(), 1, 5);
		}
	}
	
	// Translates errors thrown by the lexer into human readable messages.
	public void reportLexicalError(final org.antlr.runtime.RecognitionException e)  {
		java.lang.String message = "";
		if (e instanceof org.antlr.runtime.MismatchedTokenException) {
			org.antlr.runtime.MismatchedTokenException mte = (org.antlr.runtime.MismatchedTokenException) e;
			message = "Syntax error on token \"" + ((char) e.c) + "\", \"" + (char) mte.expecting + "\" expected";
		} else if (e instanceof org.antlr.runtime.NoViableAltException) {
			message = "Syntax error on token \"" + ((char) e.c) + "\", delete this token";
		} else if (e instanceof org.antlr.runtime.EarlyExitException) {
			org.antlr.runtime.EarlyExitException eee = (org.antlr.runtime.EarlyExitException) e;
			message ="required (...)+ loop (decision=" + eee.decisionNumber + ") did not match anything; on line " + e.line + ":" + e.charPositionInLine + " char=" + ((char) e.c) + "'";
		} else if (e instanceof org.antlr.runtime.MismatchedSetException) {
			org.antlr.runtime.MismatchedSetException mse = (org.antlr.runtime.MismatchedSetException) e;
			message ="mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
		} else if (e instanceof org.antlr.runtime.MismatchedNotSetException) {
			org.antlr.runtime.MismatchedNotSetException mse = (org.antlr.runtime.MismatchedNotSetException) e;
			message ="mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
		} else if (e instanceof org.antlr.runtime.MismatchedRangeException) {
			org.antlr.runtime.MismatchedRangeException mre = (org.antlr.runtime.MismatchedRangeException) e;
			message ="mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set '" + (char) mre.a + "'..'" + (char) mre.b + "'";
		} else if (e instanceof org.antlr.runtime.FailedPredicateException) {
			org.antlr.runtime.FailedPredicateException fpe = (org.antlr.runtime.FailedPredicateException) e;
			message ="rule " + fpe.ruleName + " failed predicate: {" + fpe.predicateText + "}?";
		}
		addErrorToResource(message, e.index, e.line, lexerExceptionsPosition.get(lexerExceptions.indexOf(e)), lexerExceptionsPosition.get(lexerExceptions.indexOf(e)));
	}
	
	public void setOptions(java.util.Map<?,?> options) {
		this.options = options;
	}
	
	public void terminate() {
		terminateParsing = true;
	}
	
	protected void completedElement(Object element) {
		if (element instanceof org.eclipse.emf.ecore.EObject) {
			this.tokenIndexOfLastCompleteElement = getTokenStream().index();
			this.expectedElementsIndexOfLastCompleteElement = expectedElements.size() - 1;
		}
	}
	
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_0 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("require");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_1 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("using");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_2 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPackage().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_3 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("package");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_4 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Model");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_5 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("attribute");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_6 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("reference");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_7 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("property");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_8 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getConstraint().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__STEREOTYPE), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_9 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("operation");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_10 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getParameter().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__NAME), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_11 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_ORDERED), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_12 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_UNIQUE), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_13 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("MultiplicityElement");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_14 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getTypeReference().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_REFERENCE__TYPE), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_15 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("::");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_16 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_17 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_18 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_19 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("aspect");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_20 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("abstract");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_21 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("class");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_22 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("enumeration");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_23 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPrimitiveType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__NAME), "PRIMITIVE_TYPE");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_24 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__IS_ASPECT), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_25 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ModelType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_26 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__IS_ASPECT), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_27 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("TypeDefinition");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_28 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_29 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPackage().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_30 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("::");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_31 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_32 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_33 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_34 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_35 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__NAME), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_36 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("inherits");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_37 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_38 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_39 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_40 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_41 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_42 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProperty().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_43 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_44 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProperty().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_45 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProperty().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_46 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_47 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("getter");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_48 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("setter");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_49 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProperty().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_50 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("do");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_51 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("raise");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_52 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getBooleanLiteral().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.BOOLEAN_LITERAL__VALUE), "BOOLEAN");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_53 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getIntegerLiteral().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.INTEGER_LITERAL__VALUE), "INTEGER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_54 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getStringLiteral().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.STRING_LITERAL__VALUE), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_55 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("if");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_56 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("from");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_57 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("var");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_58 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("result");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_59 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("super");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_60 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_61 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallVariable().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VARIABLE__NAME), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_62 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("extern");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_63 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("self");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_64 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Void");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_65 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("value");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_66 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("EmptyExpression");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_67 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("LambdaExpression");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_68 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getOperation().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__NAME), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_69 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_70 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_71 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_72 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_73 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getOperation().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_74 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_75 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getOperation().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_76 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_77 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("is");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_78 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getOperation().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_79 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("abstract");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_80 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_81 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getParameter().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__TYPE), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_82 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getClass_().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS__TYPE_DEFINITION), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_83 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_84 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_85 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_86 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("variable");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_87 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("type");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_88 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_89 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_90 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_91 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_92 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_93 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("type");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_94 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("lower");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_95 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("upper");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_96 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_97 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_98 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_99 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_100 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_101 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_102 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("supertype");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_103 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_104 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_105 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_106 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_107 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_108 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_109 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("supertype");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_110 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("virtualType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_111 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_112 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_113 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_114 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_115 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_116 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_117 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("supertype");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_118 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("classDefinition");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_119 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("modelType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_120 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeParamBinding");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_121 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_122 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_123 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_124 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_125 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_126 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("type");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_127 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_128 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_129 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_130 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_131 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_132 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("left");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_133 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("right");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_134 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_135 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_136 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_137 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_138 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("staticType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_139 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_140 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_141 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_142 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_143 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("staticType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_144 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("parameters");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_145 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("body");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_146 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_147 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getEnumeration().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION__NAME), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_148 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_149 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getEnumerationLiteral().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION_LITERAL__NAME), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_150 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(";");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_151 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_152 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(";");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_153 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getConstraint().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__LANGUAGE), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_154 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getUnresolvedType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.UNRESOLVED_TYPE__TYPE_IDENTIFIER), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_155 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Void");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_156 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Object");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_157 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_158 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_159 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_160 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_161 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_162 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObject().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT__TAG), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_163 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_164 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_165 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_166 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_167 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_168 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_169 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_170 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModel().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL__TAG), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_171 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_172 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_173 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_174 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_175 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_176 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_177 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("includedTypeDefinition");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_178 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_179 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_180 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TAG), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_181 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_182 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_183 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TYPE_CONTAINER), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_184 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_185 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__NAME), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_186 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_187 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__INCLUDED_TYPE_DEFINITION), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_188 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("TypeVariableBinding");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_189 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_190 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_191 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeVariableBinding().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TAG), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_192 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_193 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_194 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ObjectTypeVariable");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_195 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ModelTypeVariable");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_196 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("VirtualType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_197 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ProductType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_198 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("FunctionType");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_199 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_200 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeVariableBinding().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__VARIABLE), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_201 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_202 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeVariableBinding().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TYPE), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_203 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_204 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_205 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TAG), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_206 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_207 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_208 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_209 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__NAME), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_210 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_211 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TYPE), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_212 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_213 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__LOWER), "INTEGER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_214 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_215 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__UPPER), "INTEGER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_216 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_217 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_218 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_219 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_220 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_221 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_222 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__TAG), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_223 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_224 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_225 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__NAME), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_226 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_227 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_228 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_229 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_230 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("value");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_231 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("object");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_232 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_233 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_234 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTag().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__TAG), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_235 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_236 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_237 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTag().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__NAME), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_238 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_239 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTag().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__VALUE), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_240 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_241 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTag().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__OBJECT), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_242 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_243 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_244 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_245 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("type");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_246 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_247 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_248 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_249 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObjectTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TAG), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_250 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_251 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_252 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_253 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObjectTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TYPE_CONTAINER), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_254 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_255 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObjectTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__NAME), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_256 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_257 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObjectTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__SUPERTYPE), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_258 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_259 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_260 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TAG), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_261 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_262 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_263 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_264 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TYPE_CONTAINER), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_265 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_266 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__NAME), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_267 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_268 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__SUPERTYPE), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_269 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_270 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_271 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_272 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TAG), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_273 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_274 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_275 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_276 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_CONTAINER), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_277 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_278 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__NAME), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_279 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_280 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__SUPERTYPE), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_281 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_282 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CLASS_DEFINITION), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_283 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_284 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__MODEL_TYPE), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_285 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_286 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_287 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_288 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProductType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TAG), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_289 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_290 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_291 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_292 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProductType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE_CONTAINER), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_293 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_294 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProductType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_295 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_296 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_297 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getFunctionType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TAG), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_298 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_299 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_300 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_301 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getFunctionType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TYPE_CONTAINER), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_302 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_303 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getFunctionType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__LEFT), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_304 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_305 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getFunctionType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__RIGHT), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_306 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("rescue");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_307 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("end");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_308 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("until");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_309 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("else");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_310 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("end");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_311 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_312 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_313 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_314 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_315 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_316 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_317 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_318 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getRescue().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RESCUE__EXCEPTION_NAME), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_319 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_320 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_321 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("init");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_322 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("then");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_323 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("loop");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_324 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getVariableDecl().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__IDENTIFIER), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_325 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_326 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":=");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_327 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getAssignment().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__IS_CAST), "CASTED");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_328 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_329 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("=");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_330 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_331 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_332 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_333 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_334 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("==");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_335 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("+");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_336 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("-");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_337 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("/");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_338 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("*");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_339 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_340 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_341 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_342 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_343 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_344 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_345 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_346 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("+");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_347 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("-");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_348 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("/");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_349 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("*");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_350 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_351 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_352 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_353 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_354 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("==");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_355 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("+");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_356 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("-");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_357 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("/");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_358 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("*");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_359 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_360 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_361 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_362 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_363 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_364 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_365 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_366 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getJavaStaticCall().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JCLASS), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_367 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_368 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getJavaStaticCall().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JMETHOD), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_369 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_370 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_371 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_372 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getEmptyExpression().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__TAG), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_373 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_374 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_375 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_376 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getEmptyExpression().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__STATIC_TYPE), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_377 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_378 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_379 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getLambdaExpression().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__TAG), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_380 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_381 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_382 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_383 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getLambdaExpression().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__STATIC_TYPE), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_384 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_385 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("LambdaParameter");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_386 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_387 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_388 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_389 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getLambdaParameter().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TAG), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_390 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_391 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_392 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getLambdaParameter().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__NAME), "IDENTIFIER");
	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_393 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
	
	public static void wire0() {
		TERMINAL_1.addFollower(TERMINAL_1);
		TERMINAL_1.addFollower(TERMINAL_2);
		TERMINAL_1.addFollower(TERMINAL_3);
		TERMINAL_0.addFollower(TERMINAL_0);
		TERMINAL_0.addFollower(TERMINAL_1);
		TERMINAL_0.addFollower(TERMINAL_2);
		TERMINAL_0.addFollower(TERMINAL_3);
		TERMINAL_2.addFollower(TERMINAL_15);
		TERMINAL_2.addFollower(TERMINAL_16);
		TERMINAL_2.addFollower(TERMINAL_17);
		TERMINAL_2.addFollower(TERMINAL_2);
		TERMINAL_2.addFollower(TERMINAL_3);
		TERMINAL_15.addFollower(TERMINAL_2);
		TERMINAL_15.addFollower(TERMINAL_3);
		TERMINAL_16.addFollower(TERMINAL_2);
		TERMINAL_16.addFollower(TERMINAL_3);
		TERMINAL_16.addFollower(TERMINAL_18);
		TERMINAL_18.addFollower(TERMINAL_2);
		TERMINAL_18.addFollower(TERMINAL_3);
		TERMINAL_18.addFollower(TERMINAL_15);
		TERMINAL_18.addFollower(TERMINAL_16);
		TERMINAL_18.addFollower(TERMINAL_17);
		TERMINAL_17.addFollower(TERMINAL_19);
		TERMINAL_17.addFollower(TERMINAL_20);
		TERMINAL_17.addFollower(TERMINAL_21);
		TERMINAL_17.addFollower(TERMINAL_22);
		TERMINAL_17.addFollower(TERMINAL_23);
		TERMINAL_17.addFollower(TERMINAL_24);
		TERMINAL_17.addFollower(TERMINAL_25);
		TERMINAL_17.addFollower(TERMINAL_26);
		TERMINAL_17.addFollower(TERMINAL_27);
		TERMINAL_28.addFollower(TERMINAL_2);
		TERMINAL_28.addFollower(TERMINAL_3);
		TERMINAL_28.addFollower(TERMINAL_15);
		TERMINAL_28.addFollower(TERMINAL_16);
		TERMINAL_28.addFollower(TERMINAL_17);
		TERMINAL_3.addFollower(TERMINAL_29);
		TERMINAL_29.addFollower(TERMINAL_30);
		TERMINAL_29.addFollower(TERMINAL_31);
		TERMINAL_29.addFollower(TERMINAL_32);
		TERMINAL_29.addFollower(TERMINAL_2);
		TERMINAL_29.addFollower(TERMINAL_3);
		TERMINAL_29.addFollower(TERMINAL_15);
		TERMINAL_29.addFollower(TERMINAL_16);
		TERMINAL_29.addFollower(TERMINAL_17);
		TERMINAL_30.addFollower(TERMINAL_2);
		TERMINAL_30.addFollower(TERMINAL_3);
		TERMINAL_31.addFollower(TERMINAL_2);
		TERMINAL_31.addFollower(TERMINAL_3);
		TERMINAL_31.addFollower(TERMINAL_33);
		TERMINAL_33.addFollower(TERMINAL_2);
		TERMINAL_33.addFollower(TERMINAL_3);
		TERMINAL_33.addFollower(TERMINAL_15);
		TERMINAL_33.addFollower(TERMINAL_16);
		TERMINAL_33.addFollower(TERMINAL_17);
		TERMINAL_32.addFollower(TERMINAL_19);
		TERMINAL_32.addFollower(TERMINAL_20);
		TERMINAL_32.addFollower(TERMINAL_21);
		TERMINAL_32.addFollower(TERMINAL_22);
		TERMINAL_32.addFollower(TERMINAL_23);
		TERMINAL_32.addFollower(TERMINAL_24);
		TERMINAL_32.addFollower(TERMINAL_25);
		TERMINAL_32.addFollower(TERMINAL_26);
		TERMINAL_32.addFollower(TERMINAL_27);
		TERMINAL_34.addFollower(TERMINAL_2);
		TERMINAL_34.addFollower(TERMINAL_3);
		TERMINAL_34.addFollower(TERMINAL_15);
		TERMINAL_34.addFollower(TERMINAL_16);
		TERMINAL_34.addFollower(TERMINAL_17);
		TERMINAL_19.addFollower(TERMINAL_20);
		TERMINAL_19.addFollower(TERMINAL_21);
		TERMINAL_20.addFollower(TERMINAL_21);
		TERMINAL_21.addFollower(TERMINAL_35);
		TERMINAL_35.addFollower(TERMINAL_36);
		TERMINAL_35.addFollower(TERMINAL_37);
		TERMINAL_36.addFollower(TERMINAL_38);
		TERMINAL_38.addFollower(TERMINAL_39);
		TERMINAL_38.addFollower(TERMINAL_37);
		TERMINAL_39.addFollower(TERMINAL_40);
		TERMINAL_40.addFollower(TERMINAL_39);
		TERMINAL_40.addFollower(TERMINAL_37);
		TERMINAL_37.addFollower(TERMINAL_8);
		TERMINAL_37.addFollower(TERMINAL_5);
		TERMINAL_37.addFollower(TERMINAL_6);
		TERMINAL_37.addFollower(TERMINAL_7);
		TERMINAL_37.addFollower(TERMINAL_9);
		TERMINAL_37.addFollower(TERMINAL_41);
		TERMINAL_41.addFollower(TERMINAL_19);
		TERMINAL_41.addFollower(TERMINAL_20);
		TERMINAL_41.addFollower(TERMINAL_21);
		TERMINAL_41.addFollower(TERMINAL_22);
		TERMINAL_41.addFollower(TERMINAL_23);
		TERMINAL_41.addFollower(TERMINAL_24);
		TERMINAL_41.addFollower(TERMINAL_25);
		TERMINAL_41.addFollower(TERMINAL_26);
		TERMINAL_41.addFollower(TERMINAL_27);
		TERMINAL_41.addFollower(TERMINAL_28);
		TERMINAL_5.addFollower(TERMINAL_42);
		TERMINAL_6.addFollower(TERMINAL_42);
		TERMINAL_42.addFollower(TERMINAL_43);
		TERMINAL_42.addFollower(TERMINAL_5);
		TERMINAL_42.addFollower(TERMINAL_6);
		TERMINAL_42.addFollower(TERMINAL_7);
		TERMINAL_42.addFollower(TERMINAL_8);
		TERMINAL_42.addFollower(TERMINAL_9);
		TERMINAL_42.addFollower(TERMINAL_41);
		TERMINAL_43.addFollower(TERMINAL_44);
		TERMINAL_44.addFollower(TERMINAL_5);
		TERMINAL_44.addFollower(TERMINAL_6);
		TERMINAL_44.addFollower(TERMINAL_7);
		TERMINAL_44.addFollower(TERMINAL_8);
		TERMINAL_44.addFollower(TERMINAL_9);
		TERMINAL_44.addFollower(TERMINAL_41);
		TERMINAL_7.addFollower(TERMINAL_45);
		TERMINAL_45.addFollower(TERMINAL_46);
		TERMINAL_45.addFollower(TERMINAL_47);
		TERMINAL_45.addFollower(TERMINAL_48);
		TERMINAL_45.addFollower(TERMINAL_5);
		TERMINAL_45.addFollower(TERMINAL_6);
		TERMINAL_45.addFollower(TERMINAL_7);
		TERMINAL_45.addFollower(TERMINAL_8);
		TERMINAL_45.addFollower(TERMINAL_9);
		TERMINAL_45.addFollower(TERMINAL_41);
		TERMINAL_46.addFollower(TERMINAL_49);
		TERMINAL_49.addFollower(TERMINAL_47);
		TERMINAL_49.addFollower(TERMINAL_48);
		TERMINAL_49.addFollower(TERMINAL_5);
		TERMINAL_49.addFollower(TERMINAL_6);
		TERMINAL_49.addFollower(TERMINAL_7);
		TERMINAL_49.addFollower(TERMINAL_8);
		TERMINAL_49.addFollower(TERMINAL_9);
		TERMINAL_49.addFollower(TERMINAL_41);
		TERMINAL_47.addFollower(TERMINAL_50);
		TERMINAL_47.addFollower(TERMINAL_51);
		TERMINAL_47.addFollower(TERMINAL_52);
		TERMINAL_47.addFollower(TERMINAL_53);
		TERMINAL_47.addFollower(TERMINAL_54);
		TERMINAL_47.addFollower(TERMINAL_55);
		TERMINAL_47.addFollower(TERMINAL_56);
		TERMINAL_47.addFollower(TERMINAL_57);
		TERMINAL_47.addFollower(TERMINAL_14);
		TERMINAL_47.addFollower(TERMINAL_58);
		TERMINAL_47.addFollower(TERMINAL_59);
		TERMINAL_47.addFollower(TERMINAL_60);
		TERMINAL_47.addFollower(TERMINAL_61);
		TERMINAL_47.addFollower(TERMINAL_62);
		TERMINAL_47.addFollower(TERMINAL_63);
		TERMINAL_47.addFollower(TERMINAL_64);
		TERMINAL_47.addFollower(TERMINAL_65);
		TERMINAL_47.addFollower(TERMINAL_66);
		TERMINAL_47.addFollower(TERMINAL_67);
		TERMINAL_48.addFollower(TERMINAL_50);
		TERMINAL_48.addFollower(TERMINAL_51);
		TERMINAL_48.addFollower(TERMINAL_52);
		TERMINAL_48.addFollower(TERMINAL_53);
		TERMINAL_48.addFollower(TERMINAL_54);
		TERMINAL_48.addFollower(TERMINAL_55);
		TERMINAL_48.addFollower(TERMINAL_56);
		TERMINAL_48.addFollower(TERMINAL_57);
		TERMINAL_48.addFollower(TERMINAL_14);
		TERMINAL_48.addFollower(TERMINAL_58);
		TERMINAL_48.addFollower(TERMINAL_59);
		TERMINAL_48.addFollower(TERMINAL_60);
		TERMINAL_48.addFollower(TERMINAL_61);
		TERMINAL_48.addFollower(TERMINAL_62);
		TERMINAL_48.addFollower(TERMINAL_63);
		TERMINAL_48.addFollower(TERMINAL_64);
		TERMINAL_48.addFollower(TERMINAL_65);
		TERMINAL_48.addFollower(TERMINAL_66);
		TERMINAL_48.addFollower(TERMINAL_67);
		TERMINAL_9.addFollower(TERMINAL_68);
		TERMINAL_68.addFollower(TERMINAL_69);
		TERMINAL_69.addFollower(TERMINAL_10);
		TERMINAL_69.addFollower(TERMINAL_70);
		TERMINAL_71.addFollower(TERMINAL_73);
		TERMINAL_73.addFollower(TERMINAL_72);
		TERMINAL_73.addFollower(TERMINAL_70);
		TERMINAL_72.addFollower(TERMINAL_10);
		TERMINAL_74.addFollower(TERMINAL_75);
		TERMINAL_75.addFollower(TERMINAL_72);
		TERMINAL_75.addFollower(TERMINAL_70);
		TERMINAL_70.addFollower(TERMINAL_76);
		TERMINAL_70.addFollower(TERMINAL_77);
		TERMINAL_76.addFollower(TERMINAL_78);
		TERMINAL_78.addFollower(TERMINAL_77);
		TERMINAL_77.addFollower(TERMINAL_50);
		TERMINAL_77.addFollower(TERMINAL_79);
		TERMINAL_79.addFollower(TERMINAL_8);
		TERMINAL_79.addFollower(TERMINAL_9);
		TERMINAL_79.addFollower(TERMINAL_41);
		TERMINAL_10.addFollower(TERMINAL_80);
		TERMINAL_80.addFollower(TERMINAL_81);
		TERMINAL_81.addFollower(TERMINAL_71);
		TERMINAL_81.addFollower(TERMINAL_72);
		TERMINAL_81.addFollower(TERMINAL_70);
		TERMINAL_82.addFollower(TERMINAL_83);
		TERMINAL_82.addFollower(TERMINAL_84);
		TERMINAL_82.addFollower(TERMINAL_85);
		TERMINAL_82.addFollower(TERMINAL_86);
		TERMINAL_82.addFollower(TERMINAL_87);
		TERMINAL_82.addFollower(TERMINAL_88);
		TERMINAL_82.addFollower(TERMINAL_89);
		TERMINAL_82.addFollower(TERMINAL_90);
		TERMINAL_82.addFollower(TERMINAL_91);
		TERMINAL_82.addFollower(TERMINAL_92);
		TERMINAL_82.addFollower(TERMINAL_93);
		TERMINAL_82.addFollower(TERMINAL_94);
		TERMINAL_82.addFollower(TERMINAL_95);
		TERMINAL_82.addFollower(TERMINAL_96);
		TERMINAL_82.addFollower(TERMINAL_97);
		TERMINAL_82.addFollower(TERMINAL_98);
		TERMINAL_82.addFollower(TERMINAL_99);
		TERMINAL_82.addFollower(TERMINAL_100);
		TERMINAL_82.addFollower(TERMINAL_101);
		TERMINAL_82.addFollower(TERMINAL_102);
		TERMINAL_82.addFollower(TERMINAL_103);
		TERMINAL_82.addFollower(TERMINAL_104);
		TERMINAL_82.addFollower(TERMINAL_105);
		TERMINAL_82.addFollower(TERMINAL_106);
		TERMINAL_82.addFollower(TERMINAL_107);
		TERMINAL_82.addFollower(TERMINAL_108);
		TERMINAL_82.addFollower(TERMINAL_109);
		TERMINAL_82.addFollower(TERMINAL_110);
		TERMINAL_82.addFollower(TERMINAL_111);
		TERMINAL_82.addFollower(TERMINAL_112);
		TERMINAL_82.addFollower(TERMINAL_113);
		TERMINAL_82.addFollower(TERMINAL_114);
		TERMINAL_82.addFollower(TERMINAL_115);
		TERMINAL_82.addFollower(TERMINAL_116);
		TERMINAL_82.addFollower(TERMINAL_117);
		TERMINAL_82.addFollower(TERMINAL_118);
		TERMINAL_82.addFollower(TERMINAL_119);
		TERMINAL_82.addFollower(TERMINAL_120);
		TERMINAL_82.addFollower(TERMINAL_121);
		TERMINAL_82.addFollower(TERMINAL_122);
		TERMINAL_82.addFollower(TERMINAL_123);
		TERMINAL_82.addFollower(TERMINAL_124);
		TERMINAL_82.addFollower(TERMINAL_125);
		TERMINAL_82.addFollower(TERMINAL_126);
		TERMINAL_82.addFollower(TERMINAL_127);
		TERMINAL_82.addFollower(TERMINAL_128);
		TERMINAL_82.addFollower(TERMINAL_129);
		TERMINAL_82.addFollower(TERMINAL_130);
		TERMINAL_82.addFollower(TERMINAL_131);
		TERMINAL_82.addFollower(TERMINAL_132);
		TERMINAL_82.addFollower(TERMINAL_133);
		TERMINAL_82.addFollower(TERMINAL_134);
		TERMINAL_82.addFollower(TERMINAL_135);
		TERMINAL_82.addFollower(TERMINAL_136);
		TERMINAL_82.addFollower(TERMINAL_137);
		TERMINAL_82.addFollower(TERMINAL_138);
		TERMINAL_82.addFollower(TERMINAL_139);
		TERMINAL_82.addFollower(TERMINAL_140);
		TERMINAL_82.addFollower(TERMINAL_141);
		TERMINAL_82.addFollower(TERMINAL_142);
		TERMINAL_82.addFollower(TERMINAL_143);
		TERMINAL_82.addFollower(TERMINAL_144);
		TERMINAL_82.addFollower(TERMINAL_145);
		TERMINAL_82.addFollower(TERMINAL_146);
		TERMINAL_22.addFollower(TERMINAL_147);
		TERMINAL_147.addFollower(TERMINAL_148);
		TERMINAL_148.addFollower(TERMINAL_149);
		TERMINAL_150.addFollower(TERMINAL_149);
		TERMINAL_150.addFollower(TERMINAL_151);
		TERMINAL_152.addFollower(TERMINAL_149);
		TERMINAL_152.addFollower(TERMINAL_151);
		TERMINAL_151.addFollower(TERMINAL_19);
		TERMINAL_151.addFollower(TERMINAL_20);
		TERMINAL_151.addFollower(TERMINAL_21);
		TERMINAL_151.addFollower(TERMINAL_22);
		TERMINAL_151.addFollower(TERMINAL_23);
		TERMINAL_151.addFollower(TERMINAL_24);
		TERMINAL_151.addFollower(TERMINAL_25);
		TERMINAL_151.addFollower(TERMINAL_26);
		TERMINAL_151.addFollower(TERMINAL_27);
		TERMINAL_151.addFollower(TERMINAL_28);
		TERMINAL_151.addFollower(TERMINAL_83);
		TERMINAL_151.addFollower(TERMINAL_84);
		TERMINAL_151.addFollower(TERMINAL_85);
		TERMINAL_151.addFollower(TERMINAL_86);
		TERMINAL_151.addFollower(TERMINAL_87);
		TERMINAL_151.addFollower(TERMINAL_88);
		TERMINAL_151.addFollower(TERMINAL_89);
		TERMINAL_151.addFollower(TERMINAL_90);
		TERMINAL_151.addFollower(TERMINAL_91);
		TERMINAL_151.addFollower(TERMINAL_92);
		TERMINAL_151.addFollower(TERMINAL_93);
		TERMINAL_151.addFollower(TERMINAL_94);
		TERMINAL_151.addFollower(TERMINAL_95);
		TERMINAL_151.addFollower(TERMINAL_96);
		TERMINAL_151.addFollower(TERMINAL_97);
		TERMINAL_151.addFollower(TERMINAL_98);
		TERMINAL_151.addFollower(TERMINAL_99);
		TERMINAL_151.addFollower(TERMINAL_100);
		TERMINAL_151.addFollower(TERMINAL_101);
		TERMINAL_151.addFollower(TERMINAL_102);
		TERMINAL_151.addFollower(TERMINAL_103);
		TERMINAL_151.addFollower(TERMINAL_104);
		TERMINAL_151.addFollower(TERMINAL_105);
		TERMINAL_151.addFollower(TERMINAL_106);
		TERMINAL_151.addFollower(TERMINAL_107);
		TERMINAL_151.addFollower(TERMINAL_108);
		TERMINAL_151.addFollower(TERMINAL_109);
		TERMINAL_151.addFollower(TERMINAL_110);
		TERMINAL_151.addFollower(TERMINAL_111);
		TERMINAL_151.addFollower(TERMINAL_112);
		TERMINAL_151.addFollower(TERMINAL_113);
		TERMINAL_151.addFollower(TERMINAL_114);
		TERMINAL_151.addFollower(TERMINAL_115);
		TERMINAL_151.addFollower(TERMINAL_116);
		TERMINAL_151.addFollower(TERMINAL_117);
		TERMINAL_151.addFollower(TERMINAL_118);
		TERMINAL_151.addFollower(TERMINAL_119);
		TERMINAL_151.addFollower(TERMINAL_120);
		TERMINAL_151.addFollower(TERMINAL_121);
		TERMINAL_151.addFollower(TERMINAL_122);
		TERMINAL_151.addFollower(TERMINAL_123);
		TERMINAL_151.addFollower(TERMINAL_124);
		TERMINAL_151.addFollower(TERMINAL_125);
		TERMINAL_151.addFollower(TERMINAL_126);
		TERMINAL_151.addFollower(TERMINAL_127);
		TERMINAL_151.addFollower(TERMINAL_128);
		TERMINAL_151.addFollower(TERMINAL_129);
		TERMINAL_151.addFollower(TERMINAL_130);
		TERMINAL_151.addFollower(TERMINAL_131);
		TERMINAL_151.addFollower(TERMINAL_132);
		TERMINAL_151.addFollower(TERMINAL_133);
		TERMINAL_151.addFollower(TERMINAL_134);
		TERMINAL_151.addFollower(TERMINAL_135);
		TERMINAL_151.addFollower(TERMINAL_136);
		TERMINAL_151.addFollower(TERMINAL_137);
		TERMINAL_151.addFollower(TERMINAL_138);
		TERMINAL_151.addFollower(TERMINAL_139);
		TERMINAL_151.addFollower(TERMINAL_140);
		TERMINAL_151.addFollower(TERMINAL_141);
		TERMINAL_151.addFollower(TERMINAL_142);
		TERMINAL_151.addFollower(TERMINAL_143);
		TERMINAL_151.addFollower(TERMINAL_144);
		TERMINAL_151.addFollower(TERMINAL_145);
		TERMINAL_151.addFollower(TERMINAL_146);
		TERMINAL_149.addFollower(TERMINAL_150);
		TERMINAL_8.addFollower(TERMINAL_153);
		TERMINAL_153.addFollower(TERMINAL_8);
		TERMINAL_153.addFollower(TERMINAL_5);
		TERMINAL_153.addFollower(TERMINAL_6);
		TERMINAL_153.addFollower(TERMINAL_7);
		TERMINAL_153.addFollower(TERMINAL_9);
		TERMINAL_153.addFollower(TERMINAL_41);
		TERMINAL_23.addFollower(TERMINAL_19);
		TERMINAL_23.addFollower(TERMINAL_20);
		TERMINAL_23.addFollower(TERMINAL_21);
		TERMINAL_23.addFollower(TERMINAL_22);
		TERMINAL_23.addFollower(TERMINAL_23);
		TERMINAL_23.addFollower(TERMINAL_24);
		TERMINAL_23.addFollower(TERMINAL_25);
		TERMINAL_23.addFollower(TERMINAL_26);
		TERMINAL_23.addFollower(TERMINAL_27);
		TERMINAL_23.addFollower(TERMINAL_28);
		TERMINAL_23.addFollower(TERMINAL_83);
		TERMINAL_23.addFollower(TERMINAL_84);
		TERMINAL_23.addFollower(TERMINAL_85);
		TERMINAL_23.addFollower(TERMINAL_86);
		TERMINAL_23.addFollower(TERMINAL_87);
		TERMINAL_23.addFollower(TERMINAL_88);
		TERMINAL_23.addFollower(TERMINAL_89);
		TERMINAL_23.addFollower(TERMINAL_90);
		TERMINAL_23.addFollower(TERMINAL_91);
		TERMINAL_23.addFollower(TERMINAL_92);
		TERMINAL_23.addFollower(TERMINAL_93);
		TERMINAL_23.addFollower(TERMINAL_94);
		TERMINAL_23.addFollower(TERMINAL_95);
		TERMINAL_23.addFollower(TERMINAL_96);
		TERMINAL_23.addFollower(TERMINAL_97);
		TERMINAL_23.addFollower(TERMINAL_98);
		TERMINAL_23.addFollower(TERMINAL_99);
		TERMINAL_23.addFollower(TERMINAL_100);
		TERMINAL_23.addFollower(TERMINAL_101);
		TERMINAL_23.addFollower(TERMINAL_102);
		TERMINAL_23.addFollower(TERMINAL_103);
		TERMINAL_23.addFollower(TERMINAL_104);
		TERMINAL_23.addFollower(TERMINAL_105);
		TERMINAL_23.addFollower(TERMINAL_106);
		TERMINAL_23.addFollower(TERMINAL_107);
		TERMINAL_23.addFollower(TERMINAL_108);
		TERMINAL_23.addFollower(TERMINAL_109);
		TERMINAL_23.addFollower(TERMINAL_110);
		TERMINAL_23.addFollower(TERMINAL_111);
		TERMINAL_23.addFollower(TERMINAL_112);
		TERMINAL_23.addFollower(TERMINAL_113);
		TERMINAL_23.addFollower(TERMINAL_114);
		TERMINAL_23.addFollower(TERMINAL_115);
		TERMINAL_23.addFollower(TERMINAL_116);
		TERMINAL_23.addFollower(TERMINAL_117);
		TERMINAL_23.addFollower(TERMINAL_118);
		TERMINAL_23.addFollower(TERMINAL_119);
		TERMINAL_23.addFollower(TERMINAL_120);
		TERMINAL_23.addFollower(TERMINAL_121);
		TERMINAL_23.addFollower(TERMINAL_122);
		TERMINAL_23.addFollower(TERMINAL_123);
		TERMINAL_23.addFollower(TERMINAL_124);
		TERMINAL_23.addFollower(TERMINAL_125);
		TERMINAL_23.addFollower(TERMINAL_126);
		TERMINAL_23.addFollower(TERMINAL_127);
		TERMINAL_23.addFollower(TERMINAL_128);
		TERMINAL_23.addFollower(TERMINAL_129);
		TERMINAL_23.addFollower(TERMINAL_130);
		TERMINAL_23.addFollower(TERMINAL_131);
		TERMINAL_23.addFollower(TERMINAL_132);
		TERMINAL_23.addFollower(TERMINAL_133);
		TERMINAL_23.addFollower(TERMINAL_134);
		TERMINAL_23.addFollower(TERMINAL_135);
		TERMINAL_23.addFollower(TERMINAL_136);
		TERMINAL_23.addFollower(TERMINAL_137);
		TERMINAL_23.addFollower(TERMINAL_138);
		TERMINAL_23.addFollower(TERMINAL_139);
		TERMINAL_23.addFollower(TERMINAL_140);
		TERMINAL_23.addFollower(TERMINAL_141);
		TERMINAL_23.addFollower(TERMINAL_142);
		TERMINAL_23.addFollower(TERMINAL_143);
		TERMINAL_23.addFollower(TERMINAL_144);
		TERMINAL_23.addFollower(TERMINAL_145);
		TERMINAL_23.addFollower(TERMINAL_146);
		TERMINAL_154.addFollower(TERMINAL_83);
		TERMINAL_154.addFollower(TERMINAL_84);
		TERMINAL_154.addFollower(TERMINAL_85);
		TERMINAL_154.addFollower(TERMINAL_86);
		TERMINAL_154.addFollower(TERMINAL_87);
		TERMINAL_154.addFollower(TERMINAL_88);
		TERMINAL_154.addFollower(TERMINAL_89);
		TERMINAL_154.addFollower(TERMINAL_90);
		TERMINAL_154.addFollower(TERMINAL_91);
		TERMINAL_154.addFollower(TERMINAL_92);
		TERMINAL_154.addFollower(TERMINAL_93);
		TERMINAL_154.addFollower(TERMINAL_94);
		TERMINAL_154.addFollower(TERMINAL_95);
		TERMINAL_154.addFollower(TERMINAL_96);
		TERMINAL_154.addFollower(TERMINAL_97);
		TERMINAL_154.addFollower(TERMINAL_98);
		TERMINAL_154.addFollower(TERMINAL_99);
		TERMINAL_154.addFollower(TERMINAL_100);
		TERMINAL_154.addFollower(TERMINAL_101);
		TERMINAL_154.addFollower(TERMINAL_102);
		TERMINAL_154.addFollower(TERMINAL_103);
		TERMINAL_154.addFollower(TERMINAL_104);
		TERMINAL_154.addFollower(TERMINAL_105);
		TERMINAL_154.addFollower(TERMINAL_106);
		TERMINAL_154.addFollower(TERMINAL_107);
		TERMINAL_154.addFollower(TERMINAL_108);
		TERMINAL_154.addFollower(TERMINAL_109);
		TERMINAL_154.addFollower(TERMINAL_110);
		TERMINAL_154.addFollower(TERMINAL_111);
		TERMINAL_154.addFollower(TERMINAL_112);
		TERMINAL_154.addFollower(TERMINAL_113);
		TERMINAL_154.addFollower(TERMINAL_114);
		TERMINAL_154.addFollower(TERMINAL_115);
		TERMINAL_154.addFollower(TERMINAL_116);
		TERMINAL_154.addFollower(TERMINAL_117);
		TERMINAL_154.addFollower(TERMINAL_118);
		TERMINAL_154.addFollower(TERMINAL_119);
		TERMINAL_154.addFollower(TERMINAL_120);
		TERMINAL_154.addFollower(TERMINAL_121);
		TERMINAL_154.addFollower(TERMINAL_122);
		TERMINAL_154.addFollower(TERMINAL_123);
		TERMINAL_154.addFollower(TERMINAL_124);
		TERMINAL_154.addFollower(TERMINAL_125);
		TERMINAL_154.addFollower(TERMINAL_126);
		TERMINAL_154.addFollower(TERMINAL_127);
		TERMINAL_154.addFollower(TERMINAL_128);
		TERMINAL_154.addFollower(TERMINAL_129);
		TERMINAL_154.addFollower(TERMINAL_130);
		TERMINAL_154.addFollower(TERMINAL_131);
		TERMINAL_154.addFollower(TERMINAL_132);
		TERMINAL_154.addFollower(TERMINAL_133);
		TERMINAL_154.addFollower(TERMINAL_134);
		TERMINAL_154.addFollower(TERMINAL_135);
		TERMINAL_154.addFollower(TERMINAL_136);
		TERMINAL_154.addFollower(TERMINAL_137);
		TERMINAL_154.addFollower(TERMINAL_138);
		TERMINAL_154.addFollower(TERMINAL_139);
		TERMINAL_154.addFollower(TERMINAL_140);
		TERMINAL_154.addFollower(TERMINAL_141);
		TERMINAL_154.addFollower(TERMINAL_142);
		TERMINAL_154.addFollower(TERMINAL_143);
		TERMINAL_154.addFollower(TERMINAL_144);
		TERMINAL_154.addFollower(TERMINAL_145);
		TERMINAL_154.addFollower(TERMINAL_146);
		TERMINAL_155.addFollower(TERMINAL_83);
		TERMINAL_155.addFollower(TERMINAL_84);
		TERMINAL_155.addFollower(TERMINAL_85);
		TERMINAL_155.addFollower(TERMINAL_86);
		TERMINAL_155.addFollower(TERMINAL_87);
		TERMINAL_155.addFollower(TERMINAL_88);
		TERMINAL_155.addFollower(TERMINAL_89);
		TERMINAL_155.addFollower(TERMINAL_90);
		TERMINAL_155.addFollower(TERMINAL_91);
		TERMINAL_155.addFollower(TERMINAL_92);
		TERMINAL_155.addFollower(TERMINAL_93);
		TERMINAL_155.addFollower(TERMINAL_94);
		TERMINAL_155.addFollower(TERMINAL_95);
		TERMINAL_155.addFollower(TERMINAL_96);
		TERMINAL_155.addFollower(TERMINAL_97);
		TERMINAL_155.addFollower(TERMINAL_98);
		TERMINAL_155.addFollower(TERMINAL_99);
		TERMINAL_155.addFollower(TERMINAL_100);
		TERMINAL_155.addFollower(TERMINAL_101);
		TERMINAL_155.addFollower(TERMINAL_102);
		TERMINAL_155.addFollower(TERMINAL_103);
		TERMINAL_155.addFollower(TERMINAL_104);
		TERMINAL_155.addFollower(TERMINAL_105);
		TERMINAL_155.addFollower(TERMINAL_106);
		TERMINAL_155.addFollower(TERMINAL_107);
		TERMINAL_155.addFollower(TERMINAL_108);
		TERMINAL_155.addFollower(TERMINAL_109);
		TERMINAL_155.addFollower(TERMINAL_110);
		TERMINAL_155.addFollower(TERMINAL_111);
		TERMINAL_155.addFollower(TERMINAL_112);
		TERMINAL_155.addFollower(TERMINAL_113);
		TERMINAL_155.addFollower(TERMINAL_114);
		TERMINAL_155.addFollower(TERMINAL_115);
		TERMINAL_155.addFollower(TERMINAL_116);
		TERMINAL_155.addFollower(TERMINAL_117);
		TERMINAL_155.addFollower(TERMINAL_118);
		TERMINAL_155.addFollower(TERMINAL_119);
		TERMINAL_155.addFollower(TERMINAL_120);
		TERMINAL_155.addFollower(TERMINAL_121);
		TERMINAL_155.addFollower(TERMINAL_122);
		TERMINAL_155.addFollower(TERMINAL_123);
		TERMINAL_155.addFollower(TERMINAL_124);
		TERMINAL_155.addFollower(TERMINAL_125);
		TERMINAL_155.addFollower(TERMINAL_126);
		TERMINAL_155.addFollower(TERMINAL_127);
		TERMINAL_155.addFollower(TERMINAL_128);
		TERMINAL_155.addFollower(TERMINAL_129);
		TERMINAL_155.addFollower(TERMINAL_130);
		TERMINAL_155.addFollower(TERMINAL_131);
		TERMINAL_155.addFollower(TERMINAL_132);
		TERMINAL_155.addFollower(TERMINAL_133);
		TERMINAL_155.addFollower(TERMINAL_134);
		TERMINAL_155.addFollower(TERMINAL_135);
		TERMINAL_155.addFollower(TERMINAL_136);
		TERMINAL_155.addFollower(TERMINAL_137);
		TERMINAL_155.addFollower(TERMINAL_138);
		TERMINAL_155.addFollower(TERMINAL_139);
		TERMINAL_155.addFollower(TERMINAL_140);
		TERMINAL_155.addFollower(TERMINAL_141);
		TERMINAL_155.addFollower(TERMINAL_142);
		TERMINAL_155.addFollower(TERMINAL_143);
		TERMINAL_155.addFollower(TERMINAL_144);
		TERMINAL_155.addFollower(TERMINAL_145);
		TERMINAL_155.addFollower(TERMINAL_146);
		TERMINAL_156.addFollower(TERMINAL_157);
		TERMINAL_157.addFollower(TERMINAL_158);
		TERMINAL_157.addFollower(TERMINAL_159);
		TERMINAL_157.addFollower(TERMINAL_160);
		TERMINAL_158.addFollower(TERMINAL_161);
		TERMINAL_161.addFollower(TERMINAL_162);
		TERMINAL_162.addFollower(TERMINAL_158);
		TERMINAL_162.addFollower(TERMINAL_159);
		TERMINAL_162.addFollower(TERMINAL_160);
		TERMINAL_159.addFollower(TERMINAL_163);
		TERMINAL_163.addFollower(TERMINAL_164);
		TERMINAL_4.addFollower(TERMINAL_165);
		TERMINAL_165.addFollower(TERMINAL_166);
		TERMINAL_165.addFollower(TERMINAL_167);
		TERMINAL_165.addFollower(TERMINAL_168);
		TERMINAL_166.addFollower(TERMINAL_169);
		TERMINAL_169.addFollower(TERMINAL_170);
		TERMINAL_170.addFollower(TERMINAL_166);
		TERMINAL_170.addFollower(TERMINAL_167);
		TERMINAL_170.addFollower(TERMINAL_168);
		TERMINAL_167.addFollower(TERMINAL_171);
		TERMINAL_171.addFollower(TERMINAL_164);
		TERMINAL_24.addFollower(TERMINAL_25);
		TERMINAL_25.addFollower(TERMINAL_172);
		TERMINAL_172.addFollower(TERMINAL_173);
		TERMINAL_172.addFollower(TERMINAL_174);
		TERMINAL_172.addFollower(TERMINAL_175);
		TERMINAL_172.addFollower(TERMINAL_176);
		TERMINAL_172.addFollower(TERMINAL_177);
		TERMINAL_172.addFollower(TERMINAL_178);
		TERMINAL_173.addFollower(TERMINAL_179);
		TERMINAL_179.addFollower(TERMINAL_180);
		TERMINAL_180.addFollower(TERMINAL_173);
		TERMINAL_180.addFollower(TERMINAL_174);
		TERMINAL_180.addFollower(TERMINAL_175);
		TERMINAL_180.addFollower(TERMINAL_176);
		TERMINAL_180.addFollower(TERMINAL_177);
		TERMINAL_180.addFollower(TERMINAL_178);
		TERMINAL_174.addFollower(TERMINAL_181);
		TERMINAL_181.addFollower(TERMINAL_164);
		TERMINAL_175.addFollower(TERMINAL_182);
		TERMINAL_182.addFollower(TERMINAL_183);
		TERMINAL_183.addFollower(TERMINAL_173);
		TERMINAL_183.addFollower(TERMINAL_174);
		TERMINAL_183.addFollower(TERMINAL_175);
		TERMINAL_183.addFollower(TERMINAL_176);
		TERMINAL_183.addFollower(TERMINAL_177);
		TERMINAL_183.addFollower(TERMINAL_178);
		TERMINAL_176.addFollower(TERMINAL_184);
		TERMINAL_184.addFollower(TERMINAL_185);
		TERMINAL_185.addFollower(TERMINAL_173);
		TERMINAL_185.addFollower(TERMINAL_174);
		TERMINAL_185.addFollower(TERMINAL_175);
		TERMINAL_185.addFollower(TERMINAL_176);
		TERMINAL_185.addFollower(TERMINAL_177);
		TERMINAL_185.addFollower(TERMINAL_178);
		TERMINAL_177.addFollower(TERMINAL_186);
		TERMINAL_186.addFollower(TERMINAL_187);
		TERMINAL_187.addFollower(TERMINAL_173);
		TERMINAL_187.addFollower(TERMINAL_174);
		TERMINAL_187.addFollower(TERMINAL_175);
		TERMINAL_187.addFollower(TERMINAL_176);
		TERMINAL_187.addFollower(TERMINAL_177);
		TERMINAL_187.addFollower(TERMINAL_178);
		TERMINAL_178.addFollower(TERMINAL_19);
		TERMINAL_178.addFollower(TERMINAL_20);
		TERMINAL_178.addFollower(TERMINAL_21);
		TERMINAL_178.addFollower(TERMINAL_22);
		TERMINAL_178.addFollower(TERMINAL_23);
		TERMINAL_178.addFollower(TERMINAL_24);
		TERMINAL_178.addFollower(TERMINAL_25);
		TERMINAL_178.addFollower(TERMINAL_26);
		TERMINAL_178.addFollower(TERMINAL_27);
		TERMINAL_178.addFollower(TERMINAL_28);
		TERMINAL_178.addFollower(TERMINAL_83);
		TERMINAL_178.addFollower(TERMINAL_84);
		TERMINAL_178.addFollower(TERMINAL_85);
		TERMINAL_178.addFollower(TERMINAL_86);
		TERMINAL_178.addFollower(TERMINAL_87);
		TERMINAL_178.addFollower(TERMINAL_88);
		TERMINAL_178.addFollower(TERMINAL_89);
		TERMINAL_178.addFollower(TERMINAL_90);
		TERMINAL_178.addFollower(TERMINAL_91);
		TERMINAL_178.addFollower(TERMINAL_92);
		TERMINAL_178.addFollower(TERMINAL_93);
		TERMINAL_178.addFollower(TERMINAL_94);
		TERMINAL_178.addFollower(TERMINAL_95);
		TERMINAL_178.addFollower(TERMINAL_96);
		TERMINAL_178.addFollower(TERMINAL_97);
		TERMINAL_178.addFollower(TERMINAL_98);
		TERMINAL_178.addFollower(TERMINAL_99);
		TERMINAL_178.addFollower(TERMINAL_100);
		TERMINAL_178.addFollower(TERMINAL_101);
		TERMINAL_178.addFollower(TERMINAL_102);
		TERMINAL_178.addFollower(TERMINAL_103);
		TERMINAL_178.addFollower(TERMINAL_104);
		TERMINAL_178.addFollower(TERMINAL_105);
		TERMINAL_178.addFollower(TERMINAL_106);
		TERMINAL_178.addFollower(TERMINAL_107);
		TERMINAL_178.addFollower(TERMINAL_108);
		TERMINAL_178.addFollower(TERMINAL_109);
		TERMINAL_178.addFollower(TERMINAL_110);
		TERMINAL_178.addFollower(TERMINAL_111);
		TERMINAL_178.addFollower(TERMINAL_112);
		TERMINAL_178.addFollower(TERMINAL_113);
		TERMINAL_178.addFollower(TERMINAL_114);
		TERMINAL_178.addFollower(TERMINAL_115);
		TERMINAL_178.addFollower(TERMINAL_116);
		TERMINAL_178.addFollower(TERMINAL_117);
		TERMINAL_178.addFollower(TERMINAL_118);
		TERMINAL_178.addFollower(TERMINAL_119);
		TERMINAL_178.addFollower(TERMINAL_120);
		TERMINAL_178.addFollower(TERMINAL_121);
		TERMINAL_178.addFollower(TERMINAL_122);
		TERMINAL_178.addFollower(TERMINAL_123);
		TERMINAL_178.addFollower(TERMINAL_124);
		TERMINAL_178.addFollower(TERMINAL_125);
		TERMINAL_178.addFollower(TERMINAL_126);
		TERMINAL_178.addFollower(TERMINAL_127);
		TERMINAL_178.addFollower(TERMINAL_128);
		TERMINAL_178.addFollower(TERMINAL_129);
		TERMINAL_178.addFollower(TERMINAL_130);
		TERMINAL_178.addFollower(TERMINAL_131);
		TERMINAL_178.addFollower(TERMINAL_132);
		TERMINAL_178.addFollower(TERMINAL_133);
		TERMINAL_178.addFollower(TERMINAL_134);
		TERMINAL_178.addFollower(TERMINAL_135);
		TERMINAL_178.addFollower(TERMINAL_136);
		TERMINAL_178.addFollower(TERMINAL_137);
		TERMINAL_178.addFollower(TERMINAL_138);
		TERMINAL_178.addFollower(TERMINAL_139);
		TERMINAL_178.addFollower(TERMINAL_140);
		TERMINAL_178.addFollower(TERMINAL_141);
		TERMINAL_178.addFollower(TERMINAL_142);
		TERMINAL_178.addFollower(TERMINAL_143);
		TERMINAL_178.addFollower(TERMINAL_144);
		TERMINAL_178.addFollower(TERMINAL_145);
		TERMINAL_178.addFollower(TERMINAL_146);
		TERMINAL_188.addFollower(TERMINAL_189);
	}
	public static void wire1() {
		TERMINAL_189.addFollower(TERMINAL_83);
		TERMINAL_189.addFollower(TERMINAL_84);
		TERMINAL_189.addFollower(TERMINAL_85);
		TERMINAL_189.addFollower(TERMINAL_86);
		TERMINAL_189.addFollower(TERMINAL_87);
		TERMINAL_189.addFollower(TERMINAL_88);
		TERMINAL_83.addFollower(TERMINAL_190);
		TERMINAL_190.addFollower(TERMINAL_191);
		TERMINAL_191.addFollower(TERMINAL_83);
		TERMINAL_191.addFollower(TERMINAL_84);
		TERMINAL_191.addFollower(TERMINAL_85);
		TERMINAL_191.addFollower(TERMINAL_86);
		TERMINAL_191.addFollower(TERMINAL_87);
		TERMINAL_191.addFollower(TERMINAL_88);
		TERMINAL_84.addFollower(TERMINAL_192);
		TERMINAL_192.addFollower(TERMINAL_164);
		TERMINAL_85.addFollower(TERMINAL_193);
		TERMINAL_193.addFollower(TERMINAL_82);
		TERMINAL_193.addFollower(TERMINAL_22);
		TERMINAL_193.addFollower(TERMINAL_23);
		TERMINAL_193.addFollower(TERMINAL_154);
		TERMINAL_193.addFollower(TERMINAL_155);
		TERMINAL_193.addFollower(TERMINAL_24);
		TERMINAL_193.addFollower(TERMINAL_25);
		TERMINAL_193.addFollower(TERMINAL_194);
		TERMINAL_193.addFollower(TERMINAL_195);
		TERMINAL_193.addFollower(TERMINAL_196);
		TERMINAL_193.addFollower(TERMINAL_197);
		TERMINAL_193.addFollower(TERMINAL_198);
		TERMINAL_86.addFollower(TERMINAL_199);
		TERMINAL_199.addFollower(TERMINAL_200);
		TERMINAL_200.addFollower(TERMINAL_83);
		TERMINAL_200.addFollower(TERMINAL_84);
		TERMINAL_200.addFollower(TERMINAL_85);
		TERMINAL_200.addFollower(TERMINAL_86);
		TERMINAL_200.addFollower(TERMINAL_87);
		TERMINAL_200.addFollower(TERMINAL_88);
		TERMINAL_87.addFollower(TERMINAL_201);
		TERMINAL_201.addFollower(TERMINAL_202);
		TERMINAL_202.addFollower(TERMINAL_83);
		TERMINAL_202.addFollower(TERMINAL_84);
		TERMINAL_202.addFollower(TERMINAL_85);
		TERMINAL_202.addFollower(TERMINAL_86);
		TERMINAL_202.addFollower(TERMINAL_87);
		TERMINAL_202.addFollower(TERMINAL_88);
		TERMINAL_88.addFollower(TERMINAL_112);
		TERMINAL_88.addFollower(TERMINAL_113);
		TERMINAL_88.addFollower(TERMINAL_114);
		TERMINAL_88.addFollower(TERMINAL_115);
		TERMINAL_88.addFollower(TERMINAL_116);
		TERMINAL_88.addFollower(TERMINAL_117);
		TERMINAL_88.addFollower(TERMINAL_118);
		TERMINAL_88.addFollower(TERMINAL_119);
		TERMINAL_88.addFollower(TERMINAL_120);
		TERMINAL_88.addFollower(TERMINAL_121);
		TERMINAL_11.addFollower(TERMINAL_12);
		TERMINAL_11.addFollower(TERMINAL_13);
		TERMINAL_12.addFollower(TERMINAL_13);
		TERMINAL_13.addFollower(TERMINAL_203);
		TERMINAL_203.addFollower(TERMINAL_89);
		TERMINAL_203.addFollower(TERMINAL_90);
		TERMINAL_203.addFollower(TERMINAL_91);
		TERMINAL_203.addFollower(TERMINAL_92);
		TERMINAL_203.addFollower(TERMINAL_93);
		TERMINAL_203.addFollower(TERMINAL_94);
		TERMINAL_203.addFollower(TERMINAL_95);
		TERMINAL_203.addFollower(TERMINAL_96);
		TERMINAL_89.addFollower(TERMINAL_204);
		TERMINAL_204.addFollower(TERMINAL_205);
		TERMINAL_205.addFollower(TERMINAL_89);
		TERMINAL_205.addFollower(TERMINAL_90);
		TERMINAL_205.addFollower(TERMINAL_91);
		TERMINAL_205.addFollower(TERMINAL_92);
		TERMINAL_205.addFollower(TERMINAL_93);
		TERMINAL_205.addFollower(TERMINAL_94);
		TERMINAL_205.addFollower(TERMINAL_95);
		TERMINAL_205.addFollower(TERMINAL_96);
		TERMINAL_90.addFollower(TERMINAL_206);
		TERMINAL_206.addFollower(TERMINAL_164);
		TERMINAL_91.addFollower(TERMINAL_207);
		TERMINAL_207.addFollower(TERMINAL_82);
		TERMINAL_207.addFollower(TERMINAL_22);
		TERMINAL_207.addFollower(TERMINAL_23);
		TERMINAL_207.addFollower(TERMINAL_154);
		TERMINAL_207.addFollower(TERMINAL_155);
		TERMINAL_207.addFollower(TERMINAL_24);
		TERMINAL_207.addFollower(TERMINAL_25);
		TERMINAL_207.addFollower(TERMINAL_194);
		TERMINAL_207.addFollower(TERMINAL_195);
		TERMINAL_207.addFollower(TERMINAL_196);
		TERMINAL_207.addFollower(TERMINAL_197);
		TERMINAL_207.addFollower(TERMINAL_198);
		TERMINAL_92.addFollower(TERMINAL_208);
		TERMINAL_208.addFollower(TERMINAL_209);
		TERMINAL_209.addFollower(TERMINAL_89);
		TERMINAL_209.addFollower(TERMINAL_90);
		TERMINAL_209.addFollower(TERMINAL_91);
		TERMINAL_209.addFollower(TERMINAL_92);
		TERMINAL_209.addFollower(TERMINAL_93);
		TERMINAL_209.addFollower(TERMINAL_94);
		TERMINAL_209.addFollower(TERMINAL_95);
		TERMINAL_209.addFollower(TERMINAL_96);
		TERMINAL_93.addFollower(TERMINAL_210);
		TERMINAL_210.addFollower(TERMINAL_211);
		TERMINAL_211.addFollower(TERMINAL_89);
		TERMINAL_211.addFollower(TERMINAL_90);
		TERMINAL_211.addFollower(TERMINAL_91);
		TERMINAL_211.addFollower(TERMINAL_92);
		TERMINAL_211.addFollower(TERMINAL_93);
		TERMINAL_211.addFollower(TERMINAL_94);
		TERMINAL_211.addFollower(TERMINAL_95);
		TERMINAL_211.addFollower(TERMINAL_96);
		TERMINAL_94.addFollower(TERMINAL_212);
		TERMINAL_212.addFollower(TERMINAL_213);
		TERMINAL_213.addFollower(TERMINAL_89);
		TERMINAL_213.addFollower(TERMINAL_90);
		TERMINAL_213.addFollower(TERMINAL_91);
		TERMINAL_213.addFollower(TERMINAL_92);
		TERMINAL_213.addFollower(TERMINAL_93);
		TERMINAL_213.addFollower(TERMINAL_94);
		TERMINAL_213.addFollower(TERMINAL_95);
		TERMINAL_213.addFollower(TERMINAL_96);
		TERMINAL_95.addFollower(TERMINAL_214);
		TERMINAL_214.addFollower(TERMINAL_215);
		TERMINAL_215.addFollower(TERMINAL_89);
		TERMINAL_215.addFollower(TERMINAL_90);
		TERMINAL_215.addFollower(TERMINAL_91);
		TERMINAL_215.addFollower(TERMINAL_92);
		TERMINAL_215.addFollower(TERMINAL_93);
		TERMINAL_215.addFollower(TERMINAL_94);
		TERMINAL_215.addFollower(TERMINAL_95);
		TERMINAL_215.addFollower(TERMINAL_96);
		TERMINAL_26.addFollower(TERMINAL_27);
		TERMINAL_27.addFollower(TERMINAL_216);
		TERMINAL_216.addFollower(TERMINAL_217);
		TERMINAL_216.addFollower(TERMINAL_218);
		TERMINAL_216.addFollower(TERMINAL_219);
		TERMINAL_216.addFollower(TERMINAL_220);
		TERMINAL_217.addFollower(TERMINAL_221);
		TERMINAL_221.addFollower(TERMINAL_222);
		TERMINAL_222.addFollower(TERMINAL_217);
		TERMINAL_222.addFollower(TERMINAL_218);
		TERMINAL_222.addFollower(TERMINAL_219);
		TERMINAL_222.addFollower(TERMINAL_220);
		TERMINAL_218.addFollower(TERMINAL_223);
		TERMINAL_223.addFollower(TERMINAL_164);
		TERMINAL_219.addFollower(TERMINAL_224);
		TERMINAL_224.addFollower(TERMINAL_225);
		TERMINAL_225.addFollower(TERMINAL_217);
		TERMINAL_225.addFollower(TERMINAL_218);
		TERMINAL_225.addFollower(TERMINAL_219);
		TERMINAL_225.addFollower(TERMINAL_220);
		TERMINAL_220.addFollower(TERMINAL_19);
		TERMINAL_220.addFollower(TERMINAL_20);
		TERMINAL_220.addFollower(TERMINAL_21);
		TERMINAL_220.addFollower(TERMINAL_22);
		TERMINAL_220.addFollower(TERMINAL_23);
		TERMINAL_220.addFollower(TERMINAL_24);
		TERMINAL_220.addFollower(TERMINAL_25);
		TERMINAL_220.addFollower(TERMINAL_26);
		TERMINAL_220.addFollower(TERMINAL_27);
		TERMINAL_220.addFollower(TERMINAL_28);
		TERMINAL_164.addFollower(TERMINAL_226);
		TERMINAL_226.addFollower(TERMINAL_227);
		TERMINAL_226.addFollower(TERMINAL_228);
		TERMINAL_226.addFollower(TERMINAL_229);
		TERMINAL_226.addFollower(TERMINAL_230);
		TERMINAL_226.addFollower(TERMINAL_231);
		TERMINAL_226.addFollower(TERMINAL_232);
		TERMINAL_227.addFollower(TERMINAL_233);
		TERMINAL_233.addFollower(TERMINAL_234);
		TERMINAL_234.addFollower(TERMINAL_227);
		TERMINAL_234.addFollower(TERMINAL_228);
		TERMINAL_234.addFollower(TERMINAL_229);
		TERMINAL_234.addFollower(TERMINAL_230);
		TERMINAL_234.addFollower(TERMINAL_231);
		TERMINAL_234.addFollower(TERMINAL_232);
		TERMINAL_228.addFollower(TERMINAL_235);
		TERMINAL_235.addFollower(TERMINAL_164);
		TERMINAL_229.addFollower(TERMINAL_236);
		TERMINAL_236.addFollower(TERMINAL_237);
		TERMINAL_237.addFollower(TERMINAL_227);
		TERMINAL_237.addFollower(TERMINAL_228);
		TERMINAL_237.addFollower(TERMINAL_229);
		TERMINAL_237.addFollower(TERMINAL_230);
		TERMINAL_237.addFollower(TERMINAL_231);
		TERMINAL_237.addFollower(TERMINAL_232);
		TERMINAL_230.addFollower(TERMINAL_238);
		TERMINAL_238.addFollower(TERMINAL_239);
		TERMINAL_239.addFollower(TERMINAL_227);
		TERMINAL_239.addFollower(TERMINAL_228);
		TERMINAL_239.addFollower(TERMINAL_229);
		TERMINAL_239.addFollower(TERMINAL_230);
		TERMINAL_239.addFollower(TERMINAL_231);
		TERMINAL_239.addFollower(TERMINAL_232);
		TERMINAL_231.addFollower(TERMINAL_240);
		TERMINAL_240.addFollower(TERMINAL_241);
		TERMINAL_241.addFollower(TERMINAL_227);
		TERMINAL_241.addFollower(TERMINAL_228);
		TERMINAL_241.addFollower(TERMINAL_229);
		TERMINAL_241.addFollower(TERMINAL_230);
		TERMINAL_241.addFollower(TERMINAL_231);
		TERMINAL_241.addFollower(TERMINAL_232);
		TERMINAL_232.addFollower(TERMINAL_158);
		TERMINAL_232.addFollower(TERMINAL_159);
		TERMINAL_232.addFollower(TERMINAL_160);
		TERMINAL_232.addFollower(TERMINAL_166);
		TERMINAL_232.addFollower(TERMINAL_167);
		TERMINAL_232.addFollower(TERMINAL_168);
		TERMINAL_232.addFollower(TERMINAL_173);
		TERMINAL_232.addFollower(TERMINAL_174);
		TERMINAL_232.addFollower(TERMINAL_175);
		TERMINAL_232.addFollower(TERMINAL_176);
		TERMINAL_232.addFollower(TERMINAL_177);
		TERMINAL_232.addFollower(TERMINAL_178);
		TERMINAL_232.addFollower(TERMINAL_83);
		TERMINAL_232.addFollower(TERMINAL_84);
		TERMINAL_232.addFollower(TERMINAL_85);
		TERMINAL_232.addFollower(TERMINAL_86);
		TERMINAL_232.addFollower(TERMINAL_87);
		TERMINAL_232.addFollower(TERMINAL_88);
		TERMINAL_232.addFollower(TERMINAL_89);
		TERMINAL_232.addFollower(TERMINAL_90);
		TERMINAL_232.addFollower(TERMINAL_91);
		TERMINAL_232.addFollower(TERMINAL_92);
		TERMINAL_232.addFollower(TERMINAL_93);
		TERMINAL_232.addFollower(TERMINAL_94);
		TERMINAL_232.addFollower(TERMINAL_95);
		TERMINAL_232.addFollower(TERMINAL_96);
		TERMINAL_232.addFollower(TERMINAL_217);
		TERMINAL_232.addFollower(TERMINAL_218);
		TERMINAL_232.addFollower(TERMINAL_219);
		TERMINAL_232.addFollower(TERMINAL_220);
		TERMINAL_232.addFollower(TERMINAL_227);
		TERMINAL_232.addFollower(TERMINAL_228);
		TERMINAL_232.addFollower(TERMINAL_229);
		TERMINAL_232.addFollower(TERMINAL_230);
		TERMINAL_232.addFollower(TERMINAL_231);
		TERMINAL_232.addFollower(TERMINAL_232);
		TERMINAL_232.addFollower(TERMINAL_97);
		TERMINAL_232.addFollower(TERMINAL_98);
		TERMINAL_232.addFollower(TERMINAL_99);
		TERMINAL_232.addFollower(TERMINAL_100);
		TERMINAL_232.addFollower(TERMINAL_101);
		TERMINAL_232.addFollower(TERMINAL_102);
		TERMINAL_232.addFollower(TERMINAL_103);
		TERMINAL_232.addFollower(TERMINAL_104);
		TERMINAL_232.addFollower(TERMINAL_105);
		TERMINAL_232.addFollower(TERMINAL_106);
		TERMINAL_232.addFollower(TERMINAL_107);
		TERMINAL_232.addFollower(TERMINAL_108);
		TERMINAL_232.addFollower(TERMINAL_109);
		TERMINAL_232.addFollower(TERMINAL_110);
		TERMINAL_232.addFollower(TERMINAL_111);
		TERMINAL_232.addFollower(TERMINAL_112);
		TERMINAL_232.addFollower(TERMINAL_113);
		TERMINAL_232.addFollower(TERMINAL_114);
		TERMINAL_232.addFollower(TERMINAL_115);
		TERMINAL_232.addFollower(TERMINAL_116);
		TERMINAL_232.addFollower(TERMINAL_117);
		TERMINAL_232.addFollower(TERMINAL_118);
		TERMINAL_232.addFollower(TERMINAL_119);
		TERMINAL_232.addFollower(TERMINAL_120);
		TERMINAL_232.addFollower(TERMINAL_121);
		TERMINAL_232.addFollower(TERMINAL_122);
		TERMINAL_232.addFollower(TERMINAL_123);
		TERMINAL_232.addFollower(TERMINAL_124);
		TERMINAL_232.addFollower(TERMINAL_125);
		TERMINAL_232.addFollower(TERMINAL_126);
		TERMINAL_232.addFollower(TERMINAL_127);
		TERMINAL_232.addFollower(TERMINAL_128);
		TERMINAL_232.addFollower(TERMINAL_129);
		TERMINAL_232.addFollower(TERMINAL_130);
		TERMINAL_232.addFollower(TERMINAL_131);
		TERMINAL_232.addFollower(TERMINAL_132);
		TERMINAL_232.addFollower(TERMINAL_133);
		TERMINAL_232.addFollower(TERMINAL_134);
		TERMINAL_232.addFollower(TERMINAL_135);
		TERMINAL_232.addFollower(TERMINAL_136);
		TERMINAL_232.addFollower(TERMINAL_137);
		TERMINAL_232.addFollower(TERMINAL_138);
		TERMINAL_232.addFollower(TERMINAL_139);
		TERMINAL_232.addFollower(TERMINAL_140);
		TERMINAL_232.addFollower(TERMINAL_141);
		TERMINAL_232.addFollower(TERMINAL_142);
		TERMINAL_232.addFollower(TERMINAL_143);
		TERMINAL_232.addFollower(TERMINAL_144);
		TERMINAL_232.addFollower(TERMINAL_145);
		TERMINAL_232.addFollower(TERMINAL_146);
		TERMINAL_232.addFollower(TERMINAL_242);
		TERMINAL_232.addFollower(TERMINAL_243);
		TERMINAL_232.addFollower(TERMINAL_244);
		TERMINAL_232.addFollower(TERMINAL_245);
		TERMINAL_232.addFollower(TERMINAL_246);
		TERMINAL_194.addFollower(TERMINAL_247);
		TERMINAL_247.addFollower(TERMINAL_97);
		TERMINAL_247.addFollower(TERMINAL_98);
		TERMINAL_247.addFollower(TERMINAL_99);
		TERMINAL_247.addFollower(TERMINAL_100);
		TERMINAL_247.addFollower(TERMINAL_101);
		TERMINAL_247.addFollower(TERMINAL_102);
		TERMINAL_247.addFollower(TERMINAL_103);
		TERMINAL_97.addFollower(TERMINAL_248);
		TERMINAL_248.addFollower(TERMINAL_249);
		TERMINAL_249.addFollower(TERMINAL_97);
		TERMINAL_249.addFollower(TERMINAL_98);
		TERMINAL_249.addFollower(TERMINAL_99);
		TERMINAL_249.addFollower(TERMINAL_100);
		TERMINAL_249.addFollower(TERMINAL_101);
		TERMINAL_249.addFollower(TERMINAL_102);
		TERMINAL_249.addFollower(TERMINAL_103);
		TERMINAL_98.addFollower(TERMINAL_250);
		TERMINAL_250.addFollower(TERMINAL_164);
		TERMINAL_99.addFollower(TERMINAL_251);
		TERMINAL_251.addFollower(TERMINAL_82);
		TERMINAL_251.addFollower(TERMINAL_22);
		TERMINAL_251.addFollower(TERMINAL_23);
		TERMINAL_251.addFollower(TERMINAL_154);
		TERMINAL_251.addFollower(TERMINAL_155);
		TERMINAL_251.addFollower(TERMINAL_24);
		TERMINAL_251.addFollower(TERMINAL_25);
		TERMINAL_251.addFollower(TERMINAL_194);
		TERMINAL_251.addFollower(TERMINAL_195);
		TERMINAL_251.addFollower(TERMINAL_196);
		TERMINAL_251.addFollower(TERMINAL_197);
		TERMINAL_251.addFollower(TERMINAL_198);
		TERMINAL_100.addFollower(TERMINAL_252);
		TERMINAL_252.addFollower(TERMINAL_253);
		TERMINAL_253.addFollower(TERMINAL_97);
		TERMINAL_253.addFollower(TERMINAL_98);
		TERMINAL_253.addFollower(TERMINAL_99);
		TERMINAL_253.addFollower(TERMINAL_100);
		TERMINAL_253.addFollower(TERMINAL_101);
		TERMINAL_253.addFollower(TERMINAL_102);
		TERMINAL_253.addFollower(TERMINAL_103);
		TERMINAL_101.addFollower(TERMINAL_254);
		TERMINAL_254.addFollower(TERMINAL_255);
		TERMINAL_255.addFollower(TERMINAL_97);
		TERMINAL_255.addFollower(TERMINAL_98);
		TERMINAL_255.addFollower(TERMINAL_99);
		TERMINAL_255.addFollower(TERMINAL_100);
		TERMINAL_255.addFollower(TERMINAL_101);
		TERMINAL_255.addFollower(TERMINAL_102);
		TERMINAL_255.addFollower(TERMINAL_103);
		TERMINAL_102.addFollower(TERMINAL_256);
		TERMINAL_256.addFollower(TERMINAL_257);
		TERMINAL_257.addFollower(TERMINAL_97);
		TERMINAL_257.addFollower(TERMINAL_98);
		TERMINAL_257.addFollower(TERMINAL_99);
		TERMINAL_257.addFollower(TERMINAL_100);
		TERMINAL_257.addFollower(TERMINAL_101);
		TERMINAL_257.addFollower(TERMINAL_102);
		TERMINAL_257.addFollower(TERMINAL_103);
		TERMINAL_103.addFollower(TERMINAL_83);
		TERMINAL_103.addFollower(TERMINAL_84);
		TERMINAL_103.addFollower(TERMINAL_85);
		TERMINAL_103.addFollower(TERMINAL_86);
		TERMINAL_103.addFollower(TERMINAL_87);
		TERMINAL_103.addFollower(TERMINAL_88);
		TERMINAL_103.addFollower(TERMINAL_89);
		TERMINAL_103.addFollower(TERMINAL_90);
		TERMINAL_103.addFollower(TERMINAL_91);
		TERMINAL_103.addFollower(TERMINAL_92);
		TERMINAL_103.addFollower(TERMINAL_93);
		TERMINAL_103.addFollower(TERMINAL_94);
		TERMINAL_103.addFollower(TERMINAL_95);
		TERMINAL_103.addFollower(TERMINAL_96);
		TERMINAL_103.addFollower(TERMINAL_97);
		TERMINAL_103.addFollower(TERMINAL_98);
		TERMINAL_103.addFollower(TERMINAL_99);
		TERMINAL_103.addFollower(TERMINAL_100);
		TERMINAL_103.addFollower(TERMINAL_101);
		TERMINAL_103.addFollower(TERMINAL_102);
		TERMINAL_103.addFollower(TERMINAL_103);
		TERMINAL_103.addFollower(TERMINAL_104);
		TERMINAL_103.addFollower(TERMINAL_105);
		TERMINAL_103.addFollower(TERMINAL_106);
		TERMINAL_103.addFollower(TERMINAL_107);
		TERMINAL_103.addFollower(TERMINAL_108);
		TERMINAL_103.addFollower(TERMINAL_109);
		TERMINAL_103.addFollower(TERMINAL_110);
		TERMINAL_103.addFollower(TERMINAL_111);
		TERMINAL_103.addFollower(TERMINAL_112);
		TERMINAL_103.addFollower(TERMINAL_113);
		TERMINAL_103.addFollower(TERMINAL_114);
		TERMINAL_103.addFollower(TERMINAL_115);
		TERMINAL_103.addFollower(TERMINAL_116);
		TERMINAL_103.addFollower(TERMINAL_117);
		TERMINAL_103.addFollower(TERMINAL_118);
		TERMINAL_103.addFollower(TERMINAL_119);
		TERMINAL_103.addFollower(TERMINAL_120);
		TERMINAL_103.addFollower(TERMINAL_121);
		TERMINAL_103.addFollower(TERMINAL_122);
		TERMINAL_103.addFollower(TERMINAL_123);
		TERMINAL_103.addFollower(TERMINAL_124);
		TERMINAL_103.addFollower(TERMINAL_125);
		TERMINAL_103.addFollower(TERMINAL_126);
		TERMINAL_103.addFollower(TERMINAL_127);
		TERMINAL_103.addFollower(TERMINAL_128);
		TERMINAL_103.addFollower(TERMINAL_129);
		TERMINAL_103.addFollower(TERMINAL_130);
		TERMINAL_103.addFollower(TERMINAL_131);
		TERMINAL_103.addFollower(TERMINAL_132);
		TERMINAL_103.addFollower(TERMINAL_133);
		TERMINAL_103.addFollower(TERMINAL_134);
		TERMINAL_103.addFollower(TERMINAL_135);
		TERMINAL_103.addFollower(TERMINAL_136);
		TERMINAL_103.addFollower(TERMINAL_137);
		TERMINAL_103.addFollower(TERMINAL_138);
		TERMINAL_103.addFollower(TERMINAL_139);
		TERMINAL_103.addFollower(TERMINAL_140);
		TERMINAL_103.addFollower(TERMINAL_141);
		TERMINAL_103.addFollower(TERMINAL_142);
		TERMINAL_103.addFollower(TERMINAL_143);
		TERMINAL_103.addFollower(TERMINAL_144);
		TERMINAL_103.addFollower(TERMINAL_145);
		TERMINAL_103.addFollower(TERMINAL_146);
		TERMINAL_195.addFollower(TERMINAL_258);
		TERMINAL_258.addFollower(TERMINAL_104);
		TERMINAL_258.addFollower(TERMINAL_105);
		TERMINAL_258.addFollower(TERMINAL_106);
		TERMINAL_258.addFollower(TERMINAL_107);
		TERMINAL_258.addFollower(TERMINAL_108);
		TERMINAL_258.addFollower(TERMINAL_109);
		TERMINAL_258.addFollower(TERMINAL_110);
		TERMINAL_258.addFollower(TERMINAL_111);
		TERMINAL_104.addFollower(TERMINAL_259);
		TERMINAL_259.addFollower(TERMINAL_260);
		TERMINAL_260.addFollower(TERMINAL_104);
		TERMINAL_260.addFollower(TERMINAL_105);
		TERMINAL_260.addFollower(TERMINAL_106);
		TERMINAL_260.addFollower(TERMINAL_107);
		TERMINAL_260.addFollower(TERMINAL_108);
		TERMINAL_260.addFollower(TERMINAL_109);
		TERMINAL_260.addFollower(TERMINAL_110);
		TERMINAL_260.addFollower(TERMINAL_111);
		TERMINAL_105.addFollower(TERMINAL_261);
		TERMINAL_261.addFollower(TERMINAL_164);
		TERMINAL_106.addFollower(TERMINAL_262);
		TERMINAL_262.addFollower(TERMINAL_82);
		TERMINAL_262.addFollower(TERMINAL_22);
		TERMINAL_262.addFollower(TERMINAL_23);
		TERMINAL_262.addFollower(TERMINAL_154);
		TERMINAL_262.addFollower(TERMINAL_155);
		TERMINAL_262.addFollower(TERMINAL_24);
		TERMINAL_262.addFollower(TERMINAL_25);
		TERMINAL_262.addFollower(TERMINAL_194);
		TERMINAL_262.addFollower(TERMINAL_195);
		TERMINAL_262.addFollower(TERMINAL_196);
		TERMINAL_262.addFollower(TERMINAL_197);
		TERMINAL_262.addFollower(TERMINAL_198);
		TERMINAL_107.addFollower(TERMINAL_263);
		TERMINAL_263.addFollower(TERMINAL_264);
		TERMINAL_264.addFollower(TERMINAL_104);
		TERMINAL_264.addFollower(TERMINAL_105);
		TERMINAL_264.addFollower(TERMINAL_106);
		TERMINAL_264.addFollower(TERMINAL_107);
		TERMINAL_264.addFollower(TERMINAL_108);
		TERMINAL_264.addFollower(TERMINAL_109);
		TERMINAL_264.addFollower(TERMINAL_110);
		TERMINAL_264.addFollower(TERMINAL_111);
		TERMINAL_108.addFollower(TERMINAL_265);
	}
	public static void wire2() {
		TERMINAL_265.addFollower(TERMINAL_266);
		TERMINAL_266.addFollower(TERMINAL_104);
		TERMINAL_266.addFollower(TERMINAL_105);
		TERMINAL_266.addFollower(TERMINAL_106);
		TERMINAL_266.addFollower(TERMINAL_107);
		TERMINAL_266.addFollower(TERMINAL_108);
		TERMINAL_266.addFollower(TERMINAL_109);
		TERMINAL_266.addFollower(TERMINAL_110);
		TERMINAL_266.addFollower(TERMINAL_111);
		TERMINAL_109.addFollower(TERMINAL_267);
		TERMINAL_267.addFollower(TERMINAL_268);
		TERMINAL_268.addFollower(TERMINAL_104);
		TERMINAL_268.addFollower(TERMINAL_105);
		TERMINAL_268.addFollower(TERMINAL_106);
		TERMINAL_268.addFollower(TERMINAL_107);
		TERMINAL_268.addFollower(TERMINAL_108);
		TERMINAL_268.addFollower(TERMINAL_109);
		TERMINAL_268.addFollower(TERMINAL_110);
		TERMINAL_268.addFollower(TERMINAL_111);
		TERMINAL_110.addFollower(TERMINAL_269);
		TERMINAL_269.addFollower(TERMINAL_196);
		TERMINAL_111.addFollower(TERMINAL_83);
		TERMINAL_111.addFollower(TERMINAL_84);
		TERMINAL_111.addFollower(TERMINAL_85);
		TERMINAL_111.addFollower(TERMINAL_86);
		TERMINAL_111.addFollower(TERMINAL_87);
		TERMINAL_111.addFollower(TERMINAL_88);
		TERMINAL_111.addFollower(TERMINAL_89);
		TERMINAL_111.addFollower(TERMINAL_90);
		TERMINAL_111.addFollower(TERMINAL_91);
		TERMINAL_111.addFollower(TERMINAL_92);
		TERMINAL_111.addFollower(TERMINAL_93);
		TERMINAL_111.addFollower(TERMINAL_94);
		TERMINAL_111.addFollower(TERMINAL_95);
		TERMINAL_111.addFollower(TERMINAL_96);
		TERMINAL_111.addFollower(TERMINAL_97);
		TERMINAL_111.addFollower(TERMINAL_98);
		TERMINAL_111.addFollower(TERMINAL_99);
		TERMINAL_111.addFollower(TERMINAL_100);
		TERMINAL_111.addFollower(TERMINAL_101);
		TERMINAL_111.addFollower(TERMINAL_102);
		TERMINAL_111.addFollower(TERMINAL_103);
		TERMINAL_111.addFollower(TERMINAL_104);
		TERMINAL_111.addFollower(TERMINAL_105);
		TERMINAL_111.addFollower(TERMINAL_106);
		TERMINAL_111.addFollower(TERMINAL_107);
		TERMINAL_111.addFollower(TERMINAL_108);
		TERMINAL_111.addFollower(TERMINAL_109);
		TERMINAL_111.addFollower(TERMINAL_110);
		TERMINAL_111.addFollower(TERMINAL_111);
		TERMINAL_111.addFollower(TERMINAL_112);
		TERMINAL_111.addFollower(TERMINAL_113);
		TERMINAL_111.addFollower(TERMINAL_114);
		TERMINAL_111.addFollower(TERMINAL_115);
		TERMINAL_111.addFollower(TERMINAL_116);
		TERMINAL_111.addFollower(TERMINAL_117);
		TERMINAL_111.addFollower(TERMINAL_118);
		TERMINAL_111.addFollower(TERMINAL_119);
		TERMINAL_111.addFollower(TERMINAL_120);
		TERMINAL_111.addFollower(TERMINAL_121);
		TERMINAL_111.addFollower(TERMINAL_122);
		TERMINAL_111.addFollower(TERMINAL_123);
		TERMINAL_111.addFollower(TERMINAL_124);
		TERMINAL_111.addFollower(TERMINAL_125);
		TERMINAL_111.addFollower(TERMINAL_126);
		TERMINAL_111.addFollower(TERMINAL_127);
		TERMINAL_111.addFollower(TERMINAL_128);
		TERMINAL_111.addFollower(TERMINAL_129);
		TERMINAL_111.addFollower(TERMINAL_130);
		TERMINAL_111.addFollower(TERMINAL_131);
		TERMINAL_111.addFollower(TERMINAL_132);
		TERMINAL_111.addFollower(TERMINAL_133);
		TERMINAL_111.addFollower(TERMINAL_134);
		TERMINAL_111.addFollower(TERMINAL_135);
		TERMINAL_111.addFollower(TERMINAL_136);
		TERMINAL_111.addFollower(TERMINAL_137);
		TERMINAL_111.addFollower(TERMINAL_138);
		TERMINAL_111.addFollower(TERMINAL_139);
		TERMINAL_111.addFollower(TERMINAL_140);
		TERMINAL_111.addFollower(TERMINAL_141);
		TERMINAL_111.addFollower(TERMINAL_142);
		TERMINAL_111.addFollower(TERMINAL_143);
		TERMINAL_111.addFollower(TERMINAL_144);
		TERMINAL_111.addFollower(TERMINAL_145);
		TERMINAL_111.addFollower(TERMINAL_146);
		TERMINAL_196.addFollower(TERMINAL_270);
		TERMINAL_270.addFollower(TERMINAL_112);
		TERMINAL_270.addFollower(TERMINAL_113);
		TERMINAL_270.addFollower(TERMINAL_114);
		TERMINAL_270.addFollower(TERMINAL_115);
		TERMINAL_270.addFollower(TERMINAL_116);
		TERMINAL_270.addFollower(TERMINAL_117);
		TERMINAL_270.addFollower(TERMINAL_118);
		TERMINAL_270.addFollower(TERMINAL_119);
		TERMINAL_270.addFollower(TERMINAL_120);
		TERMINAL_270.addFollower(TERMINAL_121);
		TERMINAL_112.addFollower(TERMINAL_271);
		TERMINAL_271.addFollower(TERMINAL_272);
		TERMINAL_272.addFollower(TERMINAL_112);
		TERMINAL_272.addFollower(TERMINAL_113);
		TERMINAL_272.addFollower(TERMINAL_114);
		TERMINAL_272.addFollower(TERMINAL_115);
		TERMINAL_272.addFollower(TERMINAL_116);
		TERMINAL_272.addFollower(TERMINAL_117);
		TERMINAL_272.addFollower(TERMINAL_118);
		TERMINAL_272.addFollower(TERMINAL_119);
		TERMINAL_272.addFollower(TERMINAL_120);
		TERMINAL_272.addFollower(TERMINAL_121);
		TERMINAL_113.addFollower(TERMINAL_273);
		TERMINAL_273.addFollower(TERMINAL_164);
		TERMINAL_114.addFollower(TERMINAL_274);
		TERMINAL_274.addFollower(TERMINAL_82);
		TERMINAL_274.addFollower(TERMINAL_22);
		TERMINAL_274.addFollower(TERMINAL_23);
		TERMINAL_274.addFollower(TERMINAL_154);
		TERMINAL_274.addFollower(TERMINAL_155);
		TERMINAL_274.addFollower(TERMINAL_24);
		TERMINAL_274.addFollower(TERMINAL_25);
		TERMINAL_274.addFollower(TERMINAL_194);
		TERMINAL_274.addFollower(TERMINAL_195);
		TERMINAL_274.addFollower(TERMINAL_196);
		TERMINAL_274.addFollower(TERMINAL_197);
		TERMINAL_274.addFollower(TERMINAL_198);
		TERMINAL_115.addFollower(TERMINAL_275);
		TERMINAL_275.addFollower(TERMINAL_276);
		TERMINAL_276.addFollower(TERMINAL_112);
		TERMINAL_276.addFollower(TERMINAL_113);
		TERMINAL_276.addFollower(TERMINAL_114);
		TERMINAL_276.addFollower(TERMINAL_115);
		TERMINAL_276.addFollower(TERMINAL_116);
		TERMINAL_276.addFollower(TERMINAL_117);
		TERMINAL_276.addFollower(TERMINAL_118);
		TERMINAL_276.addFollower(TERMINAL_119);
		TERMINAL_276.addFollower(TERMINAL_120);
		TERMINAL_276.addFollower(TERMINAL_121);
		TERMINAL_116.addFollower(TERMINAL_277);
		TERMINAL_277.addFollower(TERMINAL_278);
		TERMINAL_278.addFollower(TERMINAL_112);
		TERMINAL_278.addFollower(TERMINAL_113);
		TERMINAL_278.addFollower(TERMINAL_114);
		TERMINAL_278.addFollower(TERMINAL_115);
		TERMINAL_278.addFollower(TERMINAL_116);
		TERMINAL_278.addFollower(TERMINAL_117);
		TERMINAL_278.addFollower(TERMINAL_118);
		TERMINAL_278.addFollower(TERMINAL_119);
		TERMINAL_278.addFollower(TERMINAL_120);
		TERMINAL_278.addFollower(TERMINAL_121);
		TERMINAL_117.addFollower(TERMINAL_279);
		TERMINAL_279.addFollower(TERMINAL_280);
		TERMINAL_280.addFollower(TERMINAL_112);
		TERMINAL_280.addFollower(TERMINAL_113);
		TERMINAL_280.addFollower(TERMINAL_114);
		TERMINAL_280.addFollower(TERMINAL_115);
		TERMINAL_280.addFollower(TERMINAL_116);
		TERMINAL_280.addFollower(TERMINAL_117);
		TERMINAL_280.addFollower(TERMINAL_118);
		TERMINAL_280.addFollower(TERMINAL_119);
		TERMINAL_280.addFollower(TERMINAL_120);
		TERMINAL_280.addFollower(TERMINAL_121);
		TERMINAL_118.addFollower(TERMINAL_281);
		TERMINAL_281.addFollower(TERMINAL_282);
		TERMINAL_282.addFollower(TERMINAL_112);
		TERMINAL_282.addFollower(TERMINAL_113);
		TERMINAL_282.addFollower(TERMINAL_114);
		TERMINAL_282.addFollower(TERMINAL_115);
		TERMINAL_282.addFollower(TERMINAL_116);
		TERMINAL_282.addFollower(TERMINAL_117);
		TERMINAL_282.addFollower(TERMINAL_118);
		TERMINAL_282.addFollower(TERMINAL_119);
		TERMINAL_282.addFollower(TERMINAL_120);
		TERMINAL_282.addFollower(TERMINAL_121);
		TERMINAL_119.addFollower(TERMINAL_283);
		TERMINAL_283.addFollower(TERMINAL_284);
		TERMINAL_284.addFollower(TERMINAL_112);
		TERMINAL_284.addFollower(TERMINAL_113);
		TERMINAL_284.addFollower(TERMINAL_114);
		TERMINAL_284.addFollower(TERMINAL_115);
		TERMINAL_284.addFollower(TERMINAL_116);
		TERMINAL_284.addFollower(TERMINAL_117);
		TERMINAL_284.addFollower(TERMINAL_118);
		TERMINAL_284.addFollower(TERMINAL_119);
		TERMINAL_284.addFollower(TERMINAL_120);
		TERMINAL_284.addFollower(TERMINAL_121);
		TERMINAL_120.addFollower(TERMINAL_285);
		TERMINAL_285.addFollower(TERMINAL_188);
		TERMINAL_121.addFollower(TERMINAL_83);
		TERMINAL_121.addFollower(TERMINAL_84);
		TERMINAL_121.addFollower(TERMINAL_85);
		TERMINAL_121.addFollower(TERMINAL_86);
		TERMINAL_121.addFollower(TERMINAL_87);
		TERMINAL_121.addFollower(TERMINAL_88);
		TERMINAL_121.addFollower(TERMINAL_89);
		TERMINAL_121.addFollower(TERMINAL_90);
		TERMINAL_121.addFollower(TERMINAL_91);
		TERMINAL_121.addFollower(TERMINAL_92);
		TERMINAL_121.addFollower(TERMINAL_93);
		TERMINAL_121.addFollower(TERMINAL_94);
		TERMINAL_121.addFollower(TERMINAL_95);
		TERMINAL_121.addFollower(TERMINAL_96);
		TERMINAL_121.addFollower(TERMINAL_97);
		TERMINAL_121.addFollower(TERMINAL_98);
		TERMINAL_121.addFollower(TERMINAL_99);
		TERMINAL_121.addFollower(TERMINAL_100);
		TERMINAL_121.addFollower(TERMINAL_101);
		TERMINAL_121.addFollower(TERMINAL_102);
		TERMINAL_121.addFollower(TERMINAL_103);
		TERMINAL_121.addFollower(TERMINAL_104);
		TERMINAL_121.addFollower(TERMINAL_105);
		TERMINAL_121.addFollower(TERMINAL_106);
		TERMINAL_121.addFollower(TERMINAL_107);
		TERMINAL_121.addFollower(TERMINAL_108);
		TERMINAL_121.addFollower(TERMINAL_109);
		TERMINAL_121.addFollower(TERMINAL_110);
		TERMINAL_121.addFollower(TERMINAL_111);
		TERMINAL_121.addFollower(TERMINAL_112);
		TERMINAL_121.addFollower(TERMINAL_113);
		TERMINAL_121.addFollower(TERMINAL_114);
		TERMINAL_121.addFollower(TERMINAL_115);
		TERMINAL_121.addFollower(TERMINAL_116);
		TERMINAL_121.addFollower(TERMINAL_117);
		TERMINAL_121.addFollower(TERMINAL_118);
		TERMINAL_121.addFollower(TERMINAL_119);
		TERMINAL_121.addFollower(TERMINAL_120);
		TERMINAL_121.addFollower(TERMINAL_121);
		TERMINAL_121.addFollower(TERMINAL_122);
		TERMINAL_121.addFollower(TERMINAL_123);
		TERMINAL_121.addFollower(TERMINAL_124);
		TERMINAL_121.addFollower(TERMINAL_125);
		TERMINAL_121.addFollower(TERMINAL_126);
		TERMINAL_121.addFollower(TERMINAL_127);
		TERMINAL_121.addFollower(TERMINAL_128);
		TERMINAL_121.addFollower(TERMINAL_129);
		TERMINAL_121.addFollower(TERMINAL_130);
		TERMINAL_121.addFollower(TERMINAL_131);
		TERMINAL_121.addFollower(TERMINAL_132);
		TERMINAL_121.addFollower(TERMINAL_133);
		TERMINAL_121.addFollower(TERMINAL_134);
		TERMINAL_121.addFollower(TERMINAL_135);
		TERMINAL_121.addFollower(TERMINAL_136);
		TERMINAL_121.addFollower(TERMINAL_137);
		TERMINAL_121.addFollower(TERMINAL_138);
		TERMINAL_121.addFollower(TERMINAL_139);
		TERMINAL_121.addFollower(TERMINAL_140);
		TERMINAL_121.addFollower(TERMINAL_141);
		TERMINAL_121.addFollower(TERMINAL_142);
		TERMINAL_121.addFollower(TERMINAL_143);
		TERMINAL_121.addFollower(TERMINAL_144);
		TERMINAL_121.addFollower(TERMINAL_145);
		TERMINAL_121.addFollower(TERMINAL_146);
		TERMINAL_197.addFollower(TERMINAL_286);
		TERMINAL_286.addFollower(TERMINAL_122);
		TERMINAL_286.addFollower(TERMINAL_123);
		TERMINAL_286.addFollower(TERMINAL_124);
		TERMINAL_286.addFollower(TERMINAL_125);
		TERMINAL_286.addFollower(TERMINAL_126);
		TERMINAL_286.addFollower(TERMINAL_127);
		TERMINAL_122.addFollower(TERMINAL_287);
		TERMINAL_287.addFollower(TERMINAL_288);
		TERMINAL_288.addFollower(TERMINAL_122);
		TERMINAL_288.addFollower(TERMINAL_123);
		TERMINAL_288.addFollower(TERMINAL_124);
		TERMINAL_288.addFollower(TERMINAL_125);
		TERMINAL_288.addFollower(TERMINAL_126);
		TERMINAL_288.addFollower(TERMINAL_127);
		TERMINAL_123.addFollower(TERMINAL_289);
		TERMINAL_289.addFollower(TERMINAL_164);
		TERMINAL_124.addFollower(TERMINAL_290);
		TERMINAL_290.addFollower(TERMINAL_82);
		TERMINAL_290.addFollower(TERMINAL_22);
		TERMINAL_290.addFollower(TERMINAL_23);
		TERMINAL_290.addFollower(TERMINAL_154);
		TERMINAL_290.addFollower(TERMINAL_155);
		TERMINAL_290.addFollower(TERMINAL_24);
		TERMINAL_290.addFollower(TERMINAL_25);
		TERMINAL_290.addFollower(TERMINAL_194);
		TERMINAL_290.addFollower(TERMINAL_195);
		TERMINAL_290.addFollower(TERMINAL_196);
		TERMINAL_290.addFollower(TERMINAL_197);
		TERMINAL_290.addFollower(TERMINAL_198);
		TERMINAL_125.addFollower(TERMINAL_291);
		TERMINAL_291.addFollower(TERMINAL_292);
		TERMINAL_292.addFollower(TERMINAL_122);
		TERMINAL_292.addFollower(TERMINAL_123);
		TERMINAL_292.addFollower(TERMINAL_124);
		TERMINAL_292.addFollower(TERMINAL_125);
		TERMINAL_292.addFollower(TERMINAL_126);
		TERMINAL_292.addFollower(TERMINAL_127);
		TERMINAL_126.addFollower(TERMINAL_293);
		TERMINAL_293.addFollower(TERMINAL_294);
		TERMINAL_294.addFollower(TERMINAL_122);
		TERMINAL_294.addFollower(TERMINAL_123);
		TERMINAL_294.addFollower(TERMINAL_124);
		TERMINAL_294.addFollower(TERMINAL_125);
		TERMINAL_294.addFollower(TERMINAL_126);
		TERMINAL_294.addFollower(TERMINAL_127);
		TERMINAL_127.addFollower(TERMINAL_83);
		TERMINAL_127.addFollower(TERMINAL_84);
		TERMINAL_127.addFollower(TERMINAL_85);
		TERMINAL_127.addFollower(TERMINAL_86);
		TERMINAL_127.addFollower(TERMINAL_87);
		TERMINAL_127.addFollower(TERMINAL_88);
		TERMINAL_127.addFollower(TERMINAL_89);
		TERMINAL_127.addFollower(TERMINAL_90);
		TERMINAL_127.addFollower(TERMINAL_91);
		TERMINAL_127.addFollower(TERMINAL_92);
		TERMINAL_127.addFollower(TERMINAL_93);
		TERMINAL_127.addFollower(TERMINAL_94);
		TERMINAL_127.addFollower(TERMINAL_95);
		TERMINAL_127.addFollower(TERMINAL_96);
		TERMINAL_127.addFollower(TERMINAL_97);
		TERMINAL_127.addFollower(TERMINAL_98);
		TERMINAL_127.addFollower(TERMINAL_99);
		TERMINAL_127.addFollower(TERMINAL_100);
		TERMINAL_127.addFollower(TERMINAL_101);
		TERMINAL_127.addFollower(TERMINAL_102);
		TERMINAL_127.addFollower(TERMINAL_103);
		TERMINAL_127.addFollower(TERMINAL_104);
		TERMINAL_127.addFollower(TERMINAL_105);
		TERMINAL_127.addFollower(TERMINAL_106);
		TERMINAL_127.addFollower(TERMINAL_107);
		TERMINAL_127.addFollower(TERMINAL_108);
		TERMINAL_127.addFollower(TERMINAL_109);
		TERMINAL_127.addFollower(TERMINAL_110);
		TERMINAL_127.addFollower(TERMINAL_111);
		TERMINAL_127.addFollower(TERMINAL_112);
		TERMINAL_127.addFollower(TERMINAL_113);
		TERMINAL_127.addFollower(TERMINAL_114);
		TERMINAL_127.addFollower(TERMINAL_115);
		TERMINAL_127.addFollower(TERMINAL_116);
		TERMINAL_127.addFollower(TERMINAL_117);
		TERMINAL_127.addFollower(TERMINAL_118);
		TERMINAL_127.addFollower(TERMINAL_119);
		TERMINAL_127.addFollower(TERMINAL_120);
		TERMINAL_127.addFollower(TERMINAL_121);
		TERMINAL_127.addFollower(TERMINAL_122);
		TERMINAL_127.addFollower(TERMINAL_123);
		TERMINAL_127.addFollower(TERMINAL_124);
		TERMINAL_127.addFollower(TERMINAL_125);
		TERMINAL_127.addFollower(TERMINAL_126);
		TERMINAL_127.addFollower(TERMINAL_127);
		TERMINAL_127.addFollower(TERMINAL_128);
		TERMINAL_127.addFollower(TERMINAL_129);
		TERMINAL_127.addFollower(TERMINAL_130);
		TERMINAL_127.addFollower(TERMINAL_131);
		TERMINAL_127.addFollower(TERMINAL_132);
		TERMINAL_127.addFollower(TERMINAL_133);
		TERMINAL_127.addFollower(TERMINAL_134);
		TERMINAL_127.addFollower(TERMINAL_135);
		TERMINAL_127.addFollower(TERMINAL_136);
		TERMINAL_127.addFollower(TERMINAL_137);
		TERMINAL_127.addFollower(TERMINAL_138);
		TERMINAL_127.addFollower(TERMINAL_139);
		TERMINAL_127.addFollower(TERMINAL_140);
		TERMINAL_127.addFollower(TERMINAL_141);
		TERMINAL_127.addFollower(TERMINAL_142);
		TERMINAL_127.addFollower(TERMINAL_143);
		TERMINAL_127.addFollower(TERMINAL_144);
		TERMINAL_127.addFollower(TERMINAL_145);
		TERMINAL_127.addFollower(TERMINAL_146);
		TERMINAL_198.addFollower(TERMINAL_295);
		TERMINAL_295.addFollower(TERMINAL_128);
		TERMINAL_295.addFollower(TERMINAL_129);
		TERMINAL_295.addFollower(TERMINAL_130);
		TERMINAL_295.addFollower(TERMINAL_131);
		TERMINAL_295.addFollower(TERMINAL_132);
		TERMINAL_295.addFollower(TERMINAL_133);
		TERMINAL_295.addFollower(TERMINAL_134);
		TERMINAL_128.addFollower(TERMINAL_296);
		TERMINAL_296.addFollower(TERMINAL_297);
		TERMINAL_297.addFollower(TERMINAL_128);
		TERMINAL_297.addFollower(TERMINAL_129);
		TERMINAL_297.addFollower(TERMINAL_130);
		TERMINAL_297.addFollower(TERMINAL_131);
		TERMINAL_297.addFollower(TERMINAL_132);
		TERMINAL_297.addFollower(TERMINAL_133);
		TERMINAL_297.addFollower(TERMINAL_134);
		TERMINAL_129.addFollower(TERMINAL_298);
		TERMINAL_298.addFollower(TERMINAL_164);
		TERMINAL_130.addFollower(TERMINAL_299);
		TERMINAL_299.addFollower(TERMINAL_82);
		TERMINAL_299.addFollower(TERMINAL_22);
		TERMINAL_299.addFollower(TERMINAL_23);
		TERMINAL_299.addFollower(TERMINAL_154);
		TERMINAL_299.addFollower(TERMINAL_155);
		TERMINAL_299.addFollower(TERMINAL_24);
		TERMINAL_299.addFollower(TERMINAL_25);
		TERMINAL_299.addFollower(TERMINAL_194);
		TERMINAL_299.addFollower(TERMINAL_195);
		TERMINAL_299.addFollower(TERMINAL_196);
		TERMINAL_299.addFollower(TERMINAL_197);
		TERMINAL_299.addFollower(TERMINAL_198);
		TERMINAL_131.addFollower(TERMINAL_300);
		TERMINAL_300.addFollower(TERMINAL_301);
		TERMINAL_301.addFollower(TERMINAL_128);
		TERMINAL_301.addFollower(TERMINAL_129);
		TERMINAL_301.addFollower(TERMINAL_130);
		TERMINAL_301.addFollower(TERMINAL_131);
		TERMINAL_301.addFollower(TERMINAL_132);
		TERMINAL_301.addFollower(TERMINAL_133);
		TERMINAL_301.addFollower(TERMINAL_134);
		TERMINAL_132.addFollower(TERMINAL_302);
		TERMINAL_302.addFollower(TERMINAL_303);
		TERMINAL_303.addFollower(TERMINAL_128);
		TERMINAL_303.addFollower(TERMINAL_129);
		TERMINAL_303.addFollower(TERMINAL_130);
		TERMINAL_303.addFollower(TERMINAL_131);
		TERMINAL_303.addFollower(TERMINAL_132);
		TERMINAL_303.addFollower(TERMINAL_133);
		TERMINAL_303.addFollower(TERMINAL_134);
		TERMINAL_133.addFollower(TERMINAL_304);
		TERMINAL_304.addFollower(TERMINAL_305);
		TERMINAL_305.addFollower(TERMINAL_128);
		TERMINAL_305.addFollower(TERMINAL_129);
		TERMINAL_305.addFollower(TERMINAL_130);
		TERMINAL_305.addFollower(TERMINAL_131);
		TERMINAL_305.addFollower(TERMINAL_132);
		TERMINAL_305.addFollower(TERMINAL_133);
		TERMINAL_305.addFollower(TERMINAL_134);
		TERMINAL_134.addFollower(TERMINAL_83);
		TERMINAL_134.addFollower(TERMINAL_84);
		TERMINAL_134.addFollower(TERMINAL_85);
		TERMINAL_134.addFollower(TERMINAL_86);
		TERMINAL_134.addFollower(TERMINAL_87);
		TERMINAL_134.addFollower(TERMINAL_88);
		TERMINAL_134.addFollower(TERMINAL_89);
		TERMINAL_134.addFollower(TERMINAL_90);
		TERMINAL_134.addFollower(TERMINAL_91);
		TERMINAL_134.addFollower(TERMINAL_92);
		TERMINAL_134.addFollower(TERMINAL_93);
		TERMINAL_134.addFollower(TERMINAL_94);
		TERMINAL_134.addFollower(TERMINAL_95);
		TERMINAL_134.addFollower(TERMINAL_96);
		TERMINAL_134.addFollower(TERMINAL_97);
		TERMINAL_134.addFollower(TERMINAL_98);
		TERMINAL_134.addFollower(TERMINAL_99);
		TERMINAL_134.addFollower(TERMINAL_100);
		TERMINAL_134.addFollower(TERMINAL_101);
		TERMINAL_134.addFollower(TERMINAL_102);
		TERMINAL_134.addFollower(TERMINAL_103);
		TERMINAL_134.addFollower(TERMINAL_104);
		TERMINAL_134.addFollower(TERMINAL_105);
		TERMINAL_134.addFollower(TERMINAL_106);
		TERMINAL_134.addFollower(TERMINAL_107);
		TERMINAL_134.addFollower(TERMINAL_108);
		TERMINAL_134.addFollower(TERMINAL_109);
		TERMINAL_134.addFollower(TERMINAL_110);
		TERMINAL_134.addFollower(TERMINAL_111);
		TERMINAL_134.addFollower(TERMINAL_112);
		TERMINAL_134.addFollower(TERMINAL_113);
		TERMINAL_134.addFollower(TERMINAL_114);
		TERMINAL_134.addFollower(TERMINAL_115);
		TERMINAL_134.addFollower(TERMINAL_116);
		TERMINAL_134.addFollower(TERMINAL_117);
		TERMINAL_134.addFollower(TERMINAL_118);
		TERMINAL_134.addFollower(TERMINAL_119);
		TERMINAL_134.addFollower(TERMINAL_120);
		TERMINAL_134.addFollower(TERMINAL_121);
		TERMINAL_134.addFollower(TERMINAL_122);
		TERMINAL_134.addFollower(TERMINAL_123);
		TERMINAL_134.addFollower(TERMINAL_124);
		TERMINAL_134.addFollower(TERMINAL_125);
		TERMINAL_134.addFollower(TERMINAL_126);
		TERMINAL_134.addFollower(TERMINAL_127);
		TERMINAL_134.addFollower(TERMINAL_128);
		TERMINAL_134.addFollower(TERMINAL_129);
		TERMINAL_134.addFollower(TERMINAL_130);
		TERMINAL_134.addFollower(TERMINAL_131);
		TERMINAL_134.addFollower(TERMINAL_132);
		TERMINAL_134.addFollower(TERMINAL_133);
		TERMINAL_134.addFollower(TERMINAL_134);
		TERMINAL_134.addFollower(TERMINAL_135);
		TERMINAL_134.addFollower(TERMINAL_136);
		TERMINAL_134.addFollower(TERMINAL_137);
		TERMINAL_134.addFollower(TERMINAL_138);
		TERMINAL_134.addFollower(TERMINAL_139);
		TERMINAL_134.addFollower(TERMINAL_140);
		TERMINAL_134.addFollower(TERMINAL_141);
		TERMINAL_134.addFollower(TERMINAL_142);
		TERMINAL_134.addFollower(TERMINAL_143);
		TERMINAL_134.addFollower(TERMINAL_144);
		TERMINAL_134.addFollower(TERMINAL_145);
		TERMINAL_134.addFollower(TERMINAL_146);
		TERMINAL_50.addFollower(TERMINAL_57);
		TERMINAL_50.addFollower(TERMINAL_56);
		TERMINAL_50.addFollower(TERMINAL_55);
		TERMINAL_50.addFollower(TERMINAL_60);
		TERMINAL_50.addFollower(TERMINAL_52);
		TERMINAL_50.addFollower(TERMINAL_58);
		TERMINAL_50.addFollower(TERMINAL_61);
		TERMINAL_50.addFollower(TERMINAL_62);
		TERMINAL_50.addFollower(TERMINAL_63);
		TERMINAL_50.addFollower(TERMINAL_54);
		TERMINAL_50.addFollower(TERMINAL_53);
		TERMINAL_50.addFollower(TERMINAL_59);
		TERMINAL_50.addFollower(TERMINAL_66);
		TERMINAL_50.addFollower(TERMINAL_50);
		TERMINAL_50.addFollower(TERMINAL_306);
		TERMINAL_50.addFollower(TERMINAL_307);
		TERMINAL_307.addFollower(TERMINAL_48);
		TERMINAL_307.addFollower(TERMINAL_5);
		TERMINAL_307.addFollower(TERMINAL_6);
		TERMINAL_307.addFollower(TERMINAL_7);
		TERMINAL_307.addFollower(TERMINAL_8);
		TERMINAL_307.addFollower(TERMINAL_9);
		TERMINAL_307.addFollower(TERMINAL_41);
		TERMINAL_307.addFollower(TERMINAL_57);
		TERMINAL_307.addFollower(TERMINAL_56);
		TERMINAL_307.addFollower(TERMINAL_55);
		TERMINAL_307.addFollower(TERMINAL_60);
		TERMINAL_307.addFollower(TERMINAL_52);
		TERMINAL_307.addFollower(TERMINAL_58);
		TERMINAL_307.addFollower(TERMINAL_61);
		TERMINAL_307.addFollower(TERMINAL_62);
		TERMINAL_307.addFollower(TERMINAL_63);
		TERMINAL_307.addFollower(TERMINAL_54);
		TERMINAL_307.addFollower(TERMINAL_53);
		TERMINAL_307.addFollower(TERMINAL_59);
		TERMINAL_307.addFollower(TERMINAL_66);
		TERMINAL_307.addFollower(TERMINAL_50);
		TERMINAL_307.addFollower(TERMINAL_306);
		TERMINAL_307.addFollower(TERMINAL_307);
		TERMINAL_307.addFollower(TERMINAL_308);
		TERMINAL_307.addFollower(TERMINAL_309);
		TERMINAL_307.addFollower(TERMINAL_65);
		TERMINAL_307.addFollower(TERMINAL_310);
		TERMINAL_307.addFollower(TERMINAL_311);
		TERMINAL_307.addFollower(TERMINAL_312);
		TERMINAL_307.addFollower(TERMINAL_313);
		TERMINAL_307.addFollower(TERMINAL_314);
		TERMINAL_307.addFollower(TERMINAL_315);
		TERMINAL_307.addFollower(TERMINAL_316);
		TERMINAL_307.addFollower(TERMINAL_140);
		TERMINAL_307.addFollower(TERMINAL_141);
		TERMINAL_307.addFollower(TERMINAL_142);
		TERMINAL_307.addFollower(TERMINAL_143);
		TERMINAL_307.addFollower(TERMINAL_144);
		TERMINAL_307.addFollower(TERMINAL_145);
		TERMINAL_307.addFollower(TERMINAL_146);
		TERMINAL_306.addFollower(TERMINAL_317);
		TERMINAL_306.addFollower(TERMINAL_50);
		TERMINAL_306.addFollower(TERMINAL_51);
		TERMINAL_306.addFollower(TERMINAL_52);
		TERMINAL_306.addFollower(TERMINAL_53);
		TERMINAL_306.addFollower(TERMINAL_54);
		TERMINAL_306.addFollower(TERMINAL_55);
		TERMINAL_306.addFollower(TERMINAL_56);
		TERMINAL_306.addFollower(TERMINAL_57);
		TERMINAL_306.addFollower(TERMINAL_14);
		TERMINAL_306.addFollower(TERMINAL_58);
		TERMINAL_306.addFollower(TERMINAL_59);
		TERMINAL_306.addFollower(TERMINAL_60);
		TERMINAL_306.addFollower(TERMINAL_61);
		TERMINAL_306.addFollower(TERMINAL_62);
		TERMINAL_306.addFollower(TERMINAL_63);
		TERMINAL_306.addFollower(TERMINAL_64);
		TERMINAL_306.addFollower(TERMINAL_65);
		TERMINAL_306.addFollower(TERMINAL_66);
		TERMINAL_306.addFollower(TERMINAL_67);
		TERMINAL_306.addFollower(TERMINAL_306);
		TERMINAL_306.addFollower(TERMINAL_307);
		TERMINAL_317.addFollower(TERMINAL_318);
		TERMINAL_318.addFollower(TERMINAL_319);
		TERMINAL_319.addFollower(TERMINAL_14);
		TERMINAL_320.addFollower(TERMINAL_50);
		TERMINAL_320.addFollower(TERMINAL_51);
		TERMINAL_320.addFollower(TERMINAL_52);
		TERMINAL_320.addFollower(TERMINAL_53);
		TERMINAL_320.addFollower(TERMINAL_54);
		TERMINAL_320.addFollower(TERMINAL_55);
		TERMINAL_320.addFollower(TERMINAL_56);
		TERMINAL_320.addFollower(TERMINAL_57);
		TERMINAL_320.addFollower(TERMINAL_14);
		TERMINAL_320.addFollower(TERMINAL_58);
		TERMINAL_320.addFollower(TERMINAL_59);
		TERMINAL_320.addFollower(TERMINAL_60);
		TERMINAL_320.addFollower(TERMINAL_61);
		TERMINAL_320.addFollower(TERMINAL_62);
		TERMINAL_320.addFollower(TERMINAL_63);
		TERMINAL_320.addFollower(TERMINAL_64);
		TERMINAL_320.addFollower(TERMINAL_65);
		TERMINAL_320.addFollower(TERMINAL_66);
		TERMINAL_320.addFollower(TERMINAL_67);
		TERMINAL_320.addFollower(TERMINAL_306);
		TERMINAL_320.addFollower(TERMINAL_307);
		TERMINAL_14.addFollower(TERMINAL_320);
		TERMINAL_14.addFollower(TERMINAL_321);
		TERMINAL_14.addFollower(TERMINAL_48);
		TERMINAL_14.addFollower(TERMINAL_5);
		TERMINAL_14.addFollower(TERMINAL_6);
		TERMINAL_14.addFollower(TERMINAL_7);
		TERMINAL_14.addFollower(TERMINAL_8);
		TERMINAL_14.addFollower(TERMINAL_9);
		TERMINAL_14.addFollower(TERMINAL_41);
		TERMINAL_14.addFollower(TERMINAL_57);
		TERMINAL_14.addFollower(TERMINAL_56);
		TERMINAL_14.addFollower(TERMINAL_55);
		TERMINAL_14.addFollower(TERMINAL_60);
		TERMINAL_14.addFollower(TERMINAL_52);
		TERMINAL_14.addFollower(TERMINAL_58);
		TERMINAL_14.addFollower(TERMINAL_61);
		TERMINAL_14.addFollower(TERMINAL_62);
		TERMINAL_14.addFollower(TERMINAL_63);
		TERMINAL_14.addFollower(TERMINAL_54);
		TERMINAL_14.addFollower(TERMINAL_53);
		TERMINAL_14.addFollower(TERMINAL_59);
		TERMINAL_14.addFollower(TERMINAL_66);
		TERMINAL_14.addFollower(TERMINAL_50);
		TERMINAL_14.addFollower(TERMINAL_306);
		TERMINAL_14.addFollower(TERMINAL_307);
		TERMINAL_14.addFollower(TERMINAL_308);
		TERMINAL_14.addFollower(TERMINAL_311);
		TERMINAL_14.addFollower(TERMINAL_312);
		TERMINAL_14.addFollower(TERMINAL_313);
		TERMINAL_14.addFollower(TERMINAL_314);
		TERMINAL_14.addFollower(TERMINAL_315);
		TERMINAL_14.addFollower(TERMINAL_316);
		TERMINAL_14.addFollower(TERMINAL_140);
		TERMINAL_14.addFollower(TERMINAL_141);
		TERMINAL_14.addFollower(TERMINAL_142);
		TERMINAL_14.addFollower(TERMINAL_143);
		TERMINAL_14.addFollower(TERMINAL_144);
		TERMINAL_14.addFollower(TERMINAL_145);
		TERMINAL_14.addFollower(TERMINAL_146);
		TERMINAL_14.addFollower(TERMINAL_309);
		TERMINAL_14.addFollower(TERMINAL_65);
		TERMINAL_14.addFollower(TERMINAL_310);
		TERMINAL_14.addFollower(TERMINAL_242);
		TERMINAL_14.addFollower(TERMINAL_243);
		TERMINAL_14.addFollower(TERMINAL_244);
		TERMINAL_14.addFollower(TERMINAL_245);
		TERMINAL_14.addFollower(TERMINAL_246);
		TERMINAL_51.addFollower(TERMINAL_50);
		TERMINAL_51.addFollower(TERMINAL_51);
		TERMINAL_51.addFollower(TERMINAL_52);
		TERMINAL_51.addFollower(TERMINAL_53);
		TERMINAL_51.addFollower(TERMINAL_54);
		TERMINAL_51.addFollower(TERMINAL_55);
		TERMINAL_51.addFollower(TERMINAL_56);
		TERMINAL_51.addFollower(TERMINAL_57);
		TERMINAL_51.addFollower(TERMINAL_14);
		TERMINAL_51.addFollower(TERMINAL_58);
		TERMINAL_51.addFollower(TERMINAL_59);
		TERMINAL_51.addFollower(TERMINAL_60);
		TERMINAL_51.addFollower(TERMINAL_61);
		TERMINAL_51.addFollower(TERMINAL_62);
		TERMINAL_51.addFollower(TERMINAL_63);
		TERMINAL_51.addFollower(TERMINAL_64);
		TERMINAL_51.addFollower(TERMINAL_65);
		TERMINAL_51.addFollower(TERMINAL_66);
		TERMINAL_51.addFollower(TERMINAL_67);
		TERMINAL_52.addFollower(TERMINAL_48);
		TERMINAL_52.addFollower(TERMINAL_5);
		TERMINAL_52.addFollower(TERMINAL_6);
		TERMINAL_52.addFollower(TERMINAL_7);
		TERMINAL_52.addFollower(TERMINAL_8);
		TERMINAL_52.addFollower(TERMINAL_9);
		TERMINAL_52.addFollower(TERMINAL_41);
		TERMINAL_52.addFollower(TERMINAL_306);
		TERMINAL_52.addFollower(TERMINAL_307);
		TERMINAL_52.addFollower(TERMINAL_308);
		TERMINAL_52.addFollower(TERMINAL_309);
		TERMINAL_52.addFollower(TERMINAL_50);
		TERMINAL_52.addFollower(TERMINAL_60);
		TERMINAL_52.addFollower(TERMINAL_52);
		TERMINAL_52.addFollower(TERMINAL_58);
		TERMINAL_52.addFollower(TERMINAL_61);
		TERMINAL_52.addFollower(TERMINAL_62);
		TERMINAL_52.addFollower(TERMINAL_63);
		TERMINAL_52.addFollower(TERMINAL_54);
		TERMINAL_52.addFollower(TERMINAL_53);
		TERMINAL_52.addFollower(TERMINAL_59);
		TERMINAL_52.addFollower(TERMINAL_57);
		TERMINAL_52.addFollower(TERMINAL_65);
		TERMINAL_52.addFollower(TERMINAL_310);
		TERMINAL_52.addFollower(TERMINAL_311);
		TERMINAL_52.addFollower(TERMINAL_312);
		TERMINAL_52.addFollower(TERMINAL_313);
		TERMINAL_52.addFollower(TERMINAL_314);
		TERMINAL_52.addFollower(TERMINAL_315);
		TERMINAL_52.addFollower(TERMINAL_316);
		TERMINAL_52.addFollower(TERMINAL_140);
		TERMINAL_52.addFollower(TERMINAL_141);
		TERMINAL_52.addFollower(TERMINAL_142);
		TERMINAL_52.addFollower(TERMINAL_143);
		TERMINAL_52.addFollower(TERMINAL_144);
		TERMINAL_52.addFollower(TERMINAL_145);
		TERMINAL_52.addFollower(TERMINAL_146);
		TERMINAL_53.addFollower(TERMINAL_48);
		TERMINAL_53.addFollower(TERMINAL_5);
		TERMINAL_53.addFollower(TERMINAL_6);
		TERMINAL_53.addFollower(TERMINAL_7);
		TERMINAL_53.addFollower(TERMINAL_8);
		TERMINAL_53.addFollower(TERMINAL_9);
		TERMINAL_53.addFollower(TERMINAL_41);
		TERMINAL_53.addFollower(TERMINAL_306);
		TERMINAL_53.addFollower(TERMINAL_307);
		TERMINAL_53.addFollower(TERMINAL_308);
		TERMINAL_53.addFollower(TERMINAL_309);
		TERMINAL_53.addFollower(TERMINAL_50);
		TERMINAL_53.addFollower(TERMINAL_60);
		TERMINAL_53.addFollower(TERMINAL_52);
		TERMINAL_53.addFollower(TERMINAL_58);
		TERMINAL_53.addFollower(TERMINAL_61);
		TERMINAL_53.addFollower(TERMINAL_62);
		TERMINAL_53.addFollower(TERMINAL_63);
		TERMINAL_53.addFollower(TERMINAL_54);
		TERMINAL_53.addFollower(TERMINAL_53);
		TERMINAL_53.addFollower(TERMINAL_59);
		TERMINAL_53.addFollower(TERMINAL_57);
		TERMINAL_53.addFollower(TERMINAL_65);
		TERMINAL_53.addFollower(TERMINAL_310);
		TERMINAL_53.addFollower(TERMINAL_311);
		TERMINAL_53.addFollower(TERMINAL_312);
		TERMINAL_53.addFollower(TERMINAL_313);
		TERMINAL_53.addFollower(TERMINAL_314);
		TERMINAL_53.addFollower(TERMINAL_315);
		TERMINAL_53.addFollower(TERMINAL_316);
		TERMINAL_53.addFollower(TERMINAL_140);
		TERMINAL_53.addFollower(TERMINAL_141);
		TERMINAL_53.addFollower(TERMINAL_142);
		TERMINAL_53.addFollower(TERMINAL_143);
		TERMINAL_53.addFollower(TERMINAL_144);
		TERMINAL_53.addFollower(TERMINAL_145);
		TERMINAL_53.addFollower(TERMINAL_146);
		TERMINAL_54.addFollower(TERMINAL_48);
		TERMINAL_54.addFollower(TERMINAL_5);
		TERMINAL_54.addFollower(TERMINAL_6);
		TERMINAL_54.addFollower(TERMINAL_7);
		TERMINAL_54.addFollower(TERMINAL_8);
		TERMINAL_54.addFollower(TERMINAL_9);
		TERMINAL_54.addFollower(TERMINAL_41);
		TERMINAL_54.addFollower(TERMINAL_306);
		TERMINAL_54.addFollower(TERMINAL_307);
		TERMINAL_54.addFollower(TERMINAL_308);
		TERMINAL_54.addFollower(TERMINAL_309);
		TERMINAL_54.addFollower(TERMINAL_50);
		TERMINAL_54.addFollower(TERMINAL_60);
		TERMINAL_54.addFollower(TERMINAL_52);
		TERMINAL_54.addFollower(TERMINAL_58);
		TERMINAL_54.addFollower(TERMINAL_61);
		TERMINAL_54.addFollower(TERMINAL_62);
		TERMINAL_54.addFollower(TERMINAL_63);
		TERMINAL_54.addFollower(TERMINAL_54);
		TERMINAL_54.addFollower(TERMINAL_53);
		TERMINAL_54.addFollower(TERMINAL_59);
		TERMINAL_54.addFollower(TERMINAL_57);
		TERMINAL_54.addFollower(TERMINAL_65);
		TERMINAL_54.addFollower(TERMINAL_310);
		TERMINAL_54.addFollower(TERMINAL_311);
		TERMINAL_54.addFollower(TERMINAL_312);
		TERMINAL_54.addFollower(TERMINAL_313);
		TERMINAL_54.addFollower(TERMINAL_314);
		TERMINAL_54.addFollower(TERMINAL_315);
		TERMINAL_54.addFollower(TERMINAL_316);
		TERMINAL_54.addFollower(TERMINAL_140);
		TERMINAL_54.addFollower(TERMINAL_141);
		TERMINAL_54.addFollower(TERMINAL_142);
		TERMINAL_54.addFollower(TERMINAL_143);
		TERMINAL_54.addFollower(TERMINAL_144);
		TERMINAL_54.addFollower(TERMINAL_145);
		TERMINAL_54.addFollower(TERMINAL_146);
		TERMINAL_55.addFollower(TERMINAL_60);
		TERMINAL_55.addFollower(TERMINAL_52);
		TERMINAL_55.addFollower(TERMINAL_58);
		TERMINAL_55.addFollower(TERMINAL_61);
		TERMINAL_55.addFollower(TERMINAL_62);
		TERMINAL_55.addFollower(TERMINAL_63);
		TERMINAL_55.addFollower(TERMINAL_54);
		TERMINAL_55.addFollower(TERMINAL_53);
		TERMINAL_55.addFollower(TERMINAL_55);
		TERMINAL_322.addFollower(TERMINAL_52);
		TERMINAL_322.addFollower(TERMINAL_50);
		TERMINAL_322.addFollower(TERMINAL_60);
		TERMINAL_322.addFollower(TERMINAL_58);
		TERMINAL_322.addFollower(TERMINAL_61);
		TERMINAL_322.addFollower(TERMINAL_62);
		TERMINAL_322.addFollower(TERMINAL_63);
		TERMINAL_322.addFollower(TERMINAL_54);
		TERMINAL_322.addFollower(TERMINAL_53);
		TERMINAL_322.addFollower(TERMINAL_59);
		TERMINAL_322.addFollower(TERMINAL_65);
		TERMINAL_322.addFollower(TERMINAL_57);
		TERMINAL_309.addFollower(TERMINAL_52);
		TERMINAL_310.addFollower(TERMINAL_48);
		TERMINAL_310.addFollower(TERMINAL_5);
		TERMINAL_310.addFollower(TERMINAL_6);
		TERMINAL_310.addFollower(TERMINAL_7);
		TERMINAL_310.addFollower(TERMINAL_8);
		TERMINAL_310.addFollower(TERMINAL_9);
		TERMINAL_310.addFollower(TERMINAL_41);
		TERMINAL_310.addFollower(TERMINAL_57);
		TERMINAL_310.addFollower(TERMINAL_56);
		TERMINAL_310.addFollower(TERMINAL_55);
		TERMINAL_310.addFollower(TERMINAL_60);
		TERMINAL_310.addFollower(TERMINAL_52);
		TERMINAL_310.addFollower(TERMINAL_58);
		TERMINAL_310.addFollower(TERMINAL_61);
		TERMINAL_310.addFollower(TERMINAL_62);
		TERMINAL_310.addFollower(TERMINAL_63);
		TERMINAL_310.addFollower(TERMINAL_54);
		TERMINAL_310.addFollower(TERMINAL_53);
		TERMINAL_310.addFollower(TERMINAL_59);
		TERMINAL_310.addFollower(TERMINAL_66);
		TERMINAL_310.addFollower(TERMINAL_50);
		TERMINAL_310.addFollower(TERMINAL_306);
		TERMINAL_310.addFollower(TERMINAL_307);
		TERMINAL_310.addFollower(TERMINAL_308);
		TERMINAL_310.addFollower(TERMINAL_309);
		TERMINAL_310.addFollower(TERMINAL_65);
		TERMINAL_310.addFollower(TERMINAL_310);
		TERMINAL_310.addFollower(TERMINAL_311);
		TERMINAL_310.addFollower(TERMINAL_312);
		TERMINAL_310.addFollower(TERMINAL_313);
		TERMINAL_310.addFollower(TERMINAL_314);
		TERMINAL_310.addFollower(TERMINAL_315);
		TERMINAL_310.addFollower(TERMINAL_316);
		TERMINAL_310.addFollower(TERMINAL_140);
		TERMINAL_310.addFollower(TERMINAL_141);
		TERMINAL_310.addFollower(TERMINAL_142);
		TERMINAL_310.addFollower(TERMINAL_143);
		TERMINAL_310.addFollower(TERMINAL_144);
		TERMINAL_310.addFollower(TERMINAL_145);
		TERMINAL_310.addFollower(TERMINAL_146);
		TERMINAL_56.addFollower(TERMINAL_50);
		TERMINAL_56.addFollower(TERMINAL_51);
		TERMINAL_56.addFollower(TERMINAL_52);
		TERMINAL_56.addFollower(TERMINAL_53);
		TERMINAL_56.addFollower(TERMINAL_54);
		TERMINAL_56.addFollower(TERMINAL_55);
		TERMINAL_56.addFollower(TERMINAL_56);
		TERMINAL_56.addFollower(TERMINAL_57);
		TERMINAL_56.addFollower(TERMINAL_14);
		TERMINAL_56.addFollower(TERMINAL_58);
		TERMINAL_56.addFollower(TERMINAL_59);
		TERMINAL_56.addFollower(TERMINAL_60);
		TERMINAL_56.addFollower(TERMINAL_61);
		TERMINAL_56.addFollower(TERMINAL_62);
		TERMINAL_56.addFollower(TERMINAL_63);
		TERMINAL_56.addFollower(TERMINAL_64);
		TERMINAL_56.addFollower(TERMINAL_65);
		TERMINAL_56.addFollower(TERMINAL_66);
		TERMINAL_56.addFollower(TERMINAL_67);
		TERMINAL_56.addFollower(TERMINAL_308);
		TERMINAL_308.addFollower(TERMINAL_50);
		TERMINAL_308.addFollower(TERMINAL_51);
		TERMINAL_308.addFollower(TERMINAL_52);
		TERMINAL_308.addFollower(TERMINAL_53);
		TERMINAL_308.addFollower(TERMINAL_54);
		TERMINAL_308.addFollower(TERMINAL_55);
		TERMINAL_308.addFollower(TERMINAL_56);
		TERMINAL_308.addFollower(TERMINAL_57);
		TERMINAL_308.addFollower(TERMINAL_14);
		TERMINAL_308.addFollower(TERMINAL_58);
		TERMINAL_308.addFollower(TERMINAL_59);
		TERMINAL_308.addFollower(TERMINAL_60);
		TERMINAL_308.addFollower(TERMINAL_61);
		TERMINAL_308.addFollower(TERMINAL_62);
		TERMINAL_308.addFollower(TERMINAL_63);
		TERMINAL_308.addFollower(TERMINAL_64);
		TERMINAL_308.addFollower(TERMINAL_65);
		TERMINAL_308.addFollower(TERMINAL_66);
		TERMINAL_308.addFollower(TERMINAL_67);
		TERMINAL_323.addFollower(TERMINAL_50);
		TERMINAL_323.addFollower(TERMINAL_51);
		TERMINAL_323.addFollower(TERMINAL_52);
		TERMINAL_323.addFollower(TERMINAL_53);
		TERMINAL_323.addFollower(TERMINAL_54);
		TERMINAL_323.addFollower(TERMINAL_55);
		TERMINAL_323.addFollower(TERMINAL_56);
		TERMINAL_323.addFollower(TERMINAL_57);
		TERMINAL_323.addFollower(TERMINAL_14);
		TERMINAL_323.addFollower(TERMINAL_58);
		TERMINAL_323.addFollower(TERMINAL_59);
		TERMINAL_323.addFollower(TERMINAL_60);
		TERMINAL_323.addFollower(TERMINAL_61);
		TERMINAL_323.addFollower(TERMINAL_62);
		TERMINAL_323.addFollower(TERMINAL_63);
		TERMINAL_323.addFollower(TERMINAL_64);
		TERMINAL_323.addFollower(TERMINAL_65);
		TERMINAL_323.addFollower(TERMINAL_66);
		TERMINAL_323.addFollower(TERMINAL_67);
		TERMINAL_57.addFollower(TERMINAL_324);
		TERMINAL_324.addFollower(TERMINAL_325);
		TERMINAL_325.addFollower(TERMINAL_14);
		TERMINAL_321.addFollower(TERMINAL_50);
		TERMINAL_321.addFollower(TERMINAL_51);
		TERMINAL_321.addFollower(TERMINAL_52);
		TERMINAL_321.addFollower(TERMINAL_53);
		TERMINAL_321.addFollower(TERMINAL_54);
		TERMINAL_321.addFollower(TERMINAL_55);
		TERMINAL_321.addFollower(TERMINAL_56);
		TERMINAL_321.addFollower(TERMINAL_57);
		TERMINAL_321.addFollower(TERMINAL_14);
		TERMINAL_321.addFollower(TERMINAL_58);
		TERMINAL_321.addFollower(TERMINAL_59);
		TERMINAL_321.addFollower(TERMINAL_60);
		TERMINAL_321.addFollower(TERMINAL_61);
		TERMINAL_321.addFollower(TERMINAL_62);
		TERMINAL_321.addFollower(TERMINAL_63);
		TERMINAL_321.addFollower(TERMINAL_64);
		TERMINAL_321.addFollower(TERMINAL_65);
		TERMINAL_321.addFollower(TERMINAL_66);
		TERMINAL_321.addFollower(TERMINAL_67);
		TERMINAL_58.addFollower(TERMINAL_48);
		TERMINAL_58.addFollower(TERMINAL_5);
		TERMINAL_58.addFollower(TERMINAL_6);
		TERMINAL_58.addFollower(TERMINAL_7);
		TERMINAL_58.addFollower(TERMINAL_8);
		TERMINAL_58.addFollower(TERMINAL_9);
		TERMINAL_58.addFollower(TERMINAL_41);
		TERMINAL_58.addFollower(TERMINAL_57);
		TERMINAL_58.addFollower(TERMINAL_56);
		TERMINAL_58.addFollower(TERMINAL_55);
		TERMINAL_58.addFollower(TERMINAL_60);
		TERMINAL_58.addFollower(TERMINAL_52);
		TERMINAL_58.addFollower(TERMINAL_58);
		TERMINAL_58.addFollower(TERMINAL_61);
		TERMINAL_58.addFollower(TERMINAL_62);
		TERMINAL_58.addFollower(TERMINAL_63);
		TERMINAL_58.addFollower(TERMINAL_54);
		TERMINAL_58.addFollower(TERMINAL_53);
		TERMINAL_58.addFollower(TERMINAL_59);
		TERMINAL_58.addFollower(TERMINAL_66);
		TERMINAL_58.addFollower(TERMINAL_50);
		TERMINAL_58.addFollower(TERMINAL_306);
		TERMINAL_58.addFollower(TERMINAL_307);
		TERMINAL_58.addFollower(TERMINAL_308);
		TERMINAL_58.addFollower(TERMINAL_309);
		TERMINAL_58.addFollower(TERMINAL_65);
		TERMINAL_58.addFollower(TERMINAL_310);
		TERMINAL_58.addFollower(TERMINAL_311);
		TERMINAL_58.addFollower(TERMINAL_312);
		TERMINAL_58.addFollower(TERMINAL_313);
		TERMINAL_58.addFollower(TERMINAL_314);
		TERMINAL_58.addFollower(TERMINAL_315);
		TERMINAL_58.addFollower(TERMINAL_316);
		TERMINAL_58.addFollower(TERMINAL_140);
		TERMINAL_58.addFollower(TERMINAL_141);
		TERMINAL_58.addFollower(TERMINAL_142);
		TERMINAL_58.addFollower(TERMINAL_143);
		TERMINAL_58.addFollower(TERMINAL_144);
		TERMINAL_58.addFollower(TERMINAL_145);
		TERMINAL_58.addFollower(TERMINAL_146);
		TERMINAL_58.addFollower(TERMINAL_326);
		TERMINAL_58.addFollower(TERMINAL_327);
		TERMINAL_59.addFollower(TERMINAL_328);
		TERMINAL_328.addFollower(TERMINAL_50);
		TERMINAL_328.addFollower(TERMINAL_51);
		TERMINAL_328.addFollower(TERMINAL_52);
		TERMINAL_328.addFollower(TERMINAL_53);
		TERMINAL_328.addFollower(TERMINAL_54);
		TERMINAL_328.addFollower(TERMINAL_55);
		TERMINAL_328.addFollower(TERMINAL_56);
		TERMINAL_328.addFollower(TERMINAL_57);
		TERMINAL_328.addFollower(TERMINAL_14);
		TERMINAL_328.addFollower(TERMINAL_58);
		TERMINAL_328.addFollower(TERMINAL_59);
		TERMINAL_328.addFollower(TERMINAL_60);
		TERMINAL_328.addFollower(TERMINAL_61);
		TERMINAL_328.addFollower(TERMINAL_62);
		TERMINAL_328.addFollower(TERMINAL_63);
		TERMINAL_328.addFollower(TERMINAL_64);
		TERMINAL_328.addFollower(TERMINAL_65);
		TERMINAL_328.addFollower(TERMINAL_66);
		TERMINAL_328.addFollower(TERMINAL_67);
		TERMINAL_328.addFollower(TERMINAL_312);
		TERMINAL_311.addFollower(TERMINAL_50);
		TERMINAL_311.addFollower(TERMINAL_51);
		TERMINAL_311.addFollower(TERMINAL_52);
		TERMINAL_311.addFollower(TERMINAL_53);
		TERMINAL_311.addFollower(TERMINAL_54);
		TERMINAL_311.addFollower(TERMINAL_55);
		TERMINAL_311.addFollower(TERMINAL_56);
		TERMINAL_311.addFollower(TERMINAL_57);
		TERMINAL_311.addFollower(TERMINAL_14);
		TERMINAL_311.addFollower(TERMINAL_58);
		TERMINAL_311.addFollower(TERMINAL_59);
		TERMINAL_311.addFollower(TERMINAL_60);
		TERMINAL_311.addFollower(TERMINAL_61);
		TERMINAL_311.addFollower(TERMINAL_62);
		TERMINAL_311.addFollower(TERMINAL_63);
		TERMINAL_311.addFollower(TERMINAL_64);
		TERMINAL_311.addFollower(TERMINAL_65);
		TERMINAL_311.addFollower(TERMINAL_66);
		TERMINAL_311.addFollower(TERMINAL_67);
		TERMINAL_312.addFollower(TERMINAL_48);
		TERMINAL_312.addFollower(TERMINAL_5);
		TERMINAL_312.addFollower(TERMINAL_6);
		TERMINAL_312.addFollower(TERMINAL_7);
		TERMINAL_312.addFollower(TERMINAL_8);
		TERMINAL_312.addFollower(TERMINAL_9);
		TERMINAL_312.addFollower(TERMINAL_41);
		TERMINAL_312.addFollower(TERMINAL_57);
		TERMINAL_312.addFollower(TERMINAL_56);
		TERMINAL_312.addFollower(TERMINAL_55);
		TERMINAL_312.addFollower(TERMINAL_60);
		TERMINAL_312.addFollower(TERMINAL_52);
		TERMINAL_312.addFollower(TERMINAL_58);
		TERMINAL_312.addFollower(TERMINAL_61);
		TERMINAL_312.addFollower(TERMINAL_62);
		TERMINAL_312.addFollower(TERMINAL_63);
		TERMINAL_312.addFollower(TERMINAL_54);
		TERMINAL_312.addFollower(TERMINAL_53);
		TERMINAL_312.addFollower(TERMINAL_59);
		TERMINAL_312.addFollower(TERMINAL_66);
		TERMINAL_312.addFollower(TERMINAL_50);
		TERMINAL_312.addFollower(TERMINAL_306);
		TERMINAL_312.addFollower(TERMINAL_307);
		TERMINAL_312.addFollower(TERMINAL_308);
		TERMINAL_312.addFollower(TERMINAL_309);
		TERMINAL_312.addFollower(TERMINAL_65);
		TERMINAL_312.addFollower(TERMINAL_310);
		TERMINAL_312.addFollower(TERMINAL_311);
		TERMINAL_312.addFollower(TERMINAL_312);
		TERMINAL_312.addFollower(TERMINAL_313);
		TERMINAL_312.addFollower(TERMINAL_314);
		TERMINAL_312.addFollower(TERMINAL_315);
		TERMINAL_312.addFollower(TERMINAL_316);
		TERMINAL_312.addFollower(TERMINAL_140);
		TERMINAL_312.addFollower(TERMINAL_141);
		TERMINAL_312.addFollower(TERMINAL_142);
		TERMINAL_312.addFollower(TERMINAL_143);
		TERMINAL_312.addFollower(TERMINAL_144);
		TERMINAL_312.addFollower(TERMINAL_145);
		TERMINAL_312.addFollower(TERMINAL_146);
		TERMINAL_326.addFollower(TERMINAL_60);
		TERMINAL_326.addFollower(TERMINAL_52);
		TERMINAL_326.addFollower(TERMINAL_58);
		TERMINAL_326.addFollower(TERMINAL_61);
		TERMINAL_326.addFollower(TERMINAL_62);
		TERMINAL_326.addFollower(TERMINAL_63);
		TERMINAL_326.addFollower(TERMINAL_54);
		TERMINAL_326.addFollower(TERMINAL_53);
		TERMINAL_326.addFollower(TERMINAL_59);
		TERMINAL_326.addFollower(TERMINAL_65);
		TERMINAL_326.addFollower(TERMINAL_64);
		TERMINAL_327.addFollower(TERMINAL_329);
	}
	public static void wire3() {
		TERMINAL_329.addFollower(TERMINAL_60);
		TERMINAL_329.addFollower(TERMINAL_52);
		TERMINAL_329.addFollower(TERMINAL_58);
		TERMINAL_329.addFollower(TERMINAL_61);
		TERMINAL_329.addFollower(TERMINAL_62);
		TERMINAL_329.addFollower(TERMINAL_63);
		TERMINAL_329.addFollower(TERMINAL_54);
		TERMINAL_329.addFollower(TERMINAL_53);
		TERMINAL_329.addFollower(TERMINAL_59);
		TERMINAL_329.addFollower(TERMINAL_65);
		TERMINAL_329.addFollower(TERMINAL_64);
		TERMINAL_61.addFollower(TERMINAL_48);
		TERMINAL_61.addFollower(TERMINAL_5);
		TERMINAL_61.addFollower(TERMINAL_6);
		TERMINAL_61.addFollower(TERMINAL_7);
		TERMINAL_61.addFollower(TERMINAL_8);
		TERMINAL_61.addFollower(TERMINAL_9);
		TERMINAL_61.addFollower(TERMINAL_41);
		TERMINAL_61.addFollower(TERMINAL_57);
		TERMINAL_61.addFollower(TERMINAL_56);
		TERMINAL_61.addFollower(TERMINAL_55);
		TERMINAL_61.addFollower(TERMINAL_60);
		TERMINAL_61.addFollower(TERMINAL_52);
		TERMINAL_61.addFollower(TERMINAL_58);
		TERMINAL_61.addFollower(TERMINAL_61);
		TERMINAL_61.addFollower(TERMINAL_62);
		TERMINAL_61.addFollower(TERMINAL_63);
		TERMINAL_61.addFollower(TERMINAL_54);
		TERMINAL_61.addFollower(TERMINAL_53);
		TERMINAL_61.addFollower(TERMINAL_59);
		TERMINAL_61.addFollower(TERMINAL_66);
		TERMINAL_61.addFollower(TERMINAL_50);
		TERMINAL_61.addFollower(TERMINAL_306);
		TERMINAL_61.addFollower(TERMINAL_307);
		TERMINAL_61.addFollower(TERMINAL_308);
		TERMINAL_61.addFollower(TERMINAL_309);
		TERMINAL_61.addFollower(TERMINAL_65);
		TERMINAL_61.addFollower(TERMINAL_310);
		TERMINAL_61.addFollower(TERMINAL_311);
		TERMINAL_61.addFollower(TERMINAL_312);
		TERMINAL_61.addFollower(TERMINAL_313);
		TERMINAL_61.addFollower(TERMINAL_314);
		TERMINAL_61.addFollower(TERMINAL_315);
		TERMINAL_61.addFollower(TERMINAL_316);
		TERMINAL_61.addFollower(TERMINAL_140);
		TERMINAL_61.addFollower(TERMINAL_141);
		TERMINAL_61.addFollower(TERMINAL_142);
		TERMINAL_61.addFollower(TERMINAL_143);
		TERMINAL_61.addFollower(TERMINAL_144);
		TERMINAL_61.addFollower(TERMINAL_145);
		TERMINAL_61.addFollower(TERMINAL_146);
		TERMINAL_61.addFollower(TERMINAL_326);
		TERMINAL_61.addFollower(TERMINAL_327);
		TERMINAL_63.addFollower(TERMINAL_48);
		TERMINAL_63.addFollower(TERMINAL_5);
		TERMINAL_63.addFollower(TERMINAL_6);
		TERMINAL_63.addFollower(TERMINAL_7);
		TERMINAL_63.addFollower(TERMINAL_8);
		TERMINAL_63.addFollower(TERMINAL_9);
		TERMINAL_63.addFollower(TERMINAL_41);
		TERMINAL_63.addFollower(TERMINAL_306);
		TERMINAL_63.addFollower(TERMINAL_307);
		TERMINAL_63.addFollower(TERMINAL_308);
		TERMINAL_63.addFollower(TERMINAL_309);
		TERMINAL_63.addFollower(TERMINAL_50);
		TERMINAL_63.addFollower(TERMINAL_60);
		TERMINAL_63.addFollower(TERMINAL_52);
		TERMINAL_63.addFollower(TERMINAL_58);
		TERMINAL_63.addFollower(TERMINAL_61);
		TERMINAL_63.addFollower(TERMINAL_62);
		TERMINAL_63.addFollower(TERMINAL_63);
		TERMINAL_63.addFollower(TERMINAL_54);
		TERMINAL_63.addFollower(TERMINAL_53);
		TERMINAL_63.addFollower(TERMINAL_59);
		TERMINAL_63.addFollower(TERMINAL_57);
		TERMINAL_63.addFollower(TERMINAL_65);
		TERMINAL_63.addFollower(TERMINAL_310);
		TERMINAL_63.addFollower(TERMINAL_311);
		TERMINAL_63.addFollower(TERMINAL_312);
		TERMINAL_63.addFollower(TERMINAL_313);
		TERMINAL_63.addFollower(TERMINAL_314);
		TERMINAL_63.addFollower(TERMINAL_315);
		TERMINAL_63.addFollower(TERMINAL_316);
		TERMINAL_63.addFollower(TERMINAL_140);
		TERMINAL_63.addFollower(TERMINAL_141);
		TERMINAL_63.addFollower(TERMINAL_142);
		TERMINAL_63.addFollower(TERMINAL_143);
		TERMINAL_63.addFollower(TERMINAL_144);
		TERMINAL_63.addFollower(TERMINAL_145);
		TERMINAL_63.addFollower(TERMINAL_146);
		TERMINAL_60.addFollower(TERMINAL_52);
		TERMINAL_60.addFollower(TERMINAL_58);
		TERMINAL_60.addFollower(TERMINAL_61);
		TERMINAL_60.addFollower(TERMINAL_62);
		TERMINAL_60.addFollower(TERMINAL_63);
		TERMINAL_60.addFollower(TERMINAL_54);
		TERMINAL_60.addFollower(TERMINAL_53);
		TERMINAL_330.addFollower(TERMINAL_340);
		TERMINAL_340.addFollower(TERMINAL_330);
		TERMINAL_340.addFollower(TERMINAL_331);
		TERMINAL_340.addFollower(TERMINAL_332);
		TERMINAL_340.addFollower(TERMINAL_333);
		TERMINAL_340.addFollower(TERMINAL_334);
		TERMINAL_340.addFollower(TERMINAL_335);
		TERMINAL_340.addFollower(TERMINAL_336);
		TERMINAL_340.addFollower(TERMINAL_337);
		TERMINAL_340.addFollower(TERMINAL_338);
		TERMINAL_340.addFollower(TERMINAL_339);
		TERMINAL_331.addFollower(TERMINAL_341);
		TERMINAL_341.addFollower(TERMINAL_342);
		TERMINAL_342.addFollower(TERMINAL_50);
		TERMINAL_342.addFollower(TERMINAL_51);
		TERMINAL_342.addFollower(TERMINAL_52);
		TERMINAL_342.addFollower(TERMINAL_53);
		TERMINAL_342.addFollower(TERMINAL_54);
		TERMINAL_342.addFollower(TERMINAL_55);
		TERMINAL_342.addFollower(TERMINAL_56);
		TERMINAL_342.addFollower(TERMINAL_57);
		TERMINAL_342.addFollower(TERMINAL_14);
		TERMINAL_342.addFollower(TERMINAL_58);
		TERMINAL_342.addFollower(TERMINAL_59);
		TERMINAL_342.addFollower(TERMINAL_60);
		TERMINAL_342.addFollower(TERMINAL_61);
		TERMINAL_342.addFollower(TERMINAL_62);
		TERMINAL_342.addFollower(TERMINAL_63);
		TERMINAL_342.addFollower(TERMINAL_64);
		TERMINAL_342.addFollower(TERMINAL_65);
		TERMINAL_342.addFollower(TERMINAL_66);
		TERMINAL_342.addFollower(TERMINAL_67);
		TERMINAL_342.addFollower(TERMINAL_314);
		TERMINAL_313.addFollower(TERMINAL_50);
		TERMINAL_313.addFollower(TERMINAL_51);
		TERMINAL_313.addFollower(TERMINAL_52);
		TERMINAL_313.addFollower(TERMINAL_53);
		TERMINAL_313.addFollower(TERMINAL_54);
		TERMINAL_313.addFollower(TERMINAL_55);
		TERMINAL_313.addFollower(TERMINAL_56);
		TERMINAL_313.addFollower(TERMINAL_57);
		TERMINAL_313.addFollower(TERMINAL_14);
		TERMINAL_313.addFollower(TERMINAL_58);
		TERMINAL_313.addFollower(TERMINAL_59);
		TERMINAL_313.addFollower(TERMINAL_60);
		TERMINAL_313.addFollower(TERMINAL_61);
		TERMINAL_313.addFollower(TERMINAL_62);
		TERMINAL_313.addFollower(TERMINAL_63);
		TERMINAL_313.addFollower(TERMINAL_64);
		TERMINAL_313.addFollower(TERMINAL_65);
		TERMINAL_313.addFollower(TERMINAL_66);
		TERMINAL_313.addFollower(TERMINAL_67);
		TERMINAL_314.addFollower(TERMINAL_330);
		TERMINAL_314.addFollower(TERMINAL_331);
		TERMINAL_314.addFollower(TERMINAL_332);
		TERMINAL_314.addFollower(TERMINAL_333);
		TERMINAL_314.addFollower(TERMINAL_334);
		TERMINAL_314.addFollower(TERMINAL_335);
		TERMINAL_314.addFollower(TERMINAL_336);
		TERMINAL_314.addFollower(TERMINAL_337);
		TERMINAL_314.addFollower(TERMINAL_338);
		TERMINAL_314.addFollower(TERMINAL_339);
		TERMINAL_332.addFollower(TERMINAL_343);
		TERMINAL_343.addFollower(TERMINAL_330);
		TERMINAL_343.addFollower(TERMINAL_331);
		TERMINAL_343.addFollower(TERMINAL_332);
		TERMINAL_343.addFollower(TERMINAL_333);
		TERMINAL_343.addFollower(TERMINAL_334);
		TERMINAL_343.addFollower(TERMINAL_335);
		TERMINAL_343.addFollower(TERMINAL_336);
		TERMINAL_343.addFollower(TERMINAL_337);
		TERMINAL_343.addFollower(TERMINAL_338);
		TERMINAL_343.addFollower(TERMINAL_339);
		TERMINAL_333.addFollower(TERMINAL_344);
		TERMINAL_344.addFollower(TERMINAL_330);
		TERMINAL_344.addFollower(TERMINAL_331);
		TERMINAL_344.addFollower(TERMINAL_332);
		TERMINAL_344.addFollower(TERMINAL_333);
		TERMINAL_344.addFollower(TERMINAL_334);
		TERMINAL_344.addFollower(TERMINAL_335);
		TERMINAL_344.addFollower(TERMINAL_336);
		TERMINAL_344.addFollower(TERMINAL_337);
		TERMINAL_344.addFollower(TERMINAL_338);
		TERMINAL_344.addFollower(TERMINAL_339);
		TERMINAL_334.addFollower(TERMINAL_50);
		TERMINAL_334.addFollower(TERMINAL_51);
		TERMINAL_334.addFollower(TERMINAL_52);
		TERMINAL_334.addFollower(TERMINAL_53);
		TERMINAL_334.addFollower(TERMINAL_54);
		TERMINAL_334.addFollower(TERMINAL_55);
		TERMINAL_334.addFollower(TERMINAL_56);
		TERMINAL_334.addFollower(TERMINAL_57);
		TERMINAL_334.addFollower(TERMINAL_14);
		TERMINAL_334.addFollower(TERMINAL_58);
		TERMINAL_334.addFollower(TERMINAL_59);
		TERMINAL_334.addFollower(TERMINAL_60);
		TERMINAL_334.addFollower(TERMINAL_61);
		TERMINAL_334.addFollower(TERMINAL_62);
		TERMINAL_334.addFollower(TERMINAL_63);
		TERMINAL_334.addFollower(TERMINAL_64);
		TERMINAL_334.addFollower(TERMINAL_65);
		TERMINAL_334.addFollower(TERMINAL_66);
		TERMINAL_334.addFollower(TERMINAL_67);
		TERMINAL_345.addFollower(TERMINAL_48);
		TERMINAL_345.addFollower(TERMINAL_5);
		TERMINAL_345.addFollower(TERMINAL_6);
		TERMINAL_345.addFollower(TERMINAL_7);
		TERMINAL_345.addFollower(TERMINAL_8);
		TERMINAL_345.addFollower(TERMINAL_9);
		TERMINAL_345.addFollower(TERMINAL_41);
		TERMINAL_345.addFollower(TERMINAL_57);
		TERMINAL_345.addFollower(TERMINAL_56);
		TERMINAL_345.addFollower(TERMINAL_55);
		TERMINAL_345.addFollower(TERMINAL_60);
		TERMINAL_345.addFollower(TERMINAL_52);
		TERMINAL_345.addFollower(TERMINAL_58);
		TERMINAL_345.addFollower(TERMINAL_61);
		TERMINAL_345.addFollower(TERMINAL_62);
		TERMINAL_345.addFollower(TERMINAL_63);
		TERMINAL_345.addFollower(TERMINAL_54);
		TERMINAL_345.addFollower(TERMINAL_53);
		TERMINAL_345.addFollower(TERMINAL_59);
		TERMINAL_345.addFollower(TERMINAL_66);
		TERMINAL_345.addFollower(TERMINAL_50);
		TERMINAL_345.addFollower(TERMINAL_306);
		TERMINAL_345.addFollower(TERMINAL_307);
		TERMINAL_345.addFollower(TERMINAL_308);
		TERMINAL_345.addFollower(TERMINAL_309);
		TERMINAL_345.addFollower(TERMINAL_65);
		TERMINAL_345.addFollower(TERMINAL_310);
		TERMINAL_345.addFollower(TERMINAL_311);
		TERMINAL_345.addFollower(TERMINAL_312);
		TERMINAL_345.addFollower(TERMINAL_313);
		TERMINAL_345.addFollower(TERMINAL_314);
		TERMINAL_345.addFollower(TERMINAL_315);
		TERMINAL_345.addFollower(TERMINAL_316);
		TERMINAL_345.addFollower(TERMINAL_140);
		TERMINAL_345.addFollower(TERMINAL_141);
		TERMINAL_345.addFollower(TERMINAL_142);
		TERMINAL_345.addFollower(TERMINAL_143);
		TERMINAL_345.addFollower(TERMINAL_144);
		TERMINAL_345.addFollower(TERMINAL_145);
		TERMINAL_345.addFollower(TERMINAL_146);
		TERMINAL_345.addFollower(TERMINAL_326);
		TERMINAL_345.addFollower(TERMINAL_327);
		TERMINAL_335.addFollower(TERMINAL_50);
		TERMINAL_335.addFollower(TERMINAL_51);
		TERMINAL_335.addFollower(TERMINAL_52);
		TERMINAL_335.addFollower(TERMINAL_53);
		TERMINAL_335.addFollower(TERMINAL_54);
		TERMINAL_335.addFollower(TERMINAL_55);
		TERMINAL_335.addFollower(TERMINAL_56);
		TERMINAL_335.addFollower(TERMINAL_57);
		TERMINAL_335.addFollower(TERMINAL_14);
		TERMINAL_335.addFollower(TERMINAL_58);
		TERMINAL_335.addFollower(TERMINAL_59);
		TERMINAL_335.addFollower(TERMINAL_60);
		TERMINAL_335.addFollower(TERMINAL_61);
		TERMINAL_335.addFollower(TERMINAL_62);
		TERMINAL_335.addFollower(TERMINAL_63);
		TERMINAL_335.addFollower(TERMINAL_64);
		TERMINAL_335.addFollower(TERMINAL_65);
		TERMINAL_335.addFollower(TERMINAL_66);
		TERMINAL_335.addFollower(TERMINAL_67);
		TERMINAL_336.addFollower(TERMINAL_50);
		TERMINAL_336.addFollower(TERMINAL_51);
		TERMINAL_336.addFollower(TERMINAL_52);
		TERMINAL_336.addFollower(TERMINAL_53);
		TERMINAL_336.addFollower(TERMINAL_54);
		TERMINAL_336.addFollower(TERMINAL_55);
		TERMINAL_336.addFollower(TERMINAL_56);
		TERMINAL_336.addFollower(TERMINAL_57);
		TERMINAL_336.addFollower(TERMINAL_14);
		TERMINAL_336.addFollower(TERMINAL_58);
		TERMINAL_336.addFollower(TERMINAL_59);
		TERMINAL_336.addFollower(TERMINAL_60);
		TERMINAL_336.addFollower(TERMINAL_61);
		TERMINAL_336.addFollower(TERMINAL_62);
		TERMINAL_336.addFollower(TERMINAL_63);
		TERMINAL_336.addFollower(TERMINAL_64);
		TERMINAL_336.addFollower(TERMINAL_65);
		TERMINAL_336.addFollower(TERMINAL_66);
		TERMINAL_336.addFollower(TERMINAL_67);
		TERMINAL_337.addFollower(TERMINAL_50);
		TERMINAL_337.addFollower(TERMINAL_51);
		TERMINAL_337.addFollower(TERMINAL_52);
		TERMINAL_337.addFollower(TERMINAL_53);
		TERMINAL_337.addFollower(TERMINAL_54);
		TERMINAL_337.addFollower(TERMINAL_55);
		TERMINAL_337.addFollower(TERMINAL_56);
		TERMINAL_337.addFollower(TERMINAL_57);
		TERMINAL_337.addFollower(TERMINAL_14);
		TERMINAL_337.addFollower(TERMINAL_58);
		TERMINAL_337.addFollower(TERMINAL_59);
		TERMINAL_337.addFollower(TERMINAL_60);
		TERMINAL_337.addFollower(TERMINAL_61);
		TERMINAL_337.addFollower(TERMINAL_62);
		TERMINAL_337.addFollower(TERMINAL_63);
		TERMINAL_337.addFollower(TERMINAL_64);
		TERMINAL_337.addFollower(TERMINAL_65);
		TERMINAL_337.addFollower(TERMINAL_66);
		TERMINAL_337.addFollower(TERMINAL_67);
		TERMINAL_338.addFollower(TERMINAL_50);
		TERMINAL_338.addFollower(TERMINAL_51);
		TERMINAL_338.addFollower(TERMINAL_52);
		TERMINAL_338.addFollower(TERMINAL_53);
		TERMINAL_338.addFollower(TERMINAL_54);
		TERMINAL_338.addFollower(TERMINAL_55);
		TERMINAL_338.addFollower(TERMINAL_56);
		TERMINAL_338.addFollower(TERMINAL_57);
		TERMINAL_338.addFollower(TERMINAL_14);
		TERMINAL_338.addFollower(TERMINAL_58);
		TERMINAL_338.addFollower(TERMINAL_59);
		TERMINAL_338.addFollower(TERMINAL_60);
		TERMINAL_338.addFollower(TERMINAL_61);
		TERMINAL_338.addFollower(TERMINAL_62);
		TERMINAL_338.addFollower(TERMINAL_63);
		TERMINAL_338.addFollower(TERMINAL_64);
		TERMINAL_338.addFollower(TERMINAL_65);
		TERMINAL_338.addFollower(TERMINAL_66);
		TERMINAL_338.addFollower(TERMINAL_67);
		TERMINAL_339.addFollower(TERMINAL_346);
		TERMINAL_339.addFollower(TERMINAL_347);
		TERMINAL_339.addFollower(TERMINAL_348);
		TERMINAL_339.addFollower(TERMINAL_349);
		TERMINAL_339.addFollower(TERMINAL_48);
		TERMINAL_339.addFollower(TERMINAL_5);
		TERMINAL_339.addFollower(TERMINAL_6);
		TERMINAL_339.addFollower(TERMINAL_7);
		TERMINAL_339.addFollower(TERMINAL_8);
		TERMINAL_339.addFollower(TERMINAL_9);
		TERMINAL_339.addFollower(TERMINAL_41);
		TERMINAL_339.addFollower(TERMINAL_57);
		TERMINAL_339.addFollower(TERMINAL_56);
		TERMINAL_339.addFollower(TERMINAL_55);
		TERMINAL_339.addFollower(TERMINAL_60);
		TERMINAL_339.addFollower(TERMINAL_52);
		TERMINAL_339.addFollower(TERMINAL_58);
		TERMINAL_339.addFollower(TERMINAL_61);
		TERMINAL_339.addFollower(TERMINAL_62);
		TERMINAL_339.addFollower(TERMINAL_63);
		TERMINAL_339.addFollower(TERMINAL_54);
		TERMINAL_339.addFollower(TERMINAL_53);
		TERMINAL_339.addFollower(TERMINAL_59);
		TERMINAL_339.addFollower(TERMINAL_66);
		TERMINAL_339.addFollower(TERMINAL_50);
		TERMINAL_339.addFollower(TERMINAL_306);
		TERMINAL_339.addFollower(TERMINAL_307);
		TERMINAL_339.addFollower(TERMINAL_308);
		TERMINAL_339.addFollower(TERMINAL_309);
		TERMINAL_339.addFollower(TERMINAL_65);
		TERMINAL_339.addFollower(TERMINAL_310);
		TERMINAL_339.addFollower(TERMINAL_311);
		TERMINAL_339.addFollower(TERMINAL_312);
		TERMINAL_339.addFollower(TERMINAL_313);
		TERMINAL_339.addFollower(TERMINAL_314);
		TERMINAL_339.addFollower(TERMINAL_315);
		TERMINAL_339.addFollower(TERMINAL_316);
		TERMINAL_339.addFollower(TERMINAL_140);
		TERMINAL_339.addFollower(TERMINAL_141);
		TERMINAL_339.addFollower(TERMINAL_142);
		TERMINAL_339.addFollower(TERMINAL_143);
		TERMINAL_339.addFollower(TERMINAL_144);
		TERMINAL_339.addFollower(TERMINAL_145);
		TERMINAL_339.addFollower(TERMINAL_146);
		TERMINAL_339.addFollower(TERMINAL_326);
		TERMINAL_339.addFollower(TERMINAL_327);
		TERMINAL_346.addFollower(TERMINAL_50);
		TERMINAL_346.addFollower(TERMINAL_51);
		TERMINAL_346.addFollower(TERMINAL_52);
		TERMINAL_346.addFollower(TERMINAL_53);
		TERMINAL_346.addFollower(TERMINAL_54);
		TERMINAL_346.addFollower(TERMINAL_55);
		TERMINAL_346.addFollower(TERMINAL_56);
		TERMINAL_346.addFollower(TERMINAL_57);
		TERMINAL_346.addFollower(TERMINAL_14);
		TERMINAL_346.addFollower(TERMINAL_58);
		TERMINAL_346.addFollower(TERMINAL_59);
		TERMINAL_346.addFollower(TERMINAL_60);
		TERMINAL_346.addFollower(TERMINAL_61);
		TERMINAL_346.addFollower(TERMINAL_62);
		TERMINAL_346.addFollower(TERMINAL_63);
		TERMINAL_346.addFollower(TERMINAL_64);
		TERMINAL_346.addFollower(TERMINAL_65);
		TERMINAL_346.addFollower(TERMINAL_66);
		TERMINAL_346.addFollower(TERMINAL_67);
		TERMINAL_347.addFollower(TERMINAL_50);
		TERMINAL_347.addFollower(TERMINAL_51);
		TERMINAL_347.addFollower(TERMINAL_52);
		TERMINAL_347.addFollower(TERMINAL_53);
		TERMINAL_347.addFollower(TERMINAL_54);
		TERMINAL_347.addFollower(TERMINAL_55);
		TERMINAL_347.addFollower(TERMINAL_56);
		TERMINAL_347.addFollower(TERMINAL_57);
		TERMINAL_347.addFollower(TERMINAL_14);
		TERMINAL_347.addFollower(TERMINAL_58);
		TERMINAL_347.addFollower(TERMINAL_59);
		TERMINAL_347.addFollower(TERMINAL_60);
		TERMINAL_347.addFollower(TERMINAL_61);
		TERMINAL_347.addFollower(TERMINAL_62);
		TERMINAL_347.addFollower(TERMINAL_63);
		TERMINAL_347.addFollower(TERMINAL_64);
		TERMINAL_347.addFollower(TERMINAL_65);
		TERMINAL_347.addFollower(TERMINAL_66);
		TERMINAL_347.addFollower(TERMINAL_67);
		TERMINAL_348.addFollower(TERMINAL_50);
		TERMINAL_348.addFollower(TERMINAL_51);
		TERMINAL_348.addFollower(TERMINAL_52);
		TERMINAL_348.addFollower(TERMINAL_53);
		TERMINAL_348.addFollower(TERMINAL_54);
		TERMINAL_348.addFollower(TERMINAL_55);
		TERMINAL_348.addFollower(TERMINAL_56);
		TERMINAL_348.addFollower(TERMINAL_57);
		TERMINAL_348.addFollower(TERMINAL_14);
		TERMINAL_348.addFollower(TERMINAL_58);
		TERMINAL_348.addFollower(TERMINAL_59);
		TERMINAL_348.addFollower(TERMINAL_60);
		TERMINAL_348.addFollower(TERMINAL_61);
		TERMINAL_348.addFollower(TERMINAL_62);
		TERMINAL_348.addFollower(TERMINAL_63);
		TERMINAL_348.addFollower(TERMINAL_64);
		TERMINAL_348.addFollower(TERMINAL_65);
		TERMINAL_348.addFollower(TERMINAL_66);
		TERMINAL_348.addFollower(TERMINAL_67);
		TERMINAL_349.addFollower(TERMINAL_50);
		TERMINAL_349.addFollower(TERMINAL_51);
		TERMINAL_349.addFollower(TERMINAL_52);
		TERMINAL_349.addFollower(TERMINAL_53);
		TERMINAL_349.addFollower(TERMINAL_54);
		TERMINAL_349.addFollower(TERMINAL_55);
		TERMINAL_349.addFollower(TERMINAL_56);
		TERMINAL_349.addFollower(TERMINAL_57);
		TERMINAL_349.addFollower(TERMINAL_14);
		TERMINAL_349.addFollower(TERMINAL_58);
		TERMINAL_349.addFollower(TERMINAL_59);
		TERMINAL_349.addFollower(TERMINAL_60);
		TERMINAL_349.addFollower(TERMINAL_61);
		TERMINAL_349.addFollower(TERMINAL_62);
		TERMINAL_349.addFollower(TERMINAL_63);
		TERMINAL_349.addFollower(TERMINAL_64);
		TERMINAL_349.addFollower(TERMINAL_65);
		TERMINAL_349.addFollower(TERMINAL_66);
		TERMINAL_349.addFollower(TERMINAL_67);
		TERMINAL_350.addFollower(TERMINAL_359);
		TERMINAL_359.addFollower(TERMINAL_350);
		TERMINAL_359.addFollower(TERMINAL_351);
		TERMINAL_359.addFollower(TERMINAL_352);
		TERMINAL_359.addFollower(TERMINAL_353);
		TERMINAL_359.addFollower(TERMINAL_354);
		TERMINAL_359.addFollower(TERMINAL_355);
		TERMINAL_359.addFollower(TERMINAL_356);
		TERMINAL_359.addFollower(TERMINAL_357);
		TERMINAL_359.addFollower(TERMINAL_358);
		TERMINAL_359.addFollower(TERMINAL_48);
		TERMINAL_359.addFollower(TERMINAL_5);
		TERMINAL_359.addFollower(TERMINAL_6);
		TERMINAL_359.addFollower(TERMINAL_7);
		TERMINAL_359.addFollower(TERMINAL_8);
		TERMINAL_359.addFollower(TERMINAL_9);
		TERMINAL_359.addFollower(TERMINAL_41);
		TERMINAL_359.addFollower(TERMINAL_57);
		TERMINAL_359.addFollower(TERMINAL_56);
		TERMINAL_359.addFollower(TERMINAL_55);
		TERMINAL_359.addFollower(TERMINAL_60);
		TERMINAL_359.addFollower(TERMINAL_52);
		TERMINAL_359.addFollower(TERMINAL_58);
		TERMINAL_359.addFollower(TERMINAL_61);
		TERMINAL_359.addFollower(TERMINAL_62);
		TERMINAL_359.addFollower(TERMINAL_63);
		TERMINAL_359.addFollower(TERMINAL_54);
		TERMINAL_359.addFollower(TERMINAL_53);
		TERMINAL_359.addFollower(TERMINAL_59);
		TERMINAL_359.addFollower(TERMINAL_66);
		TERMINAL_359.addFollower(TERMINAL_50);
		TERMINAL_359.addFollower(TERMINAL_306);
		TERMINAL_359.addFollower(TERMINAL_307);
		TERMINAL_359.addFollower(TERMINAL_308);
		TERMINAL_359.addFollower(TERMINAL_309);
		TERMINAL_359.addFollower(TERMINAL_65);
		TERMINAL_359.addFollower(TERMINAL_310);
		TERMINAL_359.addFollower(TERMINAL_311);
		TERMINAL_359.addFollower(TERMINAL_312);
		TERMINAL_359.addFollower(TERMINAL_313);
		TERMINAL_359.addFollower(TERMINAL_314);
		TERMINAL_359.addFollower(TERMINAL_315);
		TERMINAL_359.addFollower(TERMINAL_316);
		TERMINAL_359.addFollower(TERMINAL_140);
		TERMINAL_359.addFollower(TERMINAL_141);
		TERMINAL_359.addFollower(TERMINAL_142);
		TERMINAL_359.addFollower(TERMINAL_143);
		TERMINAL_359.addFollower(TERMINAL_144);
		TERMINAL_359.addFollower(TERMINAL_145);
		TERMINAL_359.addFollower(TERMINAL_146);
		TERMINAL_359.addFollower(TERMINAL_326);
		TERMINAL_359.addFollower(TERMINAL_327);
		TERMINAL_351.addFollower(TERMINAL_360);
		TERMINAL_360.addFollower(TERMINAL_361);
		TERMINAL_361.addFollower(TERMINAL_50);
		TERMINAL_361.addFollower(TERMINAL_51);
		TERMINAL_361.addFollower(TERMINAL_52);
		TERMINAL_361.addFollower(TERMINAL_53);
		TERMINAL_361.addFollower(TERMINAL_54);
		TERMINAL_361.addFollower(TERMINAL_55);
		TERMINAL_361.addFollower(TERMINAL_56);
		TERMINAL_361.addFollower(TERMINAL_57);
		TERMINAL_361.addFollower(TERMINAL_14);
		TERMINAL_361.addFollower(TERMINAL_58);
		TERMINAL_361.addFollower(TERMINAL_59);
		TERMINAL_361.addFollower(TERMINAL_60);
		TERMINAL_361.addFollower(TERMINAL_61);
		TERMINAL_361.addFollower(TERMINAL_62);
		TERMINAL_361.addFollower(TERMINAL_63);
		TERMINAL_361.addFollower(TERMINAL_64);
		TERMINAL_361.addFollower(TERMINAL_65);
		TERMINAL_361.addFollower(TERMINAL_66);
		TERMINAL_361.addFollower(TERMINAL_67);
		TERMINAL_361.addFollower(TERMINAL_362);
		TERMINAL_363.addFollower(TERMINAL_50);
		TERMINAL_363.addFollower(TERMINAL_51);
		TERMINAL_363.addFollower(TERMINAL_52);
		TERMINAL_363.addFollower(TERMINAL_53);
		TERMINAL_363.addFollower(TERMINAL_54);
		TERMINAL_363.addFollower(TERMINAL_55);
		TERMINAL_363.addFollower(TERMINAL_56);
		TERMINAL_363.addFollower(TERMINAL_57);
		TERMINAL_363.addFollower(TERMINAL_14);
		TERMINAL_363.addFollower(TERMINAL_58);
		TERMINAL_363.addFollower(TERMINAL_59);
		TERMINAL_363.addFollower(TERMINAL_60);
		TERMINAL_363.addFollower(TERMINAL_61);
		TERMINAL_363.addFollower(TERMINAL_62);
		TERMINAL_363.addFollower(TERMINAL_63);
		TERMINAL_363.addFollower(TERMINAL_64);
		TERMINAL_363.addFollower(TERMINAL_65);
		TERMINAL_363.addFollower(TERMINAL_66);
		TERMINAL_363.addFollower(TERMINAL_67);
		TERMINAL_362.addFollower(TERMINAL_350);
		TERMINAL_362.addFollower(TERMINAL_351);
		TERMINAL_362.addFollower(TERMINAL_352);
		TERMINAL_362.addFollower(TERMINAL_353);
		TERMINAL_362.addFollower(TERMINAL_354);
		TERMINAL_362.addFollower(TERMINAL_355);
		TERMINAL_362.addFollower(TERMINAL_356);
		TERMINAL_362.addFollower(TERMINAL_357);
		TERMINAL_362.addFollower(TERMINAL_358);
		TERMINAL_362.addFollower(TERMINAL_48);
		TERMINAL_362.addFollower(TERMINAL_5);
		TERMINAL_362.addFollower(TERMINAL_6);
		TERMINAL_362.addFollower(TERMINAL_7);
		TERMINAL_362.addFollower(TERMINAL_8);
		TERMINAL_362.addFollower(TERMINAL_9);
		TERMINAL_362.addFollower(TERMINAL_41);
		TERMINAL_362.addFollower(TERMINAL_57);
		TERMINAL_362.addFollower(TERMINAL_56);
		TERMINAL_362.addFollower(TERMINAL_55);
		TERMINAL_362.addFollower(TERMINAL_60);
		TERMINAL_362.addFollower(TERMINAL_52);
		TERMINAL_362.addFollower(TERMINAL_58);
		TERMINAL_362.addFollower(TERMINAL_61);
		TERMINAL_362.addFollower(TERMINAL_62);
		TERMINAL_362.addFollower(TERMINAL_63);
		TERMINAL_362.addFollower(TERMINAL_54);
		TERMINAL_362.addFollower(TERMINAL_53);
		TERMINAL_362.addFollower(TERMINAL_59);
		TERMINAL_362.addFollower(TERMINAL_66);
		TERMINAL_362.addFollower(TERMINAL_50);
		TERMINAL_362.addFollower(TERMINAL_306);
		TERMINAL_362.addFollower(TERMINAL_307);
		TERMINAL_362.addFollower(TERMINAL_308);
		TERMINAL_362.addFollower(TERMINAL_309);
		TERMINAL_362.addFollower(TERMINAL_65);
		TERMINAL_362.addFollower(TERMINAL_310);
		TERMINAL_362.addFollower(TERMINAL_311);
		TERMINAL_362.addFollower(TERMINAL_312);
		TERMINAL_362.addFollower(TERMINAL_313);
		TERMINAL_362.addFollower(TERMINAL_314);
		TERMINAL_362.addFollower(TERMINAL_315);
		TERMINAL_362.addFollower(TERMINAL_316);
		TERMINAL_362.addFollower(TERMINAL_140);
		TERMINAL_362.addFollower(TERMINAL_141);
		TERMINAL_362.addFollower(TERMINAL_142);
		TERMINAL_362.addFollower(TERMINAL_143);
		TERMINAL_362.addFollower(TERMINAL_144);
		TERMINAL_362.addFollower(TERMINAL_145);
		TERMINAL_362.addFollower(TERMINAL_146);
		TERMINAL_362.addFollower(TERMINAL_326);
		TERMINAL_362.addFollower(TERMINAL_327);
		TERMINAL_352.addFollower(TERMINAL_364);
		TERMINAL_364.addFollower(TERMINAL_350);
		TERMINAL_364.addFollower(TERMINAL_351);
		TERMINAL_364.addFollower(TERMINAL_352);
		TERMINAL_364.addFollower(TERMINAL_353);
		TERMINAL_364.addFollower(TERMINAL_354);
		TERMINAL_364.addFollower(TERMINAL_355);
		TERMINAL_364.addFollower(TERMINAL_356);
		TERMINAL_364.addFollower(TERMINAL_357);
		TERMINAL_364.addFollower(TERMINAL_358);
		TERMINAL_364.addFollower(TERMINAL_48);
		TERMINAL_364.addFollower(TERMINAL_5);
		TERMINAL_364.addFollower(TERMINAL_6);
		TERMINAL_364.addFollower(TERMINAL_7);
		TERMINAL_364.addFollower(TERMINAL_8);
		TERMINAL_364.addFollower(TERMINAL_9);
		TERMINAL_364.addFollower(TERMINAL_41);
		TERMINAL_364.addFollower(TERMINAL_57);
		TERMINAL_364.addFollower(TERMINAL_56);
		TERMINAL_364.addFollower(TERMINAL_55);
		TERMINAL_364.addFollower(TERMINAL_60);
		TERMINAL_364.addFollower(TERMINAL_52);
		TERMINAL_364.addFollower(TERMINAL_58);
		TERMINAL_364.addFollower(TERMINAL_61);
		TERMINAL_364.addFollower(TERMINAL_62);
		TERMINAL_364.addFollower(TERMINAL_63);
		TERMINAL_364.addFollower(TERMINAL_54);
		TERMINAL_364.addFollower(TERMINAL_53);
		TERMINAL_364.addFollower(TERMINAL_59);
		TERMINAL_364.addFollower(TERMINAL_66);
		TERMINAL_364.addFollower(TERMINAL_50);
		TERMINAL_364.addFollower(TERMINAL_306);
		TERMINAL_364.addFollower(TERMINAL_307);
		TERMINAL_364.addFollower(TERMINAL_308);
		TERMINAL_364.addFollower(TERMINAL_309);
		TERMINAL_364.addFollower(TERMINAL_65);
		TERMINAL_364.addFollower(TERMINAL_310);
		TERMINAL_364.addFollower(TERMINAL_311);
		TERMINAL_364.addFollower(TERMINAL_312);
		TERMINAL_364.addFollower(TERMINAL_313);
		TERMINAL_364.addFollower(TERMINAL_314);
		TERMINAL_364.addFollower(TERMINAL_315);
		TERMINAL_364.addFollower(TERMINAL_316);
		TERMINAL_364.addFollower(TERMINAL_140);
		TERMINAL_364.addFollower(TERMINAL_141);
		TERMINAL_364.addFollower(TERMINAL_142);
		TERMINAL_364.addFollower(TERMINAL_143);
		TERMINAL_364.addFollower(TERMINAL_144);
		TERMINAL_364.addFollower(TERMINAL_145);
		TERMINAL_364.addFollower(TERMINAL_146);
		TERMINAL_364.addFollower(TERMINAL_326);
		TERMINAL_364.addFollower(TERMINAL_327);
		TERMINAL_353.addFollower(TERMINAL_365);
		TERMINAL_365.addFollower(TERMINAL_350);
		TERMINAL_365.addFollower(TERMINAL_351);
		TERMINAL_365.addFollower(TERMINAL_352);
		TERMINAL_365.addFollower(TERMINAL_353);
		TERMINAL_365.addFollower(TERMINAL_354);
		TERMINAL_365.addFollower(TERMINAL_355);
		TERMINAL_365.addFollower(TERMINAL_356);
		TERMINAL_365.addFollower(TERMINAL_357);
		TERMINAL_365.addFollower(TERMINAL_358);
		TERMINAL_365.addFollower(TERMINAL_48);
		TERMINAL_365.addFollower(TERMINAL_5);
		TERMINAL_365.addFollower(TERMINAL_6);
		TERMINAL_365.addFollower(TERMINAL_7);
		TERMINAL_365.addFollower(TERMINAL_8);
		TERMINAL_365.addFollower(TERMINAL_9);
		TERMINAL_365.addFollower(TERMINAL_41);
		TERMINAL_365.addFollower(TERMINAL_57);
		TERMINAL_365.addFollower(TERMINAL_56);
		TERMINAL_365.addFollower(TERMINAL_55);
		TERMINAL_365.addFollower(TERMINAL_60);
		TERMINAL_365.addFollower(TERMINAL_52);
		TERMINAL_365.addFollower(TERMINAL_58);
		TERMINAL_365.addFollower(TERMINAL_61);
		TERMINAL_365.addFollower(TERMINAL_62);
		TERMINAL_365.addFollower(TERMINAL_63);
		TERMINAL_365.addFollower(TERMINAL_54);
		TERMINAL_365.addFollower(TERMINAL_53);
		TERMINAL_365.addFollower(TERMINAL_59);
		TERMINAL_365.addFollower(TERMINAL_66);
		TERMINAL_365.addFollower(TERMINAL_50);
		TERMINAL_365.addFollower(TERMINAL_306);
		TERMINAL_365.addFollower(TERMINAL_307);
		TERMINAL_365.addFollower(TERMINAL_308);
		TERMINAL_365.addFollower(TERMINAL_309);
		TERMINAL_365.addFollower(TERMINAL_65);
		TERMINAL_365.addFollower(TERMINAL_310);
		TERMINAL_365.addFollower(TERMINAL_311);
		TERMINAL_365.addFollower(TERMINAL_312);
		TERMINAL_365.addFollower(TERMINAL_313);
		TERMINAL_365.addFollower(TERMINAL_314);
		TERMINAL_365.addFollower(TERMINAL_315);
		TERMINAL_365.addFollower(TERMINAL_316);
		TERMINAL_365.addFollower(TERMINAL_140);
		TERMINAL_365.addFollower(TERMINAL_141);
		TERMINAL_365.addFollower(TERMINAL_142);
		TERMINAL_365.addFollower(TERMINAL_143);
		TERMINAL_365.addFollower(TERMINAL_144);
		TERMINAL_365.addFollower(TERMINAL_145);
		TERMINAL_365.addFollower(TERMINAL_146);
		TERMINAL_365.addFollower(TERMINAL_326);
		TERMINAL_365.addFollower(TERMINAL_327);
		TERMINAL_354.addFollower(TERMINAL_50);
		TERMINAL_354.addFollower(TERMINAL_51);
		TERMINAL_354.addFollower(TERMINAL_52);
		TERMINAL_354.addFollower(TERMINAL_53);
		TERMINAL_354.addFollower(TERMINAL_54);
		TERMINAL_354.addFollower(TERMINAL_55);
		TERMINAL_354.addFollower(TERMINAL_56);
		TERMINAL_354.addFollower(TERMINAL_57);
		TERMINAL_354.addFollower(TERMINAL_14);
		TERMINAL_354.addFollower(TERMINAL_58);
		TERMINAL_354.addFollower(TERMINAL_59);
		TERMINAL_354.addFollower(TERMINAL_60);
		TERMINAL_354.addFollower(TERMINAL_61);
		TERMINAL_354.addFollower(TERMINAL_62);
		TERMINAL_354.addFollower(TERMINAL_63);
		TERMINAL_354.addFollower(TERMINAL_64);
		TERMINAL_354.addFollower(TERMINAL_65);
		TERMINAL_354.addFollower(TERMINAL_66);
		TERMINAL_354.addFollower(TERMINAL_67);
		TERMINAL_355.addFollower(TERMINAL_50);
		TERMINAL_355.addFollower(TERMINAL_51);
		TERMINAL_355.addFollower(TERMINAL_52);
		TERMINAL_355.addFollower(TERMINAL_53);
		TERMINAL_355.addFollower(TERMINAL_54);
		TERMINAL_355.addFollower(TERMINAL_55);
		TERMINAL_355.addFollower(TERMINAL_56);
		TERMINAL_355.addFollower(TERMINAL_57);
		TERMINAL_355.addFollower(TERMINAL_14);
		TERMINAL_355.addFollower(TERMINAL_58);
		TERMINAL_355.addFollower(TERMINAL_59);
		TERMINAL_355.addFollower(TERMINAL_60);
		TERMINAL_355.addFollower(TERMINAL_61);
		TERMINAL_355.addFollower(TERMINAL_62);
		TERMINAL_355.addFollower(TERMINAL_63);
		TERMINAL_355.addFollower(TERMINAL_64);
		TERMINAL_355.addFollower(TERMINAL_65);
		TERMINAL_355.addFollower(TERMINAL_66);
		TERMINAL_355.addFollower(TERMINAL_67);
		TERMINAL_356.addFollower(TERMINAL_50);
		TERMINAL_356.addFollower(TERMINAL_51);
		TERMINAL_356.addFollower(TERMINAL_52);
		TERMINAL_356.addFollower(TERMINAL_53);
		TERMINAL_356.addFollower(TERMINAL_54);
		TERMINAL_356.addFollower(TERMINAL_55);
		TERMINAL_356.addFollower(TERMINAL_56);
		TERMINAL_356.addFollower(TERMINAL_57);
		TERMINAL_356.addFollower(TERMINAL_14);
		TERMINAL_356.addFollower(TERMINAL_58);
		TERMINAL_356.addFollower(TERMINAL_59);
		TERMINAL_356.addFollower(TERMINAL_60);
		TERMINAL_356.addFollower(TERMINAL_61);
		TERMINAL_356.addFollower(TERMINAL_62);
		TERMINAL_356.addFollower(TERMINAL_63);
		TERMINAL_356.addFollower(TERMINAL_64);
		TERMINAL_356.addFollower(TERMINAL_65);
		TERMINAL_356.addFollower(TERMINAL_66);
		TERMINAL_356.addFollower(TERMINAL_67);
		TERMINAL_357.addFollower(TERMINAL_50);
		TERMINAL_357.addFollower(TERMINAL_51);
		TERMINAL_357.addFollower(TERMINAL_52);
		TERMINAL_357.addFollower(TERMINAL_53);
		TERMINAL_357.addFollower(TERMINAL_54);
		TERMINAL_357.addFollower(TERMINAL_55);
		TERMINAL_357.addFollower(TERMINAL_56);
		TERMINAL_357.addFollower(TERMINAL_57);
		TERMINAL_357.addFollower(TERMINAL_14);
		TERMINAL_357.addFollower(TERMINAL_58);
		TERMINAL_357.addFollower(TERMINAL_59);
		TERMINAL_357.addFollower(TERMINAL_60);
		TERMINAL_357.addFollower(TERMINAL_61);
		TERMINAL_357.addFollower(TERMINAL_62);
		TERMINAL_357.addFollower(TERMINAL_63);
		TERMINAL_357.addFollower(TERMINAL_64);
		TERMINAL_357.addFollower(TERMINAL_65);
		TERMINAL_357.addFollower(TERMINAL_66);
		TERMINAL_357.addFollower(TERMINAL_67);
		TERMINAL_358.addFollower(TERMINAL_50);
		TERMINAL_358.addFollower(TERMINAL_51);
		TERMINAL_358.addFollower(TERMINAL_52);
		TERMINAL_358.addFollower(TERMINAL_53);
		TERMINAL_358.addFollower(TERMINAL_54);
		TERMINAL_358.addFollower(TERMINAL_55);
		TERMINAL_358.addFollower(TERMINAL_56);
		TERMINAL_358.addFollower(TERMINAL_57);
		TERMINAL_358.addFollower(TERMINAL_14);
		TERMINAL_358.addFollower(TERMINAL_58);
		TERMINAL_358.addFollower(TERMINAL_59);
		TERMINAL_358.addFollower(TERMINAL_60);
		TERMINAL_358.addFollower(TERMINAL_61);
		TERMINAL_358.addFollower(TERMINAL_62);
		TERMINAL_358.addFollower(TERMINAL_63);
		TERMINAL_358.addFollower(TERMINAL_64);
		TERMINAL_358.addFollower(TERMINAL_65);
		TERMINAL_358.addFollower(TERMINAL_66);
		TERMINAL_358.addFollower(TERMINAL_67);
		TERMINAL_62.addFollower(TERMINAL_366);
		TERMINAL_366.addFollower(TERMINAL_367);
		TERMINAL_367.addFollower(TERMINAL_368);
		TERMINAL_368.addFollower(TERMINAL_369);
		TERMINAL_369.addFollower(TERMINAL_50);
		TERMINAL_369.addFollower(TERMINAL_51);
		TERMINAL_369.addFollower(TERMINAL_52);
		TERMINAL_369.addFollower(TERMINAL_53);
		TERMINAL_369.addFollower(TERMINAL_54);
		TERMINAL_369.addFollower(TERMINAL_55);
		TERMINAL_369.addFollower(TERMINAL_56);
		TERMINAL_369.addFollower(TERMINAL_57);
		TERMINAL_369.addFollower(TERMINAL_14);
		TERMINAL_369.addFollower(TERMINAL_58);
		TERMINAL_369.addFollower(TERMINAL_59);
		TERMINAL_369.addFollower(TERMINAL_60);
		TERMINAL_369.addFollower(TERMINAL_61);
		TERMINAL_369.addFollower(TERMINAL_62);
		TERMINAL_369.addFollower(TERMINAL_63);
		TERMINAL_369.addFollower(TERMINAL_64);
		TERMINAL_369.addFollower(TERMINAL_65);
		TERMINAL_369.addFollower(TERMINAL_66);
		TERMINAL_369.addFollower(TERMINAL_67);
		TERMINAL_369.addFollower(TERMINAL_316);
		TERMINAL_315.addFollower(TERMINAL_50);
		TERMINAL_315.addFollower(TERMINAL_51);
		TERMINAL_315.addFollower(TERMINAL_52);
		TERMINAL_315.addFollower(TERMINAL_53);
		TERMINAL_315.addFollower(TERMINAL_54);
		TERMINAL_315.addFollower(TERMINAL_55);
		TERMINAL_315.addFollower(TERMINAL_56);
		TERMINAL_315.addFollower(TERMINAL_57);
		TERMINAL_315.addFollower(TERMINAL_14);
		TERMINAL_315.addFollower(TERMINAL_58);
		TERMINAL_315.addFollower(TERMINAL_59);
		TERMINAL_315.addFollower(TERMINAL_60);
		TERMINAL_315.addFollower(TERMINAL_61);
		TERMINAL_315.addFollower(TERMINAL_62);
		TERMINAL_315.addFollower(TERMINAL_63);
		TERMINAL_315.addFollower(TERMINAL_64);
		TERMINAL_315.addFollower(TERMINAL_65);
		TERMINAL_315.addFollower(TERMINAL_66);
		TERMINAL_315.addFollower(TERMINAL_67);
		TERMINAL_316.addFollower(TERMINAL_48);
		TERMINAL_316.addFollower(TERMINAL_5);
		TERMINAL_316.addFollower(TERMINAL_6);
		TERMINAL_316.addFollower(TERMINAL_7);
		TERMINAL_316.addFollower(TERMINAL_8);
		TERMINAL_316.addFollower(TERMINAL_9);
		TERMINAL_316.addFollower(TERMINAL_41);
		TERMINAL_316.addFollower(TERMINAL_57);
		TERMINAL_316.addFollower(TERMINAL_56);
		TERMINAL_316.addFollower(TERMINAL_55);
		TERMINAL_316.addFollower(TERMINAL_60);
		TERMINAL_316.addFollower(TERMINAL_52);
		TERMINAL_316.addFollower(TERMINAL_58);
		TERMINAL_316.addFollower(TERMINAL_61);
		TERMINAL_316.addFollower(TERMINAL_62);
		TERMINAL_316.addFollower(TERMINAL_63);
		TERMINAL_316.addFollower(TERMINAL_54);
		TERMINAL_316.addFollower(TERMINAL_53);
		TERMINAL_316.addFollower(TERMINAL_59);
		TERMINAL_316.addFollower(TERMINAL_66);
		TERMINAL_316.addFollower(TERMINAL_50);
		TERMINAL_316.addFollower(TERMINAL_306);
		TERMINAL_316.addFollower(TERMINAL_307);
		TERMINAL_316.addFollower(TERMINAL_308);
		TERMINAL_316.addFollower(TERMINAL_309);
		TERMINAL_316.addFollower(TERMINAL_65);
		TERMINAL_316.addFollower(TERMINAL_310);
		TERMINAL_316.addFollower(TERMINAL_311);
		TERMINAL_316.addFollower(TERMINAL_312);
		TERMINAL_316.addFollower(TERMINAL_313);
		TERMINAL_316.addFollower(TERMINAL_314);
		TERMINAL_316.addFollower(TERMINAL_315);
		TERMINAL_316.addFollower(TERMINAL_316);
		TERMINAL_316.addFollower(TERMINAL_140);
		TERMINAL_316.addFollower(TERMINAL_141);
		TERMINAL_316.addFollower(TERMINAL_142);
		TERMINAL_316.addFollower(TERMINAL_143);
		TERMINAL_316.addFollower(TERMINAL_144);
		TERMINAL_316.addFollower(TERMINAL_145);
		TERMINAL_316.addFollower(TERMINAL_146);
		TERMINAL_64.addFollower(TERMINAL_48);
		TERMINAL_64.addFollower(TERMINAL_5);
		TERMINAL_64.addFollower(TERMINAL_6);
		TERMINAL_64.addFollower(TERMINAL_7);
		TERMINAL_64.addFollower(TERMINAL_8);
		TERMINAL_64.addFollower(TERMINAL_9);
		TERMINAL_64.addFollower(TERMINAL_41);
		TERMINAL_64.addFollower(TERMINAL_306);
		TERMINAL_64.addFollower(TERMINAL_307);
		TERMINAL_64.addFollower(TERMINAL_308);
		TERMINAL_64.addFollower(TERMINAL_309);
		TERMINAL_64.addFollower(TERMINAL_50);
		TERMINAL_64.addFollower(TERMINAL_60);
		TERMINAL_64.addFollower(TERMINAL_52);
		TERMINAL_64.addFollower(TERMINAL_58);
		TERMINAL_64.addFollower(TERMINAL_61);
		TERMINAL_64.addFollower(TERMINAL_62);
		TERMINAL_64.addFollower(TERMINAL_63);
		TERMINAL_64.addFollower(TERMINAL_54);
		TERMINAL_64.addFollower(TERMINAL_53);
		TERMINAL_64.addFollower(TERMINAL_59);
		TERMINAL_64.addFollower(TERMINAL_57);
		TERMINAL_64.addFollower(TERMINAL_65);
		TERMINAL_64.addFollower(TERMINAL_310);
		TERMINAL_64.addFollower(TERMINAL_311);
		TERMINAL_64.addFollower(TERMINAL_312);
		TERMINAL_64.addFollower(TERMINAL_313);
		TERMINAL_64.addFollower(TERMINAL_314);
		TERMINAL_64.addFollower(TERMINAL_315);
		TERMINAL_64.addFollower(TERMINAL_316);
		TERMINAL_64.addFollower(TERMINAL_140);
		TERMINAL_64.addFollower(TERMINAL_141);
		TERMINAL_64.addFollower(TERMINAL_142);
		TERMINAL_64.addFollower(TERMINAL_143);
		TERMINAL_64.addFollower(TERMINAL_144);
		TERMINAL_64.addFollower(TERMINAL_145);
		TERMINAL_64.addFollower(TERMINAL_146);
		TERMINAL_65.addFollower(TERMINAL_48);
		TERMINAL_65.addFollower(TERMINAL_5);
		TERMINAL_65.addFollower(TERMINAL_6);
		TERMINAL_65.addFollower(TERMINAL_7);
		TERMINAL_65.addFollower(TERMINAL_8);
		TERMINAL_65.addFollower(TERMINAL_9);
		TERMINAL_65.addFollower(TERMINAL_41);
		TERMINAL_65.addFollower(TERMINAL_306);
		TERMINAL_65.addFollower(TERMINAL_307);
		TERMINAL_65.addFollower(TERMINAL_308);
		TERMINAL_65.addFollower(TERMINAL_309);
		TERMINAL_65.addFollower(TERMINAL_50);
		TERMINAL_65.addFollower(TERMINAL_60);
		TERMINAL_65.addFollower(TERMINAL_52);
		TERMINAL_65.addFollower(TERMINAL_58);
		TERMINAL_65.addFollower(TERMINAL_61);
		TERMINAL_65.addFollower(TERMINAL_62);
		TERMINAL_65.addFollower(TERMINAL_63);
		TERMINAL_65.addFollower(TERMINAL_54);
		TERMINAL_65.addFollower(TERMINAL_53);
		TERMINAL_65.addFollower(TERMINAL_59);
		TERMINAL_65.addFollower(TERMINAL_57);
		TERMINAL_65.addFollower(TERMINAL_65);
		TERMINAL_65.addFollower(TERMINAL_310);
		TERMINAL_65.addFollower(TERMINAL_311);
		TERMINAL_65.addFollower(TERMINAL_312);
		TERMINAL_65.addFollower(TERMINAL_313);
		TERMINAL_65.addFollower(TERMINAL_314);
		TERMINAL_65.addFollower(TERMINAL_315);
		TERMINAL_65.addFollower(TERMINAL_316);
		TERMINAL_65.addFollower(TERMINAL_140);
		TERMINAL_65.addFollower(TERMINAL_141);
		TERMINAL_65.addFollower(TERMINAL_142);
		TERMINAL_65.addFollower(TERMINAL_143);
		TERMINAL_65.addFollower(TERMINAL_144);
		TERMINAL_65.addFollower(TERMINAL_145);
		TERMINAL_65.addFollower(TERMINAL_146);
		TERMINAL_66.addFollower(TERMINAL_370);
		TERMINAL_370.addFollower(TERMINAL_135);
		TERMINAL_370.addFollower(TERMINAL_136);
		TERMINAL_370.addFollower(TERMINAL_137);
		TERMINAL_370.addFollower(TERMINAL_138);
		TERMINAL_370.addFollower(TERMINAL_139);
		TERMINAL_135.addFollower(TERMINAL_371);
		TERMINAL_371.addFollower(TERMINAL_372);
		TERMINAL_372.addFollower(TERMINAL_135);
		TERMINAL_372.addFollower(TERMINAL_136);
		TERMINAL_372.addFollower(TERMINAL_137);
		TERMINAL_372.addFollower(TERMINAL_138);
		TERMINAL_372.addFollower(TERMINAL_139);
		TERMINAL_136.addFollower(TERMINAL_373);
		TERMINAL_373.addFollower(TERMINAL_164);
		TERMINAL_137.addFollower(TERMINAL_374);
		TERMINAL_374.addFollower(TERMINAL_82);
		TERMINAL_374.addFollower(TERMINAL_22);
		TERMINAL_374.addFollower(TERMINAL_23);
		TERMINAL_374.addFollower(TERMINAL_154);
		TERMINAL_374.addFollower(TERMINAL_155);
		TERMINAL_374.addFollower(TERMINAL_24);
		TERMINAL_374.addFollower(TERMINAL_25);
		TERMINAL_374.addFollower(TERMINAL_194);
		TERMINAL_374.addFollower(TERMINAL_195);
		TERMINAL_374.addFollower(TERMINAL_196);
		TERMINAL_374.addFollower(TERMINAL_197);
		TERMINAL_374.addFollower(TERMINAL_198);
		TERMINAL_138.addFollower(TERMINAL_375);
		TERMINAL_375.addFollower(TERMINAL_376);
		TERMINAL_376.addFollower(TERMINAL_135);
		TERMINAL_376.addFollower(TERMINAL_136);
		TERMINAL_376.addFollower(TERMINAL_137);
		TERMINAL_376.addFollower(TERMINAL_138);
		TERMINAL_376.addFollower(TERMINAL_139);
		TERMINAL_139.addFollower(TERMINAL_48);
		TERMINAL_139.addFollower(TERMINAL_5);
		TERMINAL_139.addFollower(TERMINAL_6);
		TERMINAL_139.addFollower(TERMINAL_7);
		TERMINAL_139.addFollower(TERMINAL_8);
		TERMINAL_139.addFollower(TERMINAL_9);
		TERMINAL_139.addFollower(TERMINAL_41);
		TERMINAL_139.addFollower(TERMINAL_57);
		TERMINAL_139.addFollower(TERMINAL_56);
		TERMINAL_139.addFollower(TERMINAL_55);
		TERMINAL_139.addFollower(TERMINAL_60);
		TERMINAL_139.addFollower(TERMINAL_52);
		TERMINAL_139.addFollower(TERMINAL_58);
		TERMINAL_139.addFollower(TERMINAL_61);
		TERMINAL_139.addFollower(TERMINAL_62);
		TERMINAL_139.addFollower(TERMINAL_63);
		TERMINAL_139.addFollower(TERMINAL_54);
		TERMINAL_139.addFollower(TERMINAL_53);
		TERMINAL_139.addFollower(TERMINAL_59);
		TERMINAL_139.addFollower(TERMINAL_66);
		TERMINAL_139.addFollower(TERMINAL_50);
		TERMINAL_139.addFollower(TERMINAL_306);
		TERMINAL_139.addFollower(TERMINAL_307);
		TERMINAL_139.addFollower(TERMINAL_308);
		TERMINAL_139.addFollower(TERMINAL_309);
		TERMINAL_139.addFollower(TERMINAL_65);
		TERMINAL_139.addFollower(TERMINAL_310);
		TERMINAL_139.addFollower(TERMINAL_311);
		TERMINAL_139.addFollower(TERMINAL_312);
		TERMINAL_139.addFollower(TERMINAL_313);
		TERMINAL_139.addFollower(TERMINAL_314);
		TERMINAL_139.addFollower(TERMINAL_315);
		TERMINAL_139.addFollower(TERMINAL_316);
		TERMINAL_139.addFollower(TERMINAL_140);
		TERMINAL_139.addFollower(TERMINAL_141);
		TERMINAL_139.addFollower(TERMINAL_142);
		TERMINAL_139.addFollower(TERMINAL_143);
		TERMINAL_139.addFollower(TERMINAL_144);
		TERMINAL_139.addFollower(TERMINAL_145);
		TERMINAL_139.addFollower(TERMINAL_146);
		TERMINAL_67.addFollower(TERMINAL_377);
		TERMINAL_377.addFollower(TERMINAL_140);
		TERMINAL_377.addFollower(TERMINAL_141);
		TERMINAL_377.addFollower(TERMINAL_142);
		TERMINAL_377.addFollower(TERMINAL_143);
		TERMINAL_377.addFollower(TERMINAL_144);
		TERMINAL_377.addFollower(TERMINAL_145);
		TERMINAL_377.addFollower(TERMINAL_146);
		TERMINAL_140.addFollower(TERMINAL_378);
		TERMINAL_378.addFollower(TERMINAL_379);
		TERMINAL_379.addFollower(TERMINAL_140);
		TERMINAL_379.addFollower(TERMINAL_141);
		TERMINAL_379.addFollower(TERMINAL_142);
		TERMINAL_379.addFollower(TERMINAL_143);
		TERMINAL_379.addFollower(TERMINAL_144);
		TERMINAL_379.addFollower(TERMINAL_145);
		TERMINAL_379.addFollower(TERMINAL_146);
		TERMINAL_141.addFollower(TERMINAL_380);
		TERMINAL_380.addFollower(TERMINAL_164);
		TERMINAL_142.addFollower(TERMINAL_381);
		TERMINAL_381.addFollower(TERMINAL_82);
		TERMINAL_381.addFollower(TERMINAL_22);
		TERMINAL_381.addFollower(TERMINAL_23);
		TERMINAL_381.addFollower(TERMINAL_154);
		TERMINAL_381.addFollower(TERMINAL_155);
		TERMINAL_381.addFollower(TERMINAL_24);
		TERMINAL_381.addFollower(TERMINAL_25);
		TERMINAL_381.addFollower(TERMINAL_194);
		TERMINAL_381.addFollower(TERMINAL_195);
		TERMINAL_381.addFollower(TERMINAL_196);
		TERMINAL_381.addFollower(TERMINAL_197);
		TERMINAL_381.addFollower(TERMINAL_198);
		TERMINAL_143.addFollower(TERMINAL_382);
		TERMINAL_382.addFollower(TERMINAL_383);
		TERMINAL_383.addFollower(TERMINAL_140);
		TERMINAL_383.addFollower(TERMINAL_141);
		TERMINAL_383.addFollower(TERMINAL_142);
		TERMINAL_383.addFollower(TERMINAL_143);
		TERMINAL_383.addFollower(TERMINAL_144);
		TERMINAL_383.addFollower(TERMINAL_145);
		TERMINAL_383.addFollower(TERMINAL_146);
		TERMINAL_144.addFollower(TERMINAL_384);
		TERMINAL_384.addFollower(TERMINAL_385);
		TERMINAL_145.addFollower(TERMINAL_386);
		TERMINAL_386.addFollower(TERMINAL_50);
		TERMINAL_386.addFollower(TERMINAL_51);
		TERMINAL_386.addFollower(TERMINAL_52);
		TERMINAL_386.addFollower(TERMINAL_53);
		TERMINAL_386.addFollower(TERMINAL_54);
		TERMINAL_386.addFollower(TERMINAL_55);
		TERMINAL_386.addFollower(TERMINAL_56);
		TERMINAL_386.addFollower(TERMINAL_57);
		TERMINAL_386.addFollower(TERMINAL_14);
		TERMINAL_386.addFollower(TERMINAL_58);
		TERMINAL_386.addFollower(TERMINAL_59);
		TERMINAL_386.addFollower(TERMINAL_60);
		TERMINAL_386.addFollower(TERMINAL_61);
		TERMINAL_386.addFollower(TERMINAL_62);
		TERMINAL_386.addFollower(TERMINAL_63);
		TERMINAL_386.addFollower(TERMINAL_64);
		TERMINAL_386.addFollower(TERMINAL_65);
		TERMINAL_386.addFollower(TERMINAL_66);
		TERMINAL_386.addFollower(TERMINAL_67);
		TERMINAL_146.addFollower(TERMINAL_48);
		TERMINAL_146.addFollower(TERMINAL_5);
		TERMINAL_146.addFollower(TERMINAL_6);
		TERMINAL_146.addFollower(TERMINAL_7);
		TERMINAL_146.addFollower(TERMINAL_8);
		TERMINAL_146.addFollower(TERMINAL_9);
		TERMINAL_146.addFollower(TERMINAL_41);
		TERMINAL_146.addFollower(TERMINAL_306);
		TERMINAL_146.addFollower(TERMINAL_307);
		TERMINAL_146.addFollower(TERMINAL_308);
		TERMINAL_146.addFollower(TERMINAL_309);
		TERMINAL_146.addFollower(TERMINAL_50);
		TERMINAL_146.addFollower(TERMINAL_60);
		TERMINAL_146.addFollower(TERMINAL_52);
		TERMINAL_146.addFollower(TERMINAL_58);
		TERMINAL_146.addFollower(TERMINAL_61);
		TERMINAL_146.addFollower(TERMINAL_62);
		TERMINAL_146.addFollower(TERMINAL_63);
		TERMINAL_146.addFollower(TERMINAL_54);
		TERMINAL_146.addFollower(TERMINAL_53);
		TERMINAL_146.addFollower(TERMINAL_59);
		TERMINAL_146.addFollower(TERMINAL_57);
		TERMINAL_146.addFollower(TERMINAL_65);
		TERMINAL_146.addFollower(TERMINAL_310);
		TERMINAL_146.addFollower(TERMINAL_311);
		TERMINAL_146.addFollower(TERMINAL_312);
		TERMINAL_146.addFollower(TERMINAL_313);
		TERMINAL_146.addFollower(TERMINAL_314);
		TERMINAL_146.addFollower(TERMINAL_315);
		TERMINAL_146.addFollower(TERMINAL_316);
		TERMINAL_146.addFollower(TERMINAL_140);
		TERMINAL_146.addFollower(TERMINAL_141);
		TERMINAL_146.addFollower(TERMINAL_142);
		TERMINAL_146.addFollower(TERMINAL_143);
		TERMINAL_146.addFollower(TERMINAL_144);
		TERMINAL_146.addFollower(TERMINAL_145);
		TERMINAL_146.addFollower(TERMINAL_146);
		TERMINAL_385.addFollower(TERMINAL_387);
		TERMINAL_387.addFollower(TERMINAL_242);
		TERMINAL_387.addFollower(TERMINAL_243);
		TERMINAL_387.addFollower(TERMINAL_244);
		TERMINAL_387.addFollower(TERMINAL_245);
		TERMINAL_387.addFollower(TERMINAL_246);
		TERMINAL_242.addFollower(TERMINAL_388);
		TERMINAL_388.addFollower(TERMINAL_389);
		TERMINAL_389.addFollower(TERMINAL_242);
		TERMINAL_389.addFollower(TERMINAL_243);
		TERMINAL_389.addFollower(TERMINAL_244);
		TERMINAL_389.addFollower(TERMINAL_245);
		TERMINAL_389.addFollower(TERMINAL_246);
		TERMINAL_243.addFollower(TERMINAL_390);
		TERMINAL_390.addFollower(TERMINAL_164);
		TERMINAL_244.addFollower(TERMINAL_391);
		TERMINAL_391.addFollower(TERMINAL_392);
		TERMINAL_392.addFollower(TERMINAL_242);
		TERMINAL_392.addFollower(TERMINAL_243);
		TERMINAL_392.addFollower(TERMINAL_244);
		TERMINAL_392.addFollower(TERMINAL_245);
		TERMINAL_392.addFollower(TERMINAL_246);
		TERMINAL_245.addFollower(TERMINAL_393);
		TERMINAL_393.addFollower(TERMINAL_14);
		TERMINAL_246.addFollower(TERMINAL_140);
		TERMINAL_246.addFollower(TERMINAL_141);
		TERMINAL_246.addFollower(TERMINAL_142);
		TERMINAL_246.addFollower(TERMINAL_143);
		TERMINAL_246.addFollower(TERMINAL_144);
		TERMINAL_246.addFollower(TERMINAL_145);
		TERMINAL_246.addFollower(TERMINAL_146);
	}
	// wire the terminals
	static {
		wire0();
		wire1();
		wire2();
		wire3();
	}
}

start returns [ org.eclipse.emf.ecore.EObject element = null]
:
	{
		// follow set for start rule(s)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 0));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 0));
		expectedElementsIndexOfLastCompleteElement = expectedElements.size() - 1;
	}
	(
		c0 = parse_org_kermeta_language_structure_ModelingUnit{ element = c0; }
		|  		c1 = parse_org_kermeta_language_structure_Model{ element = c1; }
		|  		c2 = parse_org_kermeta_language_structure_Property{ element = c2; }
		|  		c3 = parse_org_kermeta_language_structure_Operation{ element = c3; }
		|  		c4 = parse_org_kermeta_language_structure_Parameter{ element = c4; }
		|  		c5 = parse_org_kermeta_language_structure_MultiplicityElement{ element = c5; }
		|  		c6 = parse_org_kermeta_language_behavior_TypeReference{ element = c6; }
	)
	EOF	
;

parse_org_kermeta_language_structure_ModelingUnit returns [org.kermeta.language.structure.ModelingUnit element = null]
@init{
}
:
	(
		(
			(
				a0_0 = parse_org_kermeta_language_structure_Require				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelingUnit();
					}
					if (a0_0 != null) {
						if (a0_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODELING_UNIT__REQUIRES, a0_0);
							completedElement(a0_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a0_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 1));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 1));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 1));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 1));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 2));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 2));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 2));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 2));
	}
	
	(
		(
			(
				a1_0 = parse_org_kermeta_language_structure_Using				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelingUnit();
					}
					if (a1_0 != null) {
						if (a1_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODELING_UNIT__USINGS, a1_0);
							completedElement(a1_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a1_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 3));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 3));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 3));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 4));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 4));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 4));
	}
	
	(
		(
			(
				a2_0 = parse_org_kermeta_language_structure_Package				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelingUnit();
					}
					if (a2_0 != null) {
						if (a2_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODELING_UNIT__PACKAGES, a2_0);
							completedElement(a2_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a2_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 5));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 5));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 6));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 6));
	}
	
;

parse_org_kermeta_language_structure_Using returns [org.kermeta.language.structure.Using element = null]
@init{
}
:
	a0 = 'using' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createUsing();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 7));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 7));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 7));
	}
	
;

parse_org_kermeta_language_structure_Require returns [org.kermeta.language.structure.Require element = null]
@init{
}
:
	a0 = 'require' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createRequire();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 8));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 8));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 8));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 8));
	}
	
;

parse_org_kermeta_language_structure_Package returns [org.kermeta.language.structure.Package element = null]
@init{
}
:
	(
		a0 = IDENTIFIER		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
			}
			if (a0 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
				}
				java.lang.String resolved = (java.lang.String)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 9));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 9));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 9));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 9));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 9));
	}
	
	(
		(
			a1 = '::' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 10));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 10));
			}
			
			(
				a2_0 = parse_org_kermeta_language_structure_Package				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
					}
					if (a2_0 != null) {
						if (a2_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__NESTED_PACKAGE, a2_0);
							completedElement(a2_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a2_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 11));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 11));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 11));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 11));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 11));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 12));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 12));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 12));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 12));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 12));
	}
	
	(
		(
			a3 = '{' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 13));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 13));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 13));
			}
			
			(
				(
					(
						a4_0 = parse_org_kermeta_language_structure_Package						{
							if (terminateParsing) {
								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
							}
							if (element == null) {
								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
							}
							if (a4_0 != null) {
								if (a4_0 != null) {
									addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__NESTED_PACKAGE, a4_0);
									completedElement(a4_0);
								}
								collectHiddenTokens(element);
								copyLocalizationInfos(a4_0, element); 							}
						}
					)
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 14));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 14));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 14));
					}
					
				)
				
			)*			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 15));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 15));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 15));
			}
			
			a5 = '}' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 16));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 16));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 16));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 16));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 16));
			}
			
			
			|			a6 = '{' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 17));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 17));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 17));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 17));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 17));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 17));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 17));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 17));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 17));
			}
			
			(
				(
					(
						a7_0 = parse_org_kermeta_language_structure_TypeDefinition						{
							if (terminateParsing) {
								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
							}
							if (element == null) {
								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
							}
							if (a7_0 != null) {
								if (a7_0 != null) {
									addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__OWNED_TYPE_DEFINITION, a7_0);
									completedElement(a7_0);
								}
								collectHiddenTokens(element);
								copyLocalizationInfos(a7_0, element); 							}
						}
					)
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 18));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 18));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 18));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 18));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 18));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 18));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 18));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 18));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 18));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 18));
					}
					
				)
				
			)+			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 19));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 19));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 19));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 19));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 19));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 19));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 19));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 19));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 19));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 19));
			}
			
			a8 = '}' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 20));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 20));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 20));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 20));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 20));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 21));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 21));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 21));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 21));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 21));
	}
	
	
	|	a9 = 'package' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 22));
	}
	
	(
		a10 = IDENTIFIER		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
			}
			if (a10 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a10.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a10).getLine(), ((org.antlr.runtime.CommonToken) a10).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a10).getStartIndex(), ((org.antlr.runtime.CommonToken) a10).getStopIndex());
				}
				java.lang.String resolved = (java.lang.String)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_30, 23));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_31, 23));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 23));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 23));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 23));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 23));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 23));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 23));
	}
	
	(
		(
			a11 = '::' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 24));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 24));
			}
			
			(
				a12_0 = parse_org_kermeta_language_structure_Package				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
					}
					if (a12_0 != null) {
						if (a12_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__NESTED_PACKAGE, a12_0);
							completedElement(a12_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a12_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_30, 25));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_31, 25));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 25));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 25));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 25));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 25));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 25));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 25));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_30, 26));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_31, 26));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 26));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 26));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 26));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 26));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 26));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 26));
	}
	
	(
		(
			a13 = '{' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 27));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 27));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_33, 27));
			}
			
			(
				(
					(
						a14_0 = parse_org_kermeta_language_structure_Package						{
							if (terminateParsing) {
								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
							}
							if (element == null) {
								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
							}
							if (a14_0 != null) {
								if (a14_0 != null) {
									addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__NESTED_PACKAGE, a14_0);
									completedElement(a14_0);
								}
								collectHiddenTokens(element);
								copyLocalizationInfos(a14_0, element); 							}
						}
					)
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 28));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 28));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_33, 28));
					}
					
				)
				
			)*			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 29));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 29));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_33, 29));
			}
			
			a15 = '}' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 30));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 30));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 30));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 30));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 30));
			}
			
			
			|			a16 = '{' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a16, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 31));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 31));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 31));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 31));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 31));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 31));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 31));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 31));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 31));
			}
			
			(
				(
					(
						a17_0 = parse_org_kermeta_language_structure_TypeDefinition						{
							if (terminateParsing) {
								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
							}
							if (element == null) {
								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
							}
							if (a17_0 != null) {
								if (a17_0 != null) {
									addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__OWNED_TYPE_DEFINITION, a17_0);
									completedElement(a17_0);
								}
								collectHiddenTokens(element);
								copyLocalizationInfos(a17_0, element); 							}
						}
					)
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 32));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 32));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 32));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 32));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 32));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 32));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 32));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 32));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 32));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_34, 32));
					}
					
				)
				
			)+			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 33));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 33));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 33));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 33));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 33));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 33));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 33));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 33));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 33));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_34, 33));
			}
			
			a18 = '}' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 34));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 34));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 34));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 34));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 34));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 35));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 35));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 35));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 35));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 35));
	}
	
;

parse_org_kermeta_language_structure_ClassDefinition returns [org.kermeta.language.structure.ClassDefinition element = null]
@init{
}
:
	(
		(
			a0 = 'aspect' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 36));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 36));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 37));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 37));
	}
	
	(
		(
			a1 = 'abstract' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 38));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 39));
	}
	
	a2 = 'class' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_35, 40));
	}
	
	(
		a3 = IDENTIFIER		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
			}
			if (a3 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__NAME), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a3).getLine(), ((org.antlr.runtime.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a3).getStartIndex(), ((org.antlr.runtime.CommonToken) a3).getStopIndex());
				}
				java.lang.String resolved = (java.lang.String)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__NAME), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a3, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 41));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 41));
	}
	
	(
		(
			a4 = 'inherits' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_38, 42));
			}
			
			(
				a5 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
					}
					if (a5 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a5).getLine(), ((org.antlr.runtime.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a5).getStartIndex(), ((org.antlr.runtime.CommonToken) a5).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ClassDefinition, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getClassDefinitionSuperTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_39, 43));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 43));
			}
			
			(
				(
					a6 = ',' {
						if (element == null) {
							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
					}
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 44));
					}
					
					(
						a7 = IDENTIFIER						
						{
							if (terminateParsing) {
								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
							}
							if (element == null) {
								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
							}
							if (a7 != null) {
								org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
								tokenResolver.setOptions(getOptions());
								org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
								tokenResolver.resolve(a7.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), result);
								java.lang.Object resolvedObject = result.getResolvedToken();
								if (resolvedObject == null) {
									addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a7).getLine(), ((org.antlr.runtime.CommonToken) a7).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a7).getStartIndex(), ((org.antlr.runtime.CommonToken) a7).getStopIndex());
								}
								String resolved = (String) resolvedObject;
								org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
								collectHiddenTokens(element);
								registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ClassDefinition, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getClassDefinitionSuperTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), resolved, proxy);
								if (proxy != null) {
									addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE, proxy);
									completedElement(proxy);
								}
								collectHiddenTokens(element);
								copyLocalizationInfos((org.antlr.runtime.CommonToken) a7, element);
								copyLocalizationInfos((org.antlr.runtime.CommonToken) a7, proxy);
							}
						}
					)
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_39, 45));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 45));
					}
					
				)
				
			)*			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_39, 46));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 46));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 47));
	}
	
	a8 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 48));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 48));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 48));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 48));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 48));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 48));
	}
	
	(
		(
			(
				a9_0 = parse_org_kermeta_language_structure_Constraint				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
					}
					if (a9_0 != null) {
						if (a9_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__INV, a9_0);
							completedElement(a9_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a9_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 49));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 49));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 49));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 49));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 49));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 49));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 50));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 50));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 50));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 50));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 50));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 50));
	}
	
	(
		(
			(
				a10_0 = parse_org_kermeta_language_structure_Property				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
					}
					if (a10_0 != null) {
						if (a10_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__OWNED_ATTRIBUTE, a10_0);
							completedElement(a10_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a10_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 51));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 51));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 51));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 51));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 51));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 51));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 52));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 52));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 52));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 52));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 52));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 52));
	}
	
	(
		(
			(
				a11_0 = parse_org_kermeta_language_structure_Operation				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
					}
					if (a11_0 != null) {
						if (a11_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__OWNED_OPERATION, a11_0);
							completedElement(a11_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a11_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 53));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 53));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 53));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 54));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 54));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 54));
	}
	
	a12 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 55));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 55));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 55));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 55));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 55));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 55));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 55));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 55));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 55));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 55));
	}
	
;

parse_org_kermeta_language_structure_Property returns [org.kermeta.language.structure.Property element = null]
@init{
}
:
	(
		a0 = 'attribute' {
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
			}
			collectHiddenTokens(element);
			copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
		}
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_42, 56));
		}
		
		
		|		a1 = 'reference' {
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
			}
			collectHiddenTokens(element);
			copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
		}
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_42, 57));
		}
		
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_42, 58));
	}
	
	(
		a2 = IDENTIFIER		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
			}
			if (a2 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
				}
				java.lang.String resolved = (java.lang.String)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 59));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 59));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 59));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 59));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 59));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 59));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 59));
	}
	
	(
		(
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 60));
			}
			
			(
				a4 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 61));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 61));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 61));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 61));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 61));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 61));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 62));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 62));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 62));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 62));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 62));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 62));
	}
	
	
	|	a5 = 'property' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 63));
	}
	
	(
		a6 = IDENTIFIER		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
			}
			if (a6 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a6.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a6).getLine(), ((org.antlr.runtime.CommonToken) a6).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a6).getStartIndex(), ((org.antlr.runtime.CommonToken) a6).getStopIndex());
				}
				java.lang.String resolved = (java.lang.String)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a6, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 64));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 64));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 64));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 64));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 64));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 64));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 64));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 64));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 64));
	}
	
	(
		(
			a7 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 65));
			}
			
			(
				a8 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
					}
					if (a8 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a8.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a8).getLine(), ((org.antlr.runtime.CommonToken) a8).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a8).getStartIndex(), ((org.antlr.runtime.CommonToken) a8).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a8, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a8, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 66));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 66));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 66));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 66));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 66));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 66));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 66));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 66));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 67));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 67));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 67));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 67));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 67));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 67));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 67));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 67));
	}
	
	(
		(
			a9 = 'getter' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 68));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 68));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 68));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 68));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 68));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 68));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 68));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 68));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 68));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 68));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 68));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 68));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 68));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 68));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 68));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 68));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 68));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 68));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 68));
			}
			
			(
				a10_0 = parse_org_kermeta_language_behavior_Expression				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
					}
					if (a10_0 != null) {
						if (a10_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__GETTER_BODY), a10_0);
							completedElement(a10_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a10_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 69));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 69));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 69));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 69));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 69));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 69));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 69));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 70));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 70));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 70));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 70));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 70));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 70));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 70));
	}
	
	(
		(
			a11 = 'setter' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 71));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 71));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 71));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 71));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 71));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 71));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 71));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 71));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 71));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 71));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 71));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 71));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 71));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 71));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 71));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 71));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 71));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 71));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 71));
			}
			
			(
				a12_0 = parse_org_kermeta_language_behavior_Expression				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
					}
					if (a12_0 != null) {
						if (a12_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__SETTER_BODY), a12_0);
							completedElement(a12_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a12_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 72));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 72));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 72));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 72));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 72));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 72));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 73));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 73));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 73));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 73));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 73));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 73));
	}
	
;

parse_org_kermeta_language_structure_Operation returns [org.kermeta.language.structure.Operation element = null]
@init{
}
:
	(
		(
			a0_0 = parse_org_kermeta_language_structure_Constraint			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
				}
				if (a0_0 != null) {
					if (a0_0 != null) {
						addObjectToList(element, org.kermeta.language.structure.StructurePackage.OPERATION__PRE, a0_0);
						completedElement(a0_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a0_0, element); 				}
			}
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 74));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 74));
	}
	
	(
		(
			a1_0 = parse_org_kermeta_language_structure_Constraint			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
				}
				if (a1_0 != null) {
					if (a1_0 != null) {
						addObjectToList(element, org.kermeta.language.structure.StructurePackage.OPERATION__POST, a1_0);
						completedElement(a1_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a1_0, element); 				}
			}
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 75));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 75));
	}
	
	a2 = 'operation' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 76));
	}
	
	(
		a3 = IDENTIFIER		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
			}
			if (a3 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__NAME), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a3).getLine(), ((org.antlr.runtime.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a3).getStartIndex(), ((org.antlr.runtime.CommonToken) a3).getStopIndex());
				}
				java.lang.String resolved = (java.lang.String)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__NAME), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a3, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 77));
	}
	
	a4 = '(' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 78));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 78));
	}
	
	(
		(
			(
				a5_0 = parse_org_kermeta_language_structure_Parameter				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
					}
					if (a5_0 != null) {
						if (a5_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OPERATION__OWNED_PARAMETER, a5_0);
							completedElement(a5_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a5_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 79));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_72, 79));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 79));
			}
			
			(
				(
					a6 = ':' {
						if (element == null) {
							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
					}
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_73, 80));
					}
					
					(
						a7 = IDENTIFIER						
						{
							if (terminateParsing) {
								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
							}
							if (element == null) {
								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
							}
							if (a7 != null) {
								org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
								tokenResolver.setOptions(getOptions());
								org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
								tokenResolver.resolve(a7.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), result);
								java.lang.Object resolvedObject = result.getResolvedToken();
								if (resolvedObject == null) {
									addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a7).getLine(), ((org.antlr.runtime.CommonToken) a7).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a7).getStartIndex(), ((org.antlr.runtime.CommonToken) a7).getStopIndex());
								}
								String resolved = (String) resolvedObject;
								org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
								collectHiddenTokens(element);
								registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), resolved, proxy);
								if (proxy != null) {
									element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), proxy);
									completedElement(proxy);
								}
								collectHiddenTokens(element);
								copyLocalizationInfos((org.antlr.runtime.CommonToken) a7, element);
								copyLocalizationInfos((org.antlr.runtime.CommonToken) a7, proxy);
							}
						}
					)
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_72, 81));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 81));
					}
					
				)
				
			)?			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_72, 82));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 82));
			}
			
			(
				(
					a8 = ',' {
						if (element == null) {
							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
					}
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 83));
					}
					
					(
						a9_0 = parse_org_kermeta_language_structure_Parameter						{
							if (terminateParsing) {
								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
							}
							if (element == null) {
								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
							}
							if (a9_0 != null) {
								if (a9_0 != null) {
									addObjectToList(element, org.kermeta.language.structure.StructurePackage.OPERATION__OWNED_PARAMETER, a9_0);
									completedElement(a9_0);
								}
								collectHiddenTokens(element);
								copyLocalizationInfos(a9_0, element); 							}
						}
					)
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_74, 84));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_72, 84));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 84));
					}
					
					(
						(
							a10 = ':' {
								if (element == null) {
									element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
								}
								collectHiddenTokens(element);
								copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
							}
							{
								// expected elements (follow set)
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_75, 85));
							}
							
							(
								a11 = IDENTIFIER								
								{
									if (terminateParsing) {
										throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
									}
									if (element == null) {
										element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
									}
									if (a11 != null) {
										org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
										tokenResolver.setOptions(getOptions());
										org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
										tokenResolver.resolve(a11.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), result);
										java.lang.Object resolvedObject = result.getResolvedToken();
										if (resolvedObject == null) {
											addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a11).getLine(), ((org.antlr.runtime.CommonToken) a11).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a11).getStartIndex(), ((org.antlr.runtime.CommonToken) a11).getStopIndex());
										}
										String resolved = (String) resolvedObject;
										org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
										collectHiddenTokens(element);
										registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), resolved, proxy);
										if (proxy != null) {
											element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), proxy);
											completedElement(proxy);
										}
										collectHiddenTokens(element);
										copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, element);
										copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, proxy);
									}
								}
							)
							{
								// expected elements (follow set)
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_72, 86));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 86));
							}
							
						)
						
					)?					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_72, 87));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 87));
					}
					
				)
				
			)*			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_72, 88));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 88));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 89));
	}
	
	a12 = ')' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_76, 90));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_77, 90));
	}
	
	(
		(
			a13 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 91));
			}
			
			(
				a14 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
					}
					if (a14 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a14.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a14).getLine(), ((org.antlr.runtime.CommonToken) a14).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a14).getStartIndex(), ((org.antlr.runtime.CommonToken) a14).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a14, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a14, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_77, 92));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_77, 93));
	}
	
	a15 = 'is' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 94));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 94));
	}
	
	(
		(
			a16_0 = parse_org_kermeta_language_behavior_Block			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
				}
				if (a16_0 != null) {
					if (a16_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__BODY), a16_0);
						completedElement(a16_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a16_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 95));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 95));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 95));
		}
		
		
		|		a17 = 'abstract' {
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
			}
			collectHiddenTokens(element);
			copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
		}
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 96));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 96));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 96));
		}
		
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 97));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 97));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 97));
	}
	
;

parse_org_kermeta_language_structure_Parameter returns [org.kermeta.language.structure.Parameter element = null]
@init{
}
:
	(
		a0 = IDENTIFIER		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createParameter();
			}
			if (a0 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__NAME), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
				}
				java.lang.String resolved = (java.lang.String)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__NAME), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 98));
	}
	
	a1 = ':' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createParameter();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 99));
	}
	
	(
		a2 = IDENTIFIER		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createParameter();
			}
			if (a2 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__TYPE), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
				}
				String resolved = (String) resolvedObject;
				org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
				collectHiddenTokens(element);
				registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__TYPE), resolved, proxy);
				if (proxy != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__TYPE), proxy);
					completedElement(proxy);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, proxy);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 100));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_72, 100));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 100));
	}
	
;

parse_org_kermeta_language_structure_Class returns [org.kermeta.language.structure.Class element = null]
@init{
}
:
	(
		a0 = IDENTIFIER		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
			}
			if (a0 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS__TYPE_DEFINITION), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
				}
				String resolved = (String) resolvedObject;
				org.kermeta.language.structure.ClassDefinition proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
				collectHiddenTokens(element);
				registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ParameterizedType, org.kermeta.language.structure.GenericTypeDefinition>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getParameterizedTypeTypeDefinitionReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS__TYPE_DEFINITION), resolved, proxy);
				if (proxy != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS__TYPE_DEFINITION), proxy);
					completedElement(proxy);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, proxy);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 101));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 101));
	}
	
;

parse_org_kermeta_language_structure_Enumeration returns [org.kermeta.language.structure.Enumeration element = null]
@init{
}
:
	a0 = 'enumeration' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 102));
	}
	
	(
		a1 = IDENTIFIER		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
			}
			if (a1 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION__NAME), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
				}
				java.lang.String resolved = (java.lang.String)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION__NAME), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 103));
	}
	
	a2 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 104));
	}
	
	(
		(
			a3_0 = parse_org_kermeta_language_structure_EnumerationLiteral			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
				}
				if (a3_0 != null) {
					if (a3_0 != null) {
						addObjectToList(element, org.kermeta.language.structure.StructurePackage.ENUMERATION__OWNED_LITERAL, a3_0);
						completedElement(a3_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a3_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 105));
		}
		
		a4 = ';' {
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
			}
			collectHiddenTokens(element);
			copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
		}
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 106));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 106));
		}
		
		(
			(
				(
					a5_0 = parse_org_kermeta_language_structure_EnumerationLiteral					{
						if (terminateParsing) {
							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
						}
						if (element == null) {
							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
						}
						if (a5_0 != null) {
							if (a5_0 != null) {
								addObjectToList(element, org.kermeta.language.structure.StructurePackage.ENUMERATION__OWNED_LITERAL, a5_0);
								completedElement(a5_0);
							}
							collectHiddenTokens(element);
							copyLocalizationInfos(a5_0, element); 						}
					}
				)
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 107));
				}
				
				a6 = ';' {
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
				}
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 108));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 108));
				}
				
			)
			
		)*		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 109));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 109));
		}
		
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 110));
	}
	
	a7 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 111));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 111));
	}
	
;

parse_org_kermeta_language_structure_EnumerationLiteral returns [org.kermeta.language.structure.EnumerationLiteral element = null]
@init{
}
:
	(
		a0 = IDENTIFIER		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumerationLiteral();
			}
			if (a0 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION_LITERAL__NAME), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
				}
				java.lang.String resolved = (java.lang.String)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION_LITERAL__NAME), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 112));
	}
	
;

parse_org_kermeta_language_structure_Constraint returns [org.kermeta.language.structure.Constraint element = null]
@init{
}
:
	(
		a0 = IDENTIFIER		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createConstraint();
			}
			if (a0 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__STEREOTYPE), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
				}
				org.kermeta.language.structure.ConstraintType resolved = (org.kermeta.language.structure.ConstraintType)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__STEREOTYPE), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 113));
	}
	
	(
		a1 = IDENTIFIER		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createConstraint();
			}
			if (a1 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__LANGUAGE), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
				}
				org.kermeta.language.structure.ConstraintLanguage resolved = (org.kermeta.language.structure.ConstraintLanguage)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__LANGUAGE), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 114));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 114));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 114));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 114));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 114));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 114));
	}
	
;

parse_org_kermeta_language_structure_PrimitiveType returns [org.kermeta.language.structure.PrimitiveType element = null]
@init{
}
:
	(
		a0 = PRIMITIVE_TYPE		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
			}
			if (a0 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("PRIMITIVE_TYPE");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__NAME), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
				}
				java.lang.String resolved = (java.lang.String)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__NAME), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 115));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 115));
	}
	
;

parse_org_kermeta_language_structure_UnresolvedType returns [org.kermeta.language.structure.UnresolvedType element = null]
@init{
}
:
	(
		a0 = IDENTIFIER		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createUnresolvedType();
			}
			if (a0 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.UNRESOLVED_TYPE__TYPE_IDENTIFIER), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
				}
				java.lang.String resolved = (java.lang.String)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.UNRESOLVED_TYPE__TYPE_IDENTIFIER), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 116));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 116));
	}
	
;

parse_org_kermeta_language_structure_VoidType returns [org.kermeta.language.structure.VoidType element = null]
@init{
}
:
	a0 = 'Void' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 117));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 117));
	}
	
;

parse_org_kermeta_language_structure_Object returns [org.kermeta.language.structure.Object element = null]
@init{
}
:
	a0 = 'Object' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 118));
	}
	
	a1 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 119));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 119));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 119));
	}
	
	(
		(
			a2 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 120));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 121));
			}
			
			(
				a4 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 122));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 122));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 122));
			}
			
			
			|			a5 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 123));
			}
			
			a6 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 124));
			}
			
			(
				a7_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT__OWNED_TAGS, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 125));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 125));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 125));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 126));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 126));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 126));
	}
	
	a8 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
	}
	{
		// expected elements (follow set)
	}
	
	|//derived choice rules for sub-classes: 
	
	c0 = parse_org_kermeta_language_structure_ModelingUnit{ element = c0; /* this is a subclass choice */ }
	|	c1 = parse_org_kermeta_language_structure_Using{ element = c1; /* this is a subclass choice */ }
	|	c2 = parse_org_kermeta_language_structure_Require{ element = c2; /* this is a subclass choice */ }
	|	c3 = parse_org_kermeta_language_structure_Package{ element = c3; /* this is a subclass choice */ }
	|	c4 = parse_org_kermeta_language_structure_ClassDefinition{ element = c4; /* this is a subclass choice */ }
	|	c5 = parse_org_kermeta_language_structure_Property{ element = c5; /* this is a subclass choice */ }
	|	c6 = parse_org_kermeta_language_structure_Operation{ element = c6; /* this is a subclass choice */ }
	|	c7 = parse_org_kermeta_language_structure_Parameter{ element = c7; /* this is a subclass choice */ }
	|	c8 = parse_org_kermeta_language_structure_Class{ element = c8; /* this is a subclass choice */ }
	|	c9 = parse_org_kermeta_language_structure_Enumeration{ element = c9; /* this is a subclass choice */ }
	|	c10 = parse_org_kermeta_language_structure_EnumerationLiteral{ element = c10; /* this is a subclass choice */ }
	|	c11 = parse_org_kermeta_language_structure_Constraint{ element = c11; /* this is a subclass choice */ }
	|	c12 = parse_org_kermeta_language_structure_PrimitiveType{ element = c12; /* this is a subclass choice */ }
	|	c13 = parse_org_kermeta_language_structure_UnresolvedType{ element = c13; /* this is a subclass choice */ }
	|	c14 = parse_org_kermeta_language_structure_VoidType{ element = c14; /* this is a subclass choice */ }
	|	c15 = parse_org_kermeta_language_structure_Model{ element = c15; /* this is a subclass choice */ }
	|	c16 = parse_org_kermeta_language_structure_ModelType{ element = c16; /* this is a subclass choice */ }
	|	c17 = parse_org_kermeta_language_structure_TypeVariableBinding{ element = c17; /* this is a subclass choice */ }
	|	c18 = parse_org_kermeta_language_structure_MultiplicityElement{ element = c18; /* this is a subclass choice */ }
	|	c19 = parse_org_kermeta_language_structure_TypeDefinition{ element = c19; /* this is a subclass choice */ }
	|	c20 = parse_org_kermeta_language_structure_Tag{ element = c20; /* this is a subclass choice */ }
	|	c21 = parse_org_kermeta_language_structure_ObjectTypeVariable{ element = c21; /* this is a subclass choice */ }
	|	c22 = parse_org_kermeta_language_structure_ModelTypeVariable{ element = c22; /* this is a subclass choice */ }
	|	c23 = parse_org_kermeta_language_structure_VirtualType{ element = c23; /* this is a subclass choice */ }
	|	c24 = parse_org_kermeta_language_structure_ProductType{ element = c24; /* this is a subclass choice */ }
	|	c25 = parse_org_kermeta_language_structure_FunctionType{ element = c25; /* this is a subclass choice */ }
	|	c26 = parse_org_kermeta_language_behavior_Block{ element = c26; /* this is a subclass choice */ }
	|	c27 = parse_org_kermeta_language_behavior_Rescue{ element = c27; /* this is a subclass choice */ }
	|	c28 = parse_org_kermeta_language_behavior_TypeReference{ element = c28; /* this is a subclass choice */ }
	|	c29 = parse_org_kermeta_language_behavior_Raise{ element = c29; /* this is a subclass choice */ }
	|	c30 = parse_org_kermeta_language_behavior_BooleanLiteral{ element = c30; /* this is a subclass choice */ }
	|	c31 = parse_org_kermeta_language_behavior_IntegerLiteral{ element = c31; /* this is a subclass choice */ }
	|	c32 = parse_org_kermeta_language_behavior_StringLiteral{ element = c32; /* this is a subclass choice */ }
	|	c33 = parse_org_kermeta_language_behavior_Conditional{ element = c33; /* this is a subclass choice */ }
	|	c34 = parse_org_kermeta_language_behavior_Loop{ element = c34; /* this is a subclass choice */ }
	|	c35 = parse_org_kermeta_language_behavior_VariableDecl{ element = c35; /* this is a subclass choice */ }
	|	c36 = parse_org_kermeta_language_behavior_TypeLiteral{ element = c36; /* this is a subclass choice */ }
	|	c37 = parse_org_kermeta_language_behavior_CallResult{ element = c37; /* this is a subclass choice */ }
	|	c38 = parse_org_kermeta_language_behavior_CallSuperOperation{ element = c38; /* this is a subclass choice */ }
	|	c39 = parse_org_kermeta_language_behavior_Assignment{ element = c39; /* this is a subclass choice */ }
	|	c40 = parse_org_kermeta_language_behavior_CallVariable{ element = c40; /* this is a subclass choice */ }
	|	c41 = parse_org_kermeta_language_behavior_SelfExpression{ element = c41; /* this is a subclass choice */ }
	|	c42 = parse_org_kermeta_language_behavior_CallFeature{ element = c42; /* this is a subclass choice */ }
	|	c43 = parse_org_kermeta_language_behavior_JavaStaticCall{ element = c43; /* this is a subclass choice */ }
	|	c44 = parse_org_kermeta_language_behavior_VoidLiteral{ element = c44; /* this is a subclass choice */ }
	|	c45 = parse_org_kermeta_language_behavior_CallValue{ element = c45; /* this is a subclass choice */ }
	|	c46 = parse_org_kermeta_language_behavior_EmptyExpression{ element = c46; /* this is a subclass choice */ }
	|	c47 = parse_org_kermeta_language_behavior_LambdaExpression{ element = c47; /* this is a subclass choice */ }
	|	c48 = parse_org_kermeta_language_behavior_LambdaParameter{ element = c48; /* this is a subclass choice */ }
	
;

parse_org_kermeta_language_structure_Model returns [org.kermeta.language.structure.Model element = null]
@init{
}
:
	a0 = 'Model' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 128));
	}
	
	a1 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 129));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 129));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 129));
	}
	
	(
		(
			a2 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_169, 130));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 131));
			}
			
			(
				a4 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 132));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 132));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 132));
			}
			
			
			|			a5 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_171, 133));
			}
			
			a6 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 134));
			}
			
			(
				a7_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL__OWNED_TAGS, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 135));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 135));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 135));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 136));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 136));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 136));
	}
	
	a8 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
	}
	{
		// expected elements (follow set)
	}
	
;

parse_org_kermeta_language_structure_ModelType returns [org.kermeta.language.structure.ModelType element = null]
@init{
}
:
	(
		(
			a0 = IDENTIFIER			
			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
				}
				if (a0 != null) {
					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
					tokenResolver.setOptions(getOptions());
					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__IS_ASPECT), result);
					java.lang.Object resolvedObject = result.getResolvedToken();
					if (resolvedObject == null) {
						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
					}
					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
					if (resolved != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__IS_ASPECT), resolved);
						completedElement(resolved);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
				}
			}
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 138));
	}
	
	a1 = 'ModelType' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 139));
	}
	
	a2 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 140));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_174, 140));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_175, 140));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_176, 140));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 140));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 140));
	}
	
	(
		(
			a3 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_179, 141));
			}
			
			a4 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_180, 142));
			}
			
			(
				a5 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
					}
					if (a5 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a5).getLine(), ((org.antlr.runtime.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a5).getStartIndex(), ((org.antlr.runtime.CommonToken) a5).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 143));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_174, 143));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_175, 143));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_176, 143));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 143));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 143));
			}
			
			
			|			a6 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_181, 144));
			}
			
			a7 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 145));
			}
			
			(
				a8_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
					}
					if (a8_0 != null) {
						if (a8_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE__OWNED_TAGS, a8_0);
							completedElement(a8_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a8_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 146));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_174, 146));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_175, 146));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_176, 146));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 146));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 146));
			}
			
			
			|			a9 = 'typeContainer' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_182, 147));
			}
			
			a10 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 148));
			}
			
			(
				a11 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
					}
					if (a11 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a11.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TYPE_CONTAINER), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a11).getLine(), ((org.antlr.runtime.CommonToken) a11).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a11).getStartIndex(), ((org.antlr.runtime.CommonToken) a11).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TYPE_CONTAINER), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TYPE_CONTAINER), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 149));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_174, 149));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_175, 149));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_176, 149));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 149));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 149));
			}
			
			
			|			a12 = 'name' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_184, 150));
			}
			
			a13 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_185, 151));
			}
			
			(
				a14 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
					}
					if (a14 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a14.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__NAME), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a14).getLine(), ((org.antlr.runtime.CommonToken) a14).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a14).getStartIndex(), ((org.antlr.runtime.CommonToken) a14).getStopIndex());
						}
						java.lang.String resolved = (java.lang.String)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__NAME), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a14, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 152));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_174, 152));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_175, 152));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_176, 152));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 152));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 152));
			}
			
			
			|			a15 = 'includedTypeDefinition' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_186, 153));
			}
			
			a16 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a16, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_187, 154));
			}
			
			(
				a17 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
					}
					if (a17 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a17.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__INCLUDED_TYPE_DEFINITION), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a17).getLine(), ((org.antlr.runtime.CommonToken) a17).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a17).getStartIndex(), ((org.antlr.runtime.CommonToken) a17).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.TypeDefinition proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ModelType, org.kermeta.language.structure.TypeDefinition>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getModelTypeIncludedTypeDefinitionReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__INCLUDED_TYPE_DEFINITION), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE__INCLUDED_TYPE_DEFINITION, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a17, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a17, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 155));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_174, 155));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_175, 155));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_176, 155));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 155));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 155));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 156));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_174, 156));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_175, 156));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_176, 156));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 156));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 156));
	}
	
	a18 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 157));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 157));
	}
	
;

parse_org_kermeta_language_structure_TypeVariableBinding returns [org.kermeta.language.structure.TypeVariableBinding element = null]
@init{
}
:
	a0 = 'TypeVariableBinding' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_189, 158));
	}
	
	a1 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 159));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 159));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 159));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 159));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 159));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 159));
	}
	
	(
		(
			a2 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_190, 160));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_191, 161));
			}
			
			(
				a4 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 162));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 162));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 162));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 162));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 162));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 162));
			}
			
			
			|			a5 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 163));
			}
			
			a6 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 164));
			}
			
			(
				a7_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__OWNED_TAGS, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 165));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 165));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 165));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 165));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 165));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 165));
			}
			
			
			|			a8 = 'containedType' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 166));
			}
			
			a9 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 167));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 167));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 167));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 167));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 167));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 167));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 167));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 167));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 167));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 167));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 167));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 167));
			}
			
			(
				a10_0 = parse_org_kermeta_language_structure_Type				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
					}
					if (a10_0 != null) {
						if (a10_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__CONTAINED_TYPE, a10_0);
							completedElement(a10_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a10_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 168));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 168));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 168));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 168));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 168));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 168));
			}
			
			
			|			a11 = 'variable' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_199, 169));
			}
			
			a12 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_200, 170));
			}
			
			(
				a13 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
					}
					if (a13 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__VARIABLE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.ObjectTypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariableBinding, org.kermeta.language.structure.TypeVariable>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableBindingVariableReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__VARIABLE), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__VARIABLE), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 171));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 171));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 171));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 171));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 171));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 171));
			}
			
			
			|			a14 = 'type' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_201, 172));
			}
			
			a15 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_202, 173));
			}
			
			(
				a16 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
					}
					if (a16 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TYPE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariableBinding, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableBindingTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TYPE), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TYPE), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 174));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 174));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 174));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 174));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 174));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 174));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 175));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 175));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 175));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 175));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 175));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 175));
	}
	
	a17 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 176));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 176));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 176));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 176));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 176));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 176));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 176));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 176));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 176));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 176));
	}
	
;

parse_org_kermeta_language_structure_MultiplicityElement returns [org.kermeta.language.structure.MultiplicityElement element = null]
@init{
}
:
	(
		(
			a0 = IDENTIFIER			
			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				if (a0 != null) {
					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
					tokenResolver.setOptions(getOptions());
					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_ORDERED), result);
					java.lang.Object resolvedObject = result.getResolvedToken();
					if (resolvedObject == null) {
						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
					}
					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
					if (resolved != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_ORDERED), resolved);
						completedElement(resolved);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
				}
			}
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 177));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 177));
	}
	
	(
		(
			a1 = IDENTIFIER			
			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				if (a1 != null) {
					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
					tokenResolver.setOptions(getOptions());
					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
					tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_UNIQUE), result);
					java.lang.Object resolvedObject = result.getResolvedToken();
					if (resolvedObject == null) {
						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
					}
					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
					if (resolved != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_UNIQUE), resolved);
						completedElement(resolved);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
				}
			}
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 178));
	}
	
	a2 = 'MultiplicityElement' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_203, 179));
	}
	
	a3 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 180));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 180));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 180));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 180));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 180));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 180));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 180));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 180));
	}
	
	(
		(
			a4 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_204, 181));
			}
			
			a5 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_205, 182));
			}
			
			(
				a6 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
					}
					if (a6 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a6.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a6).getLine(), ((org.antlr.runtime.CommonToken) a6).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a6).getStartIndex(), ((org.antlr.runtime.CommonToken) a6).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a6, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a6, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 183));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 183));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 183));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 183));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 183));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 183));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 183));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 183));
			}
			
			
			|			a7 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_206, 184));
			}
			
			a8 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 185));
			}
			
			(
				a9_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
					}
					if (a9_0 != null) {
						if (a9_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__OWNED_TAGS, a9_0);
							completedElement(a9_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a9_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 186));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 186));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 186));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 186));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 186));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 186));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 186));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 186));
			}
			
			
			|			a10 = 'containedType' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_207, 187));
			}
			
			a11 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 188));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 188));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 188));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 188));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 188));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 188));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 188));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 188));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 188));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 188));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 188));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 188));
			}
			
			(
				a12_0 = parse_org_kermeta_language_structure_Type				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
					}
					if (a12_0 != null) {
						if (a12_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__CONTAINED_TYPE, a12_0);
							completedElement(a12_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a12_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 189));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 189));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 189));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 189));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 189));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 189));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 189));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 189));
			}
			
			
			|			a13 = 'name' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_208, 190));
			}
			
			a14 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_209, 191));
			}
			
			(
				a15 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
					}
					if (a15 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a15.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__NAME), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a15).getLine(), ((org.antlr.runtime.CommonToken) a15).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a15).getStartIndex(), ((org.antlr.runtime.CommonToken) a15).getStopIndex());
						}
						java.lang.String resolved = (java.lang.String)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__NAME), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a15, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 192));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 192));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 192));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 192));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 192));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 192));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 192));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 192));
			}
			
			
			|			a16 = 'type' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a16, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_210, 193));
			}
			
			a17 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_211, 194));
			}
			
			(
				a18 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
					}
					if (a18 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a18.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TYPE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a18).getLine(), ((org.antlr.runtime.CommonToken) a18).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a18).getStartIndex(), ((org.antlr.runtime.CommonToken) a18).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TYPE), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TYPE), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a18, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a18, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 195));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 195));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 195));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 195));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 195));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 195));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 195));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 195));
			}
			
			
			|			a19 = 'lower' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a19, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_212, 196));
			}
			
			a20 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 197));
			}
			
			(
				a21 = INTEGER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
					}
					if (a21 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a21.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__LOWER), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a21).getLine(), ((org.antlr.runtime.CommonToken) a21).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a21).getStartIndex(), ((org.antlr.runtime.CommonToken) a21).getStopIndex());
						}
						java.lang.Integer resolved = (java.lang.Integer)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__LOWER), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a21, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 198));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 198));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 198));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 198));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 198));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 198));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 198));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 198));
			}
			
			
			|			a22 = 'upper' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a22, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 199));
			}
			
			a23 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 200));
			}
			
			(
				a24 = INTEGER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
					}
					if (a24 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a24.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__UPPER), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a24).getLine(), ((org.antlr.runtime.CommonToken) a24).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a24).getStartIndex(), ((org.antlr.runtime.CommonToken) a24).getStopIndex());
						}
						java.lang.Integer resolved = (java.lang.Integer)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__UPPER), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a24, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 201));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 201));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 201));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 201));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 201));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 201));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 201));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 201));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 202));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 202));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 202));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 202));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 202));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 202));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 202));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 202));
	}
	
	a25 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a25, element);
	}
	{
		// expected elements (follow set)
	}
	
	|//derived choice rules for sub-classes: 
	
	c0 = parse_org_kermeta_language_structure_Property{ element = c0; /* this is a subclass choice */ }
	|	c1 = parse_org_kermeta_language_structure_Operation{ element = c1; /* this is a subclass choice */ }
	|	c2 = parse_org_kermeta_language_structure_Parameter{ element = c2; /* this is a subclass choice */ }
	|	c3 = parse_org_kermeta_language_behavior_TypeReference{ element = c3; /* this is a subclass choice */ }
	
;

parse_org_kermeta_language_structure_TypeDefinition returns [org.kermeta.language.structure.TypeDefinition element = null]
@init{
}
:
	(
		(
			a0 = IDENTIFIER			
			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
				}
				if (a0 != null) {
					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
					tokenResolver.setOptions(getOptions());
					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__IS_ASPECT), result);
					java.lang.Object resolvedObject = result.getResolvedToken();
					if (resolvedObject == null) {
						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
					}
					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
					if (resolved != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__IS_ASPECT), resolved);
						completedElement(resolved);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
				}
			}
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 204));
	}
	
	a1 = 'TypeDefinition' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 205));
	}
	
	a2 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 206));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 206));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_219, 206));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_220, 206));
	}
	
	(
		(
			a3 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_221, 207));
			}
			
			a4 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_222, 208));
			}
			
			(
				a5 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
					}
					if (a5 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a5).getLine(), ((org.antlr.runtime.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a5).getStartIndex(), ((org.antlr.runtime.CommonToken) a5).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 209));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 209));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_219, 209));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_220, 209));
			}
			
			
			|			a6 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_223, 210));
			}
			
			a7 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 211));
			}
			
			(
				a8_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
					}
					if (a8_0 != null) {
						if (a8_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__OWNED_TAGS, a8_0);
							completedElement(a8_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a8_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 212));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 212));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_219, 212));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_220, 212));
			}
			
			
			|			a9 = 'name' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_224, 213));
			}
			
			a10 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_225, 214));
			}
			
			(
				a11 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
					}
					if (a11 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a11.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__NAME), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a11).getLine(), ((org.antlr.runtime.CommonToken) a11).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a11).getStartIndex(), ((org.antlr.runtime.CommonToken) a11).getStopIndex());
						}
						java.lang.String resolved = (java.lang.String)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__NAME), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 215));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 215));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_219, 215));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_220, 215));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 216));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 216));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_219, 216));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_220, 216));
	}
	
	a12 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 217));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 217));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 217));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 217));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 217));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 217));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 217));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 217));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 217));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 217));
	}
	
	|//derived choice rules for sub-classes: 
	
	c0 = parse_org_kermeta_language_structure_ClassDefinition{ element = c0; /* this is a subclass choice */ }
	|	c1 = parse_org_kermeta_language_structure_Enumeration{ element = c1; /* this is a subclass choice */ }
	|	c2 = parse_org_kermeta_language_structure_PrimitiveType{ element = c2; /* this is a subclass choice */ }
	|	c3 = parse_org_kermeta_language_structure_ModelType{ element = c3; /* this is a subclass choice */ }
	
;

parse_org_kermeta_language_structure_Tag returns [org.kermeta.language.structure.Tag element = null]
@init{
}
:
	a0 = 'Tag' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_226, 218));
	}
	
	a1 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 219));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_228, 219));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_229, 219));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_230, 219));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_231, 219));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_232, 219));
	}
	
	(
		(
			a2 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_233, 220));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_234, 221));
			}
			
			(
				a4 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TAG__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 222));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_228, 222));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_229, 222));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_230, 222));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_231, 222));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_232, 222));
			}
			
			
			|			a5 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_235, 223));
			}
			
			a6 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 224));
			}
			
			(
				a7_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TAG__OWNED_TAGS, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 225));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_228, 225));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_229, 225));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_230, 225));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_231, 225));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_232, 225));
			}
			
			
			|			a8 = 'name' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_236, 226));
			}
			
			a9 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_237, 227));
			}
			
			(
				a10 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
					}
					if (a10 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a10.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__NAME), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a10).getLine(), ((org.antlr.runtime.CommonToken) a10).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a10).getStartIndex(), ((org.antlr.runtime.CommonToken) a10).getStopIndex());
						}
						java.lang.String resolved = (java.lang.String)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__NAME), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 228));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_228, 228));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_229, 228));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_230, 228));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_231, 228));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_232, 228));
			}
			
			
			|			a11 = 'value' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 229));
			}
			
			a12 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 230));
			}
			
			(
				a13 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
					}
					if (a13 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__VALUE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
						}
						java.lang.String resolved = (java.lang.String)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__VALUE), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 231));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_228, 231));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_229, 231));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_230, 231));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_231, 231));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_232, 231));
			}
			
			
			|			a14 = 'object' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 232));
			}
			
			a15 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_241, 233));
			}
			
			(
				a16 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
					}
					if (a16 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__OBJECT), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Object proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Tag, org.kermeta.language.structure.Object>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTagObjectReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__OBJECT), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TAG__OBJECT, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 234));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_228, 234));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_229, 234));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_230, 234));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_231, 234));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_232, 234));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 235));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_228, 235));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_229, 235));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_230, 235));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_231, 235));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_232, 235));
	}
	
	a17 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_174, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_175, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_176, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_219, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_220, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_228, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_229, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_230, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_231, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_232, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_242, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_243, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_244, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_245, 236));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_246, 236));
	}
	
;

parse_org_kermeta_language_structure_ObjectTypeVariable returns [org.kermeta.language.structure.ObjectTypeVariable element = null]
@init{
}
:
	a0 = 'ObjectTypeVariable' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_247, 237));
	}
	
	a1 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 238));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 238));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 238));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 238));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 238));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 238));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 238));
	}
	
	(
		(
			a2 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_248, 239));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_249, 240));
			}
			
			(
				a4 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 241));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 241));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 241));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 241));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 241));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 241));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 241));
			}
			
			
			|			a5 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_250, 242));
			}
			
			a6 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 243));
			}
			
			(
				a7_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__OWNED_TAGS, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 244));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 244));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 244));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 244));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 244));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 244));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 244));
			}
			
			
			|			a8 = 'containedType' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_251, 245));
			}
			
			a9 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 246));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 246));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 246));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 246));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 246));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 246));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 246));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 246));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 246));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 246));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 246));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 246));
			}
			
			(
				a10_0 = parse_org_kermeta_language_structure_Type				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
					}
					if (a10_0 != null) {
						if (a10_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__CONTAINED_TYPE, a10_0);
							completedElement(a10_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a10_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 247));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 247));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 247));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 247));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 247));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 247));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 247));
			}
			
			
			|			a11 = 'typeContainer' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_252, 248));
			}
			
			a12 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_253, 249));
			}
			
			(
				a13 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
					}
					if (a13 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TYPE_CONTAINER), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TYPE_CONTAINER), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TYPE_CONTAINER), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 250));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 250));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 250));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 250));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 250));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 250));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 250));
			}
			
			
			|			a14 = 'name' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_254, 251));
			}
			
			a15 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_255, 252));
			}
			
			(
				a16 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
					}
					if (a16 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__NAME), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
						}
						java.lang.String resolved = (java.lang.String)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__NAME), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 253));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 253));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 253));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 253));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 253));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 253));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 253));
			}
			
			
			|			a17 = 'supertype' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_256, 254));
			}
			
			a18 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_257, 255));
			}
			
			(
				a19 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
					}
					if (a19 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__SUPERTYPE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariable, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableSupertypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__SUPERTYPE), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__SUPERTYPE), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 256));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 256));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 256));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 256));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 256));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 256));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 256));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 257));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 257));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 257));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 257));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 257));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 257));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 257));
	}
	
	a20 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 258));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 258));
	}
	
	|//derived choice rules for sub-classes: 
	
	c0 = parse_org_kermeta_language_structure_VirtualType{ element = c0; /* this is a subclass choice */ }
	
;

parse_org_kermeta_language_structure_ModelTypeVariable returns [org.kermeta.language.structure.ModelTypeVariable element = null]
@init{
}
:
	a0 = 'ModelTypeVariable' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_258, 259));
	}
	
	a1 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 260));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 260));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 260));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 260));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 260));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 260));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 260));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 260));
	}
	
	(
		(
			a2 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_259, 261));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_260, 262));
			}
			
			(
				a4 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 263));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 263));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 263));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 263));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 263));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 263));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 263));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 263));
			}
			
			
			|			a5 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_261, 264));
			}
			
			a6 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 265));
			}
			
			(
				a7_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__OWNED_TAGS, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 266));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 266));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 266));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 266));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 266));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 266));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 266));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 266));
			}
			
			
			|			a8 = 'containedType' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_262, 267));
			}
			
			a9 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 268));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 268));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 268));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 268));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 268));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 268));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 268));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 268));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 268));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 268));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 268));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 268));
			}
			
			(
				a10_0 = parse_org_kermeta_language_structure_Type				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
					}
					if (a10_0 != null) {
						if (a10_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__CONTAINED_TYPE, a10_0);
							completedElement(a10_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a10_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 269));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 269));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 269));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 269));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 269));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 269));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 269));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 269));
			}
			
			
			|			a11 = 'typeContainer' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_263, 270));
			}
			
			a12 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_264, 271));
			}
			
			(
				a13 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
					}
					if (a13 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TYPE_CONTAINER), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TYPE_CONTAINER), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TYPE_CONTAINER), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 272));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 272));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 272));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 272));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 272));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 272));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 272));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 272));
			}
			
			
			|			a14 = 'name' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_265, 273));
			}
			
			a15 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_266, 274));
			}
			
			(
				a16 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
					}
					if (a16 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__NAME), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
						}
						java.lang.String resolved = (java.lang.String)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__NAME), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 275));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 275));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 275));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 275));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 275));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 275));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 275));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 275));
			}
			
			
			|			a17 = 'supertype' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_267, 276));
			}
			
			a18 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_268, 277));
			}
			
			(
				a19 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
					}
					if (a19 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__SUPERTYPE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariable, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableSupertypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__SUPERTYPE), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__SUPERTYPE), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 278));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 278));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 278));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 278));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 278));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 278));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 278));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 278));
			}
			
			
			|			a20 = 'virtualType' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_269, 279));
			}
			
			a21 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a21, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 280));
			}
			
			(
				a22_0 = parse_org_kermeta_language_structure_VirtualType				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
					}
					if (a22_0 != null) {
						if (a22_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__VIRTUAL_TYPE, a22_0);
							completedElement(a22_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a22_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 281));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 281));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 281));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 281));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 281));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 281));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 281));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 281));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 282));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 282));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 282));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 282));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 282));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 282));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 282));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 282));
	}
	
	a23 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 283));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 283));
	}
	
;

parse_org_kermeta_language_structure_VirtualType returns [org.kermeta.language.structure.VirtualType element = null]
@init{
}
:
	a0 = 'VirtualType' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_270, 284));
	}
	
	a1 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 285));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 285));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 285));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 285));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 285));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 285));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 285));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 285));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 285));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 285));
	}
	
	(
		(
			a2 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_271, 286));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_272, 287));
			}
			
			(
				a4 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 288));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 288));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 288));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 288));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 288));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 288));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 288));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 288));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 288));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 288));
			}
			
			
			|			a5 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_273, 289));
			}
			
			a6 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 290));
			}
			
			(
				a7_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__OWNED_TAGS, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 291));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 291));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 291));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 291));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 291));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 291));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 291));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 291));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 291));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 291));
			}
			
			
			|			a8 = 'containedType' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_274, 292));
			}
			
			a9 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 293));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 293));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 293));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 293));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 293));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 293));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 293));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 293));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 293));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 293));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 293));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 293));
			}
			
			(
				a10_0 = parse_org_kermeta_language_structure_Type				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
					}
					if (a10_0 != null) {
						if (a10_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CONTAINED_TYPE, a10_0);
							completedElement(a10_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a10_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 294));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 294));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 294));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 294));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 294));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 294));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 294));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 294));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 294));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 294));
			}
			
			
			|			a11 = 'typeContainer' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_275, 295));
			}
			
			a12 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_276, 296));
			}
			
			(
				a13 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
					}
					if (a13 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_CONTAINER), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_CONTAINER), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_CONTAINER), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 297));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 297));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 297));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 297));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 297));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 297));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 297));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 297));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 297));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 297));
			}
			
			
			|			a14 = 'name' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_277, 298));
			}
			
			a15 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_278, 299));
			}
			
			(
				a16 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
					}
					if (a16 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__NAME), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
						}
						java.lang.String resolved = (java.lang.String)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__NAME), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 300));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 300));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 300));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 300));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 300));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 300));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 300));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 300));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 300));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 300));
			}
			
			
			|			a17 = 'supertype' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_279, 301));
			}
			
			a18 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_280, 302));
			}
			
			(
				a19 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
					}
					if (a19 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__SUPERTYPE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariable, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableSupertypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__SUPERTYPE), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__SUPERTYPE), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 303));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 303));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 303));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 303));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 303));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 303));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 303));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 303));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 303));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 303));
			}
			
			
			|			a20 = 'classDefinition' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_281, 304));
			}
			
			a21 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a21, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_282, 305));
			}
			
			(
				a22 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
					}
					if (a22 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a22.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CLASS_DEFINITION), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a22).getLine(), ((org.antlr.runtime.CommonToken) a22).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a22).getStartIndex(), ((org.antlr.runtime.CommonToken) a22).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.ClassDefinition proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.VirtualType, org.kermeta.language.structure.ClassDefinition>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getVirtualTypeClassDefinitionReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CLASS_DEFINITION), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CLASS_DEFINITION), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a22, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a22, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 306));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 306));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 306));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 306));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 306));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 306));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 306));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 306));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 306));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 306));
			}
			
			
			|			a23 = 'modelType' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_283, 307));
			}
			
			a24 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a24, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_284, 308));
			}
			
			(
				a25 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
					}
					if (a25 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a25.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__MODEL_TYPE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a25).getLine(), ((org.antlr.runtime.CommonToken) a25).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a25).getStartIndex(), ((org.antlr.runtime.CommonToken) a25).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.ModelTypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.VirtualType, org.kermeta.language.structure.ModelTypeVariable>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getVirtualTypeModelTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__MODEL_TYPE), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__MODEL_TYPE), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a25, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a25, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 309));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 309));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 309));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 309));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 309));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 309));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 309));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 309));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 309));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 309));
			}
			
			
			|			a26 = 'typeParamBinding' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a26, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_285, 310));
			}
			
			a27 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a27, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_188, 311));
			}
			
			(
				a28_0 = parse_org_kermeta_language_structure_TypeVariableBinding				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
					}
					if (a28_0 != null) {
						if (a28_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_PARAM_BINDING, a28_0);
							completedElement(a28_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a28_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 312));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 312));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 312));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 312));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 312));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 312));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 312));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 312));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 312));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 312));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 313));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 313));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 313));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 313));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 313));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 313));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 313));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 313));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 313));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 313));
	}
	
	a29 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a29, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 314));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 314));
	}
	
;

parse_org_kermeta_language_structure_ProductType returns [org.kermeta.language.structure.ProductType element = null]
@init{
}
:
	a0 = 'ProductType' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_286, 315));
	}
	
	a1 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 316));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 316));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 316));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 316));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 316));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 316));
	}
	
	(
		(
			a2 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_287, 317));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_288, 318));
			}
			
			(
				a4 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 319));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 319));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 319));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 319));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 319));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 319));
			}
			
			
			|			a5 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_289, 320));
			}
			
			a6 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 321));
			}
			
			(
				a7_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__OWNED_TAGS, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 322));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 322));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 322));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 322));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 322));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 322));
			}
			
			
			|			a8 = 'containedType' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_290, 323));
			}
			
			a9 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 324));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 324));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 324));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 324));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 324));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 324));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 324));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 324));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 324));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 324));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 324));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 324));
			}
			
			(
				a10_0 = parse_org_kermeta_language_structure_Type				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
					}
					if (a10_0 != null) {
						if (a10_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__CONTAINED_TYPE, a10_0);
							completedElement(a10_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a10_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 325));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 325));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 325));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 325));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 325));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 325));
			}
			
			
			|			a11 = 'typeContainer' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_291, 326));
			}
			
			a12 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_292, 327));
			}
			
			(
				a13 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
					}
					if (a13 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE_CONTAINER), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE_CONTAINER), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE_CONTAINER), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 328));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 328));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 328));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 328));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 328));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 328));
			}
			
			
			|			a14 = 'type' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_293, 329));
			}
			
			a15 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_294, 330));
			}
			
			(
				a16 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
					}
					if (a16 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ProductType, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getProductTypeTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 331));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 331));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 331));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 331));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 331));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 331));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 332));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 332));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 332));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 332));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 332));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 332));
	}
	
	a17 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 333));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 333));
	}
	
;

parse_org_kermeta_language_structure_FunctionType returns [org.kermeta.language.structure.FunctionType element = null]
@init{
}
:
	a0 = 'FunctionType' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_295, 334));
	}
	
	a1 = '{' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 335));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 335));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 335));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 335));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 335));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 335));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 335));
	}
	
	(
		(
			a2 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_296, 336));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_297, 337));
			}
			
			(
				a4 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 338));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 338));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 338));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 338));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 338));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 338));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 338));
			}
			
			
			|			a5 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_298, 339));
			}
			
			a6 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 340));
			}
			
			(
				a7_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__OWNED_TAGS, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 341));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 341));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 341));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 341));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 341));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 341));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 341));
			}
			
			
			|			a8 = 'containedType' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_299, 342));
			}
			
			a9 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 343));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 343));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 343));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 343));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 343));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 343));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 343));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 343));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 343));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 343));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 343));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 343));
			}
			
			(
				a10_0 = parse_org_kermeta_language_structure_Type				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
					}
					if (a10_0 != null) {
						if (a10_0 != null) {
							addObjectToList(element, org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__CONTAINED_TYPE, a10_0);
							completedElement(a10_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a10_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 344));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 344));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 344));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 344));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 344));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 344));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 344));
			}
			
			
			|			a11 = 'typeContainer' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_300, 345));
			}
			
			a12 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 346));
			}
			
			(
				a13 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
					}
					if (a13 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TYPE_CONTAINER), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TYPE_CONTAINER), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TYPE_CONTAINER), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 347));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 347));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 347));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 347));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 347));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 347));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 347));
			}
			
			
			|			a14 = 'left' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 348));
			}
			
			a15 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 349));
			}
			
			(
				a16 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
					}
					if (a16 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__LEFT), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.FunctionType, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getFunctionTypeLeftReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__LEFT), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__LEFT), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 350));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 350));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 350));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 350));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 350));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 350));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 350));
			}
			
			
			|			a17 = 'right' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 351));
			}
			
			a18 = ':' {
				if (element == null) {
					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 352));
			}
			
			(
				a19 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
					}
					if (a19 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__RIGHT), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.FunctionType, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getFunctionTypeRightReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__RIGHT), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__RIGHT), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 353));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 353));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 353));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 353));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 353));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 353));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 353));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 354));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 354));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 354));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 354));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 354));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 354));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 354));
	}
	
	a20 = '}' {
		if (element == null) {
			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 355));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 355));
	}
	
;

parse_org_kermeta_language_behavior_Block returns [org.kermeta.language.behavior.Block element = null]
@init{
}
:
	a0 = 'do' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 356));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 356));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 356));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 356));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 356));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 356));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 356));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 356));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 356));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 356));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 356));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 356));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 356));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 356));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 356));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 356));
	}
	
	(
		(
			(
				a1_0 = parse_org_kermeta_language_behavior_VariableDecl				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
					}
					if (a1_0 != null) {
						if (a1_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a1_0);
							completedElement(a1_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a1_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 357));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 357));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 357));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 357));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 357));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 357));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 357));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 357));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 357));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 357));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 357));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 357));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 357));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 357));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 357));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 357));
			}
			
			
			|			(
				a2_0 = parse_org_kermeta_language_behavior_Loop				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
					}
					if (a2_0 != null) {
						if (a2_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a2_0);
							completedElement(a2_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a2_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 358));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 358));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 358));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 358));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 358));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 358));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 358));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 358));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 358));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 358));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 358));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 358));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 358));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 358));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 358));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 358));
			}
			
			
			|			(
				a3_0 = parse_org_kermeta_language_behavior_Conditional				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
					}
					if (a3_0 != null) {
						if (a3_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a3_0);
							completedElement(a3_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a3_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 359));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 359));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 359));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 359));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 359));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 359));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 359));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 359));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 359));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 359));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 359));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 359));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 359));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 359));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 359));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 359));
			}
			
			
			|			(
				a4_0 = parse_org_kermeta_language_behavior_Assignment				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
					}
					if (a4_0 != null) {
						if (a4_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a4_0);
							completedElement(a4_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a4_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 360));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 360));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 360));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 360));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 360));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 360));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 360));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 360));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 360));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 360));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 360));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 360));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 360));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 360));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 360));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 360));
			}
			
			
			|			(
				a5_0 = parse_org_kermeta_language_behavior_CallFeature				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
					}
					if (a5_0 != null) {
						if (a5_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a5_0);
							completedElement(a5_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a5_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 361));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 361));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 361));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 361));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 361));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 361));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 361));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 361));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 361));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 361));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 361));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 361));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 361));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 361));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 361));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 361));
			}
			
			
			|			(
				a6_0 = parse_org_kermeta_language_behavior_CallVariable				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
					}
					if (a6_0 != null) {
						if (a6_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a6_0);
							completedElement(a6_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a6_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 362));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 362));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 362));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 362));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 362));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 362));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 362));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 362));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 362));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 362));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 362));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 362));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 362));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 362));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 362));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 362));
			}
			
			
			|			(
				a7_0 = parse_org_kermeta_language_behavior_CallSuperOperation				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 363));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 363));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 363));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 363));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 363));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 363));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 363));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 363));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 363));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 363));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 363));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 363));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 363));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 363));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 363));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 363));
			}
			
			
			|			(
				a8_0 = parse_org_kermeta_language_behavior_CallResult				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
					}
					if (a8_0 != null) {
						if (a8_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a8_0);
							completedElement(a8_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a8_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 364));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 364));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 364));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 364));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 364));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 364));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 364));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 364));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 364));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 364));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 364));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 364));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 364));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 364));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 364));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 364));
			}
			
			
			|			(
				a9_0 = parse_org_kermeta_language_behavior_JavaStaticCall				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
					}
					if (a9_0 != null) {
						if (a9_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a9_0);
							completedElement(a9_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a9_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 365));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 365));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 365));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 365));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 365));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 365));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 365));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 365));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 365));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 365));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 365));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 365));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 365));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 365));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 365));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 365));
			}
			
			
			|			(
				a10_0 = parse_org_kermeta_language_behavior_EmptyExpression				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
					}
					if (a10_0 != null) {
						if (a10_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a10_0);
							completedElement(a10_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a10_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 366));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 366));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 366));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 366));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 366));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 366));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 366));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 366));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 366));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 366));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 366));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 366));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 366));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 366));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 366));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 366));
			}
			
			
			|			(
				a11_0 = parse_org_kermeta_language_behavior_Block				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
					}
					if (a11_0 != null) {
						if (a11_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a11_0);
							completedElement(a11_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a11_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 367));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 367));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 367));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 367));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 367));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 367));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 367));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 367));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 367));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 367));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 367));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 367));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 367));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 367));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 367));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 367));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 368));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 368));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 368));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 368));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 368));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 368));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 368));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 368));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 368));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 368));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 368));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 368));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 368));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 368));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 368));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 368));
	}
	
	(
		(
			(
				a12_0 = parse_org_kermeta_language_behavior_Rescue				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
					}
					if (a12_0 != null) {
						if (a12_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__RESCUE_BLOCK, a12_0);
							completedElement(a12_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a12_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 369));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 369));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 370));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 370));
	}
	
	a13 = 'end' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 371));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 371));
	}
	
;

parse_org_kermeta_language_behavior_Rescue returns [org.kermeta.language.behavior.Rescue element = null]
@init{
}
:
	a0 = 'rescue' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 372));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 372));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 372));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 372));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 372));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 372));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 372));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 372));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 372));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 372));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 372));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 372));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 372));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 372));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 372));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 372));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 372));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 372));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 372));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 372));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 372));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 372));
	}
	
	(
		(
			a1 = '(' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 373));
			}
			
			(
				a2 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
					}
					if (a2 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RESCUE__EXCEPTION_NAME), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
						}
						java.lang.String resolved = (java.lang.String)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RESCUE__EXCEPTION_NAME), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 374));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 375));
			}
			
			(
				a4_0 = parse_org_kermeta_language_behavior_TypeReference				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
					}
					if (a4_0 != null) {
						if (a4_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RESCUE__EXCEPTION_TYPE), a4_0);
							completedElement(a4_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a4_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 376));
			}
			
			a5 = ')' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 377));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 377));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 377));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 377));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 377));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 377));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 377));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 377));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 377));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 377));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 377));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 377));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 377));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 377));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 377));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 377));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 377));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 377));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 377));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 377));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 377));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 378));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 378));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 378));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 378));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 378));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 378));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 378));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 378));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 378));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 378));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 378));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 378));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 378));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 378));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 378));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 378));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 378));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 378));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 378));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 378));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 378));
	}
	
	(
		(
			(
				a6_0 = parse_org_kermeta_language_behavior_Expression				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
					}
					if (a6_0 != null) {
						if (a6_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.RESCUE__BODY, a6_0);
							completedElement(a6_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a6_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 379));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 379));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 380));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 380));
	}
	
;

parse_org_kermeta_language_behavior_TypeReference returns [org.kermeta.language.behavior.TypeReference element = null]
@init{
}
:
	(
		a0 = IDENTIFIER		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createTypeReference();
			}
			if (a0 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_REFERENCE__TYPE), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
				}
				String resolved = (String) resolvedObject;
				org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
				collectHiddenTokens(element);
				registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_REFERENCE__TYPE), resolved, proxy);
				if (proxy != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_REFERENCE__TYPE), proxy);
					completedElement(proxy);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, proxy);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_242, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_243, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_244, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_245, 381));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_246, 381));
	}
	
;

parse_org_kermeta_language_behavior_Raise returns [org.kermeta.language.behavior.Raise element = null]
@init{
}
:
	a0 = 'raise' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 382));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 382));
	}
	
	(
		a1_0 = parse_org_kermeta_language_behavior_Expression		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
			}
			if (a1_0 != null) {
				if (a1_0 != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RAISE__EXPRESSION), a1_0);
					completedElement(a1_0);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos(a1_0, element); 			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 383));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 383));
	}
	
;

parse_org_kermeta_language_behavior_BooleanLiteral returns [org.kermeta.language.behavior.BooleanLiteral element = null]
@init{
}
:
	(
		a0 = BOOLEAN		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBooleanLiteral();
			}
			if (a0 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("BOOLEAN");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.BOOLEAN_LITERAL__VALUE), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
				}
				java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.BOOLEAN_LITERAL__VALUE), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 384));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 384));
	}
	
;

parse_org_kermeta_language_behavior_IntegerLiteral returns [org.kermeta.language.behavior.IntegerLiteral element = null]
@init{
}
:
	(
		a0 = INTEGER		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createIntegerLiteral();
			}
			if (a0 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.INTEGER_LITERAL__VALUE), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
				}
				java.lang.Integer resolved = (java.lang.Integer)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.INTEGER_LITERAL__VALUE), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 385));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 385));
	}
	
;

parse_org_kermeta_language_behavior_StringLiteral returns [org.kermeta.language.behavior.StringLiteral element = null]
@init{
}
:
	(
		a0 = IDENTIFIER		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createStringLiteral();
			}
			if (a0 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.STRING_LITERAL__VALUE), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
				}
				java.lang.String resolved = (java.lang.String)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.STRING_LITERAL__VALUE), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 386));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 386));
	}
	
;

parse_org_kermeta_language_behavior_Conditional returns [org.kermeta.language.behavior.Conditional element = null]
@init{
}
:
	a0 = 'if' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 387));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 387));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 387));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 387));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 387));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 387));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 387));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 387));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 387));
	}
	
	(
		(
			a1_0 = parse_org_kermeta_language_behavior_CallFeature			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
				}
				if (a1_0 != null) {
					if (a1_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__CONDITION), a1_0);
						completedElement(a1_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a1_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 388));
		}
		
		
		|		(
			a2_0 = parse_org_kermeta_language_behavior_Conditional			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
				}
				if (a2_0 != null) {
					if (a2_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__CONDITION), a2_0);
						completedElement(a2_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a2_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 389));
		}
		
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 390));
	}
	
	a3 = 'then' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 391));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 391));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 391));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 391));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 391));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 391));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 391));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 391));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 391));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 391));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 391));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 391));
	}
	
	(
		(
			a4_0 = parse_org_kermeta_language_behavior_BooleanLiteral			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
				}
				if (a4_0 != null) {
					if (a4_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a4_0);
						completedElement(a4_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a4_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 392));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 392));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 392));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 392));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 392));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 392));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 392));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 392));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 392));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 392));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 392));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 392));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 392));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 392));
		}
		
		
		|		(
			a5_0 = parse_org_kermeta_language_behavior_Block			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
				}
				if (a5_0 != null) {
					if (a5_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a5_0);
						completedElement(a5_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a5_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 393));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 393));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 393));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 393));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 393));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 393));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 393));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 393));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 393));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 393));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 393));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 393));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 393));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 393));
		}
		
		
		|		(
			a6_0 = parse_org_kermeta_language_behavior_Assignment			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
				}
				if (a6_0 != null) {
					if (a6_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a6_0);
						completedElement(a6_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a6_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 394));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 394));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 394));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 394));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 394));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 394));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 394));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 394));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 394));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 394));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 394));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 394));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 394));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 394));
		}
		
		
		|		(
			a7_0 = parse_org_kermeta_language_behavior_CallFeature			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
				}
				if (a7_0 != null) {
					if (a7_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a7_0);
						completedElement(a7_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a7_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 395));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 395));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 395));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 395));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 395));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 395));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 395));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 395));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 395));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 395));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 395));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 395));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 395));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 395));
		}
		
		
		|		(
			a8_0 = parse_org_kermeta_language_behavior_CallSuperOperation			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
				}
				if (a8_0 != null) {
					if (a8_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a8_0);
						completedElement(a8_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a8_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 396));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 396));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 396));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 396));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 396));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 396));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 396));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 396));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 396));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 396));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 396));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 396));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 396));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 396));
		}
		
		
		|		(
			a9_0 = parse_org_kermeta_language_behavior_CallResult			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
				}
				if (a9_0 != null) {
					if (a9_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a9_0);
						completedElement(a9_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a9_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 397));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 397));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 397));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 397));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 397));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 397));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 397));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 397));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 397));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 397));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 397));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 397));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 397));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 397));
		}
		
		
		|		(
			a10_0 = parse_org_kermeta_language_behavior_CallVariable			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
				}
				if (a10_0 != null) {
					if (a10_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a10_0);
						completedElement(a10_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a10_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 398));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 398));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 398));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 398));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 398));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 398));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 398));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 398));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 398));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 398));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 398));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 398));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 398));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 398));
		}
		
		
		|		(
			a11_0 = parse_org_kermeta_language_behavior_CallValue			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
				}
				if (a11_0 != null) {
					if (a11_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a11_0);
						completedElement(a11_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a11_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 399));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 399));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 399));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 399));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 399));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 399));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 399));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 399));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 399));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 399));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 399));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 399));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 399));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 399));
		}
		
		
		|		(
			a12_0 = parse_org_kermeta_language_behavior_VariableDecl			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
				}
				if (a12_0 != null) {
					if (a12_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a12_0);
						completedElement(a12_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a12_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 400));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 400));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 400));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 400));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 400));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 400));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 400));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 400));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 400));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 400));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 400));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 400));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 400));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 400));
		}
		
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 401));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 401));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 401));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 401));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 401));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 401));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 401));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 401));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 401));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 401));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 401));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 401));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 401));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 401));
	}
	
	(
		(
			a13 = 'else' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 402));
			}
			
			(
				a14_0 = parse_org_kermeta_language_behavior_BooleanLiteral				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
					}
					if (a14_0 != null) {
						if (a14_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a14_0);
							completedElement(a14_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a14_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 403));
			}
			
			
			|			(
				a15_0 = parse_org_kermeta_language_behavior_Block				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
					}
					if (a15_0 != null) {
						if (a15_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a15_0);
							completedElement(a15_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a15_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 404));
			}
			
			
			|			(
				a16_0 = parse_org_kermeta_language_behavior_Assignment				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
					}
					if (a16_0 != null) {
						if (a16_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a16_0);
							completedElement(a16_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a16_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 405));
			}
			
			
			|			(
				a17_0 = parse_org_kermeta_language_behavior_CallFeature				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
					}
					if (a17_0 != null) {
						if (a17_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a17_0);
							completedElement(a17_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a17_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 406));
			}
			
			
			|			(
				a18_0 = parse_org_kermeta_language_behavior_CallSuperOperation				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
					}
					if (a18_0 != null) {
						if (a18_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a18_0);
							completedElement(a18_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a18_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 407));
			}
			
			
			|			(
				a19_0 = parse_org_kermeta_language_behavior_CallResult				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
					}
					if (a19_0 != null) {
						if (a19_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a19_0);
							completedElement(a19_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a19_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 408));
			}
			
			
			|			(
				a20_0 = parse_org_kermeta_language_behavior_VariableDecl				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
					}
					if (a20_0 != null) {
						if (a20_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a20_0);
							completedElement(a20_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a20_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 409));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 409));
			}
			
			(
				a21_0 = parse_org_kermeta_language_behavior_CallVariable				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
					}
					if (a21_0 != null) {
						if (a21_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a21_0);
							completedElement(a21_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a21_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 410));
			}
			
			
			|			(
				a22_0 = parse_org_kermeta_language_behavior_CallValue				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
					}
					if (a22_0 != null) {
						if (a22_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a22_0);
							completedElement(a22_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a22_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 411));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 412));
	}
	
	a23 = 'end' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 413));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 413));
	}
	
;

parse_org_kermeta_language_behavior_Loop returns [org.kermeta.language.behavior.Loop element = null]
@init{
}
:
	a0 = 'from' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 414));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 414));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 414));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 414));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 414));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 414));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 414));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 414));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 414));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 414));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 414));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 414));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 414));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 414));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 414));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 414));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 414));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 414));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 414));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 414));
	}
	
	(
		(
			(
				a1_0 = parse_org_kermeta_language_behavior_Expression				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
					}
					if (a1_0 != null) {
						if (a1_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LOOP__INITIALIZATION), a1_0);
							completedElement(a1_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a1_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 415));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 416));
	}
	
	a2 = 'until' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 417));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 417));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 417));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 417));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 417));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 417));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 417));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 417));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 417));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 417));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 417));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 417));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 417));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 417));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 417));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 417));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 417));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 417));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 417));
	}
	
	(
		a3_0 = parse_org_kermeta_language_behavior_Expression		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
			}
			if (a3_0 != null) {
				if (a3_0 != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LOOP__STOP_CONDITION), a3_0);
					completedElement(a3_0);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos(a3_0, element); 			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 418));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 418));
	}
	
	(
		(
			a4 = 'loop' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 419));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 419));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 419));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 419));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 419));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 419));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 419));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 419));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 419));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 419));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 419));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 419));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 419));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 419));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 419));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 419));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 419));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 419));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 419));
			}
			
			(
				(
					a5_0 = parse_org_kermeta_language_behavior_Expression					{
						if (terminateParsing) {
							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
						}
						if (element == null) {
							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
						}
						if (a5_0 != null) {
							if (a5_0 != null) {
								element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LOOP__BODY), a5_0);
								completedElement(a5_0);
							}
							collectHiddenTokens(element);
							copyLocalizationInfos(a5_0, element); 						}
					}
				)
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 420));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 420));
				}
				
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 421));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 421));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 422));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 422));
	}
	
;

parse_org_kermeta_language_behavior_VariableDecl returns [org.kermeta.language.behavior.VariableDecl element = null]
@init{
}
:
	a0 = 'var' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_324, 423));
	}
	
	(
		a1 = IDENTIFIER		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
			}
			if (a1 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__IDENTIFIER), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
				}
				java.lang.String resolved = (java.lang.String)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__IDENTIFIER), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_325, 424));
	}
	
	a2 = ':' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 425));
	}
	
	(
		a3_0 = parse_org_kermeta_language_behavior_TypeReference		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
			}
			if (a3_0 != null) {
				if (a3_0 != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__TYPE), a3_0);
					completedElement(a3_0);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos(a3_0, element); 			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 426));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 426));
	}
	
	(
		(
			a4 = 'init' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 427));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 427));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 427));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 427));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 427));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 427));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 427));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 427));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 427));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 427));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 427));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 427));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 427));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 427));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 427));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 427));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 427));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 427));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 427));
			}
			
			(
				a5_0 = parse_org_kermeta_language_behavior_Expression				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
					}
					if (a5_0 != null) {
						if (a5_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__INITIALIZATION), a5_0);
							completedElement(a5_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a5_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 428));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 428));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 429));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 429));
	}
	
;

parse_org_kermeta_language_behavior_TypeLiteral returns [org.kermeta.language.behavior.TypeLiteral element = null]
@init{
}
:
	(
		a0_0 = parse_org_kermeta_language_behavior_TypeReference		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createTypeLiteral();
			}
			if (a0_0 != null) {
				if (a0_0 != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_LITERAL__TYPEREF), a0_0);
					completedElement(a0_0);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos(a0_0, element); 			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 430));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 430));
	}
	
;

parse_org_kermeta_language_behavior_CallResult returns [org.kermeta.language.behavior.CallResult element = null]
@init{
}
:
	a0 = 'result' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallResult();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 431));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 431));
	}
	
;

parse_org_kermeta_language_behavior_CallSuperOperation returns [org.kermeta.language.behavior.CallSuperOperation element = null]
@init{
}
:
	a0 = 'super' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 432));
	}
	
	a1 = '(' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 433));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 433));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 433));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 433));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 433));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 433));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 433));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 433));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 433));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 433));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 433));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 433));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 433));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 433));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 433));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 433));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 433));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 433));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 433));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 433));
	}
	
	(
		(
			(
				a2_0 = parse_org_kermeta_language_behavior_Expression				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
					}
					if (a2_0 != null) {
						if (a2_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_SUPER_OPERATION__PARAMETERS, a2_0);
							completedElement(a2_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a2_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 434));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 434));
			}
			
			(
				(
					a3 = ',' {
						if (element == null) {
							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
					}
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 435));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 435));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 435));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 435));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 435));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 435));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 435));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 435));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 435));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 435));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 435));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 435));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 435));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 435));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 435));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 435));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 435));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 435));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 435));
					}
					
					(
						a4_0 = parse_org_kermeta_language_behavior_Expression						{
							if (terminateParsing) {
								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
							}
							if (element == null) {
								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
							}
							if (a4_0 != null) {
								if (a4_0 != null) {
									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_SUPER_OPERATION__PARAMETERS, a4_0);
									completedElement(a4_0);
								}
								collectHiddenTokens(element);
								copyLocalizationInfos(a4_0, element); 							}
						}
					)
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 436));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 436));
					}
					
				)
				
			)*			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 437));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 437));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 438));
	}
	
	a5 = ')' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 439));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 439));
	}
	
;

parse_org_kermeta_language_behavior_Assignment returns [org.kermeta.language.behavior.Assignment element = null]
@init{
}
:
	(
		(
			(
				a0_0 = parse_org_kermeta_language_behavior_CallFeature				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
					}
					if (a0_0 != null) {
						if (a0_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__TARGET), a0_0);
							completedElement(a0_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a0_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 440));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 440));
			}
			
			
			|			(
				a1_0 = parse_org_kermeta_language_behavior_CallVariable				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
					}
					if (a1_0 != null) {
						if (a1_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__TARGET), a1_0);
							completedElement(a1_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a1_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 441));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 441));
			}
			
			
			|			(
				a2_0 = parse_org_kermeta_language_behavior_CallResult				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
					}
					if (a2_0 != null) {
						if (a2_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__TARGET), a2_0);
							completedElement(a2_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a2_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 442));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 442));
			}
			
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 443));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 443));
		}
		
		(
			a3 = ':=' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 444));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 444));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 444));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 444));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 444));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 444));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 444));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 444));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 444));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 444));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 444));
			}
			
			
			|			(
				a4 = CASTED				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("CASTED");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__IS_CAST), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__IS_CAST), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 445));
			}
			
			a5 = '=' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 446));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 446));
			}
			
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 447));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 447));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 447));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 447));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 447));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 447));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 447));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 447));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 447));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 447));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 447));
		}
		
		(
			(
				a6_0 = parse_org_kermeta_language_behavior_CallFeature				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
					}
					if (a6_0 != null) {
						if (a6_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a6_0);
							completedElement(a6_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a6_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 448));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 448));
			}
			
			
			|			(
				a7_0 = parse_org_kermeta_language_behavior_SelfExpression				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 449));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 449));
			}
			
			
			|			(
				a8_0 = parse_org_kermeta_language_behavior_CallSuperOperation				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
					}
					if (a8_0 != null) {
						if (a8_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a8_0);
							completedElement(a8_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a8_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 450));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 450));
			}
			
			
			|			(
				a9_0 = parse_org_kermeta_language_behavior_CallResult				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
					}
					if (a9_0 != null) {
						if (a9_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a9_0);
							completedElement(a9_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a9_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 451));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 451));
			}
			
			
			|			(
				a10_0 = parse_org_kermeta_language_behavior_CallValue				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
					}
					if (a10_0 != null) {
						if (a10_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a10_0);
							completedElement(a10_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a10_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 452));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 452));
			}
			
			
			|			(
				a11_0 = parse_org_kermeta_language_behavior_CallVariable				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
					}
					if (a11_0 != null) {
						if (a11_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a11_0);
							completedElement(a11_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a11_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 453));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 453));
			}
			
			
			|			(
				a12_0 = parse_org_kermeta_language_behavior_VoidLiteral				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
					}
					if (a12_0 != null) {
						if (a12_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a12_0);
							completedElement(a12_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a12_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 454));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 454));
			}
			
			
			|			(
				a13_0 = parse_org_kermeta_language_behavior_IntegerLiteral				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
					}
					if (a13_0 != null) {
						if (a13_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a13_0);
							completedElement(a13_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a13_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 455));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 455));
			}
			
			
			|			(
				a14_0 = parse_org_kermeta_language_behavior_BooleanLiteral				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
					}
					if (a14_0 != null) {
						if (a14_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a14_0);
							completedElement(a14_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a14_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 456));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 456));
			}
			
			
			|			(
				a15_0 = parse_org_kermeta_language_behavior_StringLiteral				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
					}
					if (a15_0 != null) {
						if (a15_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a15_0);
							completedElement(a15_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a15_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 457));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 457));
			}
			
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 458));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 458));
		}
		
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 459));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 459));
	}
	
;

parse_org_kermeta_language_behavior_CallVariable returns [org.kermeta.language.behavior.CallVariable element = null]
@init{
}
:
	(
		a0 = IDENTIFIER		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallVariable();
			}
			if (a0 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VARIABLE__NAME), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
				}
				java.lang.String resolved = (java.lang.String)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VARIABLE__NAME), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 460));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 460));
	}
	
	|//derived choice rules for sub-classes: 
	
	c0 = parse_org_kermeta_language_behavior_CallResult{ element = c0; /* this is a subclass choice */ }
	
;

parse_org_kermeta_language_behavior_SelfExpression returns [org.kermeta.language.behavior.SelfExpression element = null]
@init{
}
:
	a0 = 'self' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createSelfExpression();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 461));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 461));
	}
	
;

parse_org_kermeta_language_behavior_CallFeature returns [org.kermeta.language.behavior.CallFeature element = null]
@init{
}
:
	a0 = '(' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 462));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 462));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 462));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 462));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 462));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 462));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 462));
	}
	
	(
		(
			a1_0 = parse_org_kermeta_language_behavior_BooleanLiteral			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a1_0 != null) {
					if (a1_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a1_0);
						completedElement(a1_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a1_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 463));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 463));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 463));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 463));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 463));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 463));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 463));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 463));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 463));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 463));
		}
		
		
		|		(
			a2_0 = parse_org_kermeta_language_behavior_CallVariable			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a2_0 != null) {
					if (a2_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a2_0);
						completedElement(a2_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a2_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 464));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 464));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 464));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 464));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 464));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 464));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 464));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 464));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 464));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 464));
		}
		
		
		|		(
			a3_0 = parse_org_kermeta_language_behavior_JavaStaticCall			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a3_0 != null) {
					if (a3_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a3_0);
						completedElement(a3_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a3_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 465));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 465));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 465));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 465));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 465));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 465));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 465));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 465));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 465));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 465));
		}
		
		
		|		(
			a4_0 = parse_org_kermeta_language_behavior_SelfExpression			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a4_0 != null) {
					if (a4_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a4_0);
						completedElement(a4_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a4_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 466));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 466));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 466));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 466));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 466));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 466));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 466));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 466));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 466));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 466));
		}
		
		
		|		(
			a5_0 = parse_org_kermeta_language_behavior_StringLiteral			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a5_0 != null) {
					if (a5_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a5_0);
						completedElement(a5_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a5_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 467));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 467));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 467));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 467));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 467));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 467));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 467));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 467));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 467));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 467));
		}
		
		
		|		(
			a6_0 = parse_org_kermeta_language_behavior_IntegerLiteral			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a6_0 != null) {
					if (a6_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a6_0);
						completedElement(a6_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a6_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 468));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 468));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 468));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 468));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 468));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 468));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 468));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 468));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 468));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 468));
		}
		
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 469));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 469));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 469));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 469));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 469));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 469));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 469));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 469));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 469));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 469));
	}
	
	(
		(
			a7 = '.' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_340, 470));
			}
			
			(
				a8 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					if (a8 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a8.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a8).getLine(), ((org.antlr.runtime.CommonToken) a8).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a8).getStartIndex(), ((org.antlr.runtime.CommonToken) a8).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Property proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Property>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticPropertyReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a8, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a8, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 471));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 471));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 471));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 471));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 471));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 471));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 471));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 471));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 471));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 471));
			}
			
			
			|			a9 = '.' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_341, 472));
			}
			
			(
				a10 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					if (a10 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a10.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a10).getLine(), ((org.antlr.runtime.CommonToken) a10).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a10).getStartIndex(), ((org.antlr.runtime.CommonToken) a10).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_342, 473));
			}
			
			a11 = '(' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 474));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 474));
			}
			
			(
				(
					(
						a12_0 = parse_org_kermeta_language_behavior_Expression						{
							if (terminateParsing) {
								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
							}
							if (element == null) {
								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
							}
							if (a12_0 != null) {
								if (a12_0 != null) {
									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a12_0);
									completedElement(a12_0);
								}
								collectHiddenTokens(element);
								copyLocalizationInfos(a12_0, element); 							}
						}
					)
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 475));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 475));
					}
					
					(
						(
							a13 = ',' {
								if (element == null) {
									element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
								}
								collectHiddenTokens(element);
								copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
							}
							{
								// expected elements (follow set)
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 476));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 476));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 476));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 476));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 476));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 476));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 476));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 476));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 476));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 476));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 476));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 476));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 476));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 476));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 476));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 476));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 476));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 476));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 476));
							}
							
							(
								a14_0 = parse_org_kermeta_language_behavior_Expression								{
									if (terminateParsing) {
										throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
									}
									if (element == null) {
										element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
									}
									if (a14_0 != null) {
										if (a14_0 != null) {
											addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a14_0);
											completedElement(a14_0);
										}
										collectHiddenTokens(element);
										copyLocalizationInfos(a14_0, element); 									}
								}
							)
							{
								// expected elements (follow set)
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 477));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 477));
							}
							
						)
						
					)*					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 478));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 478));
					}
					
				)
				
			)?			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 479));
			}
			
			a15 = ')' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 480));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 480));
			}
			
			
			|			a16 = '.' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a16, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_343, 481));
			}
			
			(
				a17 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					if (a17 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a17.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a17).getLine(), ((org.antlr.runtime.CommonToken) a17).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a17).getStartIndex(), ((org.antlr.runtime.CommonToken) a17).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.EnumerationLiteral proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumerationLiteral();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.EnumerationLiteral>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticEnumLiteralReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a17, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a17, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 482));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 482));
			}
			
			
			|			a18 = '.' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_344, 483));
			}
			
			(
				a19 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					if (a19 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 484));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 484));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 484));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 484));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 484));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 484));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 484));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 484));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 484));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 484));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 485));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 485));
	}
	
	(
		a20 = '==' {
			if (element == null) {
				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
			}
			collectHiddenTokens(element);
			copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
		}
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 486));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 486));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 486));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 486));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 486));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 486));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 486));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 486));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 486));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 486));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 486));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 486));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 486));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 486));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 486));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 486));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 486));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 486));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 486));
		}
		
		(
			a21_0 = parse_org_kermeta_language_behavior_Expression			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a21_0 != null) {
					if (a21_0 != null) {
						addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a21_0);
						completedElement(a21_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a21_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_345, 487));
		}
		
		a22 = ')' {
			if (element == null) {
				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
			}
			collectHiddenTokens(element);
			copyLocalizationInfos((org.antlr.runtime.CommonToken)a22, element);
		}
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 488));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 488));
		}
		
		
		|		(
			(
				(
					a23 = '+' {
						if (element == null) {
							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
					}
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 489));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 489));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 489));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 489));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 489));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 489));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 489));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 489));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 489));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 489));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 489));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 489));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 489));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 489));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 489));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 489));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 489));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 489));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 489));
					}
					
					
					|					a24 = '-' {
						if (element == null) {
							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken)a24, element);
					}
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 490));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 490));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 490));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 490));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 490));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 490));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 490));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 490));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 490));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 490));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 490));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 490));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 490));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 490));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 490));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 490));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 490));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 490));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 490));
					}
					
					
					|					a25 = '/' {
						if (element == null) {
							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken)a25, element);
					}
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 491));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 491));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 491));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 491));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 491));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 491));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 491));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 491));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 491));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 491));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 491));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 491));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 491));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 491));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 491));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 491));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 491));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 491));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 491));
					}
					
					
					|					a26 = '*' {
						if (element == null) {
							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken)a26, element);
					}
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 492));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 492));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 492));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 492));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 492));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 492));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 492));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 492));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 492));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 492));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 492));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 492));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 492));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 492));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 492));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 492));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 492));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 492));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 492));
					}
					
				)
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 493));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 493));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 493));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 493));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 493));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 493));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 493));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 493));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 493));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 493));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 493));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 493));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 493));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 493));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 493));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 493));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 493));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 493));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 493));
				}
				
				(
					a27_0 = parse_org_kermeta_language_behavior_Expression					{
						if (terminateParsing) {
							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
						}
						if (element == null) {
							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
						}
						if (a27_0 != null) {
							if (a27_0 != null) {
								addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a27_0);
								completedElement(a27_0);
							}
							collectHiddenTokens(element);
							copyLocalizationInfos(a27_0, element); 						}
					}
				)
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 494));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 494));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 494));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 494));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 494));
				}
				
			)
			
		)*		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 495));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 495));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 495));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 495));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 495));
		}
		
		a28 = ')' {
			if (element == null) {
				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
			}
			collectHiddenTokens(element);
			copyLocalizationInfos((org.antlr.runtime.CommonToken)a28, element);
		}
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 496));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 496));
		}
		
		(
			(
				(
					a29 = '+' {
						if (element == null) {
							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken)a29, element);
					}
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 497));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 497));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 497));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 497));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 497));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 497));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 497));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 497));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 497));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 497));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 497));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 497));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 497));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 497));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 497));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 497));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 497));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 497));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 497));
					}
					
					
					|					a30 = '-' {
						if (element == null) {
							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken)a30, element);
					}
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 498));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 498));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 498));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 498));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 498));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 498));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 498));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 498));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 498));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 498));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 498));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 498));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 498));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 498));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 498));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 498));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 498));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 498));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 498));
					}
					
					
					|					a31 = '/' {
						if (element == null) {
							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken)a31, element);
					}
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 499));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 499));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 499));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 499));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 499));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 499));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 499));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 499));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 499));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 499));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 499));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 499));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 499));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 499));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 499));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 499));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 499));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 499));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 499));
					}
					
					
					|					a32 = '*' {
						if (element == null) {
							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken)a32, element);
					}
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 500));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 500));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 500));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 500));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 500));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 500));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 500));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 500));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 500));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 500));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 500));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 500));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 500));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 500));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 500));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 500));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 500));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 500));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 500));
					}
					
				)
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 501));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 501));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 501));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 501));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 501));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 501));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 501));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 501));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 501));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 501));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 501));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 501));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 501));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 501));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 501));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 501));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 501));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 501));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 501));
				}
				
				(
					a33_0 = parse_org_kermeta_language_behavior_Expression					{
						if (terminateParsing) {
							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
						}
						if (element == null) {
							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
						}
						if (a33_0 != null) {
							if (a33_0 != null) {
								addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a33_0);
								completedElement(a33_0);
							}
							collectHiddenTokens(element);
							copyLocalizationInfos(a33_0, element); 						}
					}
				)
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 502));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 502));
				}
				
			)
			
		)*		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 503));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 503));
		}
		
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 504));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 504));
	}
	
	
	|	(
		(
			a34_0 = parse_org_kermeta_language_behavior_BooleanLiteral			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a34_0 != null) {
					if (a34_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a34_0);
						completedElement(a34_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a34_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 505));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 505));
		}
		
		
		|		(
			a35_0 = parse_org_kermeta_language_behavior_CallVariable			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a35_0 != null) {
					if (a35_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a35_0);
						completedElement(a35_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a35_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 506));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 506));
		}
		
		
		|		(
			a36_0 = parse_org_kermeta_language_behavior_JavaStaticCall			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a36_0 != null) {
					if (a36_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a36_0);
						completedElement(a36_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a36_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 507));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 507));
		}
		
		
		|		(
			a37_0 = parse_org_kermeta_language_behavior_SelfExpression			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a37_0 != null) {
					if (a37_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a37_0);
						completedElement(a37_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a37_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 508));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 508));
		}
		
		
		|		(
			a38_0 = parse_org_kermeta_language_behavior_StringLiteral			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a38_0 != null) {
					if (a38_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a38_0);
						completedElement(a38_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a38_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 509));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 509));
		}
		
		
		|		(
			a39_0 = parse_org_kermeta_language_behavior_IntegerLiteral			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a39_0 != null) {
					if (a39_0 != null) {
						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a39_0);
						completedElement(a39_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a39_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 510));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 510));
		}
		
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 511));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 511));
	}
	
	(
		(
			a40 = '.' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a40, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_359, 512));
			}
			
			(
				a41 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					if (a41 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a41.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a41).getLine(), ((org.antlr.runtime.CommonToken) a41).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a41).getStartIndex(), ((org.antlr.runtime.CommonToken) a41).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Property proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Property>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticPropertyReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a41, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a41, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 513));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 513));
			}
			
			
			|			a42 = '.' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a42, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_360, 514));
			}
			
			(
				a43 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					if (a43 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a43.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a43).getLine(), ((org.antlr.runtime.CommonToken) a43).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a43).getStartIndex(), ((org.antlr.runtime.CommonToken) a43).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a43, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a43, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_361, 515));
			}
			
			a44 = '(' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a44, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 516));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 516));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 516));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 516));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 516));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 516));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 516));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 516));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 516));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 516));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 516));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 516));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 516));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 516));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 516));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 516));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 516));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 516));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 516));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_362, 516));
			}
			
			(
				(
					(
						a45_0 = parse_org_kermeta_language_behavior_Expression						{
							if (terminateParsing) {
								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
							}
							if (element == null) {
								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
							}
							if (a45_0 != null) {
								if (a45_0 != null) {
									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a45_0);
									completedElement(a45_0);
								}
								collectHiddenTokens(element);
								copyLocalizationInfos(a45_0, element); 							}
						}
					)
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_363, 517));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_362, 517));
					}
					
					(
						(
							a46 = ',' {
								if (element == null) {
									element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
								}
								collectHiddenTokens(element);
								copyLocalizationInfos((org.antlr.runtime.CommonToken)a46, element);
							}
							{
								// expected elements (follow set)
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 518));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 518));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 518));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 518));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 518));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 518));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 518));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 518));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 518));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 518));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 518));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 518));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 518));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 518));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 518));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 518));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 518));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 518));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 518));
							}
							
							(
								a47_0 = parse_org_kermeta_language_behavior_Expression								{
									if (terminateParsing) {
										throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
									}
									if (element == null) {
										element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
									}
									if (a47_0 != null) {
										if (a47_0 != null) {
											addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a47_0);
											completedElement(a47_0);
										}
										collectHiddenTokens(element);
										copyLocalizationInfos(a47_0, element); 									}
								}
							)
							{
								// expected elements (follow set)
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_363, 519));
								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_362, 519));
							}
							
						)
						
					)*					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_363, 520));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_362, 520));
					}
					
				)
				
			)?			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_362, 521));
			}
			
			a48 = ')' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a48, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 522));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 522));
			}
			
			
			|			a49 = '.' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a49, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_364, 523));
			}
			
			(
				a50 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					if (a50 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a50.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a50).getLine(), ((org.antlr.runtime.CommonToken) a50).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a50).getStartIndex(), ((org.antlr.runtime.CommonToken) a50).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.EnumerationLiteral proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumerationLiteral();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.EnumerationLiteral>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticEnumLiteralReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a50, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a50, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 524));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 524));
			}
			
			
			|			a51 = '.' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a51, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 525));
			}
			
			(
				a52 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
					}
					if (a52 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a52.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a52).getLine(), ((org.antlr.runtime.CommonToken) a52).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a52).getStartIndex(), ((org.antlr.runtime.CommonToken) a52).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a52, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a52, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 526));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 526));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 527));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 527));
	}
	
	(
		a53 = '==' {
			if (element == null) {
				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
			}
			collectHiddenTokens(element);
			copyLocalizationInfos((org.antlr.runtime.CommonToken)a53, element);
		}
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 528));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 528));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 528));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 528));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 528));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 528));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 528));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 528));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 528));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 528));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 528));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 528));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 528));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 528));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 528));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 528));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 528));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 528));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 528));
		}
		
		(
			a54_0 = parse_org_kermeta_language_behavior_Expression			{
				if (terminateParsing) {
					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
				}
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
				}
				if (a54_0 != null) {
					if (a54_0 != null) {
						addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a54_0);
						completedElement(a54_0);
					}
					collectHiddenTokens(element);
					copyLocalizationInfos(a54_0, element); 				}
			}
		)
		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 529));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 529));
		}
		
		
		|		(
			(
				(
					a55 = '+' {
						if (element == null) {
							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken)a55, element);
					}
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 530));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 530));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 530));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 530));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 530));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 530));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 530));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 530));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 530));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 530));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 530));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 530));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 530));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 530));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 530));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 530));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 530));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 530));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 530));
					}
					
					
					|					a56 = '-' {
						if (element == null) {
							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken)a56, element);
					}
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 531));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 531));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 531));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 531));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 531));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 531));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 531));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 531));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 531));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 531));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 531));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 531));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 531));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 531));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 531));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 531));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 531));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 531));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 531));
					}
					
					
					|					a57 = '/' {
						if (element == null) {
							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken)a57, element);
					}
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 532));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 532));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 532));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 532));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 532));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 532));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 532));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 532));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 532));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 532));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 532));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 532));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 532));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 532));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 532));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 532));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 532));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 532));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 532));
					}
					
					
					|					a58 = '*' {
						if (element == null) {
							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken)a58, element);
					}
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 533));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 533));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 533));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 533));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 533));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 533));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 533));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 533));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 533));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 533));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 533));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 533));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 533));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 533));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 533));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 533));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 533));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 533));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 533));
					}
					
				)
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 534));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 534));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 534));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 534));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 534));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 534));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 534));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 534));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 534));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 534));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 534));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 534));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 534));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 534));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 534));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 534));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 534));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 534));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 534));
				}
				
				(
					a59_0 = parse_org_kermeta_language_behavior_Expression					{
						if (terminateParsing) {
							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
						}
						if (element == null) {
							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
						}
						if (a59_0 != null) {
							if (a59_0 != null) {
								addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a59_0);
								completedElement(a59_0);
							}
							collectHiddenTokens(element);
							copyLocalizationInfos(a59_0, element); 						}
					}
				)
				{
					// expected elements (follow set)
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 535));
					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 535));
				}
				
			)
			
		)*		{
			// expected elements (follow set)
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 536));
			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 536));
		}
		
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 537));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 537));
	}
	
;

parse_org_kermeta_language_behavior_JavaStaticCall returns [org.kermeta.language.behavior.JavaStaticCall element = null]
@init{
}
:
	a0 = 'extern' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 538));
	}
	
	(
		a1 = IDENTIFIER		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
			}
			if (a1 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JCLASS), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
				}
				java.lang.String resolved = (java.lang.String)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JCLASS), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_367, 539));
	}
	
	a2 = '.' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 540));
	}
	
	(
		a3 = IDENTIFIER		
		{
			if (terminateParsing) {
				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
			}
			if (element == null) {
				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
			}
			if (a3 != null) {
				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
				tokenResolver.setOptions(getOptions());
				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
				tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JMETHOD), result);
				java.lang.Object resolvedObject = result.getResolvedToken();
				if (resolvedObject == null) {
					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a3).getLine(), ((org.antlr.runtime.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a3).getStartIndex(), ((org.antlr.runtime.CommonToken) a3).getStopIndex());
				}
				java.lang.String resolved = (java.lang.String)resolvedObject;
				if (resolved != null) {
					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JMETHOD), resolved);
					completedElement(resolved);
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken) a3, element);
			}
		}
	)
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 541));
	}
	
	a4 = '(' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 542));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 542));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 542));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 542));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 542));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 542));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 542));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 542));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 542));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 542));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 542));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 542));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 542));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 542));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 542));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 542));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 542));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 542));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 542));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 542));
	}
	
	(
		(
			(
				a5_0 = parse_org_kermeta_language_behavior_Expression				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
					}
					if (a5_0 != null) {
						if (a5_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__PARAMETERS, a5_0);
							completedElement(a5_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a5_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 543));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 543));
			}
			
			(
				(
					a6 = ',' {
						if (element == null) {
							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
					}
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 544));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 544));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 544));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 544));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 544));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 544));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 544));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 544));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 544));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 544));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 544));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 544));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 544));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 544));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 544));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 544));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 544));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 544));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 544));
					}
					
					(
						a7_0 = parse_org_kermeta_language_behavior_Expression						{
							if (terminateParsing) {
								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
							}
							if (element == null) {
								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
							}
							if (a7_0 != null) {
								if (a7_0 != null) {
									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__PARAMETERS, a7_0);
									completedElement(a7_0);
								}
								collectHiddenTokens(element);
								copyLocalizationInfos(a7_0, element); 							}
						}
					)
					{
						// expected elements (follow set)
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 545));
						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 545));
					}
					
				)
				
			)*			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 546));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 546));
			}
			
		)
		
	)?	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 547));
	}
	
	a8 = ')' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 548));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 548));
	}
	
;

parse_org_kermeta_language_behavior_VoidLiteral returns [org.kermeta.language.behavior.VoidLiteral element = null]
@init{
}
:
	a0 = 'Void' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVoidLiteral();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 549));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 549));
	}
	
;

parse_org_kermeta_language_behavior_CallValue returns [org.kermeta.language.behavior.CallValue element = null]
@init{
}
:
	a0 = 'value' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 550));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 550));
	}
	
;

parse_org_kermeta_language_behavior_EmptyExpression returns [org.kermeta.language.behavior.EmptyExpression element = null]
@init{
}
:
	a0 = 'EmptyExpression' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 551));
	}
	
	a1 = '{' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 552));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 552));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 552));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 552));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 552));
	}
	
	(
		(
			a2 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 553));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 554));
			}
			
			(
				a4 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 555));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 555));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 555));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 555));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 555));
			}
			
			
			|			a5 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_373, 556));
			}
			
			a6 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 557));
			}
			
			(
				a7_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__OWNED_TAGS, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 558));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 558));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 558));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 558));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 558));
			}
			
			
			|			a8 = 'containedType' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_374, 559));
			}
			
			a9 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 560));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 560));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 560));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 560));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 560));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 560));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 560));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 560));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 560));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 560));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 560));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 560));
			}
			
			(
				a10_0 = parse_org_kermeta_language_structure_Type				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
					}
					if (a10_0 != null) {
						if (a10_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__CONTAINED_TYPE, a10_0);
							completedElement(a10_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a10_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 561));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 561));
			}
			
			
			|			a11 = 'staticType' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_375, 562));
			}
			
			a12 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_376, 563));
			}
			
			(
				a13 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
					}
					if (a13 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__STATIC_TYPE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.Expression, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getExpressionStaticTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__STATIC_TYPE), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__STATIC_TYPE), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 564));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 564));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 564));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 564));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 564));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 565));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 565));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 565));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 565));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 565));
	}
	
	a14 = '}' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 566));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 566));
	}
	
;

parse_org_kermeta_language_behavior_LambdaExpression returns [org.kermeta.language.behavior.LambdaExpression element = null]
@init{
}
:
	a0 = 'LambdaExpression' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_377, 567));
	}
	
	a1 = '{' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 568));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 568));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 568));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 568));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 568));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 568));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 568));
	}
	
	(
		(
			a2 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_378, 569));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 570));
			}
			
			(
				a4 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 571));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 571));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 571));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 571));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 571));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 571));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 571));
			}
			
			
			|			a5 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 572));
			}
			
			a6 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 573));
			}
			
			(
				a7_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__OWNED_TAGS, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 574));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 574));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 574));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 574));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 574));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 574));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 574));
			}
			
			
			|			a8 = 'containedType' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 575));
			}
			
			a9 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 576));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 576));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 576));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 576));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 576));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 576));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 576));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 576));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 576));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 576));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 576));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 576));
			}
			
			(
				a10_0 = parse_org_kermeta_language_structure_Type				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
					}
					if (a10_0 != null) {
						if (a10_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__CONTAINED_TYPE, a10_0);
							completedElement(a10_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a10_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 577));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 577));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 577));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 577));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 577));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 577));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 577));
			}
			
			
			|			a11 = 'staticType' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 578));
			}
			
			a12 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 579));
			}
			
			(
				a13 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
					}
					if (a13 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__STATIC_TYPE), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.Expression, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getExpressionStaticTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__STATIC_TYPE), resolved, proxy);
						if (proxy != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__STATIC_TYPE), proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 580));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 580));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 580));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 580));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 580));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 580));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 580));
			}
			
			
			|			a14 = 'parameters' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_384, 581));
			}
			
			a15 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_385, 582));
			}
			
			(
				a16_0 = parse_org_kermeta_language_behavior_LambdaParameter				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
					}
					if (a16_0 != null) {
						if (a16_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__PARAMETERS, a16_0);
							completedElement(a16_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a16_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 583));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 583));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 583));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 583));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 583));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 583));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 583));
			}
			
			
			|			a17 = 'body' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_386, 584));
			}
			
			a18 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 585));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 585));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 585));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 585));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 585));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 585));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 585));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 585));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 585));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 585));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 585));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 585));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 585));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 585));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 585));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 585));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 585));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 585));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 585));
			}
			
			(
				a19_0 = parse_org_kermeta_language_behavior_Expression				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
					}
					if (a19_0 != null) {
						if (a19_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__BODY), a19_0);
							completedElement(a19_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a19_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 586));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 586));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 586));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 586));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 586));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 586));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 586));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 587));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 587));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 587));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 587));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 587));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 587));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 587));
	}
	
	a20 = '}' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 588));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 588));
	}
	
;

parse_org_kermeta_language_behavior_LambdaParameter returns [org.kermeta.language.behavior.LambdaParameter element = null]
@init{
}
:
	a0 = 'LambdaParameter' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_387, 589));
	}
	
	a1 = '{' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_242, 590));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_243, 590));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_244, 590));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_245, 590));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_246, 590));
	}
	
	(
		(
			a2 = 'tag' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_388, 591));
			}
			
			a3 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_389, 592));
			}
			
			(
				a4 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
					}
					if (a4 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TAG), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
						}
						String resolved = (String) resolvedObject;
						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
						collectHiddenTokens(element);
						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TAG), resolved, proxy);
						if (proxy != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TAG, proxy);
							completedElement(proxy);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_242, 593));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_243, 593));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_244, 593));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_245, 593));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_246, 593));
			}
			
			
			|			a5 = 'ownedTags' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_390, 594));
			}
			
			a6 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 595));
			}
			
			(
				a7_0 = parse_org_kermeta_language_structure_Tag				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
					}
					if (a7_0 != null) {
						if (a7_0 != null) {
							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__OWNED_TAGS, a7_0);
							completedElement(a7_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a7_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_242, 596));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_243, 596));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_244, 596));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_245, 596));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_246, 596));
			}
			
			
			|			a8 = 'name' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_391, 597));
			}
			
			a9 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_392, 598));
			}
			
			(
				a10 = IDENTIFIER				
				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
					}
					if (a10 != null) {
						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
						tokenResolver.setOptions(getOptions());
						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
						tokenResolver.resolve(a10.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__NAME), result);
						java.lang.Object resolvedObject = result.getResolvedToken();
						if (resolvedObject == null) {
							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a10).getLine(), ((org.antlr.runtime.CommonToken) a10).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a10).getStartIndex(), ((org.antlr.runtime.CommonToken) a10).getStopIndex());
						}
						java.lang.String resolved = (java.lang.String)resolvedObject;
						if (resolved != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__NAME), resolved);
							completedElement(resolved);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, element);
					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_242, 599));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_243, 599));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_244, 599));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_245, 599));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_246, 599));
			}
			
			
			|			a11 = 'type' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_393, 600));
			}
			
			a12 = ':' {
				if (element == null) {
					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
				}
				collectHiddenTokens(element);
				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
			}
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 601));
			}
			
			(
				a13_0 = parse_org_kermeta_language_behavior_TypeReference				{
					if (terminateParsing) {
						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
					}
					if (element == null) {
						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
					}
					if (a13_0 != null) {
						if (a13_0 != null) {
							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TYPE), a13_0);
							completedElement(a13_0);
						}
						collectHiddenTokens(element);
						copyLocalizationInfos(a13_0, element); 					}
				}
			)
			{
				// expected elements (follow set)
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_242, 602));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_243, 602));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_244, 602));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_245, 602));
				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_246, 602));
			}
			
		)
		
	)*	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_242, 603));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_243, 603));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_244, 603));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_245, 603));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_246, 603));
	}
	
	a14 = '}' {
		if (element == null) {
			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
		}
		collectHiddenTokens(element);
		copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
	}
	{
		// expected elements (follow set)
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 604));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 604));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 604));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 604));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 604));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 604));
		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 604));
	}
	
;

parse_org_kermeta_language_behavior_Expression returns [org.kermeta.language.behavior.Expression element = null]
:
	c0 = parse_org_kermeta_language_behavior_Block{ element = c0; /* this is a subclass choice */ }
	|	c1 = parse_org_kermeta_language_behavior_Raise{ element = c1; /* this is a subclass choice */ }
	|	c2 = parse_org_kermeta_language_behavior_BooleanLiteral{ element = c2; /* this is a subclass choice */ }
	|	c3 = parse_org_kermeta_language_behavior_IntegerLiteral{ element = c3; /* this is a subclass choice */ }
	|	c4 = parse_org_kermeta_language_behavior_StringLiteral{ element = c4; /* this is a subclass choice */ }
	|	c5 = parse_org_kermeta_language_behavior_Conditional{ element = c5; /* this is a subclass choice */ }
	|	c6 = parse_org_kermeta_language_behavior_Loop{ element = c6; /* this is a subclass choice */ }
	|	c7 = parse_org_kermeta_language_behavior_VariableDecl{ element = c7; /* this is a subclass choice */ }
	|	c8 = parse_org_kermeta_language_behavior_TypeLiteral{ element = c8; /* this is a subclass choice */ }
	|	c9 = parse_org_kermeta_language_behavior_CallResult{ element = c9; /* this is a subclass choice */ }
	|	c10 = parse_org_kermeta_language_behavior_CallSuperOperation{ element = c10; /* this is a subclass choice */ }
	|	c11 = parse_org_kermeta_language_behavior_Assignment{ element = c11; /* this is a subclass choice */ }
	|	c12 = parse_org_kermeta_language_behavior_CallVariable{ element = c12; /* this is a subclass choice */ }
	|	c13 = parse_org_kermeta_language_behavior_SelfExpression{ element = c13; /* this is a subclass choice */ }
	|	c14 = parse_org_kermeta_language_behavior_CallFeature{ element = c14; /* this is a subclass choice */ }
	|	c15 = parse_org_kermeta_language_behavior_JavaStaticCall{ element = c15; /* this is a subclass choice */ }
	|	c16 = parse_org_kermeta_language_behavior_VoidLiteral{ element = c16; /* this is a subclass choice */ }
	|	c17 = parse_org_kermeta_language_behavior_CallValue{ element = c17; /* this is a subclass choice */ }
	|	c18 = parse_org_kermeta_language_behavior_EmptyExpression{ element = c18; /* this is a subclass choice */ }
	|	c19 = parse_org_kermeta_language_behavior_LambdaExpression{ element = c19; /* this is a subclass choice */ }
	
;

parse_org_kermeta_language_structure_Type returns [org.kermeta.language.structure.Type element = null]
:
	c0 = parse_org_kermeta_language_structure_Class{ element = c0; /* this is a subclass choice */ }
	|	c1 = parse_org_kermeta_language_structure_Enumeration{ element = c1; /* this is a subclass choice */ }
	|	c2 = parse_org_kermeta_language_structure_PrimitiveType{ element = c2; /* this is a subclass choice */ }
	|	c3 = parse_org_kermeta_language_structure_UnresolvedType{ element = c3; /* this is a subclass choice */ }
	|	c4 = parse_org_kermeta_language_structure_VoidType{ element = c4; /* this is a subclass choice */ }
	|	c5 = parse_org_kermeta_language_structure_ModelType{ element = c5; /* this is a subclass choice */ }
	|	c6 = parse_org_kermeta_language_structure_ObjectTypeVariable{ element = c6; /* this is a subclass choice */ }
	|	c7 = parse_org_kermeta_language_structure_ModelTypeVariable{ element = c7; /* this is a subclass choice */ }
	|	c8 = parse_org_kermeta_language_structure_VirtualType{ element = c8; /* this is a subclass choice */ }
	|	c9 = parse_org_kermeta_language_structure_ProductType{ element = c9; /* this is a subclass choice */ }
	|	c10 = parse_org_kermeta_language_structure_FunctionType{ element = c10; /* this is a subclass choice */ }
	
;

SL_COMMENT:
	'//'(~('\n'|'\r'|'\uffff'))* 
	{ _channel = 99; }
;
ML_COMMENT:
	'/*'.*'*/'	{ _channel = 99; }
;
CASTED:
	'\u0063';
BOOLEAN:
	'true'|'false';
PRIMITIVE_TYPE:
	'Integer'|'String'|'Boolean';
INTEGER:
	('-')?('1'..'9')('0'..'9')*|'0';
FLOAT:
	('-')?(('1'..'9') ('0'..'9')* | '0') '.' ('0'..'9')+ 	{ _channel = 99; }
;
IDENTIFIER:
	('\u0024'|'\u0041'..'\u005a'|'\u005f'|'\u0061'..'\u007a'|'\u00a2'..'\u00a5'|'\u00aa'|'\u00b5'|'\u00ba'|'\u00c0'..'\u00d6'|'\u00d8'..'\u00f6'|'\u00f8'..'\u0236'|'\u0250'..'\u02c1'|'\u02c6'..'\u02d1'|'\u02e0'..'\u02e4'|'\u02ee'|'\u037a'|'\u0386'|'\u0388'..'\u038a'|'\u038c'|'\u038e'..'\u03a1'|'\u03a3'..'\u03ce'|'\u03d0'..'\u03f5'|'\u03f7'..'\u03fb'|'\u0400'..'\u0481'|'\u048a'..'\u04ce'|'\u04d0'..'\u04f5'|'\u04f8'..'\u04f9'|'\u0500'..'\u050f'|'\u0531'..'\u0556'|'\u0559'|'\u0561'..'\u0587'|'\u05d0'..'\u05ea'|'\u05f0'..'\u05f2'|'\u0621'..'\u063a'|'\u0640'..'\u064a'|'\u066e'..'\u066f'|'\u0671'..'\u06d3'|'\u06d5'|'\u06e5'..'\u06e6'|'\u06ee'..'\u06ef'|'\u06fa'..'\u06fc'|'\u06ff'|'\u0710'|'\u0712'..'\u072f'|'\u074d'..'\u074f'|'\u0780'..'\u07a5'|'\u07b1'|'\u0904'..'\u0939'|'\u093d'|'\u0950'|'\u0958'..'\u0961'|'\u0985'..'\u098c'|'\u098f'..'\u0990'|'\u0993'..'\u09a8'|'\u09aa'..'\u09b0'|'\u09b2'|'\u09b6'..'\u09b9'|'\u09bd'|'\u09dc'..'\u09dd'|'\u09df'..'\u09e1'|'\u09f0'..'\u09f3'|'\u0a05'..'\u0a0a'|'\u0a0f'..'\u0a10'|'\u0a13'..'\u0a28'|'\u0a2a'..'\u0a30'|'\u0a32'..'\u0a33'|'\u0a35'..'\u0a36'|'\u0a38'..'\u0a39'|'\u0a59'..'\u0a5c'|'\u0a5e'|'\u0a72'..'\u0a74'|'\u0a85'..'\u0a8d'|'\u0a8f'..'\u0a91'|'\u0a93'..'\u0aa8'|'\u0aaa'..'\u0ab0'|'\u0ab2'..'\u0ab3'|'\u0ab5'..'\u0ab9'|'\u0abd'|'\u0ad0'|'\u0ae0'..'\u0ae1'|'\u0af1'|'\u0b05'..'\u0b0c'|'\u0b0f'..'\u0b10'|'\u0b13'..'\u0b28'|'\u0b2a'..'\u0b30'|'\u0b32'..'\u0b33'|'\u0b35'..'\u0b39'|'\u0b3d'|'\u0b5c'..'\u0b5d'|'\u0b5f'..'\u0b61'|'\u0b71'|'\u0b83'|'\u0b85'..'\u0b8a'|'\u0b8e'..'\u0b90'|'\u0b92'..'\u0b95'|'\u0b99'..'\u0b9a'|'\u0b9c'|'\u0b9e'..'\u0b9f'|'\u0ba3'..'\u0ba4'|'\u0ba8'..'\u0baa'|'\u0bae'..'\u0bb5'|'\u0bb7'..'\u0bb9'|'\u0bf9'|'\u0c05'..'\u0c0c'|'\u0c0e'..'\u0c10'|'\u0c12'..'\u0c28'|'\u0c2a'..'\u0c33'|'\u0c35'..'\u0c39'|'\u0c60'..'\u0c61'|'\u0c85'..'\u0c8c'|'\u0c8e'..'\u0c90'|'\u0c92'..'\u0ca8'|'\u0caa'..'\u0cb3'|'\u0cb5'..'\u0cb9'|'\u0cbd'|'\u0cde'|'\u0ce0'..'\u0ce1'|'\u0d05'..'\u0d0c'|'\u0d0e'..'\u0d10'|'\u0d12'..'\u0d28'|'\u0d2a'..'\u0d39'|'\u0d60'..'\u0d61'|'\u0d85'..'\u0d96'|'\u0d9a'..'\u0db1'|'\u0db3'..'\u0dbb'|'\u0dbd'|'\u0dc0'..'\u0dc6'|'\u0e01'..'\u0e30'|'\u0e32'..'\u0e33'|'\u0e3f'..'\u0e46'|'\u0e81'..'\u0e82'|'\u0e84'|'\u0e87'..'\u0e88'|'\u0e8a'|'\u0e8d'|'\u0e94'..'\u0e97'|'\u0e99'..'\u0e9f'|'\u0ea1'..'\u0ea3'|'\u0ea5'|'\u0ea7'|'\u0eaa'..'\u0eab'|'\u0ead'..'\u0eb0'|'\u0eb2'..'\u0eb3'|'\u0ebd'|'\u0ec0'..'\u0ec4'|'\u0ec6'|'\u0edc'..'\u0edd'|'\u0f00'|'\u0f40'..'\u0f47'|'\u0f49'..'\u0f6a'|'\u0f88'..'\u0f8b'|'\u1000'..'\u1021'|'\u1023'..'\u1027'|'\u1029'..'\u102a'|'\u1050'..'\u1055'|'\u10a0'..'\u10c5'|'\u10d0'..'\u10f8'|'\u1100'..'\u1159'|'\u115f'..'\u11a2'|'\u11a8'..'\u11f9'|'\u1200'..'\u1206'|'\u1208'..'\u1246'|'\u1248'|'\u124a'..'\u124d'|'\u1250'..'\u1256'|'\u1258'|'\u125a'..'\u125d'|'\u1260'..'\u1286'|'\u1288'|'\u128a'..'\u128d'|'\u1290'..'\u12ae'|'\u12b0'|'\u12b2'..'\u12b5'|'\u12b8'..'\u12be'|'\u12c0'|'\u12c2'..'\u12c5'|'\u12c8'..'\u12ce'|'\u12d0'..'\u12d6'|'\u12d8'..'\u12ee'|'\u12f0'..'\u130e'|'\u1310'|'\u1312'..'\u1315'|'\u1318'..'\u131e'|'\u1320'..'\u1346'|'\u1348'..'\u135a'|'\u13a0'..'\u13f4'|'\u1401'..'\u166c'|'\u166f'..'\u1676'|'\u1681'..'\u169a'|'\u16a0'..'\u16ea'|'\u16ee'..'\u16f0'|'\u1700'..'\u170c'|'\u170e'..'\u1711'|'\u1720'..'\u1731'|'\u1740'..'\u1751'|'\u1760'..'\u176c'|'\u176e'..'\u1770'|'\u1780'..'\u17b3'|'\u17d7'|'\u17db'..'\u17dc'|'\u1820'..'\u1877'|'\u1880'..'\u18a8'|'\u1900'..'\u191c'|'\u1950'..'\u196d'|'\u1970'..'\u1974'|'\u1d00'..'\u1d6b'|'\u1e00'..'\u1e9b'|'\u1ea0'..'\u1ef9'|'\u1f00'..'\u1f15'|'\u1f18'..'\u1f1d'|'\u1f20'..'\u1f45'|'\u1f48'..'\u1f4d'|'\u1f50'..'\u1f57'|'\u1f59'|'\u1f5b'|'\u1f5d'|'\u1f5f'..'\u1f7d'|'\u1f80'..'\u1fb4'|'\u1fb6'..'\u1fbc'|'\u1fbe'|'\u1fc2'..'\u1fc4'|'\u1fc6'..'\u1fcc'|'\u1fd0'..'\u1fd3'|'\u1fd6'..'\u1fdb'|'\u1fe0'..'\u1fec'|'\u1ff2'..'\u1ff4'|'\u1ff6'..'\u1ffc'|'\u203f'..'\u2040'|'\u2054'|'\u2071'|'\u207f'|'\u20a0'..'\u20b1'|'\u2102'|'\u2107'|'\u210a'..'\u2113'|'\u2115'|'\u2119'..'\u211d'|'\u2124'|'\u2126'|'\u2128'|'\u212a'..'\u212d'|'\u212f'..'\u2131'|'\u2133'..'\u2139'|'\u213d'..'\u213f'|'\u2145'..'\u2149'|'\u2160'..'\u2183'|'\u3005'..'\u3007'|'\u3021'..'\u3029'|'\u3031'..'\u3035'|'\u3038'..'\u303c'|'\u3041'..'\u3096'|'\u309d'..'\u309f'|'\u30a1'..'\u30ff'|'\u3105'..'\u312c'|'\u3131'..'\u318e'|'\u31a0'..'\u31b7'|'\u31f0'..'\u31ff'|'\u3400'..'\u4db5'|'\u4e00'..'\u9fa5'|'\ua000'..'\ua48c'|'\uac00'..'\ud7a3'|'\ud800'..'\udbff'|'\uf900'..'\ufa2d'|'\ufa30'..'\ufa6a'|'\ufb00'..'\ufb06'|'\ufb13'..'\ufb17'|'\ufb1d'|'\ufb1f'..'\ufb28'|'\ufb2a'..'\ufb36'|'\ufb38'..'\ufb3c'|'\ufb3e'|'\ufb40'..'\ufb41'|'\ufb43'..'\ufb44'|'\ufb46'..'\ufbb1'|'\ufbd3'..'\ufd3d'|'\ufd50'..'\ufd8f'|'\ufd92'..'\ufdc7'|'\ufdf0'..'\ufdfc'|'\ufe33'..'\ufe34'|'\ufe4d'..'\ufe4f'|'\ufe69'|'\ufe70'..'\ufe74'|'\ufe76'..'\ufefc'|'\uff04'|'\uff21'..'\uff3a'|'\uff3f'|'\uff41'..'\uff5a'|'\uff65'..'\uffbe'|'\uffc2'..'\uffc7'|'\uffca'..'\uffcf'|'\uffd2'..'\uffd7'|'\uffda'..'\uffdc'|'\uffe0'..'\uffe1'|'\uffe5'..'\uffe6')('\u0000'..'\u0008'|'\u000e'..'\u001b'|'\u0024'|'\u0030'..'\u0039'|'\u0041'..'\u005a'|'\u005f'|'\u0061'..'\u007a'|'\u007f'..'\u009f'|'\u00a2'..'\u00a5'|'\u00aa'|'\u00ad'|'\u00b5'|'\u00ba'|'\u00c0'..'\u00d6'|'\u00d8'..'\u00f6'|'\u00f8'..'\u0236'|'\u0250'..'\u02c1'|'\u02c6'..'\u02d1'|'\u02e0'..'\u02e4'|'\u02ee'|'\u0300'..'\u0357'|'\u035d'..'\u036f'|'\u037a'|'\u0386'|'\u0388'..'\u038a'|'\u038c'|'\u038e'..'\u03a1'|'\u03a3'..'\u03ce'|'\u03d0'..'\u03f5'|'\u03f7'..'\u03fb'|'\u0400'..'\u0481'|'\u0483'..'\u0486'|'\u048a'..'\u04ce'|'\u04d0'..'\u04f5'|'\u04f8'..'\u04f9'|'\u0500'..'\u050f'|'\u0531'..'\u0556'|'\u0559'|'\u0561'..'\u0587'|'\u0591'..'\u05a1'|'\u05a3'..'\u05b9'|'\u05bb'..'\u05bd'|'\u05bf'|'\u05c1'..'\u05c2'|'\u05c4'|'\u05d0'..'\u05ea'|'\u05f0'..'\u05f2'|'\u0600'..'\u0603'|'\u0610'..'\u0615'|'\u0621'..'\u063a'|'\u0640'..'\u0658'|'\u0660'..'\u0669'|'\u066e'..'\u06d3'|'\u06d5'..'\u06dd'|'\u06df'..'\u06e8'|'\u06ea'..'\u06fc'|'\u06ff'|'\u070f'..'\u074a'|'\u074d'..'\u074f'|'\u0780'..'\u07b1'|'\u0901'..'\u0939'|'\u093c'..'\u094d'|'\u0950'..'\u0954'|'\u0958'..'\u0963'|'\u0966'..'\u096f'|'\u0981'..'\u0983'|'\u0985'..'\u098c'|'\u098f'..'\u0990'|'\u0993'..'\u09a8'|'\u09aa'..'\u09b0'|'\u09b2'|'\u09b6'..'\u09b9'|'\u09bc'..'\u09c4'|'\u09c7'..'\u09c8'|'\u09cb'..'\u09cd'|'\u09d7'|'\u09dc'..'\u09dd'|'\u09df'..'\u09e3'|'\u09e6'..'\u09f3'|'\u0a01'..'\u0a03'|'\u0a05'..'\u0a0a'|'\u0a0f'..'\u0a10'|'\u0a13'..'\u0a28'|'\u0a2a'..'\u0a30'|'\u0a32'..'\u0a33'|'\u0a35'..'\u0a36'|'\u0a38'..'\u0a39'|'\u0a3c'|'\u0a3e'..'\u0a42'|'\u0a47'..'\u0a48'|'\u0a4b'..'\u0a4d'|'\u0a59'..'\u0a5c'|'\u0a5e'|'\u0a66'..'\u0a74'|'\u0a81'..'\u0a83'|'\u0a85'..'\u0a8d'|'\u0a8f'..'\u0a91'|'\u0a93'..'\u0aa8'|'\u0aaa'..'\u0ab0'|'\u0ab2'..'\u0ab3'|'\u0ab5'..'\u0ab9'|'\u0abc'..'\u0ac5'|'\u0ac7'..'\u0ac9'|'\u0acb'..'\u0acd'|'\u0ad0'|'\u0ae0'..'\u0ae3'|'\u0ae6'..'\u0aef'|'\u0af1'|'\u0b01'..'\u0b03'|'\u0b05'..'\u0b0c'|'\u0b0f'..'\u0b10'|'\u0b13'..'\u0b28'|'\u0b2a'..'\u0b30'|'\u0b32'..'\u0b33'|'\u0b35'..'\u0b39'|'\u0b3c'..'\u0b43'|'\u0b47'..'\u0b48'|'\u0b4b'..'\u0b4d'|'\u0b56'..'\u0b57'|'\u0b5c'..'\u0b5d'|'\u0b5f'..'\u0b61'|'\u0b66'..'\u0b6f'|'\u0b71'|'\u0b82'..'\u0b83'|'\u0b85'..'\u0b8a'|'\u0b8e'..'\u0b90'|'\u0b92'..'\u0b95'|'\u0b99'..'\u0b9a'|'\u0b9c'|'\u0b9e'..'\u0b9f'|'\u0ba3'..'\u0ba4'|'\u0ba8'..'\u0baa'|'\u0bae'..'\u0bb5'|'\u0bb7'..'\u0bb9'|'\u0bbe'..'\u0bc2'|'\u0bc6'..'\u0bc8'|'\u0bca'..'\u0bcd'|'\u0bd7'|'\u0be7'..'\u0bef'|'\u0bf9'|'\u0c01'..'\u0c03'|'\u0c05'..'\u0c0c'|'\u0c0e'..'\u0c10'|'\u0c12'..'\u0c28'|'\u0c2a'..'\u0c33'|'\u0c35'..'\u0c39'|'\u0c3e'..'\u0c44'|'\u0c46'..'\u0c48'|'\u0c4a'..'\u0c4d'|'\u0c55'..'\u0c56'|'\u0c60'..'\u0c61'|'\u0c66'..'\u0c6f'|'\u0c82'..'\u0c83'|'\u0c85'..'\u0c8c'|'\u0c8e'..'\u0c90'|'\u0c92'..'\u0ca8'|'\u0caa'..'\u0cb3'|'\u0cb5'..'\u0cb9'|'\u0cbc'..'\u0cc4'|'\u0cc6'..'\u0cc8'|'\u0cca'..'\u0ccd'|'\u0cd5'..'\u0cd6'|'\u0cde'|'\u0ce0'..'\u0ce1'|'\u0ce6'..'\u0cef'|'\u0d02'..'\u0d03'|'\u0d05'..'\u0d0c'|'\u0d0e'..'\u0d10'|'\u0d12'..'\u0d28'|'\u0d2a'..'\u0d39'|'\u0d3e'..'\u0d43'|'\u0d46'..'\u0d48'|'\u0d4a'..'\u0d4d'|'\u0d57'|'\u0d60'..'\u0d61'|'\u0d66'..'\u0d6f'|'\u0d82'..'\u0d83'|'\u0d85'..'\u0d96'|'\u0d9a'..'\u0db1'|'\u0db3'..'\u0dbb'|'\u0dbd'|'\u0dc0'..'\u0dc6'|'\u0dca'|'\u0dcf'..'\u0dd4'|'\u0dd6'|'\u0dd8'..'\u0ddf'|'\u0df2'..'\u0df3'|'\u0e01'..'\u0e3a'|'\u0e3f'..'\u0e4e'|'\u0e50'..'\u0e59'|'\u0e81'..'\u0e82'|'\u0e84'|'\u0e87'..'\u0e88'|'\u0e8a'|'\u0e8d'|'\u0e94'..'\u0e97'|'\u0e99'..'\u0e9f'|'\u0ea1'..'\u0ea3'|'\u0ea5'|'\u0ea7'|'\u0eaa'..'\u0eab'|'\u0ead'..'\u0eb9'|'\u0ebb'..'\u0ebd'|'\u0ec0'..'\u0ec4'|'\u0ec6'|'\u0ec8'..'\u0ecd'|'\u0ed0'..'\u0ed9'|'\u0edc'..'\u0edd'|'\u0f00'|'\u0f18'..'\u0f19'|'\u0f20'..'\u0f29'|'\u0f35'|'\u0f37'|'\u0f39'|'\u0f3e'..'\u0f47'|'\u0f49'..'\u0f6a'|'\u0f71'..'\u0f84'|'\u0f86'..'\u0f8b'|'\u0f90'..'\u0f97'|'\u0f99'..'\u0fbc'|'\u0fc6'|'\u1000'..'\u1021'|'\u1023'..'\u1027'|'\u1029'..'\u102a'|'\u102c'..'\u1032'|'\u1036'..'\u1039'|'\u1040'..'\u1049'|'\u1050'..'\u1059'|'\u10a0'..'\u10c5'|'\u10d0'..'\u10f8'|'\u1100'..'\u1159'|'\u115f'..'\u11a2'|'\u11a8'..'\u11f9'|'\u1200'..'\u1206'|'\u1208'..'\u1246'|'\u1248'|'\u124a'..'\u124d'|'\u1250'..'\u1256'|'\u1258'|'\u125a'..'\u125d'|'\u1260'..'\u1286'|'\u1288'|'\u128a'..'\u128d'|'\u1290'..'\u12ae'|'\u12b0'|'\u12b2'..'\u12b5'|'\u12b8'..'\u12be'|'\u12c0'|'\u12c2'..'\u12c5'|'\u12c8'..'\u12ce'|'\u12d0'..'\u12d6'|'\u12d8'..'\u12ee'|'\u12f0'..'\u130e'|'\u1310'|'\u1312'..'\u1315'|'\u1318'..'\u131e'|'\u1320'..'\u1346'|'\u1348'..'\u135a'|'\u1369'..'\u1371'|'\u13a0'..'\u13f4'|'\u1401'..'\u166c'|'\u166f'..'\u1676'|'\u1681'..'\u169a'|'\u16a0'..'\u16ea'|'\u16ee'..'\u16f0'|'\u1700'..'\u170c'|'\u170e'..'\u1714'|'\u1720'..'\u1734'|'\u1740'..'\u1753'|'\u1760'..'\u176c'|'\u176e'..'\u1770'|'\u1772'..'\u1773'|'\u1780'..'\u17d3'|'\u17d7'|'\u17db'..'\u17dd'|'\u17e0'..'\u17e9'|'\u180b'..'\u180d'|'\u1810'..'\u1819'|'\u1820'..'\u1877'|'\u1880'..'\u18a9'|'\u1900'..'\u191c'|'\u1920'..'\u192b'|'\u1930'..'\u193b'|'\u1946'..'\u196d'|'\u1970'..'\u1974'|'\u1d00'..'\u1d6b'|'\u1e00'..'\u1e9b'|'\u1ea0'..'\u1ef9'|'\u1f00'..'\u1f15'|'\u1f18'..'\u1f1d'|'\u1f20'..'\u1f45'|'\u1f48'..'\u1f4d'|'\u1f50'..'\u1f57'|'\u1f59'|'\u1f5b'|'\u1f5d'|'\u1f5f'..'\u1f7d'|'\u1f80'..'\u1fb4'|'\u1fb6'..'\u1fbc'|'\u1fbe'|'\u1fc2'..'\u1fc4'|'\u1fc6'..'\u1fcc'|'\u1fd0'..'\u1fd3'|'\u1fd6'..'\u1fdb'|'\u1fe0'..'\u1fec'|'\u1ff2'..'\u1ff4'|'\u1ff6'..'\u1ffc'|'\u200c'..'\u200f'|'\u202a'..'\u202e'|'\u203f'..'\u2040'|'\u2054'|'\u2060'..'\u2063'|'\u206a'..'\u206f'|'\u2071'|'\u207f'|'\u20a0'..'\u20b1'|'\u20d0'..'\u20dc'|'\u20e1'|'\u20e5'..'\u20ea'|'\u2102'|'\u2107'|'\u210a'..'\u2113'|'\u2115'|'\u2119'..'\u211d'|'\u2124'|'\u2126'|'\u2128'|'\u212a'..'\u212d'|'\u212f'..'\u2131'|'\u2133'..'\u2139'|'\u213d'..'\u213f'|'\u2145'..'\u2149'|'\u2160'..'\u2183'|'\u3005'..'\u3007'|'\u3021'..'\u302f'|'\u3031'..'\u3035'|'\u3038'..'\u303c'|'\u3041'..'\u3096'|'\u3099'..'\u309a'|'\u309d'..'\u309f'|'\u30a1'..'\u30ff'|'\u3105'..'\u312c'|'\u3131'..'\u318e'|'\u31a0'..'\u31b7'|'\u31f0'..'\u31ff'|'\u3400'..'\u4db5'|'\u4e00'..'\u9fa5'|'\ua000'..'\ua48c'|'\uac00'..'\ud7a3'|'\ud800'..'\udfff'|'\uf900'..'\ufa2d'|'\ufa30'..'\ufa6a'|'\ufb00'..'\ufb06'|'\ufb13'..'\ufb17'|'\ufb1d'..'\ufb28'|'\ufb2a'..'\ufb36'|'\ufb38'..'\ufb3c'|'\ufb3e'|'\ufb40'..'\ufb41'|'\ufb43'..'\ufb44'|'\ufb46'..'\ufbb1'|'\ufbd3'..'\ufd3d'|'\ufd50'..'\ufd8f'|'\ufd92'..'\ufdc7'|'\ufdf0'..'\ufdfc'|'\ufe00'..'\ufe0f'|'\ufe20'..'\ufe23'|'\ufe33'..'\ufe34'|'\ufe4d'..'\ufe4f'|'\ufe69'|'\ufe70'..'\ufe74'|'\ufe76'..'\ufefc'|'\ufeff'|'\uff04'|'\uff10'..'\uff19'|'\uff21'..'\uff3a'|'\uff3f'|'\uff41'..'\uff5a'|'\uff65'..'\uffbe'|'\uffc2'..'\uffc7'|'\uffca'..'\uffcf'|'\uffd2'..'\uffd7'|'\uffda'..'\uffdc'|'\uffe0'..'\uffe1'|'\uffe5'..'\uffe6'|'\ufff9'..'\ufffb')*;
WHITESPACE:
	(' '|'\t'|'\f')
	{ _channel = 99; }
;
LINEBREAKS:
	('\r\n'|'\r'|'\n')
	{ _channel = 99; }
;

