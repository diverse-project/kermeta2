// $ANTLR 3.1.1

	package org.kermeta.language.emftexteditor.mopp;


import org.antlr.runtime.*;
import java.util.HashMap;
public class KermetaParser extends KermetaANTLRParserBase {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "QUALIFIEDNAME", "STRING", "STRING_LITERAL", "INTEGER", "BOOLEAN", "CASTED", "SL_COMMENT", "ML_COMMENT", "FLOAT", "TEXT", "WHITESPACE", "LINEBREAK", "'using'", "'require'", "'package'", "'.'", "'{'", "'}'", "'aspect'", "'abstract'", "'class'", "'inherits'", "','", "'attribute'", "'reference'", "':'", "'property'", "'operation'", "'('", "')'", "'is'", "'enumeration'", "';'", "'Object'", "'tag'", "'ownedTags'", "'Model'", "'ModelType'", "'typeContainer'", "'name'", "'includedTypeDefinition'", "'TypeVariableBinding'", "'containedType'", "'variable'", "'type'", "'MultiplicityElement'", "'lower'", "'upper'", "'TypeDefinition'", "'PrimitiveType'", "'instanceType'", "'Tag'", "'value'", "'object'", "'ObjectTypeVariable'", "'supertype'", "'ModelTypeVariable'", "'virtualType'", "'VirtualType'", "'classDefinition'", "'modelType'", "'typeParamBinding'", "'ProductType'", "'FunctionType'", "'left'", "'right'", "'VoidType'", "'do'", "'end'", "'rescue'", "'raise'", "'if'", "'then'", "'else'", "'from'", "'until'", "'loop'", "'var'", "'init'", "'result'", "'super('", "':='", "'='", "'self'", "'=='", "'+'", "'-'", "'/'", "'*'", "'CallValue'", "'staticType'", "'parameters'", "'staticTypeVariableBindings'", "'EmptyExpression'", "'JavaStaticCall'", "'jclass'", "'jmethod'", "'LambdaExpression'", "'body'", "'LambdaParameter'", "'Void'"
    };
    public static final int T__29=29;
    public static final int T__28=28;
    public static final int T__27=27;
    public static final int T__26=26;
    public static final int T__25=25;
    public static final int T__24=24;
    public static final int T__23=23;
    public static final int T__22=22;
    public static final int T__21=21;
    public static final int T__20=20;
    public static final int EOF=-1;
    public static final int T__93=93;
    public static final int T__19=19;
    public static final int T__94=94;
    public static final int T__91=91;
    public static final int T__92=92;
    public static final int STRING_LITERAL=6;
    public static final int T__16=16;
    public static final int T__90=90;
    public static final int T__18=18;
    public static final int T__17=17;
    public static final int T__99=99;
    public static final int T__98=98;
    public static final int T__97=97;
    public static final int T__96=96;
    public static final int T__95=95;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int WHITESPACE=14;
    public static final int T__85=85;
    public static final int T__84=84;
    public static final int T__87=87;
    public static final int T__86=86;
    public static final int T__89=89;
    public static final int T__88=88;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int T__70=70;
    public static final int SL_COMMENT=10;
    public static final int T__76=76;
    public static final int T__75=75;
    public static final int T__74=74;
    public static final int T__73=73;
    public static final int T__79=79;
    public static final int T__78=78;
    public static final int T__77=77;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__62=62;
    public static final int QUALIFIEDNAME=4;
    public static final int T__63=63;
    public static final int FLOAT=12;
    public static final int T__61=61;
    public static final int T__60=60;
    public static final int T__55=55;
    public static final int ML_COMMENT=11;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int BOOLEAN=8;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__59=59;
    public static final int T__103=103;
    public static final int T__104=104;
    public static final int T__50=50;
    public static final int LINEBREAK=15;
    public static final int INTEGER=7;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__102=102;
    public static final int T__101=101;
    public static final int T__100=100;
    public static final int TEXT=13;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int CASTED=9;
    public static final int T__32=32;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int STRING=5;

    // delegates
    // delegators


        public KermetaParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public KermetaParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
            this.state.ruleMemo = new HashMap[388+1];
             
             
        }
        

    public String[] getTokenNames() { return KermetaParser.tokenNames; }
    public String getGrammarFileName() { return "/Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g"; }


    	private org.kermeta.language.emftexteditor.IKermetaTokenResolverFactory tokenResolverFactory = new org.kermeta.language.emftexteditor.mopp.KermetaTokenResolverFactory();
    	@SuppressWarnings("unused")
    	
    	private int lastPosition;
    	private org.kermeta.language.emftexteditor.mopp.KermetaTokenResolveResult tokenResolveResult = new org.kermeta.language.emftexteditor.mopp.KermetaTokenResolveResult();
    	private boolean rememberExpectedElements = false;
    	private java.lang.Object parseToIndexTypeObject;
    	private int lastTokenIndex = 0;
    	private java.util.List<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal> expectedElements = new java.util.ArrayList<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal>();
    	private int mismatchedTokenRecoveryTries = 0;
    	private java.util.Map<?, ?> options;
    	//helper lists to allow a lexer to pass errors to its parser
    	protected java.util.List<org.antlr.runtime.RecognitionException> lexerExceptions = java.util.Collections.synchronizedList(new java.util.ArrayList<org.antlr.runtime.RecognitionException>());
    	protected java.util.List<java.lang.Integer> lexerExceptionsPosition = java.util.Collections.synchronizedList(new java.util.ArrayList<java.lang.Integer>());
    	private int stopIncludingHiddenTokens;
    	private int stopExcludingHiddenTokens;
    	private java.util.Collection<org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>> postParseCommands;
    	private boolean terminateParsing;
    	private int tokenIndexOfLastCompleteElement;
    	private int expectedElementsIndexOfLastCompleteElement;
    	
    	protected void addErrorToResource(final java.lang.String errorMessage, final int line, final int charPositionInLine, final int startIndex, final int stopIndex) {
    		postParseCommands.add(new org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>() {
    			public boolean execute(org.kermeta.language.emftexteditor.IKermetaTextResource resource) {
    				if (resource == null) {
    					// the resource can be null if the parser is used for
    					// code completion
    					return true;
    				}
    				resource.addProblem(new org.kermeta.language.emftexteditor.IKermetaProblem() {
    					public org.kermeta.language.emftexteditor.KermetaEProblemType getType() {
    						return org.kermeta.language.emftexteditor.KermetaEProblemType.ERROR;
    					}
    					public java.lang.String getMessage() {
    						return errorMessage;
    					}
    				}, line, charPositionInLine, startIndex, stopIndex);
    				return true;
    			}
    		});
    	}
    	
    	public void addExpectedElement(org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal expectedElement) {
    		if (!this.rememberExpectedElements) {
    			return;
    		}
    		setPosition(expectedElement, input.index());
    		this.expectedElements.add(expectedElement);
    	}
    	
    	protected void addMapEntry(org.eclipse.emf.ecore.EObject element, org.eclipse.emf.ecore.EStructuralFeature structuralFeature, org.kermeta.language.emftexteditor.mopp.KermetaDummyEObject dummy) {
    		java.lang.Object value = element.eGet(structuralFeature);
    		java.lang.Object mapKey = dummy.getValueByName("key");
    		java.lang.Object mapValue = dummy.getValueByName("value");
    		if (value instanceof org.eclipse.emf.common.util.EMap<?, ?>) {
    			org.eclipse.emf.common.util.EMap<java.lang.Object, java.lang.Object> valueMap = org.kermeta.language.emftexteditor.util.KermetaMapUtil.castToEMap(value);
    			if (mapKey != null && mapValue != null) {
    				valueMap.put(mapKey, mapValue);
    			}
    		}
    	}
    	
    	@SuppressWarnings("unchecked")
    	
    	private boolean addObjectToList(org.eclipse.emf.ecore.EObject element, int featureID, java.lang.Object proxy) {
    		return ((java.util.List<java.lang.Object>) element.eGet(element.eClass().getEStructuralFeature(featureID))).add(proxy);
    	}
    	
    	protected org.eclipse.emf.ecore.EObject apply(org.eclipse.emf.ecore.EObject target, java.util.List<org.eclipse.emf.ecore.EObject> dummyEObjects) {
    		org.eclipse.emf.ecore.EObject currentTarget = target;
    		for (org.eclipse.emf.ecore.EObject object : dummyEObjects) {
    			assert(object instanceof org.kermeta.language.emftexteditor.mopp.KermetaDummyEObject);
    			org.kermeta.language.emftexteditor.mopp.KermetaDummyEObject dummy = (org.kermeta.language.emftexteditor.mopp.KermetaDummyEObject) object;
    			org.eclipse.emf.ecore.EObject newEObject = dummy.applyTo(currentTarget);
    			currentTarget = newEObject;
    		}
    		return currentTarget;
    	}
    	
    	protected void collectHiddenTokens(org.eclipse.emf.ecore.EObject element) {
    	}
    	
    	protected void copyLocalizationInfos(final org.eclipse.emf.ecore.EObject source, final org.eclipse.emf.ecore.EObject target) {
    		postParseCommands.add(new org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>() {
    			public boolean execute(org.kermeta.language.emftexteditor.IKermetaTextResource resource) {
    				org.kermeta.language.emftexteditor.IKermetaLocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for
    					// code completion
    					return true;
    				}
    				locationMap.setCharStart(target, locationMap.getCharStart(source));
    				locationMap.setCharEnd(target, locationMap.getCharEnd(source));
    				locationMap.setColumn(target, locationMap.getColumn(source));
    				locationMap.setLine(target, locationMap.getLine(source));
    				return true;
    			}
    		});
    	}
    	
    	protected void copyLocalizationInfos(final org.antlr.runtime.CommonToken source, final org.eclipse.emf.ecore.EObject target) {
    		postParseCommands.add(new org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>() {
    			public boolean execute(org.kermeta.language.emftexteditor.IKermetaTextResource resource) {
    				org.kermeta.language.emftexteditor.IKermetaLocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for
    					// code completion
    					return true;
    				}
    				if (source == null) {
    					return true;
    				}
    				locationMap.setCharStart(target, source.getStartIndex());
    				locationMap.setCharEnd(target, source.getStopIndex());
    				locationMap.setColumn(target, source.getCharPositionInLine());
    				locationMap.setLine(target, source.getLine());
    				return true;
    			}
    		});
    	}
    	
    	public org.kermeta.language.emftexteditor.IKermetaTextParser createInstance(java.io.InputStream actualInputStream, java.lang.String encoding) {
    		try {
    			if (encoding == null) {
    				return new KermetaParser(new org.antlr.runtime.CommonTokenStream(new KermetaLexer(new org.antlr.runtime.ANTLRInputStream(actualInputStream))));
    			} else {
    				return new KermetaParser(new org.antlr.runtime.CommonTokenStream(new KermetaLexer(new org.antlr.runtime.ANTLRInputStream(actualInputStream, encoding))));
    			}
    		} catch (java.io.IOException e) {
    			org.kermeta.language.emftexteditor.mopp.KermetaPlugin.logError("Error while creating parser.", e);
    			return null;
    		}
    	}
    	
    	// This default constructor is only used to call createInstance() on it
    	public KermetaParser() {
    		super(null);
    	}
    	
    	protected org.eclipse.emf.ecore.EObject doParse() throws org.antlr.runtime.RecognitionException {
    		this.lastPosition = 0;
    		// required because the lexer class can not be subclassed
    		((KermetaLexer) getTokenStream().getTokenSource()).lexerExceptions = lexerExceptions;
    		((KermetaLexer) getTokenStream().getTokenSource()).lexerExceptionsPosition = lexerExceptionsPosition;
    		java.lang.Object typeObject = getTypeObject();
    		if (typeObject == null) {
    			return start();
    		} else if (typeObject instanceof org.eclipse.emf.ecore.EClass) {
    			org.eclipse.emf.ecore.EClass type = (org.eclipse.emf.ecore.EClass) typeObject;
    			if (type.getInstanceClass() == org.kermeta.language.structure.ModelingUnit.class) {
    				return parse_org_kermeta_language_structure_ModelingUnit();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Using.class) {
    				return parse_org_kermeta_language_structure_Using();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Require.class) {
    				return parse_org_kermeta_language_structure_Require();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Package.class) {
    				return parse_org_kermeta_language_structure_Package();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.ClassDefinition.class) {
    				return parse_org_kermeta_language_structure_ClassDefinition();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Property.class) {
    				return parse_org_kermeta_language_structure_Property();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Operation.class) {
    				return parse_org_kermeta_language_structure_Operation();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Parameter.class) {
    				return parse_org_kermeta_language_structure_Parameter();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Class.class) {
    				return parse_org_kermeta_language_structure_Class();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Enumeration.class) {
    				return parse_org_kermeta_language_structure_Enumeration();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.EnumerationLiteral.class) {
    				return parse_org_kermeta_language_structure_EnumerationLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Constraint.class) {
    				return parse_org_kermeta_language_structure_Constraint();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Object.class) {
    				return parse_org_kermeta_language_structure_Object();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Model.class) {
    				return parse_org_kermeta_language_structure_Model();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.ModelType.class) {
    				return parse_org_kermeta_language_structure_ModelType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.TypeVariableBinding.class) {
    				return parse_org_kermeta_language_structure_TypeVariableBinding();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.MultiplicityElement.class) {
    				return parse_org_kermeta_language_structure_MultiplicityElement();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.TypeDefinition.class) {
    				return parse_org_kermeta_language_structure_TypeDefinition();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.PrimitiveType.class) {
    				return parse_org_kermeta_language_structure_PrimitiveType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Tag.class) {
    				return parse_org_kermeta_language_structure_Tag();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.ObjectTypeVariable.class) {
    				return parse_org_kermeta_language_structure_ObjectTypeVariable();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.ModelTypeVariable.class) {
    				return parse_org_kermeta_language_structure_ModelTypeVariable();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.VirtualType.class) {
    				return parse_org_kermeta_language_structure_VirtualType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.ProductType.class) {
    				return parse_org_kermeta_language_structure_ProductType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.FunctionType.class) {
    				return parse_org_kermeta_language_structure_FunctionType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.VoidType.class) {
    				return parse_org_kermeta_language_structure_VoidType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Block.class) {
    				return parse_org_kermeta_language_behavior_Block();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Rescue.class) {
    				return parse_org_kermeta_language_behavior_Rescue();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.TypeReference.class) {
    				return parse_org_kermeta_language_behavior_TypeReference();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Raise.class) {
    				return parse_org_kermeta_language_behavior_Raise();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.BooleanLiteral.class) {
    				return parse_org_kermeta_language_behavior_BooleanLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.IntegerLiteral.class) {
    				return parse_org_kermeta_language_behavior_IntegerLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.StringLiteral.class) {
    				return parse_org_kermeta_language_behavior_StringLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Conditional.class) {
    				return parse_org_kermeta_language_behavior_Conditional();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Loop.class) {
    				return parse_org_kermeta_language_behavior_Loop();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.VariableDecl.class) {
    				return parse_org_kermeta_language_behavior_VariableDecl();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.TypeLiteral.class) {
    				return parse_org_kermeta_language_behavior_TypeLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.CallResult.class) {
    				return parse_org_kermeta_language_behavior_CallResult();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.CallSuperOperation.class) {
    				return parse_org_kermeta_language_behavior_CallSuperOperation();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Assignment.class) {
    				return parse_org_kermeta_language_behavior_Assignment();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.CallVariable.class) {
    				return parse_org_kermeta_language_behavior_CallVariable();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.SelfExpression.class) {
    				return parse_org_kermeta_language_behavior_SelfExpression();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.CallFeature.class) {
    				return parse_org_kermeta_language_behavior_CallFeature();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.CallValue.class) {
    				return parse_org_kermeta_language_behavior_CallValue();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.EmptyExpression.class) {
    				return parse_org_kermeta_language_behavior_EmptyExpression();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.JavaStaticCall.class) {
    				return parse_org_kermeta_language_behavior_JavaStaticCall();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.LambdaExpression.class) {
    				return parse_org_kermeta_language_behavior_LambdaExpression();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.LambdaParameter.class) {
    				return parse_org_kermeta_language_behavior_LambdaParameter();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.VoidLiteral.class) {
    				return parse_org_kermeta_language_behavior_VoidLiteral();
    			}
    		}
    		throw new org.kermeta.language.emftexteditor.mopp.KermetaUnexpectedContentTypeException(typeObject);
    	}
    	
    	private org.kermeta.language.emftexteditor.mopp.KermetaTokenResolveResult getFreshTokenResolveResult() {
    		tokenResolveResult.clear();
    		return tokenResolveResult;
    	}
    	
    	public int getMismatchedTokenRecoveryTries() {
    		return mismatchedTokenRecoveryTries;
    	}
    	
    	public java.lang.Object getMissingSymbol(org.antlr.runtime.IntStream arg0, org.antlr.runtime.RecognitionException arg1, int arg2, org.antlr.runtime.BitSet arg3) {
    		mismatchedTokenRecoveryTries++;
    		return super.getMissingSymbol(arg0, arg1, arg2, arg3);
    	}
    	
    	protected java.util.Map<?,?> getOptions() {
    		return options;
    	}
    	
    	public org.kermeta.language.emftexteditor.mopp.KermetaMetaInformation getMetaInformation() {
    		return new org.kermeta.language.emftexteditor.mopp.KermetaMetaInformation();
    	}
    	
    	public java.lang.Object getParseToIndexTypeObject() {
    		return parseToIndexTypeObject;
    	}
    	
    	protected org.kermeta.language.emftexteditor.mopp.KermetaReferenceResolverSwitch getReferenceResolverSwitch() {
    		return (org.kermeta.language.emftexteditor.mopp.KermetaReferenceResolverSwitch) getMetaInformation().getReferenceResolverSwitch();
    	}
    	
    	protected java.lang.Object getTypeObject() {
    		java.lang.Object typeObject = getParseToIndexTypeObject();
    		if (typeObject != null) {
    			return typeObject;
    		}
    		java.util.Map<?,?> options = getOptions();
    		if (options != null) {
    			typeObject = options.get(org.kermeta.language.emftexteditor.IKermetaOptions.RESOURCE_CONTENT_TYPE);
    		}
    		return typeObject;
    	}
    	
    	// Implementation that calls {@link #doParse()}  and handles the thrown
    	// RecognitionExceptions.
    	public org.kermeta.language.emftexteditor.IKermetaParseResult parse() {
    		terminateParsing = false;
    		postParseCommands = new java.util.ArrayList<org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>>();
    		org.kermeta.language.emftexteditor.mopp.KermetaParseResult parseResult = new org.kermeta.language.emftexteditor.mopp.KermetaParseResult();
    		try {
    			org.eclipse.emf.ecore.EObject result =  doParse();
    			if (lexerExceptions.isEmpty()) {
    				parseResult.setRoot(result);
    			}
    		} catch (org.antlr.runtime.RecognitionException re) {
    			reportError(re);
    		} catch (java.lang.IllegalArgumentException iae) {
    			if ("The 'no null' constraint is violated".equals(iae.getMessage())) {
    				//? can be caused if a null is set on EMF models where not allowed;
    				//? this will just happen if other errors occurred before
    			} else {
    				iae.printStackTrace();
    			}
    		}
    		for (org.antlr.runtime.RecognitionException re : lexerExceptions) {
    			reportLexicalError(re);
    		}
    		parseResult.getPostParseCommands().addAll(postParseCommands);
    		return parseResult;
    	}
    	
    	public java.util.List<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal> parseToExpectedElements(org.eclipse.emf.ecore.EClass type, org.kermeta.language.emftexteditor.IKermetaTextResource dummyResource) {
    		rememberExpectedElements = true;
    		parseToIndexTypeObject = type;
    		final org.antlr.runtime.CommonTokenStream tokenStream = (org.antlr.runtime.CommonTokenStream) getTokenStream();
    		org.kermeta.language.emftexteditor.IKermetaParseResult result = parse();
    		if (result != null) {
    			org.eclipse.emf.ecore.EObject root = result.getRoot();
    			if (root != null) {
    				dummyResource.getContents().add(root);
    			}
    			for (org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource> command : result.getPostParseCommands()) {
    				command.execute(dummyResource);
    			}
    		}
    		// remove all expected elements that were added after the last complete element
    		expectedElements = expectedElements.subList(0, expectedElementsIndexOfLastCompleteElement + 1);
    		int lastFollowSetID = expectedElements.get(expectedElementsIndexOfLastCompleteElement).getFollowSetID();
    		java.util.Set<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal> currentFollowSet = new java.util.LinkedHashSet<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal>();
    		java.util.List<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal> newFollowSet = new java.util.ArrayList<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal>();
    		for (int i = expectedElementsIndexOfLastCompleteElement; i >= 0; i--) {
    			org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal expectedElementI = expectedElements.get(i);
    			if (expectedElementI.getFollowSetID() == lastFollowSetID) {
    				currentFollowSet.add(expectedElementI);
    			} else {
    				break;
    			}
    		}
    		int followSetID = 714;
    		int i;
    		for (i = tokenIndexOfLastCompleteElement; i < tokenStream.size(); i++) {
    			org.antlr.runtime.CommonToken nextToken = (org.antlr.runtime.CommonToken) tokenStream.get(i);
    			if (nextToken.getChannel() == 99) {
    				// hidden tokens do not reduce the follow set
    			} else {
    				// now that we have found the next visible token the position for that expected terminals
    				// can be set
    				for (org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal nextFollow : newFollowSet) {
    					lastTokenIndex = 0;
    					setPosition(nextFollow, i);
    				}
    				newFollowSet.clear();
    				// normal tokens do reduce the follow set - only elements that match the token are kept
    				for (org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal nextFollow : currentFollowSet) {
    					if (nextFollow.getTerminal().getTokenName().equals(getTokenNames()[nextToken.getType()])) {
    						// keep this one - it matches
    						java.util.Collection<org.kermeta.language.emftexteditor.IKermetaExpectedElement> newFollowers = nextFollow.getTerminal().getFollowers();
    						for (org.kermeta.language.emftexteditor.IKermetaExpectedElement newFollower : newFollowers) {
    							org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal newFollowTerminal = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(newFollower, followSetID);
    							newFollowSet.add(newFollowTerminal);
    							expectedElements.add(newFollowTerminal);
    						}
    					}
    				}
    				currentFollowSet.clear();
    				currentFollowSet.addAll(newFollowSet);
    			}
    			followSetID++;
    		}
    		// after the last token in the stream we must set the position for the elements that were
    		// added during the last iteration of the loop
    		for (org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal nextFollow : newFollowSet) {
    			lastTokenIndex = 0;
    			setPosition(nextFollow, i);
    		}
    		return this.expectedElements;
    	}
    	
    	public void setPosition(org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal expectedElement, int tokenIndex) {
    		int currentIndex = java.lang.Math.max(0, tokenIndex);
    		for (int index = lastTokenIndex; index < currentIndex; index++) {
    			if (index >= input.size()) {
    				break;
    			}
    			org.antlr.runtime.CommonToken tokenAtIndex = (org.antlr.runtime.CommonToken) input.get(index);
    			stopIncludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			if (tokenAtIndex.getChannel() != 99) {
    				stopExcludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			}
    		}
    		lastTokenIndex = java.lang.Math.max(0, currentIndex);
    		expectedElement.setPosition(stopExcludingHiddenTokens, stopIncludingHiddenTokens);
    	}
    	
    	public java.lang.Object recoverFromMismatchedToken(org.antlr.runtime.IntStream input, int ttype, org.antlr.runtime.BitSet follow) throws org.antlr.runtime.RecognitionException {
    		if (!rememberExpectedElements) {
    			return super.recoverFromMismatchedToken(input, ttype, follow);
    		} else {
    			return null;
    		}
    	}
    	protected <ContainerType extends org.eclipse.emf.ecore.EObject, ReferenceType extends org.eclipse.emf.ecore.EObject> void registerContextDependentProxy(final org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<ContainerType, ReferenceType> factory, final ContainerType element, final org.eclipse.emf.ecore.EReference reference, final String id, final org.eclipse.emf.ecore.EObject proxy) {
    		postParseCommands.add(new org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>() {
    			public boolean execute(org.kermeta.language.emftexteditor.IKermetaTextResource resource) {
    				if (resource == null) {
    					// the resource can be null if the parser is used for
    					// code completion
    					return true;
    				}
    				resource.registerContextDependentProxy(factory, element, reference, id, proxy);
    				return true;
    			}
    		});
    	}
    	
    	// Translates errors thrown by the parser into human readable messages.
    	public void reportError(final org.antlr.runtime.RecognitionException e)  {
    		java.lang.String message = e.getMessage();
    		if (e instanceof org.antlr.runtime.MismatchedTokenException) {
    			org.antlr.runtime.MismatchedTokenException mte = (org.antlr.runtime.MismatchedTokenException) e;
    			java.lang.String tokenName = "<unknown>";
    			if (mte.expecting == Token.EOF) {
    				tokenName = "EOF";
    			} else {
    				tokenName = getTokenNames()[mte.expecting];
    				tokenName = org.kermeta.language.emftexteditor.util.KermetaStringUtil.formatTokenName(tokenName);
    			}
    			message = "Syntax error on token \"" + e.token.getText() + "\", \"" + tokenName + "\" expected";
    		} else if (e instanceof org.antlr.runtime.MismatchedTreeNodeException) {
    			org.antlr.runtime.MismatchedTreeNodeException mtne = (org.antlr.runtime.MismatchedTreeNodeException) e;
    			java.lang.String tokenName = "<unknown>";
    			if (mtne.expecting == Token.EOF) {
    				tokenName = "EOF";
    			} else {
    				tokenName = getTokenNames()[mtne.expecting];
    			}
    			message = "mismatched tree node: "+"xxx" +"; expecting " + tokenName;
    		} else if (e instanceof org.antlr.runtime.NoViableAltException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", check following tokens";
    		} else if (e instanceof org.antlr.runtime.EarlyExitException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime.MismatchedSetException) {
    			org.antlr.runtime.MismatchedSetException mse = (org.antlr.runtime.MismatchedSetException) e;
    			message = "mismatched token: " + e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime.MismatchedNotSetException) {
    			org.antlr.runtime.MismatchedNotSetException mse = (org.antlr.runtime.MismatchedNotSetException) e;
    			message = "mismatched token: " +  e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime.FailedPredicateException) {
    			org.antlr.runtime.FailedPredicateException fpe = (org.antlr.runtime.FailedPredicateException) e;
    			message = "rule " + fpe.ruleName + " failed predicate: {" +  fpe.predicateText+"}?";
    		}
    		// the resource may be null if the parse is used for code completion
    		final java.lang.String finalMessage = message;
    		if (e.token instanceof org.antlr.runtime.CommonToken) {
    			final org.antlr.runtime.CommonToken ct = (org.antlr.runtime.CommonToken) e.token;
    			addErrorToResource(finalMessage, ct.getCharPositionInLine(), ct.getLine(), ct.getStartIndex(), ct.getStopIndex());
    		} else {
    			addErrorToResource(finalMessage, e.token.getCharPositionInLine(), e.token.getLine(), 1, 5);
    		}
    	}
    	
    	// Translates errors thrown by the lexer into human readable messages.
    	public void reportLexicalError(final org.antlr.runtime.RecognitionException e)  {
    		java.lang.String message = "";
    		if (e instanceof org.antlr.runtime.MismatchedTokenException) {
    			org.antlr.runtime.MismatchedTokenException mte = (org.antlr.runtime.MismatchedTokenException) e;
    			message = "Syntax error on token \"" + ((char) e.c) + "\", \"" + (char) mte.expecting + "\" expected";
    		} else if (e instanceof org.antlr.runtime.NoViableAltException) {
    			message = "Syntax error on token \"" + ((char) e.c) + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime.EarlyExitException) {
    			org.antlr.runtime.EarlyExitException eee = (org.antlr.runtime.EarlyExitException) e;
    			message ="required (...)+ loop (decision=" + eee.decisionNumber + ") did not match anything; on line " + e.line + ":" + e.charPositionInLine + " char=" + ((char) e.c) + "'";
    		} else if (e instanceof org.antlr.runtime.MismatchedSetException) {
    			org.antlr.runtime.MismatchedSetException mse = (org.antlr.runtime.MismatchedSetException) e;
    			message ="mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime.MismatchedNotSetException) {
    			org.antlr.runtime.MismatchedNotSetException mse = (org.antlr.runtime.MismatchedNotSetException) e;
    			message ="mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime.MismatchedRangeException) {
    			org.antlr.runtime.MismatchedRangeException mre = (org.antlr.runtime.MismatchedRangeException) e;
    			message ="mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set '" + (char) mre.a + "'..'" + (char) mre.b + "'";
    		} else if (e instanceof org.antlr.runtime.FailedPredicateException) {
    			org.antlr.runtime.FailedPredicateException fpe = (org.antlr.runtime.FailedPredicateException) e;
    			message ="rule " + fpe.ruleName + " failed predicate: {" + fpe.predicateText + "}?";
    		}
    		addErrorToResource(message, e.index, e.line, lexerExceptionsPosition.get(lexerExceptions.indexOf(e)), lexerExceptionsPosition.get(lexerExceptions.indexOf(e)));
    	}
    	
    	public void setOptions(java.util.Map<?,?> options) {
    		this.options = options;
    	}
    	
    	public void terminate() {
    		terminateParsing = true;
    	}
    	
    	protected void completedElement(Object element) {
    		if (element instanceof org.eclipse.emf.ecore.EObject) {
    			this.tokenIndexOfLastCompleteElement = getTokenStream().index();
    			this.expectedElementsIndexOfLastCompleteElement = expectedElements.size() - 1;
    		}
    	}
    	
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_0 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("require");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_1 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("using");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_2 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("package");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_3 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("aspect");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_4 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("abstract");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_5 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("class");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_6 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("enumeration");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_7 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__IS_ASPECT), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_8 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ModelType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_9 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__IS_ASPECT), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_10 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("TypeDefinition");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_11 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPrimitiveType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__IS_ASPECT), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_12 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("PrimitiveType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_13 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Model");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_14 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("attribute");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_15 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("reference");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_16 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("property");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_17 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getConstraint().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__STEREOTYPE), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_18 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("operation");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_19 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getParameter().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__NAME), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_20 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_ORDERED), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_21 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_UNIQUE), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_22 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("MultiplicityElement");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_23 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getTypeReference().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_REFERENCE__TYPE), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_24 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getUsing().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.USING__QUALIFIED_NAME), "QUALIFIEDNAME");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_25 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getUsing().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.USING__QUALIFIED_NAME), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_26 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getRequire().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.REQUIRE__URI), "STRING_LITERAL");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_27 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPackage().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NESTING_PACKAGE), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_28 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPackage().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_29 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_30 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_31 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_32 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_33 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_34 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__NAME), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_35 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("inherits");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_36 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_37 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_38 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_39 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_40 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_41 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProperty().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_42 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_43 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProperty().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_44 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProperty().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_45 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_46 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("do");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_47 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("raise");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_48 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getBooleanLiteral().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.BOOLEAN_LITERAL__VALUE), "BOOLEAN");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_49 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getIntegerLiteral().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.INTEGER_LITERAL__VALUE), "INTEGER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_50 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getStringLiteral().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.STRING_LITERAL__VALUE), "STRING_LITERAL");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_51 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("if");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_52 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("from");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_53 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("var");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_54 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("result");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_55 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("super(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_56 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_57 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallVariable().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VARIABLE__NAME), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_58 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("JavaStaticCall");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_59 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("self");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_60 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_61 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("CallValue");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_62 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("EmptyExpression");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_63 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("LambdaExpression");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_64 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Void");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_65 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProperty().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_66 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getOperation().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__NAME), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_67 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_68 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_69 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_70 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_71 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getOperation().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_72 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_73 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getOperation().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_74 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_75 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("is");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_76 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getOperation().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_77 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("abstract");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_78 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_79 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getParameter().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__TYPE), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_80 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getClass_().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS__TYPE_DEFINITION), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_81 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_82 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_83 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_84 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("variable");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_85 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("type");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_86 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_87 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_88 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_89 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_90 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_91 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("type");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_92 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("lower");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_93 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("upper");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_94 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_95 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_96 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_97 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_98 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_99 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_100 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("instanceType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_101 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_102 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_103 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_104 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_105 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_106 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_107 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("supertype");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_108 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_109 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_110 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_111 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_112 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_113 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_114 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("supertype");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_115 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("virtualType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_116 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_117 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_118 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_119 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_120 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_121 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_122 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("supertype");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_123 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("classDefinition");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_124 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("modelType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_125 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeParamBinding");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_126 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_127 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_128 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_129 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_130 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_131 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("type");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_132 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_133 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_134 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_135 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_136 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_137 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("left");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_138 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("right");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_139 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_140 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_141 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_142 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_143 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("staticType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_144 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("parameters");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_145 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_146 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("staticTypeVariableBindings");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_147 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_148 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_149 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_150 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_151 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("staticType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_152 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_153 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_154 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_155 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_156 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("staticType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_157 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("parameters");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_158 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("jclass");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_159 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("jmethod");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_160 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_161 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_162 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_163 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_164 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("staticType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_165 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("parameters");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_166 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("body");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_167 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_168 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getEnumeration().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION__NAME), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_169 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_170 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getEnumerationLiteral().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION_LITERAL__NAME), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_171 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(";");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_172 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_173 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(";");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_174 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getConstraint().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__LANGUAGE), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_175 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Object");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_176 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_177 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_178 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_179 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_180 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_181 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObject().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT__TAG), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_182 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_183 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_184 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_185 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_186 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_187 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_188 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_189 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModel().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL__TAG), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_190 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_191 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_192 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_193 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_194 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_195 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_196 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("includedTypeDefinition");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_197 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_198 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_199 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TAG), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_200 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_201 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_202 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TYPE_CONTAINER), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_203 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_204 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__NAME), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_205 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_206 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__INCLUDED_TYPE_DEFINITION), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_207 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("TypeVariableBinding");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_208 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_209 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_210 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeVariableBinding().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TAG), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_211 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_212 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_213 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ObjectTypeVariable");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_214 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ModelTypeVariable");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_215 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("VirtualType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_216 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ProductType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_217 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("FunctionType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_218 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("VoidType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_219 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_220 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeVariableBinding().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__VARIABLE), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_221 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_222 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeVariableBinding().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TYPE), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_223 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_224 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_225 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TAG), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_226 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_227 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_228 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_229 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__NAME), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_230 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_231 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TYPE), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_232 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_233 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__LOWER), "INTEGER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_234 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_235 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__UPPER), "INTEGER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_236 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_237 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_238 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_239 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_240 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_241 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_242 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__TAG), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_243 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_244 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_245 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__NAME), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_246 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_247 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_248 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPrimitiveType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__TAG), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_249 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_250 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_251 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPrimitiveType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__TYPE_CONTAINER), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_252 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_253 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPrimitiveType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__NAME), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_254 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_255 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_256 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPrimitiveType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__INSTANCE_TYPE), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_257 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_258 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_259 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_260 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_261 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("value");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_262 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("object");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_263 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_264 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_265 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTag().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__TAG), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_266 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_267 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_268 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTag().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__NAME), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_269 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_270 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTag().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__VALUE), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_271 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_272 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTag().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__OBJECT), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_273 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_274 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_275 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_276 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_277 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_278 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_279 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_280 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("type");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_281 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_282 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_283 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_284 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObjectTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TAG), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_285 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_286 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_287 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_288 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObjectTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TYPE_CONTAINER), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_289 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_290 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObjectTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__NAME), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_291 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_292 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObjectTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__SUPERTYPE), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_293 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_294 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_295 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TAG), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_296 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_297 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_298 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_299 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TYPE_CONTAINER), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_300 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_301 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__NAME), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_302 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_303 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__SUPERTYPE), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_304 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_305 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_306 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_307 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TAG), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_308 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_309 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_310 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_311 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_CONTAINER), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_312 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_313 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__NAME), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_314 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_315 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__SUPERTYPE), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_316 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_317 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CLASS_DEFINITION), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_318 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_319 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__MODEL_TYPE), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_320 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_321 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_322 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_323 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProductType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TAG), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_324 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_325 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_326 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_327 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProductType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE_CONTAINER), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_328 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_329 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProductType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_330 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_331 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_332 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getFunctionType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TAG), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_333 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_334 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_335 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_336 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getFunctionType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TYPE_CONTAINER), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_337 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_338 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getFunctionType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__LEFT), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_339 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_340 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getFunctionType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__RIGHT), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_341 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_342 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_343 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVoidType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VOID_TYPE__TAG), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_344 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_345 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_346 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVoidType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VOID_TYPE__TYPE_CONTAINER), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_347 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("rescue");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_348 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("end");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_349 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("until");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_350 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("else");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_351 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("end");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_352 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_353 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_354 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_355 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_356 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_357 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getRescue().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RESCUE__EXCEPTION_NAME), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_358 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_359 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_360 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("init");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_361 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("then");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_362 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("loop");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_363 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getVariableDecl().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__IDENTIFIER), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_364 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_365 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":=");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_366 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getAssignment().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__IS_CAST), "CASTED");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_367 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("=");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_368 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_369 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_370 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_371 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_372 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("==");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_373 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_374 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_375 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_376 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_377 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_378 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_379 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_380 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_381 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_382 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_383 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("==");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_384 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_385 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_386 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_387 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_388 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_389 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_390 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_391 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_392 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_393 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_394 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_395 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("+");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_396 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("-");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_397 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("/");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_398 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("*");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_399 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_400 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_401 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_402 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_403 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_404 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_405 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_406 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_407 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_408 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_409 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_410 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("+");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_411 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("-");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_412 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("/");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_413 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("*");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_414 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_415 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_416 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_417 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_418 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_419 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_420 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_421 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_422 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("+");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_423 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("-");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_424 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("/");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_425 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("*");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_426 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_427 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_428 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallValue().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__TAG), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_429 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_430 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_431 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_432 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallValue().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__STATIC_TYPE), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_433 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_434 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_435 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallValue().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__NAME), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_436 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_437 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallValue().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__STATIC_TYPE_VARIABLE_BINDINGS), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_438 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_439 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_440 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getEmptyExpression().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__TAG), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_441 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_442 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_443 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_444 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getEmptyExpression().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__STATIC_TYPE), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_445 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_446 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_447 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getJavaStaticCall().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__TAG), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_448 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_449 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_450 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_451 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getJavaStaticCall().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__STATIC_TYPE), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_452 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_453 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_454 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getJavaStaticCall().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JCLASS), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_455 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_456 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getJavaStaticCall().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JMETHOD), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_457 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_458 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_459 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getLambdaExpression().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__TAG), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_460 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_461 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_462 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_463 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getLambdaExpression().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__STATIC_TYPE), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_464 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_465 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("LambdaParameter");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_466 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_467 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_468 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_469 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getLambdaParameter().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TAG), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_470 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_471 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_472 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getLambdaParameter().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__NAME), "STRING");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_473 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	
    	public static void wire0() {
    		TERMINAL_1.addFollower(TERMINAL_24);
    		TERMINAL_1.addFollower(TERMINAL_25);
    		TERMINAL_24.addFollower(TERMINAL_1);
    		TERMINAL_24.addFollower(TERMINAL_2);
    		TERMINAL_24.addFollower(TERMINAL_3);
    		TERMINAL_24.addFollower(TERMINAL_4);
    		TERMINAL_24.addFollower(TERMINAL_5);
    		TERMINAL_24.addFollower(TERMINAL_6);
    		TERMINAL_24.addFollower(TERMINAL_7);
    		TERMINAL_24.addFollower(TERMINAL_8);
    		TERMINAL_24.addFollower(TERMINAL_9);
    		TERMINAL_24.addFollower(TERMINAL_10);
    		TERMINAL_24.addFollower(TERMINAL_11);
    		TERMINAL_24.addFollower(TERMINAL_12);
    		TERMINAL_25.addFollower(TERMINAL_1);
    		TERMINAL_25.addFollower(TERMINAL_2);
    		TERMINAL_25.addFollower(TERMINAL_3);
    		TERMINAL_25.addFollower(TERMINAL_4);
    		TERMINAL_25.addFollower(TERMINAL_5);
    		TERMINAL_25.addFollower(TERMINAL_6);
    		TERMINAL_25.addFollower(TERMINAL_7);
    		TERMINAL_25.addFollower(TERMINAL_8);
    		TERMINAL_25.addFollower(TERMINAL_9);
    		TERMINAL_25.addFollower(TERMINAL_10);
    		TERMINAL_25.addFollower(TERMINAL_11);
    		TERMINAL_25.addFollower(TERMINAL_12);
    		TERMINAL_0.addFollower(TERMINAL_26);
    		TERMINAL_26.addFollower(TERMINAL_0);
    		TERMINAL_26.addFollower(TERMINAL_1);
    		TERMINAL_26.addFollower(TERMINAL_2);
    		TERMINAL_26.addFollower(TERMINAL_3);
    		TERMINAL_26.addFollower(TERMINAL_4);
    		TERMINAL_26.addFollower(TERMINAL_5);
    		TERMINAL_26.addFollower(TERMINAL_6);
    		TERMINAL_26.addFollower(TERMINAL_7);
    		TERMINAL_26.addFollower(TERMINAL_8);
    		TERMINAL_26.addFollower(TERMINAL_9);
    		TERMINAL_26.addFollower(TERMINAL_10);
    		TERMINAL_26.addFollower(TERMINAL_11);
    		TERMINAL_26.addFollower(TERMINAL_12);
    		TERMINAL_2.addFollower(TERMINAL_27);
    		TERMINAL_2.addFollower(TERMINAL_28);
    		TERMINAL_27.addFollower(TERMINAL_29);
    		TERMINAL_29.addFollower(TERMINAL_27);
    		TERMINAL_29.addFollower(TERMINAL_28);
    		TERMINAL_28.addFollower(TERMINAL_3);
    		TERMINAL_28.addFollower(TERMINAL_4);
    		TERMINAL_28.addFollower(TERMINAL_5);
    		TERMINAL_28.addFollower(TERMINAL_6);
    		TERMINAL_28.addFollower(TERMINAL_7);
    		TERMINAL_28.addFollower(TERMINAL_8);
    		TERMINAL_28.addFollower(TERMINAL_9);
    		TERMINAL_28.addFollower(TERMINAL_10);
    		TERMINAL_28.addFollower(TERMINAL_11);
    		TERMINAL_28.addFollower(TERMINAL_12);
    		TERMINAL_28.addFollower(TERMINAL_30);
    		TERMINAL_28.addFollower(TERMINAL_31);
    		TERMINAL_28.addFollower(TERMINAL_2);
    		TERMINAL_28.addFollower(TERMINAL_32);
    		TERMINAL_30.addFollower(TERMINAL_2);
    		TERMINAL_30.addFollower(TERMINAL_3);
    		TERMINAL_30.addFollower(TERMINAL_4);
    		TERMINAL_30.addFollower(TERMINAL_5);
    		TERMINAL_30.addFollower(TERMINAL_6);
    		TERMINAL_30.addFollower(TERMINAL_7);
    		TERMINAL_30.addFollower(TERMINAL_8);
    		TERMINAL_30.addFollower(TERMINAL_9);
    		TERMINAL_30.addFollower(TERMINAL_10);
    		TERMINAL_30.addFollower(TERMINAL_11);
    		TERMINAL_30.addFollower(TERMINAL_12);
    		TERMINAL_30.addFollower(TERMINAL_32);
    		TERMINAL_32.addFollower(TERMINAL_2);
    		TERMINAL_32.addFollower(TERMINAL_3);
    		TERMINAL_32.addFollower(TERMINAL_4);
    		TERMINAL_32.addFollower(TERMINAL_5);
    		TERMINAL_32.addFollower(TERMINAL_6);
    		TERMINAL_32.addFollower(TERMINAL_7);
    		TERMINAL_32.addFollower(TERMINAL_8);
    		TERMINAL_32.addFollower(TERMINAL_9);
    		TERMINAL_32.addFollower(TERMINAL_10);
    		TERMINAL_32.addFollower(TERMINAL_11);
    		TERMINAL_32.addFollower(TERMINAL_12);
    		TERMINAL_32.addFollower(TERMINAL_32);
    		TERMINAL_31.addFollower(TERMINAL_3);
    		TERMINAL_31.addFollower(TERMINAL_4);
    		TERMINAL_31.addFollower(TERMINAL_5);
    		TERMINAL_31.addFollower(TERMINAL_6);
    		TERMINAL_31.addFollower(TERMINAL_7);
    		TERMINAL_31.addFollower(TERMINAL_8);
    		TERMINAL_31.addFollower(TERMINAL_9);
    		TERMINAL_31.addFollower(TERMINAL_10);
    		TERMINAL_31.addFollower(TERMINAL_11);
    		TERMINAL_31.addFollower(TERMINAL_12);
    		TERMINAL_33.addFollower(TERMINAL_2);
    		TERMINAL_33.addFollower(TERMINAL_3);
    		TERMINAL_33.addFollower(TERMINAL_4);
    		TERMINAL_33.addFollower(TERMINAL_5);
    		TERMINAL_33.addFollower(TERMINAL_6);
    		TERMINAL_33.addFollower(TERMINAL_7);
    		TERMINAL_33.addFollower(TERMINAL_8);
    		TERMINAL_33.addFollower(TERMINAL_9);
    		TERMINAL_33.addFollower(TERMINAL_10);
    		TERMINAL_33.addFollower(TERMINAL_11);
    		TERMINAL_33.addFollower(TERMINAL_12);
    		TERMINAL_33.addFollower(TERMINAL_32);
    		TERMINAL_3.addFollower(TERMINAL_4);
    		TERMINAL_3.addFollower(TERMINAL_5);
    		TERMINAL_4.addFollower(TERMINAL_5);
    		TERMINAL_5.addFollower(TERMINAL_34);
    		TERMINAL_34.addFollower(TERMINAL_35);
    		TERMINAL_34.addFollower(TERMINAL_36);
    		TERMINAL_35.addFollower(TERMINAL_37);
    		TERMINAL_37.addFollower(TERMINAL_38);
    		TERMINAL_37.addFollower(TERMINAL_36);
    		TERMINAL_38.addFollower(TERMINAL_39);
    		TERMINAL_39.addFollower(TERMINAL_38);
    		TERMINAL_39.addFollower(TERMINAL_36);
    		TERMINAL_36.addFollower(TERMINAL_17);
    		TERMINAL_36.addFollower(TERMINAL_14);
    		TERMINAL_36.addFollower(TERMINAL_15);
    		TERMINAL_36.addFollower(TERMINAL_16);
    		TERMINAL_36.addFollower(TERMINAL_18);
    		TERMINAL_36.addFollower(TERMINAL_40);
    		TERMINAL_40.addFollower(TERMINAL_3);
    		TERMINAL_40.addFollower(TERMINAL_4);
    		TERMINAL_40.addFollower(TERMINAL_5);
    		TERMINAL_40.addFollower(TERMINAL_6);
    		TERMINAL_40.addFollower(TERMINAL_7);
    		TERMINAL_40.addFollower(TERMINAL_8);
    		TERMINAL_40.addFollower(TERMINAL_9);
    		TERMINAL_40.addFollower(TERMINAL_10);
    		TERMINAL_40.addFollower(TERMINAL_11);
    		TERMINAL_40.addFollower(TERMINAL_12);
    		TERMINAL_40.addFollower(TERMINAL_2);
    		TERMINAL_14.addFollower(TERMINAL_41);
    		TERMINAL_15.addFollower(TERMINAL_41);
    		TERMINAL_41.addFollower(TERMINAL_42);
    		TERMINAL_41.addFollower(TERMINAL_14);
    		TERMINAL_41.addFollower(TERMINAL_15);
    		TERMINAL_41.addFollower(TERMINAL_16);
    		TERMINAL_41.addFollower(TERMINAL_17);
    		TERMINAL_41.addFollower(TERMINAL_18);
    		TERMINAL_41.addFollower(TERMINAL_40);
    		TERMINAL_42.addFollower(TERMINAL_43);
    		TERMINAL_43.addFollower(TERMINAL_14);
    		TERMINAL_43.addFollower(TERMINAL_15);
    		TERMINAL_43.addFollower(TERMINAL_16);
    		TERMINAL_43.addFollower(TERMINAL_17);
    		TERMINAL_43.addFollower(TERMINAL_18);
    		TERMINAL_43.addFollower(TERMINAL_40);
    		TERMINAL_16.addFollower(TERMINAL_44);
    		TERMINAL_44.addFollower(TERMINAL_45);
    		TERMINAL_44.addFollower(TERMINAL_46);
    		TERMINAL_44.addFollower(TERMINAL_47);
    		TERMINAL_44.addFollower(TERMINAL_48);
    		TERMINAL_44.addFollower(TERMINAL_49);
    		TERMINAL_44.addFollower(TERMINAL_50);
    		TERMINAL_44.addFollower(TERMINAL_51);
    		TERMINAL_44.addFollower(TERMINAL_52);
    		TERMINAL_44.addFollower(TERMINAL_53);
    		TERMINAL_44.addFollower(TERMINAL_23);
    		TERMINAL_44.addFollower(TERMINAL_54);
    		TERMINAL_44.addFollower(TERMINAL_55);
    		TERMINAL_44.addFollower(TERMINAL_56);
    		TERMINAL_44.addFollower(TERMINAL_57);
    		TERMINAL_44.addFollower(TERMINAL_58);
    		TERMINAL_44.addFollower(TERMINAL_59);
    		TERMINAL_44.addFollower(TERMINAL_60);
    		TERMINAL_44.addFollower(TERMINAL_61);
    		TERMINAL_44.addFollower(TERMINAL_62);
    		TERMINAL_44.addFollower(TERMINAL_63);
    		TERMINAL_44.addFollower(TERMINAL_64);
    		TERMINAL_45.addFollower(TERMINAL_65);
    		TERMINAL_65.addFollower(TERMINAL_46);
    		TERMINAL_65.addFollower(TERMINAL_47);
    		TERMINAL_65.addFollower(TERMINAL_48);
    		TERMINAL_65.addFollower(TERMINAL_49);
    		TERMINAL_65.addFollower(TERMINAL_50);
    		TERMINAL_65.addFollower(TERMINAL_51);
    		TERMINAL_65.addFollower(TERMINAL_52);
    		TERMINAL_65.addFollower(TERMINAL_53);
    		TERMINAL_65.addFollower(TERMINAL_23);
    		TERMINAL_65.addFollower(TERMINAL_54);
    		TERMINAL_65.addFollower(TERMINAL_55);
    		TERMINAL_65.addFollower(TERMINAL_56);
    		TERMINAL_65.addFollower(TERMINAL_57);
    		TERMINAL_65.addFollower(TERMINAL_58);
    		TERMINAL_65.addFollower(TERMINAL_59);
    		TERMINAL_65.addFollower(TERMINAL_60);
    		TERMINAL_65.addFollower(TERMINAL_61);
    		TERMINAL_65.addFollower(TERMINAL_62);
    		TERMINAL_65.addFollower(TERMINAL_63);
    		TERMINAL_65.addFollower(TERMINAL_64);
    		TERMINAL_18.addFollower(TERMINAL_66);
    		TERMINAL_66.addFollower(TERMINAL_67);
    		TERMINAL_67.addFollower(TERMINAL_19);
    		TERMINAL_67.addFollower(TERMINAL_68);
    		TERMINAL_69.addFollower(TERMINAL_71);
    		TERMINAL_71.addFollower(TERMINAL_70);
    		TERMINAL_71.addFollower(TERMINAL_68);
    		TERMINAL_70.addFollower(TERMINAL_19);
    		TERMINAL_72.addFollower(TERMINAL_73);
    		TERMINAL_73.addFollower(TERMINAL_70);
    		TERMINAL_73.addFollower(TERMINAL_68);
    		TERMINAL_68.addFollower(TERMINAL_74);
    		TERMINAL_68.addFollower(TERMINAL_75);
    		TERMINAL_74.addFollower(TERMINAL_76);
    		TERMINAL_76.addFollower(TERMINAL_75);
    		TERMINAL_75.addFollower(TERMINAL_46);
    		TERMINAL_75.addFollower(TERMINAL_77);
    		TERMINAL_77.addFollower(TERMINAL_17);
    		TERMINAL_77.addFollower(TERMINAL_18);
    		TERMINAL_77.addFollower(TERMINAL_40);
    		TERMINAL_19.addFollower(TERMINAL_78);
    		TERMINAL_78.addFollower(TERMINAL_79);
    		TERMINAL_79.addFollower(TERMINAL_69);
    		TERMINAL_79.addFollower(TERMINAL_70);
    		TERMINAL_79.addFollower(TERMINAL_68);
    		TERMINAL_80.addFollower(TERMINAL_81);
    		TERMINAL_80.addFollower(TERMINAL_82);
    		TERMINAL_80.addFollower(TERMINAL_83);
    		TERMINAL_80.addFollower(TERMINAL_84);
    		TERMINAL_80.addFollower(TERMINAL_85);
    		TERMINAL_80.addFollower(TERMINAL_86);
    		TERMINAL_80.addFollower(TERMINAL_87);
    		TERMINAL_80.addFollower(TERMINAL_88);
    		TERMINAL_80.addFollower(TERMINAL_89);
    		TERMINAL_80.addFollower(TERMINAL_90);
    		TERMINAL_80.addFollower(TERMINAL_91);
    		TERMINAL_80.addFollower(TERMINAL_92);
    		TERMINAL_80.addFollower(TERMINAL_93);
    		TERMINAL_80.addFollower(TERMINAL_94);
    		TERMINAL_80.addFollower(TERMINAL_95);
    		TERMINAL_80.addFollower(TERMINAL_96);
    		TERMINAL_80.addFollower(TERMINAL_97);
    		TERMINAL_80.addFollower(TERMINAL_98);
    		TERMINAL_80.addFollower(TERMINAL_99);
    		TERMINAL_80.addFollower(TERMINAL_100);
    		TERMINAL_80.addFollower(TERMINAL_101);
    		TERMINAL_80.addFollower(TERMINAL_102);
    		TERMINAL_80.addFollower(TERMINAL_103);
    		TERMINAL_80.addFollower(TERMINAL_104);
    		TERMINAL_80.addFollower(TERMINAL_105);
    		TERMINAL_80.addFollower(TERMINAL_106);
    		TERMINAL_80.addFollower(TERMINAL_107);
    		TERMINAL_80.addFollower(TERMINAL_108);
    		TERMINAL_80.addFollower(TERMINAL_109);
    		TERMINAL_80.addFollower(TERMINAL_110);
    		TERMINAL_80.addFollower(TERMINAL_111);
    		TERMINAL_80.addFollower(TERMINAL_112);
    		TERMINAL_80.addFollower(TERMINAL_113);
    		TERMINAL_80.addFollower(TERMINAL_114);
    		TERMINAL_80.addFollower(TERMINAL_115);
    		TERMINAL_80.addFollower(TERMINAL_116);
    		TERMINAL_80.addFollower(TERMINAL_117);
    		TERMINAL_80.addFollower(TERMINAL_118);
    		TERMINAL_80.addFollower(TERMINAL_119);
    		TERMINAL_80.addFollower(TERMINAL_120);
    		TERMINAL_80.addFollower(TERMINAL_121);
    		TERMINAL_80.addFollower(TERMINAL_122);
    		TERMINAL_80.addFollower(TERMINAL_123);
    		TERMINAL_80.addFollower(TERMINAL_124);
    		TERMINAL_80.addFollower(TERMINAL_125);
    		TERMINAL_80.addFollower(TERMINAL_126);
    		TERMINAL_80.addFollower(TERMINAL_127);
    		TERMINAL_80.addFollower(TERMINAL_128);
    		TERMINAL_80.addFollower(TERMINAL_129);
    		TERMINAL_80.addFollower(TERMINAL_130);
    		TERMINAL_80.addFollower(TERMINAL_131);
    		TERMINAL_80.addFollower(TERMINAL_132);
    		TERMINAL_80.addFollower(TERMINAL_133);
    		TERMINAL_80.addFollower(TERMINAL_134);
    		TERMINAL_80.addFollower(TERMINAL_135);
    		TERMINAL_80.addFollower(TERMINAL_136);
    		TERMINAL_80.addFollower(TERMINAL_137);
    		TERMINAL_80.addFollower(TERMINAL_138);
    		TERMINAL_80.addFollower(TERMINAL_139);
    		TERMINAL_80.addFollower(TERMINAL_140);
    		TERMINAL_80.addFollower(TERMINAL_141);
    		TERMINAL_80.addFollower(TERMINAL_142);
    		TERMINAL_80.addFollower(TERMINAL_143);
    		TERMINAL_80.addFollower(TERMINAL_144);
    		TERMINAL_80.addFollower(TERMINAL_145);
    		TERMINAL_80.addFollower(TERMINAL_146);
    		TERMINAL_80.addFollower(TERMINAL_147);
    		TERMINAL_80.addFollower(TERMINAL_148);
    		TERMINAL_80.addFollower(TERMINAL_149);
    		TERMINAL_80.addFollower(TERMINAL_150);
    		TERMINAL_80.addFollower(TERMINAL_151);
    		TERMINAL_80.addFollower(TERMINAL_152);
    		TERMINAL_80.addFollower(TERMINAL_153);
    		TERMINAL_80.addFollower(TERMINAL_154);
    		TERMINAL_80.addFollower(TERMINAL_155);
    		TERMINAL_80.addFollower(TERMINAL_156);
    		TERMINAL_80.addFollower(TERMINAL_157);
    		TERMINAL_80.addFollower(TERMINAL_158);
    		TERMINAL_80.addFollower(TERMINAL_159);
    		TERMINAL_80.addFollower(TERMINAL_160);
    		TERMINAL_80.addFollower(TERMINAL_161);
    		TERMINAL_80.addFollower(TERMINAL_162);
    		TERMINAL_80.addFollower(TERMINAL_163);
    		TERMINAL_80.addFollower(TERMINAL_164);
    		TERMINAL_80.addFollower(TERMINAL_165);
    		TERMINAL_80.addFollower(TERMINAL_166);
    		TERMINAL_80.addFollower(TERMINAL_167);
    		TERMINAL_6.addFollower(TERMINAL_168);
    		TERMINAL_168.addFollower(TERMINAL_169);
    		TERMINAL_169.addFollower(TERMINAL_170);
    		TERMINAL_171.addFollower(TERMINAL_170);
    		TERMINAL_171.addFollower(TERMINAL_172);
    		TERMINAL_173.addFollower(TERMINAL_170);
    		TERMINAL_173.addFollower(TERMINAL_172);
    		TERMINAL_172.addFollower(TERMINAL_3);
    		TERMINAL_172.addFollower(TERMINAL_4);
    		TERMINAL_172.addFollower(TERMINAL_5);
    		TERMINAL_172.addFollower(TERMINAL_6);
    		TERMINAL_172.addFollower(TERMINAL_7);
    		TERMINAL_172.addFollower(TERMINAL_8);
    		TERMINAL_172.addFollower(TERMINAL_9);
    		TERMINAL_172.addFollower(TERMINAL_10);
    		TERMINAL_172.addFollower(TERMINAL_11);
    		TERMINAL_172.addFollower(TERMINAL_12);
    		TERMINAL_172.addFollower(TERMINAL_2);
    		TERMINAL_172.addFollower(TERMINAL_81);
    		TERMINAL_172.addFollower(TERMINAL_82);
    		TERMINAL_172.addFollower(TERMINAL_83);
    		TERMINAL_172.addFollower(TERMINAL_84);
    		TERMINAL_172.addFollower(TERMINAL_85);
    		TERMINAL_172.addFollower(TERMINAL_86);
    		TERMINAL_172.addFollower(TERMINAL_87);
    		TERMINAL_172.addFollower(TERMINAL_88);
    		TERMINAL_172.addFollower(TERMINAL_89);
    		TERMINAL_172.addFollower(TERMINAL_90);
    		TERMINAL_172.addFollower(TERMINAL_91);
    		TERMINAL_172.addFollower(TERMINAL_92);
    		TERMINAL_172.addFollower(TERMINAL_93);
    		TERMINAL_172.addFollower(TERMINAL_94);
    		TERMINAL_172.addFollower(TERMINAL_95);
    		TERMINAL_172.addFollower(TERMINAL_96);
    		TERMINAL_172.addFollower(TERMINAL_97);
    		TERMINAL_172.addFollower(TERMINAL_98);
    		TERMINAL_172.addFollower(TERMINAL_99);
    		TERMINAL_172.addFollower(TERMINAL_100);
    		TERMINAL_172.addFollower(TERMINAL_101);
    		TERMINAL_172.addFollower(TERMINAL_102);
    		TERMINAL_172.addFollower(TERMINAL_103);
    		TERMINAL_172.addFollower(TERMINAL_104);
    		TERMINAL_172.addFollower(TERMINAL_105);
    		TERMINAL_172.addFollower(TERMINAL_106);
    		TERMINAL_172.addFollower(TERMINAL_107);
    		TERMINAL_172.addFollower(TERMINAL_108);
    		TERMINAL_172.addFollower(TERMINAL_109);
    		TERMINAL_172.addFollower(TERMINAL_110);
    		TERMINAL_172.addFollower(TERMINAL_111);
    		TERMINAL_172.addFollower(TERMINAL_112);
    		TERMINAL_172.addFollower(TERMINAL_113);
    		TERMINAL_172.addFollower(TERMINAL_114);
    		TERMINAL_172.addFollower(TERMINAL_115);
    		TERMINAL_172.addFollower(TERMINAL_116);
    		TERMINAL_172.addFollower(TERMINAL_117);
    		TERMINAL_172.addFollower(TERMINAL_118);
    		TERMINAL_172.addFollower(TERMINAL_119);
    		TERMINAL_172.addFollower(TERMINAL_120);
    		TERMINAL_172.addFollower(TERMINAL_121);
    		TERMINAL_172.addFollower(TERMINAL_122);
    		TERMINAL_172.addFollower(TERMINAL_123);
    		TERMINAL_172.addFollower(TERMINAL_124);
    		TERMINAL_172.addFollower(TERMINAL_125);
    		TERMINAL_172.addFollower(TERMINAL_126);
    		TERMINAL_172.addFollower(TERMINAL_127);
    		TERMINAL_172.addFollower(TERMINAL_128);
    		TERMINAL_172.addFollower(TERMINAL_129);
    		TERMINAL_172.addFollower(TERMINAL_130);
    		TERMINAL_172.addFollower(TERMINAL_131);
    		TERMINAL_172.addFollower(TERMINAL_132);
    		TERMINAL_172.addFollower(TERMINAL_133);
    		TERMINAL_172.addFollower(TERMINAL_134);
    		TERMINAL_172.addFollower(TERMINAL_135);
    		TERMINAL_172.addFollower(TERMINAL_136);
    		TERMINAL_172.addFollower(TERMINAL_137);
    		TERMINAL_172.addFollower(TERMINAL_138);
    		TERMINAL_172.addFollower(TERMINAL_139);
    		TERMINAL_172.addFollower(TERMINAL_140);
    		TERMINAL_172.addFollower(TERMINAL_141);
    		TERMINAL_172.addFollower(TERMINAL_142);
    		TERMINAL_172.addFollower(TERMINAL_143);
    		TERMINAL_172.addFollower(TERMINAL_144);
    		TERMINAL_172.addFollower(TERMINAL_145);
    		TERMINAL_172.addFollower(TERMINAL_146);
    		TERMINAL_172.addFollower(TERMINAL_147);
    		TERMINAL_172.addFollower(TERMINAL_148);
    		TERMINAL_172.addFollower(TERMINAL_149);
    		TERMINAL_172.addFollower(TERMINAL_150);
    		TERMINAL_172.addFollower(TERMINAL_151);
    		TERMINAL_172.addFollower(TERMINAL_152);
    		TERMINAL_172.addFollower(TERMINAL_153);
    		TERMINAL_172.addFollower(TERMINAL_154);
    		TERMINAL_172.addFollower(TERMINAL_155);
    		TERMINAL_172.addFollower(TERMINAL_156);
    		TERMINAL_172.addFollower(TERMINAL_157);
    		TERMINAL_172.addFollower(TERMINAL_158);
    		TERMINAL_172.addFollower(TERMINAL_159);
    		TERMINAL_172.addFollower(TERMINAL_160);
    		TERMINAL_172.addFollower(TERMINAL_161);
    		TERMINAL_172.addFollower(TERMINAL_162);
    		TERMINAL_172.addFollower(TERMINAL_163);
    		TERMINAL_172.addFollower(TERMINAL_164);
    		TERMINAL_172.addFollower(TERMINAL_165);
    		TERMINAL_172.addFollower(TERMINAL_166);
    		TERMINAL_172.addFollower(TERMINAL_167);
    		TERMINAL_170.addFollower(TERMINAL_171);
    		TERMINAL_17.addFollower(TERMINAL_174);
    		TERMINAL_174.addFollower(TERMINAL_17);
    		TERMINAL_174.addFollower(TERMINAL_14);
    		TERMINAL_174.addFollower(TERMINAL_15);
    		TERMINAL_174.addFollower(TERMINAL_16);
    		TERMINAL_174.addFollower(TERMINAL_18);
    		TERMINAL_174.addFollower(TERMINAL_40);
    		TERMINAL_175.addFollower(TERMINAL_176);
    		TERMINAL_176.addFollower(TERMINAL_177);
    		TERMINAL_176.addFollower(TERMINAL_178);
    		TERMINAL_176.addFollower(TERMINAL_179);
    		TERMINAL_177.addFollower(TERMINAL_180);
    		TERMINAL_180.addFollower(TERMINAL_181);
    		TERMINAL_181.addFollower(TERMINAL_177);
    		TERMINAL_181.addFollower(TERMINAL_178);
    		TERMINAL_181.addFollower(TERMINAL_179);
    		TERMINAL_178.addFollower(TERMINAL_182);
    		TERMINAL_182.addFollower(TERMINAL_183);
    		TERMINAL_13.addFollower(TERMINAL_184);
    		TERMINAL_184.addFollower(TERMINAL_185);
    		TERMINAL_184.addFollower(TERMINAL_186);
    		TERMINAL_184.addFollower(TERMINAL_187);
    		TERMINAL_185.addFollower(TERMINAL_188);
    		TERMINAL_188.addFollower(TERMINAL_189);
    		TERMINAL_189.addFollower(TERMINAL_185);
    		TERMINAL_189.addFollower(TERMINAL_186);
    		TERMINAL_189.addFollower(TERMINAL_187);
    		TERMINAL_186.addFollower(TERMINAL_190);
    		TERMINAL_190.addFollower(TERMINAL_183);
    		TERMINAL_7.addFollower(TERMINAL_8);
    		TERMINAL_8.addFollower(TERMINAL_191);
    		TERMINAL_191.addFollower(TERMINAL_192);
    		TERMINAL_191.addFollower(TERMINAL_193);
    		TERMINAL_191.addFollower(TERMINAL_194);
    		TERMINAL_191.addFollower(TERMINAL_195);
    		TERMINAL_191.addFollower(TERMINAL_196);
    		TERMINAL_191.addFollower(TERMINAL_197);
    		TERMINAL_192.addFollower(TERMINAL_198);
    		TERMINAL_198.addFollower(TERMINAL_199);
    		TERMINAL_199.addFollower(TERMINAL_192);
    		TERMINAL_199.addFollower(TERMINAL_193);
    		TERMINAL_199.addFollower(TERMINAL_194);
    		TERMINAL_199.addFollower(TERMINAL_195);
    		TERMINAL_199.addFollower(TERMINAL_196);
    		TERMINAL_199.addFollower(TERMINAL_197);
    		TERMINAL_193.addFollower(TERMINAL_200);
    		TERMINAL_200.addFollower(TERMINAL_183);
    		TERMINAL_194.addFollower(TERMINAL_201);
    		TERMINAL_201.addFollower(TERMINAL_202);
    		TERMINAL_202.addFollower(TERMINAL_192);
    		TERMINAL_202.addFollower(TERMINAL_193);
    		TERMINAL_202.addFollower(TERMINAL_194);
    		TERMINAL_202.addFollower(TERMINAL_195);
    		TERMINAL_202.addFollower(TERMINAL_196);
    		TERMINAL_202.addFollower(TERMINAL_197);
    		TERMINAL_195.addFollower(TERMINAL_203);
    		TERMINAL_203.addFollower(TERMINAL_204);
    		TERMINAL_204.addFollower(TERMINAL_192);
    		TERMINAL_204.addFollower(TERMINAL_193);
    		TERMINAL_204.addFollower(TERMINAL_194);
    		TERMINAL_204.addFollower(TERMINAL_195);
    		TERMINAL_204.addFollower(TERMINAL_196);
    		TERMINAL_204.addFollower(TERMINAL_197);
    		TERMINAL_196.addFollower(TERMINAL_205);
    		TERMINAL_205.addFollower(TERMINAL_206);
    		TERMINAL_206.addFollower(TERMINAL_192);
    		TERMINAL_206.addFollower(TERMINAL_193);
    		TERMINAL_206.addFollower(TERMINAL_194);
    		TERMINAL_206.addFollower(TERMINAL_195);
    		TERMINAL_206.addFollower(TERMINAL_196);
    		TERMINAL_206.addFollower(TERMINAL_197);
    		TERMINAL_197.addFollower(TERMINAL_3);
    		TERMINAL_197.addFollower(TERMINAL_4);
    		TERMINAL_197.addFollower(TERMINAL_5);
    		TERMINAL_197.addFollower(TERMINAL_6);
    		TERMINAL_197.addFollower(TERMINAL_7);
    		TERMINAL_197.addFollower(TERMINAL_8);
    		TERMINAL_197.addFollower(TERMINAL_9);
    		TERMINAL_197.addFollower(TERMINAL_10);
    		TERMINAL_197.addFollower(TERMINAL_11);
    		TERMINAL_197.addFollower(TERMINAL_12);
    		TERMINAL_197.addFollower(TERMINAL_2);
    		TERMINAL_197.addFollower(TERMINAL_81);
    		TERMINAL_197.addFollower(TERMINAL_82);
    		TERMINAL_197.addFollower(TERMINAL_83);
    		TERMINAL_197.addFollower(TERMINAL_84);
    		TERMINAL_197.addFollower(TERMINAL_85);
    		TERMINAL_197.addFollower(TERMINAL_86);
    		TERMINAL_197.addFollower(TERMINAL_87);
    		TERMINAL_197.addFollower(TERMINAL_88);
    		TERMINAL_197.addFollower(TERMINAL_89);
    		TERMINAL_197.addFollower(TERMINAL_90);
    		TERMINAL_197.addFollower(TERMINAL_91);
    		TERMINAL_197.addFollower(TERMINAL_92);
    		TERMINAL_197.addFollower(TERMINAL_93);
    		TERMINAL_197.addFollower(TERMINAL_94);
    		TERMINAL_197.addFollower(TERMINAL_95);
    		TERMINAL_197.addFollower(TERMINAL_96);
    		TERMINAL_197.addFollower(TERMINAL_97);
    		TERMINAL_197.addFollower(TERMINAL_98);
    		TERMINAL_197.addFollower(TERMINAL_99);
    		TERMINAL_197.addFollower(TERMINAL_100);
    		TERMINAL_197.addFollower(TERMINAL_101);
    		TERMINAL_197.addFollower(TERMINAL_102);
    		TERMINAL_197.addFollower(TERMINAL_103);
    		TERMINAL_197.addFollower(TERMINAL_104);
    		TERMINAL_197.addFollower(TERMINAL_105);
    		TERMINAL_197.addFollower(TERMINAL_106);
    		TERMINAL_197.addFollower(TERMINAL_107);
    		TERMINAL_197.addFollower(TERMINAL_108);
    		TERMINAL_197.addFollower(TERMINAL_109);
    		TERMINAL_197.addFollower(TERMINAL_110);
    		TERMINAL_197.addFollower(TERMINAL_111);
    		TERMINAL_197.addFollower(TERMINAL_112);
    		TERMINAL_197.addFollower(TERMINAL_113);
    		TERMINAL_197.addFollower(TERMINAL_114);
    		TERMINAL_197.addFollower(TERMINAL_115);
    		TERMINAL_197.addFollower(TERMINAL_116);
    		TERMINAL_197.addFollower(TERMINAL_117);
    		TERMINAL_197.addFollower(TERMINAL_118);
    		TERMINAL_197.addFollower(TERMINAL_119);
    		TERMINAL_197.addFollower(TERMINAL_120);
    		TERMINAL_197.addFollower(TERMINAL_121);
    		TERMINAL_197.addFollower(TERMINAL_122);
    		TERMINAL_197.addFollower(TERMINAL_123);
    		TERMINAL_197.addFollower(TERMINAL_124);
    		TERMINAL_197.addFollower(TERMINAL_125);
    		TERMINAL_197.addFollower(TERMINAL_126);
    		TERMINAL_197.addFollower(TERMINAL_127);
    		TERMINAL_197.addFollower(TERMINAL_128);
    		TERMINAL_197.addFollower(TERMINAL_129);
    		TERMINAL_197.addFollower(TERMINAL_130);
    		TERMINAL_197.addFollower(TERMINAL_131);
    		TERMINAL_197.addFollower(TERMINAL_132);
    		TERMINAL_197.addFollower(TERMINAL_133);
    		TERMINAL_197.addFollower(TERMINAL_134);
    		TERMINAL_197.addFollower(TERMINAL_135);
    		TERMINAL_197.addFollower(TERMINAL_136);
    		TERMINAL_197.addFollower(TERMINAL_137);
    		TERMINAL_197.addFollower(TERMINAL_138);
    		TERMINAL_197.addFollower(TERMINAL_139);
    		TERMINAL_197.addFollower(TERMINAL_140);
    		TERMINAL_197.addFollower(TERMINAL_141);
    		TERMINAL_197.addFollower(TERMINAL_142);
    		TERMINAL_197.addFollower(TERMINAL_143);
    		TERMINAL_197.addFollower(TERMINAL_144);
    		TERMINAL_197.addFollower(TERMINAL_145);
    		TERMINAL_197.addFollower(TERMINAL_146);
    		TERMINAL_197.addFollower(TERMINAL_147);
    		TERMINAL_197.addFollower(TERMINAL_148);
    		TERMINAL_197.addFollower(TERMINAL_149);
    		TERMINAL_197.addFollower(TERMINAL_150);
    		TERMINAL_197.addFollower(TERMINAL_151);
    		TERMINAL_197.addFollower(TERMINAL_152);
    		TERMINAL_197.addFollower(TERMINAL_153);
    		TERMINAL_197.addFollower(TERMINAL_154);
    		TERMINAL_197.addFollower(TERMINAL_155);
    		TERMINAL_197.addFollower(TERMINAL_156);
    		TERMINAL_197.addFollower(TERMINAL_157);
    		TERMINAL_197.addFollower(TERMINAL_158);
    		TERMINAL_197.addFollower(TERMINAL_159);
    		TERMINAL_197.addFollower(TERMINAL_160);
    		TERMINAL_197.addFollower(TERMINAL_161);
    		TERMINAL_197.addFollower(TERMINAL_162);
    		TERMINAL_197.addFollower(TERMINAL_163);
    		TERMINAL_197.addFollower(TERMINAL_164);
    		TERMINAL_197.addFollower(TERMINAL_165);
    		TERMINAL_197.addFollower(TERMINAL_166);
    		TERMINAL_197.addFollower(TERMINAL_167);
    		TERMINAL_207.addFollower(TERMINAL_208);
    		TERMINAL_208.addFollower(TERMINAL_81);
    		TERMINAL_208.addFollower(TERMINAL_82);
    		TERMINAL_208.addFollower(TERMINAL_83);
    		TERMINAL_208.addFollower(TERMINAL_84);
    		TERMINAL_208.addFollower(TERMINAL_85);
    		TERMINAL_208.addFollower(TERMINAL_86);
    		TERMINAL_81.addFollower(TERMINAL_209);
    		TERMINAL_209.addFollower(TERMINAL_210);
    		TERMINAL_210.addFollower(TERMINAL_81);
    		TERMINAL_210.addFollower(TERMINAL_82);
    		TERMINAL_210.addFollower(TERMINAL_83);
    		TERMINAL_210.addFollower(TERMINAL_84);
    		TERMINAL_210.addFollower(TERMINAL_85);
    		TERMINAL_210.addFollower(TERMINAL_86);
    		TERMINAL_82.addFollower(TERMINAL_211);
    		TERMINAL_211.addFollower(TERMINAL_183);
    		TERMINAL_83.addFollower(TERMINAL_212);
    	}
    	public static void wire1() {
    		TERMINAL_212.addFollower(TERMINAL_80);
    		TERMINAL_212.addFollower(TERMINAL_6);
    		TERMINAL_212.addFollower(TERMINAL_7);
    		TERMINAL_212.addFollower(TERMINAL_8);
    		TERMINAL_212.addFollower(TERMINAL_11);
    		TERMINAL_212.addFollower(TERMINAL_12);
    		TERMINAL_212.addFollower(TERMINAL_213);
    		TERMINAL_212.addFollower(TERMINAL_214);
    		TERMINAL_212.addFollower(TERMINAL_215);
    		TERMINAL_212.addFollower(TERMINAL_216);
    		TERMINAL_212.addFollower(TERMINAL_217);
    		TERMINAL_212.addFollower(TERMINAL_218);
    		TERMINAL_84.addFollower(TERMINAL_219);
    		TERMINAL_219.addFollower(TERMINAL_220);
    		TERMINAL_220.addFollower(TERMINAL_81);
    		TERMINAL_220.addFollower(TERMINAL_82);
    		TERMINAL_220.addFollower(TERMINAL_83);
    		TERMINAL_220.addFollower(TERMINAL_84);
    		TERMINAL_220.addFollower(TERMINAL_85);
    		TERMINAL_220.addFollower(TERMINAL_86);
    		TERMINAL_85.addFollower(TERMINAL_221);
    		TERMINAL_221.addFollower(TERMINAL_222);
    		TERMINAL_222.addFollower(TERMINAL_81);
    		TERMINAL_222.addFollower(TERMINAL_82);
    		TERMINAL_222.addFollower(TERMINAL_83);
    		TERMINAL_222.addFollower(TERMINAL_84);
    		TERMINAL_222.addFollower(TERMINAL_85);
    		TERMINAL_222.addFollower(TERMINAL_86);
    		TERMINAL_86.addFollower(TERMINAL_117);
    		TERMINAL_86.addFollower(TERMINAL_118);
    		TERMINAL_86.addFollower(TERMINAL_119);
    		TERMINAL_86.addFollower(TERMINAL_120);
    		TERMINAL_86.addFollower(TERMINAL_121);
    		TERMINAL_86.addFollower(TERMINAL_122);
    		TERMINAL_86.addFollower(TERMINAL_123);
    		TERMINAL_86.addFollower(TERMINAL_124);
    		TERMINAL_86.addFollower(TERMINAL_125);
    		TERMINAL_86.addFollower(TERMINAL_126);
    		TERMINAL_20.addFollower(TERMINAL_21);
    		TERMINAL_20.addFollower(TERMINAL_22);
    		TERMINAL_21.addFollower(TERMINAL_22);
    		TERMINAL_22.addFollower(TERMINAL_223);
    		TERMINAL_223.addFollower(TERMINAL_87);
    		TERMINAL_223.addFollower(TERMINAL_88);
    		TERMINAL_223.addFollower(TERMINAL_89);
    		TERMINAL_223.addFollower(TERMINAL_90);
    		TERMINAL_223.addFollower(TERMINAL_91);
    		TERMINAL_223.addFollower(TERMINAL_92);
    		TERMINAL_223.addFollower(TERMINAL_93);
    		TERMINAL_223.addFollower(TERMINAL_94);
    		TERMINAL_87.addFollower(TERMINAL_224);
    		TERMINAL_224.addFollower(TERMINAL_225);
    		TERMINAL_225.addFollower(TERMINAL_87);
    		TERMINAL_225.addFollower(TERMINAL_88);
    		TERMINAL_225.addFollower(TERMINAL_89);
    		TERMINAL_225.addFollower(TERMINAL_90);
    		TERMINAL_225.addFollower(TERMINAL_91);
    		TERMINAL_225.addFollower(TERMINAL_92);
    		TERMINAL_225.addFollower(TERMINAL_93);
    		TERMINAL_225.addFollower(TERMINAL_94);
    		TERMINAL_88.addFollower(TERMINAL_226);
    		TERMINAL_226.addFollower(TERMINAL_183);
    		TERMINAL_89.addFollower(TERMINAL_227);
    		TERMINAL_227.addFollower(TERMINAL_80);
    		TERMINAL_227.addFollower(TERMINAL_6);
    		TERMINAL_227.addFollower(TERMINAL_7);
    		TERMINAL_227.addFollower(TERMINAL_8);
    		TERMINAL_227.addFollower(TERMINAL_11);
    		TERMINAL_227.addFollower(TERMINAL_12);
    		TERMINAL_227.addFollower(TERMINAL_213);
    		TERMINAL_227.addFollower(TERMINAL_214);
    		TERMINAL_227.addFollower(TERMINAL_215);
    		TERMINAL_227.addFollower(TERMINAL_216);
    		TERMINAL_227.addFollower(TERMINAL_217);
    		TERMINAL_227.addFollower(TERMINAL_218);
    		TERMINAL_90.addFollower(TERMINAL_228);
    		TERMINAL_228.addFollower(TERMINAL_229);
    		TERMINAL_229.addFollower(TERMINAL_87);
    		TERMINAL_229.addFollower(TERMINAL_88);
    		TERMINAL_229.addFollower(TERMINAL_89);
    		TERMINAL_229.addFollower(TERMINAL_90);
    		TERMINAL_229.addFollower(TERMINAL_91);
    		TERMINAL_229.addFollower(TERMINAL_92);
    		TERMINAL_229.addFollower(TERMINAL_93);
    		TERMINAL_229.addFollower(TERMINAL_94);
    		TERMINAL_91.addFollower(TERMINAL_230);
    		TERMINAL_230.addFollower(TERMINAL_231);
    		TERMINAL_231.addFollower(TERMINAL_87);
    		TERMINAL_231.addFollower(TERMINAL_88);
    		TERMINAL_231.addFollower(TERMINAL_89);
    		TERMINAL_231.addFollower(TERMINAL_90);
    		TERMINAL_231.addFollower(TERMINAL_91);
    		TERMINAL_231.addFollower(TERMINAL_92);
    		TERMINAL_231.addFollower(TERMINAL_93);
    		TERMINAL_231.addFollower(TERMINAL_94);
    		TERMINAL_92.addFollower(TERMINAL_232);
    		TERMINAL_232.addFollower(TERMINAL_233);
    		TERMINAL_233.addFollower(TERMINAL_87);
    		TERMINAL_233.addFollower(TERMINAL_88);
    		TERMINAL_233.addFollower(TERMINAL_89);
    		TERMINAL_233.addFollower(TERMINAL_90);
    		TERMINAL_233.addFollower(TERMINAL_91);
    		TERMINAL_233.addFollower(TERMINAL_92);
    		TERMINAL_233.addFollower(TERMINAL_93);
    		TERMINAL_233.addFollower(TERMINAL_94);
    		TERMINAL_93.addFollower(TERMINAL_234);
    		TERMINAL_234.addFollower(TERMINAL_235);
    		TERMINAL_235.addFollower(TERMINAL_87);
    		TERMINAL_235.addFollower(TERMINAL_88);
    		TERMINAL_235.addFollower(TERMINAL_89);
    		TERMINAL_235.addFollower(TERMINAL_90);
    		TERMINAL_235.addFollower(TERMINAL_91);
    		TERMINAL_235.addFollower(TERMINAL_92);
    		TERMINAL_235.addFollower(TERMINAL_93);
    		TERMINAL_235.addFollower(TERMINAL_94);
    		TERMINAL_9.addFollower(TERMINAL_10);
    		TERMINAL_10.addFollower(TERMINAL_236);
    		TERMINAL_236.addFollower(TERMINAL_237);
    		TERMINAL_236.addFollower(TERMINAL_238);
    		TERMINAL_236.addFollower(TERMINAL_239);
    		TERMINAL_236.addFollower(TERMINAL_240);
    		TERMINAL_237.addFollower(TERMINAL_241);
    		TERMINAL_241.addFollower(TERMINAL_242);
    		TERMINAL_242.addFollower(TERMINAL_237);
    		TERMINAL_242.addFollower(TERMINAL_238);
    		TERMINAL_242.addFollower(TERMINAL_239);
    		TERMINAL_242.addFollower(TERMINAL_240);
    		TERMINAL_238.addFollower(TERMINAL_243);
    		TERMINAL_243.addFollower(TERMINAL_183);
    		TERMINAL_239.addFollower(TERMINAL_244);
    		TERMINAL_244.addFollower(TERMINAL_245);
    		TERMINAL_245.addFollower(TERMINAL_237);
    		TERMINAL_245.addFollower(TERMINAL_238);
    		TERMINAL_245.addFollower(TERMINAL_239);
    		TERMINAL_245.addFollower(TERMINAL_240);
    		TERMINAL_240.addFollower(TERMINAL_3);
    		TERMINAL_240.addFollower(TERMINAL_4);
    		TERMINAL_240.addFollower(TERMINAL_5);
    		TERMINAL_240.addFollower(TERMINAL_6);
    		TERMINAL_240.addFollower(TERMINAL_7);
    		TERMINAL_240.addFollower(TERMINAL_8);
    		TERMINAL_240.addFollower(TERMINAL_9);
    		TERMINAL_240.addFollower(TERMINAL_10);
    		TERMINAL_240.addFollower(TERMINAL_11);
    		TERMINAL_240.addFollower(TERMINAL_12);
    		TERMINAL_240.addFollower(TERMINAL_2);
    		TERMINAL_11.addFollower(TERMINAL_12);
    		TERMINAL_12.addFollower(TERMINAL_246);
    		TERMINAL_246.addFollower(TERMINAL_95);
    		TERMINAL_246.addFollower(TERMINAL_96);
    		TERMINAL_246.addFollower(TERMINAL_97);
    		TERMINAL_246.addFollower(TERMINAL_98);
    		TERMINAL_246.addFollower(TERMINAL_99);
    		TERMINAL_246.addFollower(TERMINAL_100);
    		TERMINAL_246.addFollower(TERMINAL_101);
    		TERMINAL_95.addFollower(TERMINAL_247);
    		TERMINAL_247.addFollower(TERMINAL_248);
    		TERMINAL_248.addFollower(TERMINAL_95);
    		TERMINAL_248.addFollower(TERMINAL_96);
    		TERMINAL_248.addFollower(TERMINAL_97);
    		TERMINAL_248.addFollower(TERMINAL_98);
    		TERMINAL_248.addFollower(TERMINAL_99);
    		TERMINAL_248.addFollower(TERMINAL_100);
    		TERMINAL_248.addFollower(TERMINAL_101);
    		TERMINAL_96.addFollower(TERMINAL_249);
    		TERMINAL_249.addFollower(TERMINAL_183);
    		TERMINAL_97.addFollower(TERMINAL_250);
    		TERMINAL_250.addFollower(TERMINAL_251);
    		TERMINAL_251.addFollower(TERMINAL_95);
    		TERMINAL_251.addFollower(TERMINAL_96);
    		TERMINAL_251.addFollower(TERMINAL_97);
    		TERMINAL_251.addFollower(TERMINAL_98);
    		TERMINAL_251.addFollower(TERMINAL_99);
    		TERMINAL_251.addFollower(TERMINAL_100);
    		TERMINAL_251.addFollower(TERMINAL_101);
    		TERMINAL_98.addFollower(TERMINAL_252);
    		TERMINAL_252.addFollower(TERMINAL_253);
    		TERMINAL_253.addFollower(TERMINAL_95);
    		TERMINAL_253.addFollower(TERMINAL_96);
    		TERMINAL_253.addFollower(TERMINAL_97);
    		TERMINAL_253.addFollower(TERMINAL_98);
    		TERMINAL_253.addFollower(TERMINAL_99);
    		TERMINAL_253.addFollower(TERMINAL_100);
    		TERMINAL_253.addFollower(TERMINAL_101);
    		TERMINAL_99.addFollower(TERMINAL_254);
    		TERMINAL_254.addFollower(TERMINAL_80);
    		TERMINAL_254.addFollower(TERMINAL_6);
    		TERMINAL_254.addFollower(TERMINAL_7);
    		TERMINAL_254.addFollower(TERMINAL_8);
    		TERMINAL_254.addFollower(TERMINAL_11);
    		TERMINAL_254.addFollower(TERMINAL_12);
    		TERMINAL_254.addFollower(TERMINAL_213);
    		TERMINAL_254.addFollower(TERMINAL_214);
    		TERMINAL_254.addFollower(TERMINAL_215);
    		TERMINAL_254.addFollower(TERMINAL_216);
    		TERMINAL_254.addFollower(TERMINAL_217);
    		TERMINAL_254.addFollower(TERMINAL_218);
    		TERMINAL_100.addFollower(TERMINAL_255);
    		TERMINAL_255.addFollower(TERMINAL_256);
    		TERMINAL_256.addFollower(TERMINAL_95);
    		TERMINAL_256.addFollower(TERMINAL_96);
    		TERMINAL_256.addFollower(TERMINAL_97);
    		TERMINAL_256.addFollower(TERMINAL_98);
    		TERMINAL_256.addFollower(TERMINAL_99);
    		TERMINAL_256.addFollower(TERMINAL_100);
    		TERMINAL_256.addFollower(TERMINAL_101);
    		TERMINAL_101.addFollower(TERMINAL_3);
    		TERMINAL_101.addFollower(TERMINAL_4);
    		TERMINAL_101.addFollower(TERMINAL_5);
    		TERMINAL_101.addFollower(TERMINAL_6);
    		TERMINAL_101.addFollower(TERMINAL_7);
    		TERMINAL_101.addFollower(TERMINAL_8);
    		TERMINAL_101.addFollower(TERMINAL_9);
    		TERMINAL_101.addFollower(TERMINAL_10);
    		TERMINAL_101.addFollower(TERMINAL_11);
    		TERMINAL_101.addFollower(TERMINAL_12);
    		TERMINAL_101.addFollower(TERMINAL_2);
    		TERMINAL_101.addFollower(TERMINAL_81);
    		TERMINAL_101.addFollower(TERMINAL_82);
    		TERMINAL_101.addFollower(TERMINAL_83);
    		TERMINAL_101.addFollower(TERMINAL_84);
    		TERMINAL_101.addFollower(TERMINAL_85);
    		TERMINAL_101.addFollower(TERMINAL_86);
    		TERMINAL_101.addFollower(TERMINAL_87);
    		TERMINAL_101.addFollower(TERMINAL_88);
    		TERMINAL_101.addFollower(TERMINAL_89);
    		TERMINAL_101.addFollower(TERMINAL_90);
    		TERMINAL_101.addFollower(TERMINAL_91);
    		TERMINAL_101.addFollower(TERMINAL_92);
    		TERMINAL_101.addFollower(TERMINAL_93);
    		TERMINAL_101.addFollower(TERMINAL_94);
    		TERMINAL_101.addFollower(TERMINAL_95);
    		TERMINAL_101.addFollower(TERMINAL_96);
    		TERMINAL_101.addFollower(TERMINAL_97);
    		TERMINAL_101.addFollower(TERMINAL_98);
    		TERMINAL_101.addFollower(TERMINAL_99);
    		TERMINAL_101.addFollower(TERMINAL_100);
    		TERMINAL_101.addFollower(TERMINAL_101);
    		TERMINAL_101.addFollower(TERMINAL_102);
    		TERMINAL_101.addFollower(TERMINAL_103);
    		TERMINAL_101.addFollower(TERMINAL_104);
    		TERMINAL_101.addFollower(TERMINAL_105);
    		TERMINAL_101.addFollower(TERMINAL_106);
    		TERMINAL_101.addFollower(TERMINAL_107);
    		TERMINAL_101.addFollower(TERMINAL_108);
    		TERMINAL_101.addFollower(TERMINAL_109);
    		TERMINAL_101.addFollower(TERMINAL_110);
    		TERMINAL_101.addFollower(TERMINAL_111);
    		TERMINAL_101.addFollower(TERMINAL_112);
    		TERMINAL_101.addFollower(TERMINAL_113);
    		TERMINAL_101.addFollower(TERMINAL_114);
    		TERMINAL_101.addFollower(TERMINAL_115);
    		TERMINAL_101.addFollower(TERMINAL_116);
    		TERMINAL_101.addFollower(TERMINAL_117);
    		TERMINAL_101.addFollower(TERMINAL_118);
    		TERMINAL_101.addFollower(TERMINAL_119);
    		TERMINAL_101.addFollower(TERMINAL_120);
    		TERMINAL_101.addFollower(TERMINAL_121);
    		TERMINAL_101.addFollower(TERMINAL_122);
    		TERMINAL_101.addFollower(TERMINAL_123);
    		TERMINAL_101.addFollower(TERMINAL_124);
    		TERMINAL_101.addFollower(TERMINAL_125);
    		TERMINAL_101.addFollower(TERMINAL_126);
    		TERMINAL_101.addFollower(TERMINAL_127);
    		TERMINAL_101.addFollower(TERMINAL_128);
    		TERMINAL_101.addFollower(TERMINAL_129);
    		TERMINAL_101.addFollower(TERMINAL_130);
    		TERMINAL_101.addFollower(TERMINAL_131);
    		TERMINAL_101.addFollower(TERMINAL_132);
    		TERMINAL_101.addFollower(TERMINAL_133);
    		TERMINAL_101.addFollower(TERMINAL_134);
    		TERMINAL_101.addFollower(TERMINAL_135);
    		TERMINAL_101.addFollower(TERMINAL_136);
    		TERMINAL_101.addFollower(TERMINAL_137);
    		TERMINAL_101.addFollower(TERMINAL_138);
    		TERMINAL_101.addFollower(TERMINAL_139);
    		TERMINAL_101.addFollower(TERMINAL_140);
    		TERMINAL_101.addFollower(TERMINAL_141);
    		TERMINAL_101.addFollower(TERMINAL_142);
    		TERMINAL_101.addFollower(TERMINAL_143);
    		TERMINAL_101.addFollower(TERMINAL_144);
    		TERMINAL_101.addFollower(TERMINAL_145);
    		TERMINAL_101.addFollower(TERMINAL_146);
    		TERMINAL_101.addFollower(TERMINAL_147);
    		TERMINAL_101.addFollower(TERMINAL_148);
    		TERMINAL_101.addFollower(TERMINAL_149);
    		TERMINAL_101.addFollower(TERMINAL_150);
    		TERMINAL_101.addFollower(TERMINAL_151);
    		TERMINAL_101.addFollower(TERMINAL_152);
    		TERMINAL_101.addFollower(TERMINAL_153);
    		TERMINAL_101.addFollower(TERMINAL_154);
    		TERMINAL_101.addFollower(TERMINAL_155);
    		TERMINAL_101.addFollower(TERMINAL_156);
    		TERMINAL_101.addFollower(TERMINAL_157);
    		TERMINAL_101.addFollower(TERMINAL_158);
    		TERMINAL_101.addFollower(TERMINAL_159);
    		TERMINAL_101.addFollower(TERMINAL_160);
    		TERMINAL_101.addFollower(TERMINAL_161);
    		TERMINAL_101.addFollower(TERMINAL_162);
    		TERMINAL_101.addFollower(TERMINAL_163);
    		TERMINAL_101.addFollower(TERMINAL_164);
    		TERMINAL_101.addFollower(TERMINAL_165);
    		TERMINAL_101.addFollower(TERMINAL_166);
    		TERMINAL_101.addFollower(TERMINAL_167);
    		TERMINAL_183.addFollower(TERMINAL_257);
    		TERMINAL_257.addFollower(TERMINAL_258);
    		TERMINAL_257.addFollower(TERMINAL_259);
    		TERMINAL_257.addFollower(TERMINAL_260);
    		TERMINAL_257.addFollower(TERMINAL_261);
    		TERMINAL_257.addFollower(TERMINAL_262);
    		TERMINAL_257.addFollower(TERMINAL_263);
    		TERMINAL_258.addFollower(TERMINAL_264);
    		TERMINAL_264.addFollower(TERMINAL_265);
    		TERMINAL_265.addFollower(TERMINAL_258);
    		TERMINAL_265.addFollower(TERMINAL_259);
    		TERMINAL_265.addFollower(TERMINAL_260);
    		TERMINAL_265.addFollower(TERMINAL_261);
    		TERMINAL_265.addFollower(TERMINAL_262);
    		TERMINAL_265.addFollower(TERMINAL_263);
    		TERMINAL_259.addFollower(TERMINAL_266);
    		TERMINAL_266.addFollower(TERMINAL_183);
    		TERMINAL_260.addFollower(TERMINAL_267);
    		TERMINAL_267.addFollower(TERMINAL_268);
    		TERMINAL_268.addFollower(TERMINAL_258);
    		TERMINAL_268.addFollower(TERMINAL_259);
    		TERMINAL_268.addFollower(TERMINAL_260);
    		TERMINAL_268.addFollower(TERMINAL_261);
    		TERMINAL_268.addFollower(TERMINAL_262);
    		TERMINAL_268.addFollower(TERMINAL_263);
    		TERMINAL_261.addFollower(TERMINAL_269);
    		TERMINAL_269.addFollower(TERMINAL_270);
    		TERMINAL_270.addFollower(TERMINAL_258);
    		TERMINAL_270.addFollower(TERMINAL_259);
    		TERMINAL_270.addFollower(TERMINAL_260);
    		TERMINAL_270.addFollower(TERMINAL_261);
    		TERMINAL_270.addFollower(TERMINAL_262);
    		TERMINAL_270.addFollower(TERMINAL_263);
    		TERMINAL_262.addFollower(TERMINAL_271);
    		TERMINAL_271.addFollower(TERMINAL_272);
    		TERMINAL_272.addFollower(TERMINAL_258);
    		TERMINAL_272.addFollower(TERMINAL_259);
    		TERMINAL_272.addFollower(TERMINAL_260);
    		TERMINAL_272.addFollower(TERMINAL_261);
    		TERMINAL_272.addFollower(TERMINAL_262);
    		TERMINAL_272.addFollower(TERMINAL_263);
    		TERMINAL_263.addFollower(TERMINAL_177);
    		TERMINAL_263.addFollower(TERMINAL_178);
    		TERMINAL_263.addFollower(TERMINAL_179);
    		TERMINAL_263.addFollower(TERMINAL_185);
    		TERMINAL_263.addFollower(TERMINAL_186);
    		TERMINAL_263.addFollower(TERMINAL_187);
    		TERMINAL_263.addFollower(TERMINAL_192);
    		TERMINAL_263.addFollower(TERMINAL_193);
    		TERMINAL_263.addFollower(TERMINAL_194);
    		TERMINAL_263.addFollower(TERMINAL_195);
    		TERMINAL_263.addFollower(TERMINAL_196);
    		TERMINAL_263.addFollower(TERMINAL_197);
    		TERMINAL_263.addFollower(TERMINAL_81);
    		TERMINAL_263.addFollower(TERMINAL_82);
    		TERMINAL_263.addFollower(TERMINAL_83);
    		TERMINAL_263.addFollower(TERMINAL_84);
    		TERMINAL_263.addFollower(TERMINAL_85);
    		TERMINAL_263.addFollower(TERMINAL_86);
    		TERMINAL_263.addFollower(TERMINAL_87);
    		TERMINAL_263.addFollower(TERMINAL_88);
    		TERMINAL_263.addFollower(TERMINAL_89);
    		TERMINAL_263.addFollower(TERMINAL_90);
    		TERMINAL_263.addFollower(TERMINAL_91);
    		TERMINAL_263.addFollower(TERMINAL_92);
    		TERMINAL_263.addFollower(TERMINAL_93);
    		TERMINAL_263.addFollower(TERMINAL_94);
    		TERMINAL_263.addFollower(TERMINAL_237);
    		TERMINAL_263.addFollower(TERMINAL_238);
    		TERMINAL_263.addFollower(TERMINAL_239);
    		TERMINAL_263.addFollower(TERMINAL_240);
    		TERMINAL_263.addFollower(TERMINAL_95);
    		TERMINAL_263.addFollower(TERMINAL_96);
    		TERMINAL_263.addFollower(TERMINAL_97);
    		TERMINAL_263.addFollower(TERMINAL_98);
    		TERMINAL_263.addFollower(TERMINAL_99);
    		TERMINAL_263.addFollower(TERMINAL_100);
    		TERMINAL_263.addFollower(TERMINAL_101);
    		TERMINAL_263.addFollower(TERMINAL_258);
    		TERMINAL_263.addFollower(TERMINAL_259);
    		TERMINAL_263.addFollower(TERMINAL_260);
    		TERMINAL_263.addFollower(TERMINAL_261);
    		TERMINAL_263.addFollower(TERMINAL_262);
    		TERMINAL_263.addFollower(TERMINAL_263);
    		TERMINAL_263.addFollower(TERMINAL_102);
    		TERMINAL_263.addFollower(TERMINAL_103);
    		TERMINAL_263.addFollower(TERMINAL_104);
    		TERMINAL_263.addFollower(TERMINAL_105);
    		TERMINAL_263.addFollower(TERMINAL_106);
    		TERMINAL_263.addFollower(TERMINAL_107);
    		TERMINAL_263.addFollower(TERMINAL_108);
    		TERMINAL_263.addFollower(TERMINAL_109);
    		TERMINAL_263.addFollower(TERMINAL_110);
    		TERMINAL_263.addFollower(TERMINAL_111);
    		TERMINAL_263.addFollower(TERMINAL_112);
    		TERMINAL_263.addFollower(TERMINAL_113);
    		TERMINAL_263.addFollower(TERMINAL_114);
    		TERMINAL_263.addFollower(TERMINAL_115);
    		TERMINAL_263.addFollower(TERMINAL_116);
    		TERMINAL_263.addFollower(TERMINAL_117);
    		TERMINAL_263.addFollower(TERMINAL_118);
    		TERMINAL_263.addFollower(TERMINAL_119);
    		TERMINAL_263.addFollower(TERMINAL_120);
    		TERMINAL_263.addFollower(TERMINAL_121);
    		TERMINAL_263.addFollower(TERMINAL_122);
    		TERMINAL_263.addFollower(TERMINAL_123);
    		TERMINAL_263.addFollower(TERMINAL_124);
    		TERMINAL_263.addFollower(TERMINAL_125);
    		TERMINAL_263.addFollower(TERMINAL_126);
    		TERMINAL_263.addFollower(TERMINAL_127);
    		TERMINAL_263.addFollower(TERMINAL_128);
    		TERMINAL_263.addFollower(TERMINAL_129);
    		TERMINAL_263.addFollower(TERMINAL_130);
    		TERMINAL_263.addFollower(TERMINAL_131);
    		TERMINAL_263.addFollower(TERMINAL_132);
    		TERMINAL_263.addFollower(TERMINAL_133);
    		TERMINAL_263.addFollower(TERMINAL_134);
    		TERMINAL_263.addFollower(TERMINAL_135);
    		TERMINAL_263.addFollower(TERMINAL_136);
    		TERMINAL_263.addFollower(TERMINAL_137);
    		TERMINAL_263.addFollower(TERMINAL_138);
    		TERMINAL_263.addFollower(TERMINAL_139);
    		TERMINAL_263.addFollower(TERMINAL_273);
    		TERMINAL_263.addFollower(TERMINAL_274);
    		TERMINAL_263.addFollower(TERMINAL_275);
    		TERMINAL_263.addFollower(TERMINAL_276);
    		TERMINAL_263.addFollower(TERMINAL_140);
    		TERMINAL_263.addFollower(TERMINAL_141);
    		TERMINAL_263.addFollower(TERMINAL_142);
    		TERMINAL_263.addFollower(TERMINAL_143);
    		TERMINAL_263.addFollower(TERMINAL_144);
    		TERMINAL_263.addFollower(TERMINAL_145);
    		TERMINAL_263.addFollower(TERMINAL_146);
    		TERMINAL_263.addFollower(TERMINAL_147);
    		TERMINAL_263.addFollower(TERMINAL_148);
    		TERMINAL_263.addFollower(TERMINAL_149);
    		TERMINAL_263.addFollower(TERMINAL_150);
    		TERMINAL_263.addFollower(TERMINAL_151);
    		TERMINAL_263.addFollower(TERMINAL_152);
    		TERMINAL_263.addFollower(TERMINAL_153);
    		TERMINAL_263.addFollower(TERMINAL_154);
    		TERMINAL_263.addFollower(TERMINAL_155);
    		TERMINAL_263.addFollower(TERMINAL_156);
    		TERMINAL_263.addFollower(TERMINAL_157);
    		TERMINAL_263.addFollower(TERMINAL_158);
    		TERMINAL_263.addFollower(TERMINAL_159);
    		TERMINAL_263.addFollower(TERMINAL_160);
    		TERMINAL_263.addFollower(TERMINAL_161);
    		TERMINAL_263.addFollower(TERMINAL_162);
    		TERMINAL_263.addFollower(TERMINAL_163);
    		TERMINAL_263.addFollower(TERMINAL_164);
    		TERMINAL_263.addFollower(TERMINAL_165);
    		TERMINAL_263.addFollower(TERMINAL_166);
    		TERMINAL_263.addFollower(TERMINAL_167);
    		TERMINAL_263.addFollower(TERMINAL_277);
    		TERMINAL_263.addFollower(TERMINAL_278);
    		TERMINAL_263.addFollower(TERMINAL_279);
    		TERMINAL_263.addFollower(TERMINAL_280);
    		TERMINAL_263.addFollower(TERMINAL_281);
    		TERMINAL_213.addFollower(TERMINAL_282);
    		TERMINAL_282.addFollower(TERMINAL_102);
    		TERMINAL_282.addFollower(TERMINAL_103);
    		TERMINAL_282.addFollower(TERMINAL_104);
    		TERMINAL_282.addFollower(TERMINAL_105);
    		TERMINAL_282.addFollower(TERMINAL_106);
    		TERMINAL_282.addFollower(TERMINAL_107);
    		TERMINAL_282.addFollower(TERMINAL_108);
    		TERMINAL_102.addFollower(TERMINAL_283);
    		TERMINAL_283.addFollower(TERMINAL_284);
    		TERMINAL_284.addFollower(TERMINAL_102);
    		TERMINAL_284.addFollower(TERMINAL_103);
    		TERMINAL_284.addFollower(TERMINAL_104);
    		TERMINAL_284.addFollower(TERMINAL_105);
    		TERMINAL_284.addFollower(TERMINAL_106);
    		TERMINAL_284.addFollower(TERMINAL_107);
    		TERMINAL_284.addFollower(TERMINAL_108);
    		TERMINAL_103.addFollower(TERMINAL_285);
    		TERMINAL_285.addFollower(TERMINAL_183);
    		TERMINAL_104.addFollower(TERMINAL_286);
    		TERMINAL_286.addFollower(TERMINAL_80);
    		TERMINAL_286.addFollower(TERMINAL_6);
    		TERMINAL_286.addFollower(TERMINAL_7);
    		TERMINAL_286.addFollower(TERMINAL_8);
    		TERMINAL_286.addFollower(TERMINAL_11);
    		TERMINAL_286.addFollower(TERMINAL_12);
    		TERMINAL_286.addFollower(TERMINAL_213);
    		TERMINAL_286.addFollower(TERMINAL_214);
    		TERMINAL_286.addFollower(TERMINAL_215);
    		TERMINAL_286.addFollower(TERMINAL_216);
    		TERMINAL_286.addFollower(TERMINAL_217);
    		TERMINAL_286.addFollower(TERMINAL_218);
    		TERMINAL_105.addFollower(TERMINAL_287);
    		TERMINAL_287.addFollower(TERMINAL_288);
    		TERMINAL_288.addFollower(TERMINAL_102);
    		TERMINAL_288.addFollower(TERMINAL_103);
    		TERMINAL_288.addFollower(TERMINAL_104);
    		TERMINAL_288.addFollower(TERMINAL_105);
    		TERMINAL_288.addFollower(TERMINAL_106);
    		TERMINAL_288.addFollower(TERMINAL_107);
    		TERMINAL_288.addFollower(TERMINAL_108);
    		TERMINAL_106.addFollower(TERMINAL_289);
    		TERMINAL_289.addFollower(TERMINAL_290);
    		TERMINAL_290.addFollower(TERMINAL_102);
    		TERMINAL_290.addFollower(TERMINAL_103);
    		TERMINAL_290.addFollower(TERMINAL_104);
    		TERMINAL_290.addFollower(TERMINAL_105);
    		TERMINAL_290.addFollower(TERMINAL_106);
    		TERMINAL_290.addFollower(TERMINAL_107);
    		TERMINAL_290.addFollower(TERMINAL_108);
    		TERMINAL_107.addFollower(TERMINAL_291);
    		TERMINAL_291.addFollower(TERMINAL_292);
    		TERMINAL_292.addFollower(TERMINAL_102);
    		TERMINAL_292.addFollower(TERMINAL_103);
    		TERMINAL_292.addFollower(TERMINAL_104);
    		TERMINAL_292.addFollower(TERMINAL_105);
    		TERMINAL_292.addFollower(TERMINAL_106);
    		TERMINAL_292.addFollower(TERMINAL_107);
    		TERMINAL_292.addFollower(TERMINAL_108);
    		TERMINAL_108.addFollower(TERMINAL_81);
    		TERMINAL_108.addFollower(TERMINAL_82);
    		TERMINAL_108.addFollower(TERMINAL_83);
    		TERMINAL_108.addFollower(TERMINAL_84);
    		TERMINAL_108.addFollower(TERMINAL_85);
    		TERMINAL_108.addFollower(TERMINAL_86);
    		TERMINAL_108.addFollower(TERMINAL_87);
    		TERMINAL_108.addFollower(TERMINAL_88);
    		TERMINAL_108.addFollower(TERMINAL_89);
    		TERMINAL_108.addFollower(TERMINAL_90);
    		TERMINAL_108.addFollower(TERMINAL_91);
    		TERMINAL_108.addFollower(TERMINAL_92);
    		TERMINAL_108.addFollower(TERMINAL_93);
    		TERMINAL_108.addFollower(TERMINAL_94);
    		TERMINAL_108.addFollower(TERMINAL_95);
    		TERMINAL_108.addFollower(TERMINAL_96);
    		TERMINAL_108.addFollower(TERMINAL_97);
    		TERMINAL_108.addFollower(TERMINAL_98);
    		TERMINAL_108.addFollower(TERMINAL_99);
    		TERMINAL_108.addFollower(TERMINAL_100);
    		TERMINAL_108.addFollower(TERMINAL_101);
    		TERMINAL_108.addFollower(TERMINAL_102);
    		TERMINAL_108.addFollower(TERMINAL_103);
    		TERMINAL_108.addFollower(TERMINAL_104);
    		TERMINAL_108.addFollower(TERMINAL_105);
    		TERMINAL_108.addFollower(TERMINAL_106);
    		TERMINAL_108.addFollower(TERMINAL_107);
    		TERMINAL_108.addFollower(TERMINAL_108);
    		TERMINAL_108.addFollower(TERMINAL_109);
    		TERMINAL_108.addFollower(TERMINAL_110);
    		TERMINAL_108.addFollower(TERMINAL_111);
    		TERMINAL_108.addFollower(TERMINAL_112);
    		TERMINAL_108.addFollower(TERMINAL_113);
    		TERMINAL_108.addFollower(TERMINAL_114);
    		TERMINAL_108.addFollower(TERMINAL_115);
    		TERMINAL_108.addFollower(TERMINAL_116);
    		TERMINAL_108.addFollower(TERMINAL_117);
    		TERMINAL_108.addFollower(TERMINAL_118);
    		TERMINAL_108.addFollower(TERMINAL_119);
    		TERMINAL_108.addFollower(TERMINAL_120);
    		TERMINAL_108.addFollower(TERMINAL_121);
    		TERMINAL_108.addFollower(TERMINAL_122);
    		TERMINAL_108.addFollower(TERMINAL_123);
    		TERMINAL_108.addFollower(TERMINAL_124);
    		TERMINAL_108.addFollower(TERMINAL_125);
    		TERMINAL_108.addFollower(TERMINAL_126);
    		TERMINAL_108.addFollower(TERMINAL_127);
    		TERMINAL_108.addFollower(TERMINAL_128);
    		TERMINAL_108.addFollower(TERMINAL_129);
    		TERMINAL_108.addFollower(TERMINAL_130);
    		TERMINAL_108.addFollower(TERMINAL_131);
    		TERMINAL_108.addFollower(TERMINAL_132);
    		TERMINAL_108.addFollower(TERMINAL_133);
    		TERMINAL_108.addFollower(TERMINAL_134);
    		TERMINAL_108.addFollower(TERMINAL_135);
    		TERMINAL_108.addFollower(TERMINAL_136);
    		TERMINAL_108.addFollower(TERMINAL_137);
    		TERMINAL_108.addFollower(TERMINAL_138);
    		TERMINAL_108.addFollower(TERMINAL_139);
    		TERMINAL_108.addFollower(TERMINAL_140);
    		TERMINAL_108.addFollower(TERMINAL_141);
    		TERMINAL_108.addFollower(TERMINAL_142);
    		TERMINAL_108.addFollower(TERMINAL_143);
    		TERMINAL_108.addFollower(TERMINAL_144);
    		TERMINAL_108.addFollower(TERMINAL_145);
    		TERMINAL_108.addFollower(TERMINAL_146);
    		TERMINAL_108.addFollower(TERMINAL_147);
    		TERMINAL_108.addFollower(TERMINAL_148);
    		TERMINAL_108.addFollower(TERMINAL_149);
    		TERMINAL_108.addFollower(TERMINAL_150);
    		TERMINAL_108.addFollower(TERMINAL_151);
    		TERMINAL_108.addFollower(TERMINAL_152);
    		TERMINAL_108.addFollower(TERMINAL_153);
    		TERMINAL_108.addFollower(TERMINAL_154);
    		TERMINAL_108.addFollower(TERMINAL_155);
    		TERMINAL_108.addFollower(TERMINAL_156);
    		TERMINAL_108.addFollower(TERMINAL_157);
    		TERMINAL_108.addFollower(TERMINAL_158);
    		TERMINAL_108.addFollower(TERMINAL_159);
    		TERMINAL_108.addFollower(TERMINAL_160);
    		TERMINAL_108.addFollower(TERMINAL_161);
    		TERMINAL_108.addFollower(TERMINAL_162);
    		TERMINAL_108.addFollower(TERMINAL_163);
    		TERMINAL_108.addFollower(TERMINAL_164);
    		TERMINAL_108.addFollower(TERMINAL_165);
    		TERMINAL_108.addFollower(TERMINAL_166);
    		TERMINAL_108.addFollower(TERMINAL_167);
    	}
    	public static void wire2() {
    		TERMINAL_214.addFollower(TERMINAL_293);
    		TERMINAL_293.addFollower(TERMINAL_109);
    		TERMINAL_293.addFollower(TERMINAL_110);
    		TERMINAL_293.addFollower(TERMINAL_111);
    		TERMINAL_293.addFollower(TERMINAL_112);
    		TERMINAL_293.addFollower(TERMINAL_113);
    		TERMINAL_293.addFollower(TERMINAL_114);
    		TERMINAL_293.addFollower(TERMINAL_115);
    		TERMINAL_293.addFollower(TERMINAL_116);
    		TERMINAL_109.addFollower(TERMINAL_294);
    		TERMINAL_294.addFollower(TERMINAL_295);
    		TERMINAL_295.addFollower(TERMINAL_109);
    		TERMINAL_295.addFollower(TERMINAL_110);
    		TERMINAL_295.addFollower(TERMINAL_111);
    		TERMINAL_295.addFollower(TERMINAL_112);
    		TERMINAL_295.addFollower(TERMINAL_113);
    		TERMINAL_295.addFollower(TERMINAL_114);
    		TERMINAL_295.addFollower(TERMINAL_115);
    		TERMINAL_295.addFollower(TERMINAL_116);
    		TERMINAL_110.addFollower(TERMINAL_296);
    		TERMINAL_296.addFollower(TERMINAL_183);
    		TERMINAL_111.addFollower(TERMINAL_297);
    		TERMINAL_297.addFollower(TERMINAL_80);
    		TERMINAL_297.addFollower(TERMINAL_6);
    		TERMINAL_297.addFollower(TERMINAL_7);
    		TERMINAL_297.addFollower(TERMINAL_8);
    		TERMINAL_297.addFollower(TERMINAL_11);
    		TERMINAL_297.addFollower(TERMINAL_12);
    		TERMINAL_297.addFollower(TERMINAL_213);
    		TERMINAL_297.addFollower(TERMINAL_214);
    		TERMINAL_297.addFollower(TERMINAL_215);
    		TERMINAL_297.addFollower(TERMINAL_216);
    		TERMINAL_297.addFollower(TERMINAL_217);
    		TERMINAL_297.addFollower(TERMINAL_218);
    		TERMINAL_112.addFollower(TERMINAL_298);
    		TERMINAL_298.addFollower(TERMINAL_299);
    		TERMINAL_299.addFollower(TERMINAL_109);
    		TERMINAL_299.addFollower(TERMINAL_110);
    		TERMINAL_299.addFollower(TERMINAL_111);
    		TERMINAL_299.addFollower(TERMINAL_112);
    		TERMINAL_299.addFollower(TERMINAL_113);
    		TERMINAL_299.addFollower(TERMINAL_114);
    		TERMINAL_299.addFollower(TERMINAL_115);
    		TERMINAL_299.addFollower(TERMINAL_116);
    		TERMINAL_113.addFollower(TERMINAL_300);
    		TERMINAL_300.addFollower(TERMINAL_301);
    		TERMINAL_301.addFollower(TERMINAL_109);
    		TERMINAL_301.addFollower(TERMINAL_110);
    		TERMINAL_301.addFollower(TERMINAL_111);
    		TERMINAL_301.addFollower(TERMINAL_112);
    		TERMINAL_301.addFollower(TERMINAL_113);
    		TERMINAL_301.addFollower(TERMINAL_114);
    		TERMINAL_301.addFollower(TERMINAL_115);
    		TERMINAL_301.addFollower(TERMINAL_116);
    		TERMINAL_114.addFollower(TERMINAL_302);
    		TERMINAL_302.addFollower(TERMINAL_303);
    		TERMINAL_303.addFollower(TERMINAL_109);
    		TERMINAL_303.addFollower(TERMINAL_110);
    		TERMINAL_303.addFollower(TERMINAL_111);
    		TERMINAL_303.addFollower(TERMINAL_112);
    		TERMINAL_303.addFollower(TERMINAL_113);
    		TERMINAL_303.addFollower(TERMINAL_114);
    		TERMINAL_303.addFollower(TERMINAL_115);
    		TERMINAL_303.addFollower(TERMINAL_116);
    		TERMINAL_115.addFollower(TERMINAL_304);
    		TERMINAL_304.addFollower(TERMINAL_215);
    		TERMINAL_116.addFollower(TERMINAL_81);
    		TERMINAL_116.addFollower(TERMINAL_82);
    		TERMINAL_116.addFollower(TERMINAL_83);
    		TERMINAL_116.addFollower(TERMINAL_84);
    		TERMINAL_116.addFollower(TERMINAL_85);
    		TERMINAL_116.addFollower(TERMINAL_86);
    		TERMINAL_116.addFollower(TERMINAL_87);
    		TERMINAL_116.addFollower(TERMINAL_88);
    		TERMINAL_116.addFollower(TERMINAL_89);
    		TERMINAL_116.addFollower(TERMINAL_90);
    		TERMINAL_116.addFollower(TERMINAL_91);
    		TERMINAL_116.addFollower(TERMINAL_92);
    		TERMINAL_116.addFollower(TERMINAL_93);
    		TERMINAL_116.addFollower(TERMINAL_94);
    		TERMINAL_116.addFollower(TERMINAL_95);
    		TERMINAL_116.addFollower(TERMINAL_96);
    		TERMINAL_116.addFollower(TERMINAL_97);
    		TERMINAL_116.addFollower(TERMINAL_98);
    		TERMINAL_116.addFollower(TERMINAL_99);
    		TERMINAL_116.addFollower(TERMINAL_100);
    		TERMINAL_116.addFollower(TERMINAL_101);
    		TERMINAL_116.addFollower(TERMINAL_102);
    		TERMINAL_116.addFollower(TERMINAL_103);
    		TERMINAL_116.addFollower(TERMINAL_104);
    		TERMINAL_116.addFollower(TERMINAL_105);
    		TERMINAL_116.addFollower(TERMINAL_106);
    		TERMINAL_116.addFollower(TERMINAL_107);
    		TERMINAL_116.addFollower(TERMINAL_108);
    		TERMINAL_116.addFollower(TERMINAL_109);
    		TERMINAL_116.addFollower(TERMINAL_110);
    		TERMINAL_116.addFollower(TERMINAL_111);
    		TERMINAL_116.addFollower(TERMINAL_112);
    		TERMINAL_116.addFollower(TERMINAL_113);
    		TERMINAL_116.addFollower(TERMINAL_114);
    		TERMINAL_116.addFollower(TERMINAL_115);
    		TERMINAL_116.addFollower(TERMINAL_116);
    		TERMINAL_116.addFollower(TERMINAL_117);
    		TERMINAL_116.addFollower(TERMINAL_118);
    		TERMINAL_116.addFollower(TERMINAL_119);
    		TERMINAL_116.addFollower(TERMINAL_120);
    		TERMINAL_116.addFollower(TERMINAL_121);
    		TERMINAL_116.addFollower(TERMINAL_122);
    		TERMINAL_116.addFollower(TERMINAL_123);
    		TERMINAL_116.addFollower(TERMINAL_124);
    		TERMINAL_116.addFollower(TERMINAL_125);
    		TERMINAL_116.addFollower(TERMINAL_126);
    		TERMINAL_116.addFollower(TERMINAL_127);
    		TERMINAL_116.addFollower(TERMINAL_128);
    		TERMINAL_116.addFollower(TERMINAL_129);
    		TERMINAL_116.addFollower(TERMINAL_130);
    		TERMINAL_116.addFollower(TERMINAL_131);
    		TERMINAL_116.addFollower(TERMINAL_132);
    		TERMINAL_116.addFollower(TERMINAL_133);
    		TERMINAL_116.addFollower(TERMINAL_134);
    		TERMINAL_116.addFollower(TERMINAL_135);
    		TERMINAL_116.addFollower(TERMINAL_136);
    		TERMINAL_116.addFollower(TERMINAL_137);
    		TERMINAL_116.addFollower(TERMINAL_138);
    		TERMINAL_116.addFollower(TERMINAL_139);
    		TERMINAL_116.addFollower(TERMINAL_140);
    		TERMINAL_116.addFollower(TERMINAL_141);
    		TERMINAL_116.addFollower(TERMINAL_142);
    		TERMINAL_116.addFollower(TERMINAL_143);
    		TERMINAL_116.addFollower(TERMINAL_144);
    		TERMINAL_116.addFollower(TERMINAL_145);
    		TERMINAL_116.addFollower(TERMINAL_146);
    		TERMINAL_116.addFollower(TERMINAL_147);
    		TERMINAL_116.addFollower(TERMINAL_148);
    		TERMINAL_116.addFollower(TERMINAL_149);
    		TERMINAL_116.addFollower(TERMINAL_150);
    		TERMINAL_116.addFollower(TERMINAL_151);
    		TERMINAL_116.addFollower(TERMINAL_152);
    		TERMINAL_116.addFollower(TERMINAL_153);
    		TERMINAL_116.addFollower(TERMINAL_154);
    		TERMINAL_116.addFollower(TERMINAL_155);
    		TERMINAL_116.addFollower(TERMINAL_156);
    		TERMINAL_116.addFollower(TERMINAL_157);
    		TERMINAL_116.addFollower(TERMINAL_158);
    		TERMINAL_116.addFollower(TERMINAL_159);
    		TERMINAL_116.addFollower(TERMINAL_160);
    		TERMINAL_116.addFollower(TERMINAL_161);
    		TERMINAL_116.addFollower(TERMINAL_162);
    		TERMINAL_116.addFollower(TERMINAL_163);
    		TERMINAL_116.addFollower(TERMINAL_164);
    		TERMINAL_116.addFollower(TERMINAL_165);
    		TERMINAL_116.addFollower(TERMINAL_166);
    		TERMINAL_116.addFollower(TERMINAL_167);
    		TERMINAL_215.addFollower(TERMINAL_305);
    		TERMINAL_305.addFollower(TERMINAL_117);
    		TERMINAL_305.addFollower(TERMINAL_118);
    		TERMINAL_305.addFollower(TERMINAL_119);
    		TERMINAL_305.addFollower(TERMINAL_120);
    		TERMINAL_305.addFollower(TERMINAL_121);
    		TERMINAL_305.addFollower(TERMINAL_122);
    		TERMINAL_305.addFollower(TERMINAL_123);
    		TERMINAL_305.addFollower(TERMINAL_124);
    		TERMINAL_305.addFollower(TERMINAL_125);
    		TERMINAL_305.addFollower(TERMINAL_126);
    		TERMINAL_117.addFollower(TERMINAL_306);
    		TERMINAL_306.addFollower(TERMINAL_307);
    		TERMINAL_307.addFollower(TERMINAL_117);
    		TERMINAL_307.addFollower(TERMINAL_118);
    		TERMINAL_307.addFollower(TERMINAL_119);
    		TERMINAL_307.addFollower(TERMINAL_120);
    		TERMINAL_307.addFollower(TERMINAL_121);
    		TERMINAL_307.addFollower(TERMINAL_122);
    		TERMINAL_307.addFollower(TERMINAL_123);
    		TERMINAL_307.addFollower(TERMINAL_124);
    		TERMINAL_307.addFollower(TERMINAL_125);
    		TERMINAL_307.addFollower(TERMINAL_126);
    		TERMINAL_118.addFollower(TERMINAL_308);
    		TERMINAL_308.addFollower(TERMINAL_183);
    		TERMINAL_119.addFollower(TERMINAL_309);
    		TERMINAL_309.addFollower(TERMINAL_80);
    		TERMINAL_309.addFollower(TERMINAL_6);
    		TERMINAL_309.addFollower(TERMINAL_7);
    		TERMINAL_309.addFollower(TERMINAL_8);
    		TERMINAL_309.addFollower(TERMINAL_11);
    		TERMINAL_309.addFollower(TERMINAL_12);
    		TERMINAL_309.addFollower(TERMINAL_213);
    		TERMINAL_309.addFollower(TERMINAL_214);
    		TERMINAL_309.addFollower(TERMINAL_215);
    		TERMINAL_309.addFollower(TERMINAL_216);
    		TERMINAL_309.addFollower(TERMINAL_217);
    		TERMINAL_309.addFollower(TERMINAL_218);
    		TERMINAL_120.addFollower(TERMINAL_310);
    		TERMINAL_310.addFollower(TERMINAL_311);
    		TERMINAL_311.addFollower(TERMINAL_117);
    		TERMINAL_311.addFollower(TERMINAL_118);
    		TERMINAL_311.addFollower(TERMINAL_119);
    		TERMINAL_311.addFollower(TERMINAL_120);
    		TERMINAL_311.addFollower(TERMINAL_121);
    		TERMINAL_311.addFollower(TERMINAL_122);
    		TERMINAL_311.addFollower(TERMINAL_123);
    		TERMINAL_311.addFollower(TERMINAL_124);
    		TERMINAL_311.addFollower(TERMINAL_125);
    		TERMINAL_311.addFollower(TERMINAL_126);
    		TERMINAL_121.addFollower(TERMINAL_312);
    		TERMINAL_312.addFollower(TERMINAL_313);
    		TERMINAL_313.addFollower(TERMINAL_117);
    		TERMINAL_313.addFollower(TERMINAL_118);
    		TERMINAL_313.addFollower(TERMINAL_119);
    		TERMINAL_313.addFollower(TERMINAL_120);
    		TERMINAL_313.addFollower(TERMINAL_121);
    		TERMINAL_313.addFollower(TERMINAL_122);
    		TERMINAL_313.addFollower(TERMINAL_123);
    		TERMINAL_313.addFollower(TERMINAL_124);
    		TERMINAL_313.addFollower(TERMINAL_125);
    		TERMINAL_313.addFollower(TERMINAL_126);
    		TERMINAL_122.addFollower(TERMINAL_314);
    		TERMINAL_314.addFollower(TERMINAL_315);
    		TERMINAL_315.addFollower(TERMINAL_117);
    		TERMINAL_315.addFollower(TERMINAL_118);
    		TERMINAL_315.addFollower(TERMINAL_119);
    		TERMINAL_315.addFollower(TERMINAL_120);
    		TERMINAL_315.addFollower(TERMINAL_121);
    		TERMINAL_315.addFollower(TERMINAL_122);
    		TERMINAL_315.addFollower(TERMINAL_123);
    		TERMINAL_315.addFollower(TERMINAL_124);
    		TERMINAL_315.addFollower(TERMINAL_125);
    		TERMINAL_315.addFollower(TERMINAL_126);
    		TERMINAL_123.addFollower(TERMINAL_316);
    		TERMINAL_316.addFollower(TERMINAL_317);
    		TERMINAL_317.addFollower(TERMINAL_117);
    		TERMINAL_317.addFollower(TERMINAL_118);
    		TERMINAL_317.addFollower(TERMINAL_119);
    		TERMINAL_317.addFollower(TERMINAL_120);
    		TERMINAL_317.addFollower(TERMINAL_121);
    		TERMINAL_317.addFollower(TERMINAL_122);
    		TERMINAL_317.addFollower(TERMINAL_123);
    		TERMINAL_317.addFollower(TERMINAL_124);
    		TERMINAL_317.addFollower(TERMINAL_125);
    		TERMINAL_317.addFollower(TERMINAL_126);
    		TERMINAL_124.addFollower(TERMINAL_318);
    		TERMINAL_318.addFollower(TERMINAL_319);
    		TERMINAL_319.addFollower(TERMINAL_117);
    		TERMINAL_319.addFollower(TERMINAL_118);
    		TERMINAL_319.addFollower(TERMINAL_119);
    		TERMINAL_319.addFollower(TERMINAL_120);
    		TERMINAL_319.addFollower(TERMINAL_121);
    		TERMINAL_319.addFollower(TERMINAL_122);
    		TERMINAL_319.addFollower(TERMINAL_123);
    		TERMINAL_319.addFollower(TERMINAL_124);
    		TERMINAL_319.addFollower(TERMINAL_125);
    		TERMINAL_319.addFollower(TERMINAL_126);
    		TERMINAL_125.addFollower(TERMINAL_320);
    		TERMINAL_320.addFollower(TERMINAL_207);
    		TERMINAL_126.addFollower(TERMINAL_81);
    		TERMINAL_126.addFollower(TERMINAL_82);
    		TERMINAL_126.addFollower(TERMINAL_83);
    		TERMINAL_126.addFollower(TERMINAL_84);
    		TERMINAL_126.addFollower(TERMINAL_85);
    		TERMINAL_126.addFollower(TERMINAL_86);
    		TERMINAL_126.addFollower(TERMINAL_87);
    		TERMINAL_126.addFollower(TERMINAL_88);
    		TERMINAL_126.addFollower(TERMINAL_89);
    		TERMINAL_126.addFollower(TERMINAL_90);
    		TERMINAL_126.addFollower(TERMINAL_91);
    		TERMINAL_126.addFollower(TERMINAL_92);
    		TERMINAL_126.addFollower(TERMINAL_93);
    		TERMINAL_126.addFollower(TERMINAL_94);
    		TERMINAL_126.addFollower(TERMINAL_95);
    		TERMINAL_126.addFollower(TERMINAL_96);
    		TERMINAL_126.addFollower(TERMINAL_97);
    		TERMINAL_126.addFollower(TERMINAL_98);
    		TERMINAL_126.addFollower(TERMINAL_99);
    		TERMINAL_126.addFollower(TERMINAL_100);
    		TERMINAL_126.addFollower(TERMINAL_101);
    		TERMINAL_126.addFollower(TERMINAL_102);
    		TERMINAL_126.addFollower(TERMINAL_103);
    		TERMINAL_126.addFollower(TERMINAL_104);
    		TERMINAL_126.addFollower(TERMINAL_105);
    		TERMINAL_126.addFollower(TERMINAL_106);
    		TERMINAL_126.addFollower(TERMINAL_107);
    		TERMINAL_126.addFollower(TERMINAL_108);
    		TERMINAL_126.addFollower(TERMINAL_109);
    		TERMINAL_126.addFollower(TERMINAL_110);
    		TERMINAL_126.addFollower(TERMINAL_111);
    		TERMINAL_126.addFollower(TERMINAL_112);
    		TERMINAL_126.addFollower(TERMINAL_113);
    		TERMINAL_126.addFollower(TERMINAL_114);
    		TERMINAL_126.addFollower(TERMINAL_115);
    		TERMINAL_126.addFollower(TERMINAL_116);
    		TERMINAL_126.addFollower(TERMINAL_117);
    		TERMINAL_126.addFollower(TERMINAL_118);
    		TERMINAL_126.addFollower(TERMINAL_119);
    		TERMINAL_126.addFollower(TERMINAL_120);
    		TERMINAL_126.addFollower(TERMINAL_121);
    		TERMINAL_126.addFollower(TERMINAL_122);
    		TERMINAL_126.addFollower(TERMINAL_123);
    		TERMINAL_126.addFollower(TERMINAL_124);
    		TERMINAL_126.addFollower(TERMINAL_125);
    		TERMINAL_126.addFollower(TERMINAL_126);
    		TERMINAL_126.addFollower(TERMINAL_127);
    		TERMINAL_126.addFollower(TERMINAL_128);
    		TERMINAL_126.addFollower(TERMINAL_129);
    		TERMINAL_126.addFollower(TERMINAL_130);
    		TERMINAL_126.addFollower(TERMINAL_131);
    		TERMINAL_126.addFollower(TERMINAL_132);
    		TERMINAL_126.addFollower(TERMINAL_133);
    		TERMINAL_126.addFollower(TERMINAL_134);
    		TERMINAL_126.addFollower(TERMINAL_135);
    		TERMINAL_126.addFollower(TERMINAL_136);
    		TERMINAL_126.addFollower(TERMINAL_137);
    		TERMINAL_126.addFollower(TERMINAL_138);
    		TERMINAL_126.addFollower(TERMINAL_139);
    		TERMINAL_126.addFollower(TERMINAL_140);
    		TERMINAL_126.addFollower(TERMINAL_141);
    		TERMINAL_126.addFollower(TERMINAL_142);
    		TERMINAL_126.addFollower(TERMINAL_143);
    		TERMINAL_126.addFollower(TERMINAL_144);
    		TERMINAL_126.addFollower(TERMINAL_145);
    		TERMINAL_126.addFollower(TERMINAL_146);
    		TERMINAL_126.addFollower(TERMINAL_147);
    		TERMINAL_126.addFollower(TERMINAL_148);
    		TERMINAL_126.addFollower(TERMINAL_149);
    		TERMINAL_126.addFollower(TERMINAL_150);
    		TERMINAL_126.addFollower(TERMINAL_151);
    		TERMINAL_126.addFollower(TERMINAL_152);
    		TERMINAL_126.addFollower(TERMINAL_153);
    		TERMINAL_126.addFollower(TERMINAL_154);
    		TERMINAL_126.addFollower(TERMINAL_155);
    		TERMINAL_126.addFollower(TERMINAL_156);
    		TERMINAL_126.addFollower(TERMINAL_157);
    		TERMINAL_126.addFollower(TERMINAL_158);
    		TERMINAL_126.addFollower(TERMINAL_159);
    		TERMINAL_126.addFollower(TERMINAL_160);
    		TERMINAL_126.addFollower(TERMINAL_161);
    		TERMINAL_126.addFollower(TERMINAL_162);
    		TERMINAL_126.addFollower(TERMINAL_163);
    		TERMINAL_126.addFollower(TERMINAL_164);
    		TERMINAL_126.addFollower(TERMINAL_165);
    		TERMINAL_126.addFollower(TERMINAL_166);
    		TERMINAL_126.addFollower(TERMINAL_167);
    		TERMINAL_216.addFollower(TERMINAL_321);
    		TERMINAL_321.addFollower(TERMINAL_127);
    		TERMINAL_321.addFollower(TERMINAL_128);
    		TERMINAL_321.addFollower(TERMINAL_129);
    		TERMINAL_321.addFollower(TERMINAL_130);
    		TERMINAL_321.addFollower(TERMINAL_131);
    		TERMINAL_321.addFollower(TERMINAL_132);
    		TERMINAL_127.addFollower(TERMINAL_322);
    		TERMINAL_322.addFollower(TERMINAL_323);
    		TERMINAL_323.addFollower(TERMINAL_127);
    		TERMINAL_323.addFollower(TERMINAL_128);
    		TERMINAL_323.addFollower(TERMINAL_129);
    		TERMINAL_323.addFollower(TERMINAL_130);
    		TERMINAL_323.addFollower(TERMINAL_131);
    		TERMINAL_323.addFollower(TERMINAL_132);
    		TERMINAL_128.addFollower(TERMINAL_324);
    		TERMINAL_324.addFollower(TERMINAL_183);
    		TERMINAL_129.addFollower(TERMINAL_325);
    		TERMINAL_325.addFollower(TERMINAL_80);
    		TERMINAL_325.addFollower(TERMINAL_6);
    		TERMINAL_325.addFollower(TERMINAL_7);
    		TERMINAL_325.addFollower(TERMINAL_8);
    		TERMINAL_325.addFollower(TERMINAL_11);
    		TERMINAL_325.addFollower(TERMINAL_12);
    		TERMINAL_325.addFollower(TERMINAL_213);
    		TERMINAL_325.addFollower(TERMINAL_214);
    		TERMINAL_325.addFollower(TERMINAL_215);
    		TERMINAL_325.addFollower(TERMINAL_216);
    		TERMINAL_325.addFollower(TERMINAL_217);
    		TERMINAL_325.addFollower(TERMINAL_218);
    		TERMINAL_130.addFollower(TERMINAL_326);
    		TERMINAL_326.addFollower(TERMINAL_327);
    		TERMINAL_327.addFollower(TERMINAL_127);
    		TERMINAL_327.addFollower(TERMINAL_128);
    		TERMINAL_327.addFollower(TERMINAL_129);
    		TERMINAL_327.addFollower(TERMINAL_130);
    		TERMINAL_327.addFollower(TERMINAL_131);
    		TERMINAL_327.addFollower(TERMINAL_132);
    		TERMINAL_131.addFollower(TERMINAL_328);
    		TERMINAL_328.addFollower(TERMINAL_329);
    		TERMINAL_329.addFollower(TERMINAL_127);
    		TERMINAL_329.addFollower(TERMINAL_128);
    		TERMINAL_329.addFollower(TERMINAL_129);
    		TERMINAL_329.addFollower(TERMINAL_130);
    		TERMINAL_329.addFollower(TERMINAL_131);
    		TERMINAL_329.addFollower(TERMINAL_132);
    		TERMINAL_132.addFollower(TERMINAL_81);
    		TERMINAL_132.addFollower(TERMINAL_82);
    		TERMINAL_132.addFollower(TERMINAL_83);
    		TERMINAL_132.addFollower(TERMINAL_84);
    		TERMINAL_132.addFollower(TERMINAL_85);
    		TERMINAL_132.addFollower(TERMINAL_86);
    		TERMINAL_132.addFollower(TERMINAL_87);
    		TERMINAL_132.addFollower(TERMINAL_88);
    		TERMINAL_132.addFollower(TERMINAL_89);
    		TERMINAL_132.addFollower(TERMINAL_90);
    		TERMINAL_132.addFollower(TERMINAL_91);
    		TERMINAL_132.addFollower(TERMINAL_92);
    		TERMINAL_132.addFollower(TERMINAL_93);
    		TERMINAL_132.addFollower(TERMINAL_94);
    		TERMINAL_132.addFollower(TERMINAL_95);
    		TERMINAL_132.addFollower(TERMINAL_96);
    		TERMINAL_132.addFollower(TERMINAL_97);
    		TERMINAL_132.addFollower(TERMINAL_98);
    		TERMINAL_132.addFollower(TERMINAL_99);
    		TERMINAL_132.addFollower(TERMINAL_100);
    		TERMINAL_132.addFollower(TERMINAL_101);
    		TERMINAL_132.addFollower(TERMINAL_102);
    		TERMINAL_132.addFollower(TERMINAL_103);
    		TERMINAL_132.addFollower(TERMINAL_104);
    		TERMINAL_132.addFollower(TERMINAL_105);
    		TERMINAL_132.addFollower(TERMINAL_106);
    		TERMINAL_132.addFollower(TERMINAL_107);
    		TERMINAL_132.addFollower(TERMINAL_108);
    		TERMINAL_132.addFollower(TERMINAL_109);
    		TERMINAL_132.addFollower(TERMINAL_110);
    		TERMINAL_132.addFollower(TERMINAL_111);
    		TERMINAL_132.addFollower(TERMINAL_112);
    		TERMINAL_132.addFollower(TERMINAL_113);
    		TERMINAL_132.addFollower(TERMINAL_114);
    		TERMINAL_132.addFollower(TERMINAL_115);
    		TERMINAL_132.addFollower(TERMINAL_116);
    		TERMINAL_132.addFollower(TERMINAL_117);
    		TERMINAL_132.addFollower(TERMINAL_118);
    		TERMINAL_132.addFollower(TERMINAL_119);
    		TERMINAL_132.addFollower(TERMINAL_120);
    		TERMINAL_132.addFollower(TERMINAL_121);
    		TERMINAL_132.addFollower(TERMINAL_122);
    		TERMINAL_132.addFollower(TERMINAL_123);
    		TERMINAL_132.addFollower(TERMINAL_124);
    		TERMINAL_132.addFollower(TERMINAL_125);
    		TERMINAL_132.addFollower(TERMINAL_126);
    		TERMINAL_132.addFollower(TERMINAL_127);
    		TERMINAL_132.addFollower(TERMINAL_128);
    		TERMINAL_132.addFollower(TERMINAL_129);
    		TERMINAL_132.addFollower(TERMINAL_130);
    		TERMINAL_132.addFollower(TERMINAL_131);
    		TERMINAL_132.addFollower(TERMINAL_132);
    		TERMINAL_132.addFollower(TERMINAL_133);
    		TERMINAL_132.addFollower(TERMINAL_134);
    		TERMINAL_132.addFollower(TERMINAL_135);
    		TERMINAL_132.addFollower(TERMINAL_136);
    		TERMINAL_132.addFollower(TERMINAL_137);
    		TERMINAL_132.addFollower(TERMINAL_138);
    		TERMINAL_132.addFollower(TERMINAL_139);
    		TERMINAL_132.addFollower(TERMINAL_140);
    		TERMINAL_132.addFollower(TERMINAL_141);
    		TERMINAL_132.addFollower(TERMINAL_142);
    		TERMINAL_132.addFollower(TERMINAL_143);
    		TERMINAL_132.addFollower(TERMINAL_144);
    		TERMINAL_132.addFollower(TERMINAL_145);
    		TERMINAL_132.addFollower(TERMINAL_146);
    		TERMINAL_132.addFollower(TERMINAL_147);
    		TERMINAL_132.addFollower(TERMINAL_148);
    		TERMINAL_132.addFollower(TERMINAL_149);
    		TERMINAL_132.addFollower(TERMINAL_150);
    		TERMINAL_132.addFollower(TERMINAL_151);
    		TERMINAL_132.addFollower(TERMINAL_152);
    		TERMINAL_132.addFollower(TERMINAL_153);
    		TERMINAL_132.addFollower(TERMINAL_154);
    		TERMINAL_132.addFollower(TERMINAL_155);
    		TERMINAL_132.addFollower(TERMINAL_156);
    		TERMINAL_132.addFollower(TERMINAL_157);
    		TERMINAL_132.addFollower(TERMINAL_158);
    		TERMINAL_132.addFollower(TERMINAL_159);
    		TERMINAL_132.addFollower(TERMINAL_160);
    		TERMINAL_132.addFollower(TERMINAL_161);
    		TERMINAL_132.addFollower(TERMINAL_162);
    		TERMINAL_132.addFollower(TERMINAL_163);
    		TERMINAL_132.addFollower(TERMINAL_164);
    		TERMINAL_132.addFollower(TERMINAL_165);
    		TERMINAL_132.addFollower(TERMINAL_166);
    		TERMINAL_132.addFollower(TERMINAL_167);
    		TERMINAL_217.addFollower(TERMINAL_330);
    		TERMINAL_330.addFollower(TERMINAL_133);
    		TERMINAL_330.addFollower(TERMINAL_134);
    		TERMINAL_330.addFollower(TERMINAL_135);
    		TERMINAL_330.addFollower(TERMINAL_136);
    		TERMINAL_330.addFollower(TERMINAL_137);
    		TERMINAL_330.addFollower(TERMINAL_138);
    		TERMINAL_330.addFollower(TERMINAL_139);
    		TERMINAL_133.addFollower(TERMINAL_331);
    		TERMINAL_331.addFollower(TERMINAL_332);
    		TERMINAL_332.addFollower(TERMINAL_133);
    		TERMINAL_332.addFollower(TERMINAL_134);
    		TERMINAL_332.addFollower(TERMINAL_135);
    		TERMINAL_332.addFollower(TERMINAL_136);
    		TERMINAL_332.addFollower(TERMINAL_137);
    		TERMINAL_332.addFollower(TERMINAL_138);
    		TERMINAL_332.addFollower(TERMINAL_139);
    		TERMINAL_134.addFollower(TERMINAL_333);
    		TERMINAL_333.addFollower(TERMINAL_183);
    		TERMINAL_135.addFollower(TERMINAL_334);
    		TERMINAL_334.addFollower(TERMINAL_80);
    		TERMINAL_334.addFollower(TERMINAL_6);
    		TERMINAL_334.addFollower(TERMINAL_7);
    		TERMINAL_334.addFollower(TERMINAL_8);
    		TERMINAL_334.addFollower(TERMINAL_11);
    		TERMINAL_334.addFollower(TERMINAL_12);
    		TERMINAL_334.addFollower(TERMINAL_213);
    		TERMINAL_334.addFollower(TERMINAL_214);
    		TERMINAL_334.addFollower(TERMINAL_215);
    		TERMINAL_334.addFollower(TERMINAL_216);
    		TERMINAL_334.addFollower(TERMINAL_217);
    		TERMINAL_334.addFollower(TERMINAL_218);
    		TERMINAL_136.addFollower(TERMINAL_335);
    		TERMINAL_335.addFollower(TERMINAL_336);
    		TERMINAL_336.addFollower(TERMINAL_133);
    		TERMINAL_336.addFollower(TERMINAL_134);
    		TERMINAL_336.addFollower(TERMINAL_135);
    		TERMINAL_336.addFollower(TERMINAL_136);
    		TERMINAL_336.addFollower(TERMINAL_137);
    		TERMINAL_336.addFollower(TERMINAL_138);
    		TERMINAL_336.addFollower(TERMINAL_139);
    		TERMINAL_137.addFollower(TERMINAL_337);
    		TERMINAL_337.addFollower(TERMINAL_338);
    		TERMINAL_338.addFollower(TERMINAL_133);
    		TERMINAL_338.addFollower(TERMINAL_134);
    		TERMINAL_338.addFollower(TERMINAL_135);
    		TERMINAL_338.addFollower(TERMINAL_136);
    		TERMINAL_338.addFollower(TERMINAL_137);
    		TERMINAL_338.addFollower(TERMINAL_138);
    		TERMINAL_338.addFollower(TERMINAL_139);
    		TERMINAL_138.addFollower(TERMINAL_339);
    		TERMINAL_339.addFollower(TERMINAL_340);
    		TERMINAL_340.addFollower(TERMINAL_133);
    		TERMINAL_340.addFollower(TERMINAL_134);
    		TERMINAL_340.addFollower(TERMINAL_135);
    		TERMINAL_340.addFollower(TERMINAL_136);
    		TERMINAL_340.addFollower(TERMINAL_137);
    		TERMINAL_340.addFollower(TERMINAL_138);
    		TERMINAL_340.addFollower(TERMINAL_139);
    		TERMINAL_139.addFollower(TERMINAL_81);
    		TERMINAL_139.addFollower(TERMINAL_82);
    		TERMINAL_139.addFollower(TERMINAL_83);
    		TERMINAL_139.addFollower(TERMINAL_84);
    		TERMINAL_139.addFollower(TERMINAL_85);
    		TERMINAL_139.addFollower(TERMINAL_86);
    		TERMINAL_139.addFollower(TERMINAL_87);
    		TERMINAL_139.addFollower(TERMINAL_88);
    		TERMINAL_139.addFollower(TERMINAL_89);
    		TERMINAL_139.addFollower(TERMINAL_90);
    		TERMINAL_139.addFollower(TERMINAL_91);
    		TERMINAL_139.addFollower(TERMINAL_92);
    		TERMINAL_139.addFollower(TERMINAL_93);
    		TERMINAL_139.addFollower(TERMINAL_94);
    		TERMINAL_139.addFollower(TERMINAL_95);
    		TERMINAL_139.addFollower(TERMINAL_96);
    		TERMINAL_139.addFollower(TERMINAL_97);
    		TERMINAL_139.addFollower(TERMINAL_98);
    		TERMINAL_139.addFollower(TERMINAL_99);
    		TERMINAL_139.addFollower(TERMINAL_100);
    		TERMINAL_139.addFollower(TERMINAL_101);
    		TERMINAL_139.addFollower(TERMINAL_102);
    		TERMINAL_139.addFollower(TERMINAL_103);
    		TERMINAL_139.addFollower(TERMINAL_104);
    		TERMINAL_139.addFollower(TERMINAL_105);
    		TERMINAL_139.addFollower(TERMINAL_106);
    		TERMINAL_139.addFollower(TERMINAL_107);
    		TERMINAL_139.addFollower(TERMINAL_108);
    		TERMINAL_139.addFollower(TERMINAL_109);
    		TERMINAL_139.addFollower(TERMINAL_110);
    		TERMINAL_139.addFollower(TERMINAL_111);
    		TERMINAL_139.addFollower(TERMINAL_112);
    		TERMINAL_139.addFollower(TERMINAL_113);
    		TERMINAL_139.addFollower(TERMINAL_114);
    		TERMINAL_139.addFollower(TERMINAL_115);
    		TERMINAL_139.addFollower(TERMINAL_116);
    		TERMINAL_139.addFollower(TERMINAL_117);
    		TERMINAL_139.addFollower(TERMINAL_118);
    		TERMINAL_139.addFollower(TERMINAL_119);
    		TERMINAL_139.addFollower(TERMINAL_120);
    		TERMINAL_139.addFollower(TERMINAL_121);
    		TERMINAL_139.addFollower(TERMINAL_122);
    		TERMINAL_139.addFollower(TERMINAL_123);
    		TERMINAL_139.addFollower(TERMINAL_124);
    		TERMINAL_139.addFollower(TERMINAL_125);
    		TERMINAL_139.addFollower(TERMINAL_126);
    		TERMINAL_139.addFollower(TERMINAL_127);
    		TERMINAL_139.addFollower(TERMINAL_128);
    		TERMINAL_139.addFollower(TERMINAL_129);
    		TERMINAL_139.addFollower(TERMINAL_130);
    		TERMINAL_139.addFollower(TERMINAL_131);
    		TERMINAL_139.addFollower(TERMINAL_132);
    		TERMINAL_139.addFollower(TERMINAL_133);
    		TERMINAL_139.addFollower(TERMINAL_134);
    		TERMINAL_139.addFollower(TERMINAL_135);
    		TERMINAL_139.addFollower(TERMINAL_136);
    		TERMINAL_139.addFollower(TERMINAL_137);
    		TERMINAL_139.addFollower(TERMINAL_138);
    		TERMINAL_139.addFollower(TERMINAL_139);
    		TERMINAL_139.addFollower(TERMINAL_140);
    		TERMINAL_139.addFollower(TERMINAL_141);
    		TERMINAL_139.addFollower(TERMINAL_142);
    		TERMINAL_139.addFollower(TERMINAL_143);
    		TERMINAL_139.addFollower(TERMINAL_144);
    		TERMINAL_139.addFollower(TERMINAL_145);
    		TERMINAL_139.addFollower(TERMINAL_146);
    		TERMINAL_139.addFollower(TERMINAL_147);
    		TERMINAL_139.addFollower(TERMINAL_148);
    		TERMINAL_139.addFollower(TERMINAL_149);
    		TERMINAL_139.addFollower(TERMINAL_150);
    		TERMINAL_139.addFollower(TERMINAL_151);
    		TERMINAL_139.addFollower(TERMINAL_152);
    		TERMINAL_139.addFollower(TERMINAL_153);
    		TERMINAL_139.addFollower(TERMINAL_154);
    		TERMINAL_139.addFollower(TERMINAL_155);
    		TERMINAL_139.addFollower(TERMINAL_156);
    		TERMINAL_139.addFollower(TERMINAL_157);
    		TERMINAL_139.addFollower(TERMINAL_158);
    		TERMINAL_139.addFollower(TERMINAL_159);
    		TERMINAL_139.addFollower(TERMINAL_160);
    		TERMINAL_139.addFollower(TERMINAL_161);
    		TERMINAL_139.addFollower(TERMINAL_162);
    		TERMINAL_139.addFollower(TERMINAL_163);
    		TERMINAL_139.addFollower(TERMINAL_164);
    		TERMINAL_139.addFollower(TERMINAL_165);
    		TERMINAL_139.addFollower(TERMINAL_166);
    		TERMINAL_139.addFollower(TERMINAL_167);
    		TERMINAL_218.addFollower(TERMINAL_341);
    		TERMINAL_341.addFollower(TERMINAL_273);
    		TERMINAL_341.addFollower(TERMINAL_274);
    		TERMINAL_341.addFollower(TERMINAL_275);
    		TERMINAL_341.addFollower(TERMINAL_276);
    		TERMINAL_273.addFollower(TERMINAL_342);
    		TERMINAL_342.addFollower(TERMINAL_343);
    		TERMINAL_343.addFollower(TERMINAL_273);
    		TERMINAL_343.addFollower(TERMINAL_274);
    		TERMINAL_343.addFollower(TERMINAL_275);
    		TERMINAL_343.addFollower(TERMINAL_276);
    		TERMINAL_274.addFollower(TERMINAL_344);
    		TERMINAL_344.addFollower(TERMINAL_183);
    		TERMINAL_275.addFollower(TERMINAL_345);
    		TERMINAL_345.addFollower(TERMINAL_346);
    		TERMINAL_346.addFollower(TERMINAL_273);
    		TERMINAL_346.addFollower(TERMINAL_274);
    		TERMINAL_346.addFollower(TERMINAL_275);
    		TERMINAL_346.addFollower(TERMINAL_276);
    		TERMINAL_276.addFollower(TERMINAL_81);
    		TERMINAL_276.addFollower(TERMINAL_82);
    		TERMINAL_276.addFollower(TERMINAL_83);
    		TERMINAL_276.addFollower(TERMINAL_84);
    		TERMINAL_276.addFollower(TERMINAL_85);
    		TERMINAL_276.addFollower(TERMINAL_86);
    		TERMINAL_276.addFollower(TERMINAL_87);
    		TERMINAL_276.addFollower(TERMINAL_88);
    		TERMINAL_276.addFollower(TERMINAL_89);
    		TERMINAL_276.addFollower(TERMINAL_90);
    		TERMINAL_276.addFollower(TERMINAL_91);
    		TERMINAL_276.addFollower(TERMINAL_92);
    		TERMINAL_276.addFollower(TERMINAL_93);
    		TERMINAL_276.addFollower(TERMINAL_94);
    		TERMINAL_276.addFollower(TERMINAL_95);
    		TERMINAL_276.addFollower(TERMINAL_96);
    		TERMINAL_276.addFollower(TERMINAL_97);
    		TERMINAL_276.addFollower(TERMINAL_98);
    		TERMINAL_276.addFollower(TERMINAL_99);
    		TERMINAL_276.addFollower(TERMINAL_100);
    		TERMINAL_276.addFollower(TERMINAL_101);
    		TERMINAL_276.addFollower(TERMINAL_102);
    		TERMINAL_276.addFollower(TERMINAL_103);
    		TERMINAL_276.addFollower(TERMINAL_104);
    		TERMINAL_276.addFollower(TERMINAL_105);
    		TERMINAL_276.addFollower(TERMINAL_106);
    		TERMINAL_276.addFollower(TERMINAL_107);
    		TERMINAL_276.addFollower(TERMINAL_108);
    		TERMINAL_276.addFollower(TERMINAL_109);
    		TERMINAL_276.addFollower(TERMINAL_110);
    		TERMINAL_276.addFollower(TERMINAL_111);
    		TERMINAL_276.addFollower(TERMINAL_112);
    		TERMINAL_276.addFollower(TERMINAL_113);
    		TERMINAL_276.addFollower(TERMINAL_114);
    		TERMINAL_276.addFollower(TERMINAL_115);
    		TERMINAL_276.addFollower(TERMINAL_116);
    		TERMINAL_276.addFollower(TERMINAL_117);
    		TERMINAL_276.addFollower(TERMINAL_118);
    		TERMINAL_276.addFollower(TERMINAL_119);
    		TERMINAL_276.addFollower(TERMINAL_120);
    		TERMINAL_276.addFollower(TERMINAL_121);
    		TERMINAL_276.addFollower(TERMINAL_122);
    		TERMINAL_276.addFollower(TERMINAL_123);
    		TERMINAL_276.addFollower(TERMINAL_124);
    		TERMINAL_276.addFollower(TERMINAL_125);
    		TERMINAL_276.addFollower(TERMINAL_126);
    		TERMINAL_276.addFollower(TERMINAL_127);
    		TERMINAL_276.addFollower(TERMINAL_128);
    		TERMINAL_276.addFollower(TERMINAL_129);
    		TERMINAL_276.addFollower(TERMINAL_130);
    		TERMINAL_276.addFollower(TERMINAL_131);
    		TERMINAL_276.addFollower(TERMINAL_132);
    		TERMINAL_276.addFollower(TERMINAL_133);
    		TERMINAL_276.addFollower(TERMINAL_134);
    		TERMINAL_276.addFollower(TERMINAL_135);
    		TERMINAL_276.addFollower(TERMINAL_136);
    		TERMINAL_276.addFollower(TERMINAL_137);
    		TERMINAL_276.addFollower(TERMINAL_138);
    		TERMINAL_276.addFollower(TERMINAL_139);
    		TERMINAL_276.addFollower(TERMINAL_140);
    		TERMINAL_276.addFollower(TERMINAL_141);
    		TERMINAL_276.addFollower(TERMINAL_142);
    		TERMINAL_276.addFollower(TERMINAL_143);
    		TERMINAL_276.addFollower(TERMINAL_144);
    		TERMINAL_276.addFollower(TERMINAL_145);
    		TERMINAL_276.addFollower(TERMINAL_146);
    		TERMINAL_276.addFollower(TERMINAL_147);
    		TERMINAL_276.addFollower(TERMINAL_148);
    		TERMINAL_276.addFollower(TERMINAL_149);
    		TERMINAL_276.addFollower(TERMINAL_150);
    		TERMINAL_276.addFollower(TERMINAL_151);
    		TERMINAL_276.addFollower(TERMINAL_152);
    		TERMINAL_276.addFollower(TERMINAL_153);
    		TERMINAL_276.addFollower(TERMINAL_154);
    		TERMINAL_276.addFollower(TERMINAL_155);
    		TERMINAL_276.addFollower(TERMINAL_156);
    		TERMINAL_276.addFollower(TERMINAL_157);
    		TERMINAL_276.addFollower(TERMINAL_158);
    		TERMINAL_276.addFollower(TERMINAL_159);
    		TERMINAL_276.addFollower(TERMINAL_160);
    		TERMINAL_276.addFollower(TERMINAL_161);
    		TERMINAL_276.addFollower(TERMINAL_162);
    		TERMINAL_276.addFollower(TERMINAL_163);
    		TERMINAL_276.addFollower(TERMINAL_164);
    		TERMINAL_276.addFollower(TERMINAL_165);
    		TERMINAL_276.addFollower(TERMINAL_166);
    		TERMINAL_276.addFollower(TERMINAL_167);
    		TERMINAL_46.addFollower(TERMINAL_53);
    		TERMINAL_46.addFollower(TERMINAL_52);
    		TERMINAL_46.addFollower(TERMINAL_51);
    		TERMINAL_46.addFollower(TERMINAL_56);
    		TERMINAL_46.addFollower(TERMINAL_48);
    		TERMINAL_46.addFollower(TERMINAL_54);
    		TERMINAL_46.addFollower(TERMINAL_57);
    		TERMINAL_46.addFollower(TERMINAL_58);
    		TERMINAL_46.addFollower(TERMINAL_59);
    		TERMINAL_46.addFollower(TERMINAL_50);
    		TERMINAL_46.addFollower(TERMINAL_49);
    		TERMINAL_46.addFollower(TERMINAL_60);
    		TERMINAL_46.addFollower(TERMINAL_55);
    		TERMINAL_46.addFollower(TERMINAL_62);
    		TERMINAL_46.addFollower(TERMINAL_46);
    		TERMINAL_46.addFollower(TERMINAL_347);
    		TERMINAL_46.addFollower(TERMINAL_348);
    		TERMINAL_348.addFollower(TERMINAL_46);
    		TERMINAL_348.addFollower(TERMINAL_47);
    		TERMINAL_348.addFollower(TERMINAL_48);
    		TERMINAL_348.addFollower(TERMINAL_49);
    		TERMINAL_348.addFollower(TERMINAL_50);
    		TERMINAL_348.addFollower(TERMINAL_51);
    		TERMINAL_348.addFollower(TERMINAL_52);
    		TERMINAL_348.addFollower(TERMINAL_53);
    		TERMINAL_348.addFollower(TERMINAL_23);
    		TERMINAL_348.addFollower(TERMINAL_54);
    		TERMINAL_348.addFollower(TERMINAL_55);
    		TERMINAL_348.addFollower(TERMINAL_56);
    		TERMINAL_348.addFollower(TERMINAL_57);
    		TERMINAL_348.addFollower(TERMINAL_58);
    		TERMINAL_348.addFollower(TERMINAL_59);
    		TERMINAL_348.addFollower(TERMINAL_60);
    		TERMINAL_348.addFollower(TERMINAL_61);
    		TERMINAL_348.addFollower(TERMINAL_62);
    		TERMINAL_348.addFollower(TERMINAL_63);
    		TERMINAL_348.addFollower(TERMINAL_64);
    		TERMINAL_348.addFollower(TERMINAL_17);
    		TERMINAL_348.addFollower(TERMINAL_18);
    		TERMINAL_348.addFollower(TERMINAL_40);
    		TERMINAL_348.addFollower(TERMINAL_347);
    		TERMINAL_348.addFollower(TERMINAL_348);
    		TERMINAL_348.addFollower(TERMINAL_349);
    		TERMINAL_348.addFollower(TERMINAL_350);
    		TERMINAL_348.addFollower(TERMINAL_351);
    		TERMINAL_348.addFollower(TERMINAL_352);
    		TERMINAL_348.addFollower(TERMINAL_353);
    		TERMINAL_348.addFollower(TERMINAL_354);
    		TERMINAL_348.addFollower(TERMINAL_355);
    		TERMINAL_348.addFollower(TERMINAL_140);
    		TERMINAL_348.addFollower(TERMINAL_141);
    		TERMINAL_348.addFollower(TERMINAL_142);
    		TERMINAL_348.addFollower(TERMINAL_143);
    		TERMINAL_348.addFollower(TERMINAL_144);
    		TERMINAL_348.addFollower(TERMINAL_145);
    		TERMINAL_348.addFollower(TERMINAL_146);
    		TERMINAL_348.addFollower(TERMINAL_147);
    		TERMINAL_348.addFollower(TERMINAL_153);
    		TERMINAL_348.addFollower(TERMINAL_154);
    		TERMINAL_348.addFollower(TERMINAL_155);
    		TERMINAL_348.addFollower(TERMINAL_156);
    		TERMINAL_348.addFollower(TERMINAL_157);
    		TERMINAL_348.addFollower(TERMINAL_158);
    		TERMINAL_348.addFollower(TERMINAL_159);
    		TERMINAL_348.addFollower(TERMINAL_160);
    		TERMINAL_348.addFollower(TERMINAL_161);
    		TERMINAL_348.addFollower(TERMINAL_162);
    		TERMINAL_348.addFollower(TERMINAL_163);
    		TERMINAL_348.addFollower(TERMINAL_164);
    		TERMINAL_348.addFollower(TERMINAL_165);
    		TERMINAL_348.addFollower(TERMINAL_166);
    		TERMINAL_348.addFollower(TERMINAL_167);
    		TERMINAL_347.addFollower(TERMINAL_356);
    		TERMINAL_347.addFollower(TERMINAL_46);
    		TERMINAL_347.addFollower(TERMINAL_47);
    		TERMINAL_347.addFollower(TERMINAL_48);
    		TERMINAL_347.addFollower(TERMINAL_49);
    		TERMINAL_347.addFollower(TERMINAL_50);
    		TERMINAL_347.addFollower(TERMINAL_51);
    		TERMINAL_347.addFollower(TERMINAL_52);
    		TERMINAL_347.addFollower(TERMINAL_53);
    		TERMINAL_347.addFollower(TERMINAL_23);
    		TERMINAL_347.addFollower(TERMINAL_54);
    		TERMINAL_347.addFollower(TERMINAL_55);
    		TERMINAL_347.addFollower(TERMINAL_56);
    		TERMINAL_347.addFollower(TERMINAL_57);
    		TERMINAL_347.addFollower(TERMINAL_58);
    		TERMINAL_347.addFollower(TERMINAL_59);
    		TERMINAL_347.addFollower(TERMINAL_60);
    		TERMINAL_347.addFollower(TERMINAL_61);
    		TERMINAL_347.addFollower(TERMINAL_62);
    		TERMINAL_347.addFollower(TERMINAL_63);
    		TERMINAL_347.addFollower(TERMINAL_64);
    		TERMINAL_347.addFollower(TERMINAL_347);
    		TERMINAL_347.addFollower(TERMINAL_348);
    		TERMINAL_356.addFollower(TERMINAL_357);
    		TERMINAL_357.addFollower(TERMINAL_358);
    		TERMINAL_358.addFollower(TERMINAL_23);
    	}
    	public static void wire3() {
    		TERMINAL_359.addFollower(TERMINAL_46);
    		TERMINAL_359.addFollower(TERMINAL_47);
    		TERMINAL_359.addFollower(TERMINAL_48);
    		TERMINAL_359.addFollower(TERMINAL_49);
    		TERMINAL_359.addFollower(TERMINAL_50);
    		TERMINAL_359.addFollower(TERMINAL_51);
    		TERMINAL_359.addFollower(TERMINAL_52);
    		TERMINAL_359.addFollower(TERMINAL_53);
    		TERMINAL_359.addFollower(TERMINAL_23);
    		TERMINAL_359.addFollower(TERMINAL_54);
    		TERMINAL_359.addFollower(TERMINAL_55);
    		TERMINAL_359.addFollower(TERMINAL_56);
    		TERMINAL_359.addFollower(TERMINAL_57);
    		TERMINAL_359.addFollower(TERMINAL_58);
    		TERMINAL_359.addFollower(TERMINAL_59);
    		TERMINAL_359.addFollower(TERMINAL_60);
    		TERMINAL_359.addFollower(TERMINAL_61);
    		TERMINAL_359.addFollower(TERMINAL_62);
    		TERMINAL_359.addFollower(TERMINAL_63);
    		TERMINAL_359.addFollower(TERMINAL_64);
    		TERMINAL_359.addFollower(TERMINAL_347);
    		TERMINAL_359.addFollower(TERMINAL_348);
    		TERMINAL_23.addFollower(TERMINAL_359);
    		TERMINAL_23.addFollower(TERMINAL_360);
    		TERMINAL_23.addFollower(TERMINAL_46);
    		TERMINAL_23.addFollower(TERMINAL_47);
    		TERMINAL_23.addFollower(TERMINAL_48);
    		TERMINAL_23.addFollower(TERMINAL_49);
    		TERMINAL_23.addFollower(TERMINAL_50);
    		TERMINAL_23.addFollower(TERMINAL_51);
    		TERMINAL_23.addFollower(TERMINAL_52);
    		TERMINAL_23.addFollower(TERMINAL_53);
    		TERMINAL_23.addFollower(TERMINAL_23);
    		TERMINAL_23.addFollower(TERMINAL_54);
    		TERMINAL_23.addFollower(TERMINAL_55);
    		TERMINAL_23.addFollower(TERMINAL_56);
    		TERMINAL_23.addFollower(TERMINAL_57);
    		TERMINAL_23.addFollower(TERMINAL_58);
    		TERMINAL_23.addFollower(TERMINAL_59);
    		TERMINAL_23.addFollower(TERMINAL_60);
    		TERMINAL_23.addFollower(TERMINAL_61);
    		TERMINAL_23.addFollower(TERMINAL_62);
    		TERMINAL_23.addFollower(TERMINAL_63);
    		TERMINAL_23.addFollower(TERMINAL_64);
    		TERMINAL_23.addFollower(TERMINAL_347);
    		TERMINAL_23.addFollower(TERMINAL_348);
    		TERMINAL_23.addFollower(TERMINAL_349);
    		TERMINAL_23.addFollower(TERMINAL_352);
    		TERMINAL_23.addFollower(TERMINAL_353);
    		TERMINAL_23.addFollower(TERMINAL_354);
    		TERMINAL_23.addFollower(TERMINAL_355);
    		TERMINAL_23.addFollower(TERMINAL_140);
    		TERMINAL_23.addFollower(TERMINAL_141);
    		TERMINAL_23.addFollower(TERMINAL_142);
    		TERMINAL_23.addFollower(TERMINAL_143);
    		TERMINAL_23.addFollower(TERMINAL_144);
    		TERMINAL_23.addFollower(TERMINAL_145);
    		TERMINAL_23.addFollower(TERMINAL_146);
    		TERMINAL_23.addFollower(TERMINAL_147);
    		TERMINAL_23.addFollower(TERMINAL_153);
    		TERMINAL_23.addFollower(TERMINAL_154);
    		TERMINAL_23.addFollower(TERMINAL_155);
    		TERMINAL_23.addFollower(TERMINAL_156);
    		TERMINAL_23.addFollower(TERMINAL_157);
    		TERMINAL_23.addFollower(TERMINAL_158);
    		TERMINAL_23.addFollower(TERMINAL_159);
    		TERMINAL_23.addFollower(TERMINAL_160);
    		TERMINAL_23.addFollower(TERMINAL_161);
    		TERMINAL_23.addFollower(TERMINAL_162);
    		TERMINAL_23.addFollower(TERMINAL_163);
    		TERMINAL_23.addFollower(TERMINAL_164);
    		TERMINAL_23.addFollower(TERMINAL_165);
    		TERMINAL_23.addFollower(TERMINAL_166);
    		TERMINAL_23.addFollower(TERMINAL_167);
    		TERMINAL_23.addFollower(TERMINAL_350);
    		TERMINAL_23.addFollower(TERMINAL_351);
    		TERMINAL_23.addFollower(TERMINAL_277);
    		TERMINAL_23.addFollower(TERMINAL_278);
    		TERMINAL_23.addFollower(TERMINAL_279);
    		TERMINAL_23.addFollower(TERMINAL_280);
    		TERMINAL_23.addFollower(TERMINAL_281);
    		TERMINAL_47.addFollower(TERMINAL_46);
    		TERMINAL_47.addFollower(TERMINAL_47);
    		TERMINAL_47.addFollower(TERMINAL_48);
    		TERMINAL_47.addFollower(TERMINAL_49);
    		TERMINAL_47.addFollower(TERMINAL_50);
    		TERMINAL_47.addFollower(TERMINAL_51);
    		TERMINAL_47.addFollower(TERMINAL_52);
    		TERMINAL_47.addFollower(TERMINAL_53);
    		TERMINAL_47.addFollower(TERMINAL_23);
    		TERMINAL_47.addFollower(TERMINAL_54);
    		TERMINAL_47.addFollower(TERMINAL_55);
    		TERMINAL_47.addFollower(TERMINAL_56);
    		TERMINAL_47.addFollower(TERMINAL_57);
    		TERMINAL_47.addFollower(TERMINAL_58);
    		TERMINAL_47.addFollower(TERMINAL_59);
    		TERMINAL_47.addFollower(TERMINAL_60);
    		TERMINAL_47.addFollower(TERMINAL_61);
    		TERMINAL_47.addFollower(TERMINAL_62);
    		TERMINAL_47.addFollower(TERMINAL_63);
    		TERMINAL_47.addFollower(TERMINAL_64);
    		TERMINAL_48.addFollower(TERMINAL_46);
    		TERMINAL_48.addFollower(TERMINAL_47);
    		TERMINAL_48.addFollower(TERMINAL_48);
    		TERMINAL_48.addFollower(TERMINAL_49);
    		TERMINAL_48.addFollower(TERMINAL_50);
    		TERMINAL_48.addFollower(TERMINAL_51);
    		TERMINAL_48.addFollower(TERMINAL_52);
    		TERMINAL_48.addFollower(TERMINAL_53);
    		TERMINAL_48.addFollower(TERMINAL_23);
    		TERMINAL_48.addFollower(TERMINAL_54);
    		TERMINAL_48.addFollower(TERMINAL_55);
    		TERMINAL_48.addFollower(TERMINAL_56);
    		TERMINAL_48.addFollower(TERMINAL_57);
    		TERMINAL_48.addFollower(TERMINAL_58);
    		TERMINAL_48.addFollower(TERMINAL_59);
    		TERMINAL_48.addFollower(TERMINAL_60);
    		TERMINAL_48.addFollower(TERMINAL_61);
    		TERMINAL_48.addFollower(TERMINAL_62);
    		TERMINAL_48.addFollower(TERMINAL_63);
    		TERMINAL_48.addFollower(TERMINAL_64);
    		TERMINAL_48.addFollower(TERMINAL_347);
    		TERMINAL_48.addFollower(TERMINAL_348);
    		TERMINAL_48.addFollower(TERMINAL_349);
    		TERMINAL_48.addFollower(TERMINAL_350);
    		TERMINAL_48.addFollower(TERMINAL_351);
    		TERMINAL_48.addFollower(TERMINAL_352);
    		TERMINAL_48.addFollower(TERMINAL_353);
    		TERMINAL_48.addFollower(TERMINAL_354);
    		TERMINAL_48.addFollower(TERMINAL_355);
    		TERMINAL_48.addFollower(TERMINAL_140);
    		TERMINAL_48.addFollower(TERMINAL_141);
    		TERMINAL_48.addFollower(TERMINAL_142);
    		TERMINAL_48.addFollower(TERMINAL_143);
    		TERMINAL_48.addFollower(TERMINAL_144);
    		TERMINAL_48.addFollower(TERMINAL_145);
    		TERMINAL_48.addFollower(TERMINAL_146);
    		TERMINAL_48.addFollower(TERMINAL_147);
    		TERMINAL_48.addFollower(TERMINAL_153);
    		TERMINAL_48.addFollower(TERMINAL_154);
    		TERMINAL_48.addFollower(TERMINAL_155);
    		TERMINAL_48.addFollower(TERMINAL_156);
    		TERMINAL_48.addFollower(TERMINAL_157);
    		TERMINAL_48.addFollower(TERMINAL_158);
    		TERMINAL_48.addFollower(TERMINAL_159);
    		TERMINAL_48.addFollower(TERMINAL_160);
    		TERMINAL_48.addFollower(TERMINAL_161);
    		TERMINAL_48.addFollower(TERMINAL_162);
    		TERMINAL_48.addFollower(TERMINAL_163);
    		TERMINAL_48.addFollower(TERMINAL_164);
    		TERMINAL_48.addFollower(TERMINAL_165);
    		TERMINAL_48.addFollower(TERMINAL_166);
    		TERMINAL_48.addFollower(TERMINAL_167);
    		TERMINAL_49.addFollower(TERMINAL_46);
    		TERMINAL_49.addFollower(TERMINAL_47);
    		TERMINAL_49.addFollower(TERMINAL_48);
    		TERMINAL_49.addFollower(TERMINAL_49);
    		TERMINAL_49.addFollower(TERMINAL_50);
    		TERMINAL_49.addFollower(TERMINAL_51);
    		TERMINAL_49.addFollower(TERMINAL_52);
    		TERMINAL_49.addFollower(TERMINAL_53);
    		TERMINAL_49.addFollower(TERMINAL_23);
    		TERMINAL_49.addFollower(TERMINAL_54);
    		TERMINAL_49.addFollower(TERMINAL_55);
    		TERMINAL_49.addFollower(TERMINAL_56);
    		TERMINAL_49.addFollower(TERMINAL_57);
    		TERMINAL_49.addFollower(TERMINAL_58);
    		TERMINAL_49.addFollower(TERMINAL_59);
    		TERMINAL_49.addFollower(TERMINAL_60);
    		TERMINAL_49.addFollower(TERMINAL_61);
    		TERMINAL_49.addFollower(TERMINAL_62);
    		TERMINAL_49.addFollower(TERMINAL_63);
    		TERMINAL_49.addFollower(TERMINAL_64);
    		TERMINAL_49.addFollower(TERMINAL_347);
    		TERMINAL_49.addFollower(TERMINAL_348);
    		TERMINAL_49.addFollower(TERMINAL_349);
    		TERMINAL_49.addFollower(TERMINAL_350);
    		TERMINAL_49.addFollower(TERMINAL_351);
    		TERMINAL_49.addFollower(TERMINAL_352);
    		TERMINAL_49.addFollower(TERMINAL_353);
    		TERMINAL_49.addFollower(TERMINAL_354);
    		TERMINAL_49.addFollower(TERMINAL_355);
    		TERMINAL_49.addFollower(TERMINAL_140);
    		TERMINAL_49.addFollower(TERMINAL_141);
    		TERMINAL_49.addFollower(TERMINAL_142);
    		TERMINAL_49.addFollower(TERMINAL_143);
    		TERMINAL_49.addFollower(TERMINAL_144);
    		TERMINAL_49.addFollower(TERMINAL_145);
    		TERMINAL_49.addFollower(TERMINAL_146);
    		TERMINAL_49.addFollower(TERMINAL_147);
    		TERMINAL_49.addFollower(TERMINAL_153);
    		TERMINAL_49.addFollower(TERMINAL_154);
    		TERMINAL_49.addFollower(TERMINAL_155);
    		TERMINAL_49.addFollower(TERMINAL_156);
    		TERMINAL_49.addFollower(TERMINAL_157);
    		TERMINAL_49.addFollower(TERMINAL_158);
    		TERMINAL_49.addFollower(TERMINAL_159);
    		TERMINAL_49.addFollower(TERMINAL_160);
    		TERMINAL_49.addFollower(TERMINAL_161);
    		TERMINAL_49.addFollower(TERMINAL_162);
    		TERMINAL_49.addFollower(TERMINAL_163);
    		TERMINAL_49.addFollower(TERMINAL_164);
    		TERMINAL_49.addFollower(TERMINAL_165);
    		TERMINAL_49.addFollower(TERMINAL_166);
    		TERMINAL_49.addFollower(TERMINAL_167);
    		TERMINAL_50.addFollower(TERMINAL_46);
    		TERMINAL_50.addFollower(TERMINAL_47);
    		TERMINAL_50.addFollower(TERMINAL_48);
    		TERMINAL_50.addFollower(TERMINAL_49);
    		TERMINAL_50.addFollower(TERMINAL_50);
    		TERMINAL_50.addFollower(TERMINAL_51);
    		TERMINAL_50.addFollower(TERMINAL_52);
    		TERMINAL_50.addFollower(TERMINAL_53);
    		TERMINAL_50.addFollower(TERMINAL_23);
    		TERMINAL_50.addFollower(TERMINAL_54);
    		TERMINAL_50.addFollower(TERMINAL_55);
    		TERMINAL_50.addFollower(TERMINAL_56);
    		TERMINAL_50.addFollower(TERMINAL_57);
    		TERMINAL_50.addFollower(TERMINAL_58);
    		TERMINAL_50.addFollower(TERMINAL_59);
    		TERMINAL_50.addFollower(TERMINAL_60);
    		TERMINAL_50.addFollower(TERMINAL_61);
    		TERMINAL_50.addFollower(TERMINAL_62);
    		TERMINAL_50.addFollower(TERMINAL_63);
    		TERMINAL_50.addFollower(TERMINAL_64);
    		TERMINAL_50.addFollower(TERMINAL_347);
    		TERMINAL_50.addFollower(TERMINAL_348);
    		TERMINAL_50.addFollower(TERMINAL_349);
    		TERMINAL_50.addFollower(TERMINAL_350);
    		TERMINAL_50.addFollower(TERMINAL_351);
    		TERMINAL_50.addFollower(TERMINAL_352);
    		TERMINAL_50.addFollower(TERMINAL_353);
    		TERMINAL_50.addFollower(TERMINAL_354);
    		TERMINAL_50.addFollower(TERMINAL_355);
    		TERMINAL_50.addFollower(TERMINAL_140);
    		TERMINAL_50.addFollower(TERMINAL_141);
    		TERMINAL_50.addFollower(TERMINAL_142);
    		TERMINAL_50.addFollower(TERMINAL_143);
    		TERMINAL_50.addFollower(TERMINAL_144);
    		TERMINAL_50.addFollower(TERMINAL_145);
    		TERMINAL_50.addFollower(TERMINAL_146);
    		TERMINAL_50.addFollower(TERMINAL_147);
    		TERMINAL_50.addFollower(TERMINAL_153);
    		TERMINAL_50.addFollower(TERMINAL_154);
    		TERMINAL_50.addFollower(TERMINAL_155);
    		TERMINAL_50.addFollower(TERMINAL_156);
    		TERMINAL_50.addFollower(TERMINAL_157);
    		TERMINAL_50.addFollower(TERMINAL_158);
    		TERMINAL_50.addFollower(TERMINAL_159);
    		TERMINAL_50.addFollower(TERMINAL_160);
    		TERMINAL_50.addFollower(TERMINAL_161);
    		TERMINAL_50.addFollower(TERMINAL_162);
    		TERMINAL_50.addFollower(TERMINAL_163);
    		TERMINAL_50.addFollower(TERMINAL_164);
    		TERMINAL_50.addFollower(TERMINAL_165);
    		TERMINAL_50.addFollower(TERMINAL_166);
    		TERMINAL_50.addFollower(TERMINAL_167);
    		TERMINAL_51.addFollower(TERMINAL_56);
    		TERMINAL_51.addFollower(TERMINAL_48);
    		TERMINAL_51.addFollower(TERMINAL_54);
    		TERMINAL_51.addFollower(TERMINAL_57);
    		TERMINAL_51.addFollower(TERMINAL_58);
    		TERMINAL_51.addFollower(TERMINAL_59);
    		TERMINAL_51.addFollower(TERMINAL_50);
    		TERMINAL_51.addFollower(TERMINAL_49);
    		TERMINAL_51.addFollower(TERMINAL_60);
    		TERMINAL_51.addFollower(TERMINAL_51);
    		TERMINAL_361.addFollower(TERMINAL_48);
    		TERMINAL_361.addFollower(TERMINAL_46);
    		TERMINAL_361.addFollower(TERMINAL_56);
    		TERMINAL_361.addFollower(TERMINAL_54);
    		TERMINAL_361.addFollower(TERMINAL_57);
    		TERMINAL_361.addFollower(TERMINAL_58);
    		TERMINAL_361.addFollower(TERMINAL_59);
    		TERMINAL_361.addFollower(TERMINAL_50);
    		TERMINAL_361.addFollower(TERMINAL_49);
    		TERMINAL_361.addFollower(TERMINAL_60);
    		TERMINAL_361.addFollower(TERMINAL_55);
    		TERMINAL_361.addFollower(TERMINAL_61);
    		TERMINAL_361.addFollower(TERMINAL_53);
    		TERMINAL_350.addFollower(TERMINAL_48);
    		TERMINAL_351.addFollower(TERMINAL_46);
    		TERMINAL_351.addFollower(TERMINAL_47);
    		TERMINAL_351.addFollower(TERMINAL_48);
    		TERMINAL_351.addFollower(TERMINAL_49);
    		TERMINAL_351.addFollower(TERMINAL_50);
    		TERMINAL_351.addFollower(TERMINAL_51);
    		TERMINAL_351.addFollower(TERMINAL_52);
    		TERMINAL_351.addFollower(TERMINAL_53);
    		TERMINAL_351.addFollower(TERMINAL_23);
    		TERMINAL_351.addFollower(TERMINAL_54);
    		TERMINAL_351.addFollower(TERMINAL_55);
    		TERMINAL_351.addFollower(TERMINAL_56);
    		TERMINAL_351.addFollower(TERMINAL_57);
    		TERMINAL_351.addFollower(TERMINAL_58);
    		TERMINAL_351.addFollower(TERMINAL_59);
    		TERMINAL_351.addFollower(TERMINAL_60);
    		TERMINAL_351.addFollower(TERMINAL_61);
    		TERMINAL_351.addFollower(TERMINAL_62);
    		TERMINAL_351.addFollower(TERMINAL_63);
    		TERMINAL_351.addFollower(TERMINAL_64);
    		TERMINAL_351.addFollower(TERMINAL_347);
    		TERMINAL_351.addFollower(TERMINAL_348);
    		TERMINAL_351.addFollower(TERMINAL_349);
    		TERMINAL_351.addFollower(TERMINAL_350);
    		TERMINAL_351.addFollower(TERMINAL_351);
    		TERMINAL_351.addFollower(TERMINAL_352);
    		TERMINAL_351.addFollower(TERMINAL_353);
    		TERMINAL_351.addFollower(TERMINAL_354);
    		TERMINAL_351.addFollower(TERMINAL_355);
    		TERMINAL_351.addFollower(TERMINAL_140);
    		TERMINAL_351.addFollower(TERMINAL_141);
    		TERMINAL_351.addFollower(TERMINAL_142);
    		TERMINAL_351.addFollower(TERMINAL_143);
    		TERMINAL_351.addFollower(TERMINAL_144);
    		TERMINAL_351.addFollower(TERMINAL_145);
    		TERMINAL_351.addFollower(TERMINAL_146);
    		TERMINAL_351.addFollower(TERMINAL_147);
    		TERMINAL_351.addFollower(TERMINAL_153);
    		TERMINAL_351.addFollower(TERMINAL_154);
    		TERMINAL_351.addFollower(TERMINAL_155);
    		TERMINAL_351.addFollower(TERMINAL_156);
    		TERMINAL_351.addFollower(TERMINAL_157);
    		TERMINAL_351.addFollower(TERMINAL_158);
    		TERMINAL_351.addFollower(TERMINAL_159);
    		TERMINAL_351.addFollower(TERMINAL_160);
    		TERMINAL_351.addFollower(TERMINAL_161);
    		TERMINAL_351.addFollower(TERMINAL_162);
    		TERMINAL_351.addFollower(TERMINAL_163);
    		TERMINAL_351.addFollower(TERMINAL_164);
    		TERMINAL_351.addFollower(TERMINAL_165);
    		TERMINAL_351.addFollower(TERMINAL_166);
    		TERMINAL_351.addFollower(TERMINAL_167);
    		TERMINAL_52.addFollower(TERMINAL_46);
    		TERMINAL_52.addFollower(TERMINAL_47);
    		TERMINAL_52.addFollower(TERMINAL_48);
    		TERMINAL_52.addFollower(TERMINAL_49);
    		TERMINAL_52.addFollower(TERMINAL_50);
    		TERMINAL_52.addFollower(TERMINAL_51);
    		TERMINAL_52.addFollower(TERMINAL_52);
    		TERMINAL_52.addFollower(TERMINAL_53);
    		TERMINAL_52.addFollower(TERMINAL_23);
    		TERMINAL_52.addFollower(TERMINAL_54);
    		TERMINAL_52.addFollower(TERMINAL_55);
    		TERMINAL_52.addFollower(TERMINAL_56);
    		TERMINAL_52.addFollower(TERMINAL_57);
    		TERMINAL_52.addFollower(TERMINAL_58);
    		TERMINAL_52.addFollower(TERMINAL_59);
    		TERMINAL_52.addFollower(TERMINAL_60);
    		TERMINAL_52.addFollower(TERMINAL_61);
    		TERMINAL_52.addFollower(TERMINAL_62);
    		TERMINAL_52.addFollower(TERMINAL_63);
    		TERMINAL_52.addFollower(TERMINAL_64);
    		TERMINAL_52.addFollower(TERMINAL_349);
    		TERMINAL_349.addFollower(TERMINAL_46);
    		TERMINAL_349.addFollower(TERMINAL_47);
    		TERMINAL_349.addFollower(TERMINAL_48);
    		TERMINAL_349.addFollower(TERMINAL_49);
    		TERMINAL_349.addFollower(TERMINAL_50);
    		TERMINAL_349.addFollower(TERMINAL_51);
    		TERMINAL_349.addFollower(TERMINAL_52);
    		TERMINAL_349.addFollower(TERMINAL_53);
    		TERMINAL_349.addFollower(TERMINAL_23);
    		TERMINAL_349.addFollower(TERMINAL_54);
    		TERMINAL_349.addFollower(TERMINAL_55);
    		TERMINAL_349.addFollower(TERMINAL_56);
    		TERMINAL_349.addFollower(TERMINAL_57);
    		TERMINAL_349.addFollower(TERMINAL_58);
    		TERMINAL_349.addFollower(TERMINAL_59);
    		TERMINAL_349.addFollower(TERMINAL_60);
    		TERMINAL_349.addFollower(TERMINAL_61);
    		TERMINAL_349.addFollower(TERMINAL_62);
    		TERMINAL_349.addFollower(TERMINAL_63);
    		TERMINAL_349.addFollower(TERMINAL_64);
    		TERMINAL_362.addFollower(TERMINAL_46);
    		TERMINAL_362.addFollower(TERMINAL_47);
    		TERMINAL_362.addFollower(TERMINAL_48);
    		TERMINAL_362.addFollower(TERMINAL_49);
    		TERMINAL_362.addFollower(TERMINAL_50);
    		TERMINAL_362.addFollower(TERMINAL_51);
    		TERMINAL_362.addFollower(TERMINAL_52);
    		TERMINAL_362.addFollower(TERMINAL_53);
    		TERMINAL_362.addFollower(TERMINAL_23);
    		TERMINAL_362.addFollower(TERMINAL_54);
    		TERMINAL_362.addFollower(TERMINAL_55);
    		TERMINAL_362.addFollower(TERMINAL_56);
    		TERMINAL_362.addFollower(TERMINAL_57);
    		TERMINAL_362.addFollower(TERMINAL_58);
    		TERMINAL_362.addFollower(TERMINAL_59);
    		TERMINAL_362.addFollower(TERMINAL_60);
    		TERMINAL_362.addFollower(TERMINAL_61);
    		TERMINAL_362.addFollower(TERMINAL_62);
    		TERMINAL_362.addFollower(TERMINAL_63);
    		TERMINAL_362.addFollower(TERMINAL_64);
    		TERMINAL_53.addFollower(TERMINAL_363);
    		TERMINAL_363.addFollower(TERMINAL_364);
    		TERMINAL_364.addFollower(TERMINAL_23);
    		TERMINAL_360.addFollower(TERMINAL_46);
    		TERMINAL_360.addFollower(TERMINAL_47);
    		TERMINAL_360.addFollower(TERMINAL_48);
    		TERMINAL_360.addFollower(TERMINAL_49);
    		TERMINAL_360.addFollower(TERMINAL_50);
    		TERMINAL_360.addFollower(TERMINAL_51);
    		TERMINAL_360.addFollower(TERMINAL_52);
    		TERMINAL_360.addFollower(TERMINAL_53);
    		TERMINAL_360.addFollower(TERMINAL_23);
    		TERMINAL_360.addFollower(TERMINAL_54);
    		TERMINAL_360.addFollower(TERMINAL_55);
    		TERMINAL_360.addFollower(TERMINAL_56);
    		TERMINAL_360.addFollower(TERMINAL_57);
    		TERMINAL_360.addFollower(TERMINAL_58);
    		TERMINAL_360.addFollower(TERMINAL_59);
    		TERMINAL_360.addFollower(TERMINAL_60);
    		TERMINAL_360.addFollower(TERMINAL_61);
    		TERMINAL_360.addFollower(TERMINAL_62);
    		TERMINAL_360.addFollower(TERMINAL_63);
    		TERMINAL_360.addFollower(TERMINAL_64);
    		TERMINAL_54.addFollower(TERMINAL_46);
    		TERMINAL_54.addFollower(TERMINAL_47);
    		TERMINAL_54.addFollower(TERMINAL_48);
    		TERMINAL_54.addFollower(TERMINAL_49);
    		TERMINAL_54.addFollower(TERMINAL_50);
    		TERMINAL_54.addFollower(TERMINAL_51);
    		TERMINAL_54.addFollower(TERMINAL_52);
    		TERMINAL_54.addFollower(TERMINAL_53);
    		TERMINAL_54.addFollower(TERMINAL_23);
    		TERMINAL_54.addFollower(TERMINAL_54);
    		TERMINAL_54.addFollower(TERMINAL_55);
    		TERMINAL_54.addFollower(TERMINAL_56);
    		TERMINAL_54.addFollower(TERMINAL_57);
    		TERMINAL_54.addFollower(TERMINAL_58);
    		TERMINAL_54.addFollower(TERMINAL_59);
    		TERMINAL_54.addFollower(TERMINAL_60);
    		TERMINAL_54.addFollower(TERMINAL_61);
    		TERMINAL_54.addFollower(TERMINAL_62);
    		TERMINAL_54.addFollower(TERMINAL_63);
    		TERMINAL_54.addFollower(TERMINAL_64);
    		TERMINAL_54.addFollower(TERMINAL_347);
    		TERMINAL_54.addFollower(TERMINAL_348);
    		TERMINAL_54.addFollower(TERMINAL_349);
    		TERMINAL_54.addFollower(TERMINAL_350);
    		TERMINAL_54.addFollower(TERMINAL_351);
    		TERMINAL_54.addFollower(TERMINAL_352);
    		TERMINAL_54.addFollower(TERMINAL_353);
    		TERMINAL_54.addFollower(TERMINAL_354);
    		TERMINAL_54.addFollower(TERMINAL_355);
    		TERMINAL_54.addFollower(TERMINAL_140);
    		TERMINAL_54.addFollower(TERMINAL_141);
    		TERMINAL_54.addFollower(TERMINAL_142);
    		TERMINAL_54.addFollower(TERMINAL_143);
    		TERMINAL_54.addFollower(TERMINAL_144);
    		TERMINAL_54.addFollower(TERMINAL_145);
    		TERMINAL_54.addFollower(TERMINAL_146);
    		TERMINAL_54.addFollower(TERMINAL_147);
    		TERMINAL_54.addFollower(TERMINAL_153);
    		TERMINAL_54.addFollower(TERMINAL_154);
    		TERMINAL_54.addFollower(TERMINAL_155);
    		TERMINAL_54.addFollower(TERMINAL_156);
    		TERMINAL_54.addFollower(TERMINAL_157);
    		TERMINAL_54.addFollower(TERMINAL_158);
    		TERMINAL_54.addFollower(TERMINAL_159);
    		TERMINAL_54.addFollower(TERMINAL_160);
    		TERMINAL_54.addFollower(TERMINAL_161);
    		TERMINAL_54.addFollower(TERMINAL_162);
    		TERMINAL_54.addFollower(TERMINAL_163);
    		TERMINAL_54.addFollower(TERMINAL_164);
    		TERMINAL_54.addFollower(TERMINAL_165);
    		TERMINAL_54.addFollower(TERMINAL_166);
    		TERMINAL_54.addFollower(TERMINAL_167);
    		TERMINAL_54.addFollower(TERMINAL_365);
    		TERMINAL_54.addFollower(TERMINAL_366);
    		TERMINAL_55.addFollower(TERMINAL_46);
    		TERMINAL_55.addFollower(TERMINAL_47);
    		TERMINAL_55.addFollower(TERMINAL_48);
    		TERMINAL_55.addFollower(TERMINAL_49);
    		TERMINAL_55.addFollower(TERMINAL_50);
    		TERMINAL_55.addFollower(TERMINAL_51);
    		TERMINAL_55.addFollower(TERMINAL_52);
    		TERMINAL_55.addFollower(TERMINAL_53);
    		TERMINAL_55.addFollower(TERMINAL_23);
    		TERMINAL_55.addFollower(TERMINAL_54);
    		TERMINAL_55.addFollower(TERMINAL_55);
    		TERMINAL_55.addFollower(TERMINAL_56);
    		TERMINAL_55.addFollower(TERMINAL_57);
    		TERMINAL_55.addFollower(TERMINAL_58);
    		TERMINAL_55.addFollower(TERMINAL_59);
    		TERMINAL_55.addFollower(TERMINAL_60);
    		TERMINAL_55.addFollower(TERMINAL_61);
    		TERMINAL_55.addFollower(TERMINAL_62);
    		TERMINAL_55.addFollower(TERMINAL_63);
    		TERMINAL_55.addFollower(TERMINAL_64);
    		TERMINAL_55.addFollower(TERMINAL_353);
    		TERMINAL_352.addFollower(TERMINAL_46);
    		TERMINAL_352.addFollower(TERMINAL_47);
    		TERMINAL_352.addFollower(TERMINAL_48);
    		TERMINAL_352.addFollower(TERMINAL_49);
    		TERMINAL_352.addFollower(TERMINAL_50);
    		TERMINAL_352.addFollower(TERMINAL_51);
    		TERMINAL_352.addFollower(TERMINAL_52);
    		TERMINAL_352.addFollower(TERMINAL_53);
    		TERMINAL_352.addFollower(TERMINAL_23);
    		TERMINAL_352.addFollower(TERMINAL_54);
    		TERMINAL_352.addFollower(TERMINAL_55);
    		TERMINAL_352.addFollower(TERMINAL_56);
    		TERMINAL_352.addFollower(TERMINAL_57);
    		TERMINAL_352.addFollower(TERMINAL_58);
    		TERMINAL_352.addFollower(TERMINAL_59);
    		TERMINAL_352.addFollower(TERMINAL_60);
    		TERMINAL_352.addFollower(TERMINAL_61);
    		TERMINAL_352.addFollower(TERMINAL_62);
    		TERMINAL_352.addFollower(TERMINAL_63);
    		TERMINAL_352.addFollower(TERMINAL_64);
    		TERMINAL_353.addFollower(TERMINAL_46);
    		TERMINAL_353.addFollower(TERMINAL_47);
    		TERMINAL_353.addFollower(TERMINAL_48);
    		TERMINAL_353.addFollower(TERMINAL_49);
    		TERMINAL_353.addFollower(TERMINAL_50);
    		TERMINAL_353.addFollower(TERMINAL_51);
    		TERMINAL_353.addFollower(TERMINAL_52);
    		TERMINAL_353.addFollower(TERMINAL_53);
    		TERMINAL_353.addFollower(TERMINAL_23);
    		TERMINAL_353.addFollower(TERMINAL_54);
    		TERMINAL_353.addFollower(TERMINAL_55);
    		TERMINAL_353.addFollower(TERMINAL_56);
    		TERMINAL_353.addFollower(TERMINAL_57);
    		TERMINAL_353.addFollower(TERMINAL_58);
    		TERMINAL_353.addFollower(TERMINAL_59);
    		TERMINAL_353.addFollower(TERMINAL_60);
    		TERMINAL_353.addFollower(TERMINAL_61);
    		TERMINAL_353.addFollower(TERMINAL_62);
    		TERMINAL_353.addFollower(TERMINAL_63);
    		TERMINAL_353.addFollower(TERMINAL_64);
    		TERMINAL_353.addFollower(TERMINAL_347);
    		TERMINAL_353.addFollower(TERMINAL_348);
    		TERMINAL_353.addFollower(TERMINAL_349);
    		TERMINAL_353.addFollower(TERMINAL_350);
    		TERMINAL_353.addFollower(TERMINAL_351);
    		TERMINAL_353.addFollower(TERMINAL_352);
    		TERMINAL_353.addFollower(TERMINAL_353);
    		TERMINAL_353.addFollower(TERMINAL_354);
    		TERMINAL_353.addFollower(TERMINAL_355);
    		TERMINAL_353.addFollower(TERMINAL_140);
    		TERMINAL_353.addFollower(TERMINAL_141);
    		TERMINAL_353.addFollower(TERMINAL_142);
    		TERMINAL_353.addFollower(TERMINAL_143);
    		TERMINAL_353.addFollower(TERMINAL_144);
    		TERMINAL_353.addFollower(TERMINAL_145);
    		TERMINAL_353.addFollower(TERMINAL_146);
    		TERMINAL_353.addFollower(TERMINAL_147);
    		TERMINAL_353.addFollower(TERMINAL_153);
    		TERMINAL_353.addFollower(TERMINAL_154);
    		TERMINAL_353.addFollower(TERMINAL_155);
    		TERMINAL_353.addFollower(TERMINAL_156);
    		TERMINAL_353.addFollower(TERMINAL_157);
    		TERMINAL_353.addFollower(TERMINAL_158);
    		TERMINAL_353.addFollower(TERMINAL_159);
    		TERMINAL_353.addFollower(TERMINAL_160);
    		TERMINAL_353.addFollower(TERMINAL_161);
    		TERMINAL_353.addFollower(TERMINAL_162);
    		TERMINAL_353.addFollower(TERMINAL_163);
    		TERMINAL_353.addFollower(TERMINAL_164);
    		TERMINAL_353.addFollower(TERMINAL_165);
    		TERMINAL_353.addFollower(TERMINAL_166);
    		TERMINAL_353.addFollower(TERMINAL_167);
    		TERMINAL_365.addFollower(TERMINAL_56);
    		TERMINAL_365.addFollower(TERMINAL_48);
    		TERMINAL_365.addFollower(TERMINAL_54);
    		TERMINAL_365.addFollower(TERMINAL_57);
    		TERMINAL_365.addFollower(TERMINAL_58);
    		TERMINAL_365.addFollower(TERMINAL_59);
    		TERMINAL_365.addFollower(TERMINAL_50);
    		TERMINAL_365.addFollower(TERMINAL_49);
    		TERMINAL_365.addFollower(TERMINAL_60);
    		TERMINAL_365.addFollower(TERMINAL_55);
    		TERMINAL_365.addFollower(TERMINAL_61);
    		TERMINAL_365.addFollower(TERMINAL_64);
    		TERMINAL_366.addFollower(TERMINAL_367);
    		TERMINAL_367.addFollower(TERMINAL_56);
    		TERMINAL_367.addFollower(TERMINAL_48);
    		TERMINAL_367.addFollower(TERMINAL_54);
    		TERMINAL_367.addFollower(TERMINAL_57);
    		TERMINAL_367.addFollower(TERMINAL_58);
    		TERMINAL_367.addFollower(TERMINAL_59);
    		TERMINAL_367.addFollower(TERMINAL_50);
    		TERMINAL_367.addFollower(TERMINAL_49);
    		TERMINAL_367.addFollower(TERMINAL_60);
    		TERMINAL_367.addFollower(TERMINAL_55);
    		TERMINAL_367.addFollower(TERMINAL_61);
    		TERMINAL_367.addFollower(TERMINAL_64);
    		TERMINAL_57.addFollower(TERMINAL_46);
    		TERMINAL_57.addFollower(TERMINAL_47);
    		TERMINAL_57.addFollower(TERMINAL_48);
    		TERMINAL_57.addFollower(TERMINAL_49);
    		TERMINAL_57.addFollower(TERMINAL_50);
    		TERMINAL_57.addFollower(TERMINAL_51);
    		TERMINAL_57.addFollower(TERMINAL_52);
    		TERMINAL_57.addFollower(TERMINAL_53);
    		TERMINAL_57.addFollower(TERMINAL_23);
    		TERMINAL_57.addFollower(TERMINAL_54);
    		TERMINAL_57.addFollower(TERMINAL_55);
    		TERMINAL_57.addFollower(TERMINAL_56);
    		TERMINAL_57.addFollower(TERMINAL_57);
    		TERMINAL_57.addFollower(TERMINAL_58);
    		TERMINAL_57.addFollower(TERMINAL_59);
    		TERMINAL_57.addFollower(TERMINAL_60);
    		TERMINAL_57.addFollower(TERMINAL_61);
    		TERMINAL_57.addFollower(TERMINAL_62);
    		TERMINAL_57.addFollower(TERMINAL_63);
    		TERMINAL_57.addFollower(TERMINAL_64);
    		TERMINAL_57.addFollower(TERMINAL_347);
    		TERMINAL_57.addFollower(TERMINAL_348);
    		TERMINAL_57.addFollower(TERMINAL_349);
    		TERMINAL_57.addFollower(TERMINAL_350);
    		TERMINAL_57.addFollower(TERMINAL_351);
    		TERMINAL_57.addFollower(TERMINAL_352);
    		TERMINAL_57.addFollower(TERMINAL_353);
    		TERMINAL_57.addFollower(TERMINAL_354);
    		TERMINAL_57.addFollower(TERMINAL_355);
    		TERMINAL_57.addFollower(TERMINAL_140);
    		TERMINAL_57.addFollower(TERMINAL_141);
    		TERMINAL_57.addFollower(TERMINAL_142);
    		TERMINAL_57.addFollower(TERMINAL_143);
    		TERMINAL_57.addFollower(TERMINAL_144);
    		TERMINAL_57.addFollower(TERMINAL_145);
    		TERMINAL_57.addFollower(TERMINAL_146);
    		TERMINAL_57.addFollower(TERMINAL_147);
    		TERMINAL_57.addFollower(TERMINAL_153);
    		TERMINAL_57.addFollower(TERMINAL_154);
    		TERMINAL_57.addFollower(TERMINAL_155);
    		TERMINAL_57.addFollower(TERMINAL_156);
    		TERMINAL_57.addFollower(TERMINAL_157);
    		TERMINAL_57.addFollower(TERMINAL_158);
    		TERMINAL_57.addFollower(TERMINAL_159);
    		TERMINAL_57.addFollower(TERMINAL_160);
    		TERMINAL_57.addFollower(TERMINAL_161);
    		TERMINAL_57.addFollower(TERMINAL_162);
    		TERMINAL_57.addFollower(TERMINAL_163);
    		TERMINAL_57.addFollower(TERMINAL_164);
    		TERMINAL_57.addFollower(TERMINAL_165);
    		TERMINAL_57.addFollower(TERMINAL_166);
    		TERMINAL_57.addFollower(TERMINAL_167);
    		TERMINAL_57.addFollower(TERMINAL_365);
    		TERMINAL_57.addFollower(TERMINAL_366);
    		TERMINAL_59.addFollower(TERMINAL_46);
    		TERMINAL_59.addFollower(TERMINAL_47);
    		TERMINAL_59.addFollower(TERMINAL_48);
    		TERMINAL_59.addFollower(TERMINAL_49);
    		TERMINAL_59.addFollower(TERMINAL_50);
    		TERMINAL_59.addFollower(TERMINAL_51);
    		TERMINAL_59.addFollower(TERMINAL_52);
    		TERMINAL_59.addFollower(TERMINAL_53);
    		TERMINAL_59.addFollower(TERMINAL_23);
    		TERMINAL_59.addFollower(TERMINAL_54);
    		TERMINAL_59.addFollower(TERMINAL_55);
    		TERMINAL_59.addFollower(TERMINAL_56);
    		TERMINAL_59.addFollower(TERMINAL_57);
    		TERMINAL_59.addFollower(TERMINAL_58);
    		TERMINAL_59.addFollower(TERMINAL_59);
    		TERMINAL_59.addFollower(TERMINAL_60);
    		TERMINAL_59.addFollower(TERMINAL_61);
    		TERMINAL_59.addFollower(TERMINAL_62);
    		TERMINAL_59.addFollower(TERMINAL_63);
    		TERMINAL_59.addFollower(TERMINAL_64);
    		TERMINAL_59.addFollower(TERMINAL_347);
    		TERMINAL_59.addFollower(TERMINAL_348);
    		TERMINAL_59.addFollower(TERMINAL_349);
    		TERMINAL_59.addFollower(TERMINAL_350);
    		TERMINAL_59.addFollower(TERMINAL_351);
    		TERMINAL_59.addFollower(TERMINAL_352);
    		TERMINAL_59.addFollower(TERMINAL_353);
    		TERMINAL_59.addFollower(TERMINAL_354);
    		TERMINAL_59.addFollower(TERMINAL_355);
    		TERMINAL_59.addFollower(TERMINAL_140);
    		TERMINAL_59.addFollower(TERMINAL_141);
    		TERMINAL_59.addFollower(TERMINAL_142);
    		TERMINAL_59.addFollower(TERMINAL_143);
    		TERMINAL_59.addFollower(TERMINAL_144);
    		TERMINAL_59.addFollower(TERMINAL_145);
    		TERMINAL_59.addFollower(TERMINAL_146);
    		TERMINAL_59.addFollower(TERMINAL_147);
    		TERMINAL_59.addFollower(TERMINAL_153);
    		TERMINAL_59.addFollower(TERMINAL_154);
    		TERMINAL_59.addFollower(TERMINAL_155);
    		TERMINAL_59.addFollower(TERMINAL_156);
    		TERMINAL_59.addFollower(TERMINAL_157);
    		TERMINAL_59.addFollower(TERMINAL_158);
    		TERMINAL_59.addFollower(TERMINAL_159);
    		TERMINAL_59.addFollower(TERMINAL_160);
    		TERMINAL_59.addFollower(TERMINAL_161);
    		TERMINAL_59.addFollower(TERMINAL_162);
    		TERMINAL_59.addFollower(TERMINAL_163);
    		TERMINAL_59.addFollower(TERMINAL_164);
    		TERMINAL_59.addFollower(TERMINAL_165);
    		TERMINAL_59.addFollower(TERMINAL_166);
    		TERMINAL_59.addFollower(TERMINAL_167);
    		TERMINAL_56.addFollower(TERMINAL_48);
    		TERMINAL_56.addFollower(TERMINAL_54);
    		TERMINAL_56.addFollower(TERMINAL_57);
    		TERMINAL_56.addFollower(TERMINAL_58);
    		TERMINAL_56.addFollower(TERMINAL_59);
    		TERMINAL_56.addFollower(TERMINAL_50);
    		TERMINAL_56.addFollower(TERMINAL_49);
    		TERMINAL_368.addFollower(TERMINAL_373);
    		TERMINAL_373.addFollower(TERMINAL_368);
    		TERMINAL_373.addFollower(TERMINAL_369);
    		TERMINAL_373.addFollower(TERMINAL_370);
    		TERMINAL_373.addFollower(TERMINAL_371);
    		TERMINAL_373.addFollower(TERMINAL_372);
    		TERMINAL_369.addFollower(TERMINAL_374);
    		TERMINAL_374.addFollower(TERMINAL_375);
    		TERMINAL_375.addFollower(TERMINAL_46);
    		TERMINAL_375.addFollower(TERMINAL_47);
    		TERMINAL_375.addFollower(TERMINAL_48);
    		TERMINAL_375.addFollower(TERMINAL_49);
    		TERMINAL_375.addFollower(TERMINAL_50);
    		TERMINAL_375.addFollower(TERMINAL_51);
    		TERMINAL_375.addFollower(TERMINAL_52);
    		TERMINAL_375.addFollower(TERMINAL_53);
    		TERMINAL_375.addFollower(TERMINAL_23);
    		TERMINAL_375.addFollower(TERMINAL_54);
    		TERMINAL_375.addFollower(TERMINAL_55);
    		TERMINAL_375.addFollower(TERMINAL_56);
    		TERMINAL_375.addFollower(TERMINAL_57);
    		TERMINAL_375.addFollower(TERMINAL_58);
    		TERMINAL_375.addFollower(TERMINAL_59);
    		TERMINAL_375.addFollower(TERMINAL_60);
    		TERMINAL_375.addFollower(TERMINAL_61);
    		TERMINAL_375.addFollower(TERMINAL_62);
    		TERMINAL_375.addFollower(TERMINAL_63);
    		TERMINAL_375.addFollower(TERMINAL_64);
    		TERMINAL_375.addFollower(TERMINAL_355);
    		TERMINAL_354.addFollower(TERMINAL_46);
    		TERMINAL_354.addFollower(TERMINAL_47);
    		TERMINAL_354.addFollower(TERMINAL_48);
    		TERMINAL_354.addFollower(TERMINAL_49);
    		TERMINAL_354.addFollower(TERMINAL_50);
    		TERMINAL_354.addFollower(TERMINAL_51);
    		TERMINAL_354.addFollower(TERMINAL_52);
    		TERMINAL_354.addFollower(TERMINAL_53);
    		TERMINAL_354.addFollower(TERMINAL_23);
    		TERMINAL_354.addFollower(TERMINAL_54);
    		TERMINAL_354.addFollower(TERMINAL_55);
    		TERMINAL_354.addFollower(TERMINAL_56);
    		TERMINAL_354.addFollower(TERMINAL_57);
    		TERMINAL_354.addFollower(TERMINAL_58);
    		TERMINAL_354.addFollower(TERMINAL_59);
    		TERMINAL_354.addFollower(TERMINAL_60);
    		TERMINAL_354.addFollower(TERMINAL_61);
    		TERMINAL_354.addFollower(TERMINAL_62);
    		TERMINAL_354.addFollower(TERMINAL_63);
    		TERMINAL_354.addFollower(TERMINAL_64);
    		TERMINAL_355.addFollower(TERMINAL_368);
    		TERMINAL_355.addFollower(TERMINAL_369);
    		TERMINAL_355.addFollower(TERMINAL_370);
    		TERMINAL_355.addFollower(TERMINAL_371);
    		TERMINAL_355.addFollower(TERMINAL_372);
    		TERMINAL_370.addFollower(TERMINAL_376);
    		TERMINAL_376.addFollower(TERMINAL_368);
    		TERMINAL_376.addFollower(TERMINAL_369);
    		TERMINAL_376.addFollower(TERMINAL_370);
    		TERMINAL_376.addFollower(TERMINAL_371);
    		TERMINAL_376.addFollower(TERMINAL_372);
    		TERMINAL_371.addFollower(TERMINAL_377);
    		TERMINAL_377.addFollower(TERMINAL_368);
    		TERMINAL_377.addFollower(TERMINAL_369);
    		TERMINAL_377.addFollower(TERMINAL_370);
    		TERMINAL_377.addFollower(TERMINAL_371);
    		TERMINAL_377.addFollower(TERMINAL_372);
    		TERMINAL_372.addFollower(TERMINAL_46);
    		TERMINAL_372.addFollower(TERMINAL_47);
    		TERMINAL_372.addFollower(TERMINAL_48);
    		TERMINAL_372.addFollower(TERMINAL_49);
    		TERMINAL_372.addFollower(TERMINAL_50);
    		TERMINAL_372.addFollower(TERMINAL_51);
    		TERMINAL_372.addFollower(TERMINAL_52);
    		TERMINAL_372.addFollower(TERMINAL_53);
    		TERMINAL_372.addFollower(TERMINAL_23);
    		TERMINAL_372.addFollower(TERMINAL_54);
    		TERMINAL_372.addFollower(TERMINAL_55);
    		TERMINAL_372.addFollower(TERMINAL_56);
    		TERMINAL_372.addFollower(TERMINAL_57);
    		TERMINAL_372.addFollower(TERMINAL_58);
    		TERMINAL_372.addFollower(TERMINAL_59);
    		TERMINAL_372.addFollower(TERMINAL_60);
    		TERMINAL_372.addFollower(TERMINAL_61);
    		TERMINAL_372.addFollower(TERMINAL_62);
    		TERMINAL_372.addFollower(TERMINAL_63);
    		TERMINAL_372.addFollower(TERMINAL_64);
    		TERMINAL_378.addFollower(TERMINAL_46);
    		TERMINAL_378.addFollower(TERMINAL_47);
    		TERMINAL_378.addFollower(TERMINAL_48);
    		TERMINAL_378.addFollower(TERMINAL_49);
    		TERMINAL_378.addFollower(TERMINAL_50);
    		TERMINAL_378.addFollower(TERMINAL_51);
    		TERMINAL_378.addFollower(TERMINAL_52);
    		TERMINAL_378.addFollower(TERMINAL_53);
    		TERMINAL_378.addFollower(TERMINAL_23);
    		TERMINAL_378.addFollower(TERMINAL_54);
    		TERMINAL_378.addFollower(TERMINAL_55);
    		TERMINAL_378.addFollower(TERMINAL_56);
    		TERMINAL_378.addFollower(TERMINAL_57);
    		TERMINAL_378.addFollower(TERMINAL_58);
    		TERMINAL_378.addFollower(TERMINAL_59);
    		TERMINAL_378.addFollower(TERMINAL_60);
    		TERMINAL_378.addFollower(TERMINAL_61);
    		TERMINAL_378.addFollower(TERMINAL_62);
    		TERMINAL_378.addFollower(TERMINAL_63);
    		TERMINAL_378.addFollower(TERMINAL_64);
    		TERMINAL_378.addFollower(TERMINAL_347);
    		TERMINAL_378.addFollower(TERMINAL_348);
    		TERMINAL_378.addFollower(TERMINAL_349);
    		TERMINAL_378.addFollower(TERMINAL_350);
    		TERMINAL_378.addFollower(TERMINAL_351);
    		TERMINAL_378.addFollower(TERMINAL_352);
    		TERMINAL_378.addFollower(TERMINAL_353);
    		TERMINAL_378.addFollower(TERMINAL_354);
    		TERMINAL_378.addFollower(TERMINAL_355);
    		TERMINAL_378.addFollower(TERMINAL_140);
    		TERMINAL_378.addFollower(TERMINAL_141);
    		TERMINAL_378.addFollower(TERMINAL_142);
    		TERMINAL_378.addFollower(TERMINAL_143);
    		TERMINAL_378.addFollower(TERMINAL_144);
    		TERMINAL_378.addFollower(TERMINAL_145);
    		TERMINAL_378.addFollower(TERMINAL_146);
    		TERMINAL_378.addFollower(TERMINAL_147);
    		TERMINAL_378.addFollower(TERMINAL_153);
    		TERMINAL_378.addFollower(TERMINAL_154);
    		TERMINAL_378.addFollower(TERMINAL_155);
    		TERMINAL_378.addFollower(TERMINAL_156);
    		TERMINAL_378.addFollower(TERMINAL_157);
    		TERMINAL_378.addFollower(TERMINAL_158);
    		TERMINAL_378.addFollower(TERMINAL_159);
    		TERMINAL_378.addFollower(TERMINAL_160);
    		TERMINAL_378.addFollower(TERMINAL_161);
    		TERMINAL_378.addFollower(TERMINAL_162);
    		TERMINAL_378.addFollower(TERMINAL_163);
    		TERMINAL_378.addFollower(TERMINAL_164);
    		TERMINAL_378.addFollower(TERMINAL_165);
    		TERMINAL_378.addFollower(TERMINAL_166);
    		TERMINAL_378.addFollower(TERMINAL_167);
    		TERMINAL_378.addFollower(TERMINAL_365);
    		TERMINAL_378.addFollower(TERMINAL_366);
    		TERMINAL_379.addFollower(TERMINAL_384);
    		TERMINAL_384.addFollower(TERMINAL_379);
    		TERMINAL_384.addFollower(TERMINAL_380);
    		TERMINAL_384.addFollower(TERMINAL_381);
    		TERMINAL_384.addFollower(TERMINAL_382);
    		TERMINAL_384.addFollower(TERMINAL_383);
    		TERMINAL_380.addFollower(TERMINAL_385);
    		TERMINAL_385.addFollower(TERMINAL_386);
    		TERMINAL_386.addFollower(TERMINAL_46);
    		TERMINAL_386.addFollower(TERMINAL_47);
    		TERMINAL_386.addFollower(TERMINAL_48);
    		TERMINAL_386.addFollower(TERMINAL_49);
    		TERMINAL_386.addFollower(TERMINAL_50);
    		TERMINAL_386.addFollower(TERMINAL_51);
    		TERMINAL_386.addFollower(TERMINAL_52);
    		TERMINAL_386.addFollower(TERMINAL_53);
    		TERMINAL_386.addFollower(TERMINAL_23);
    		TERMINAL_386.addFollower(TERMINAL_54);
    		TERMINAL_386.addFollower(TERMINAL_55);
    		TERMINAL_386.addFollower(TERMINAL_56);
    		TERMINAL_386.addFollower(TERMINAL_57);
    		TERMINAL_386.addFollower(TERMINAL_58);
    		TERMINAL_386.addFollower(TERMINAL_59);
    		TERMINAL_386.addFollower(TERMINAL_60);
    		TERMINAL_386.addFollower(TERMINAL_61);
    		TERMINAL_386.addFollower(TERMINAL_62);
    		TERMINAL_386.addFollower(TERMINAL_63);
    		TERMINAL_386.addFollower(TERMINAL_64);
    		TERMINAL_386.addFollower(TERMINAL_387);
    		TERMINAL_388.addFollower(TERMINAL_46);
    		TERMINAL_388.addFollower(TERMINAL_47);
    		TERMINAL_388.addFollower(TERMINAL_48);
    		TERMINAL_388.addFollower(TERMINAL_49);
    		TERMINAL_388.addFollower(TERMINAL_50);
    		TERMINAL_388.addFollower(TERMINAL_51);
    		TERMINAL_388.addFollower(TERMINAL_52);
    		TERMINAL_388.addFollower(TERMINAL_53);
    		TERMINAL_388.addFollower(TERMINAL_23);
    		TERMINAL_388.addFollower(TERMINAL_54);
    		TERMINAL_388.addFollower(TERMINAL_55);
    		TERMINAL_388.addFollower(TERMINAL_56);
    		TERMINAL_388.addFollower(TERMINAL_57);
    		TERMINAL_388.addFollower(TERMINAL_58);
    		TERMINAL_388.addFollower(TERMINAL_59);
    		TERMINAL_388.addFollower(TERMINAL_60);
    		TERMINAL_388.addFollower(TERMINAL_61);
    		TERMINAL_388.addFollower(TERMINAL_62);
    		TERMINAL_388.addFollower(TERMINAL_63);
    		TERMINAL_388.addFollower(TERMINAL_64);
    		TERMINAL_387.addFollower(TERMINAL_379);
    		TERMINAL_387.addFollower(TERMINAL_380);
    		TERMINAL_387.addFollower(TERMINAL_381);
    		TERMINAL_387.addFollower(TERMINAL_382);
    		TERMINAL_387.addFollower(TERMINAL_383);
    		TERMINAL_381.addFollower(TERMINAL_389);
    		TERMINAL_389.addFollower(TERMINAL_379);
    		TERMINAL_389.addFollower(TERMINAL_380);
    		TERMINAL_389.addFollower(TERMINAL_381);
    		TERMINAL_389.addFollower(TERMINAL_382);
    		TERMINAL_389.addFollower(TERMINAL_383);
    		TERMINAL_382.addFollower(TERMINAL_390);
    		TERMINAL_390.addFollower(TERMINAL_379);
    		TERMINAL_390.addFollower(TERMINAL_380);
    		TERMINAL_390.addFollower(TERMINAL_381);
    		TERMINAL_390.addFollower(TERMINAL_382);
    		TERMINAL_390.addFollower(TERMINAL_383);
    		TERMINAL_383.addFollower(TERMINAL_46);
    		TERMINAL_383.addFollower(TERMINAL_47);
    		TERMINAL_383.addFollower(TERMINAL_48);
    		TERMINAL_383.addFollower(TERMINAL_49);
    		TERMINAL_383.addFollower(TERMINAL_50);
    		TERMINAL_383.addFollower(TERMINAL_51);
    		TERMINAL_383.addFollower(TERMINAL_52);
    		TERMINAL_383.addFollower(TERMINAL_53);
    		TERMINAL_383.addFollower(TERMINAL_23);
    		TERMINAL_383.addFollower(TERMINAL_54);
    		TERMINAL_383.addFollower(TERMINAL_55);
    		TERMINAL_383.addFollower(TERMINAL_56);
    		TERMINAL_383.addFollower(TERMINAL_57);
    		TERMINAL_383.addFollower(TERMINAL_58);
    		TERMINAL_383.addFollower(TERMINAL_59);
    		TERMINAL_383.addFollower(TERMINAL_60);
    		TERMINAL_383.addFollower(TERMINAL_61);
    		TERMINAL_383.addFollower(TERMINAL_62);
    		TERMINAL_383.addFollower(TERMINAL_63);
    		TERMINAL_383.addFollower(TERMINAL_64);
    		TERMINAL_391.addFollower(TERMINAL_399);
    		TERMINAL_399.addFollower(TERMINAL_391);
    		TERMINAL_399.addFollower(TERMINAL_392);
    		TERMINAL_399.addFollower(TERMINAL_393);
    		TERMINAL_399.addFollower(TERMINAL_394);
    		TERMINAL_399.addFollower(TERMINAL_395);
    		TERMINAL_399.addFollower(TERMINAL_396);
    		TERMINAL_399.addFollower(TERMINAL_397);
    		TERMINAL_399.addFollower(TERMINAL_398);
    		TERMINAL_399.addFollower(TERMINAL_46);
    		TERMINAL_399.addFollower(TERMINAL_47);
    		TERMINAL_399.addFollower(TERMINAL_48);
    		TERMINAL_399.addFollower(TERMINAL_49);
    		TERMINAL_399.addFollower(TERMINAL_50);
    		TERMINAL_399.addFollower(TERMINAL_51);
    		TERMINAL_399.addFollower(TERMINAL_52);
    		TERMINAL_399.addFollower(TERMINAL_53);
    		TERMINAL_399.addFollower(TERMINAL_23);
    		TERMINAL_399.addFollower(TERMINAL_54);
    		TERMINAL_399.addFollower(TERMINAL_55);
    		TERMINAL_399.addFollower(TERMINAL_56);
    		TERMINAL_399.addFollower(TERMINAL_57);
    		TERMINAL_399.addFollower(TERMINAL_58);
    		TERMINAL_399.addFollower(TERMINAL_59);
    		TERMINAL_399.addFollower(TERMINAL_60);
    		TERMINAL_399.addFollower(TERMINAL_61);
    		TERMINAL_399.addFollower(TERMINAL_62);
    		TERMINAL_399.addFollower(TERMINAL_63);
    		TERMINAL_399.addFollower(TERMINAL_64);
    		TERMINAL_399.addFollower(TERMINAL_347);
    		TERMINAL_399.addFollower(TERMINAL_348);
    		TERMINAL_399.addFollower(TERMINAL_349);
    		TERMINAL_399.addFollower(TERMINAL_350);
    		TERMINAL_399.addFollower(TERMINAL_351);
    		TERMINAL_399.addFollower(TERMINAL_352);
    		TERMINAL_399.addFollower(TERMINAL_353);
    		TERMINAL_399.addFollower(TERMINAL_354);
    		TERMINAL_399.addFollower(TERMINAL_355);
    		TERMINAL_399.addFollower(TERMINAL_140);
    		TERMINAL_399.addFollower(TERMINAL_141);
    		TERMINAL_399.addFollower(TERMINAL_142);
    		TERMINAL_399.addFollower(TERMINAL_143);
    		TERMINAL_399.addFollower(TERMINAL_144);
    		TERMINAL_399.addFollower(TERMINAL_145);
    		TERMINAL_399.addFollower(TERMINAL_146);
    		TERMINAL_399.addFollower(TERMINAL_147);
    		TERMINAL_399.addFollower(TERMINAL_153);
    		TERMINAL_399.addFollower(TERMINAL_154);
    		TERMINAL_399.addFollower(TERMINAL_155);
    		TERMINAL_399.addFollower(TERMINAL_156);
    		TERMINAL_399.addFollower(TERMINAL_157);
    		TERMINAL_399.addFollower(TERMINAL_158);
    		TERMINAL_399.addFollower(TERMINAL_159);
    		TERMINAL_399.addFollower(TERMINAL_160);
    		TERMINAL_399.addFollower(TERMINAL_161);
    		TERMINAL_399.addFollower(TERMINAL_162);
    		TERMINAL_399.addFollower(TERMINAL_163);
    		TERMINAL_399.addFollower(TERMINAL_164);
    		TERMINAL_399.addFollower(TERMINAL_165);
    		TERMINAL_399.addFollower(TERMINAL_166);
    		TERMINAL_399.addFollower(TERMINAL_167);
    		TERMINAL_399.addFollower(TERMINAL_365);
    		TERMINAL_399.addFollower(TERMINAL_366);
    		TERMINAL_392.addFollower(TERMINAL_400);
    		TERMINAL_400.addFollower(TERMINAL_401);
    		TERMINAL_401.addFollower(TERMINAL_46);
    		TERMINAL_401.addFollower(TERMINAL_47);
    		TERMINAL_401.addFollower(TERMINAL_48);
    		TERMINAL_401.addFollower(TERMINAL_49);
    		TERMINAL_401.addFollower(TERMINAL_50);
    		TERMINAL_401.addFollower(TERMINAL_51);
    		TERMINAL_401.addFollower(TERMINAL_52);
    		TERMINAL_401.addFollower(TERMINAL_53);
    		TERMINAL_401.addFollower(TERMINAL_23);
    		TERMINAL_401.addFollower(TERMINAL_54);
    		TERMINAL_401.addFollower(TERMINAL_55);
    		TERMINAL_401.addFollower(TERMINAL_56);
    		TERMINAL_401.addFollower(TERMINAL_57);
    		TERMINAL_401.addFollower(TERMINAL_58);
    		TERMINAL_401.addFollower(TERMINAL_59);
    		TERMINAL_401.addFollower(TERMINAL_60);
    		TERMINAL_401.addFollower(TERMINAL_61);
    		TERMINAL_401.addFollower(TERMINAL_62);
    		TERMINAL_401.addFollower(TERMINAL_63);
    		TERMINAL_401.addFollower(TERMINAL_64);
    		TERMINAL_401.addFollower(TERMINAL_402);
    		TERMINAL_403.addFollower(TERMINAL_46);
    		TERMINAL_403.addFollower(TERMINAL_47);
    		TERMINAL_403.addFollower(TERMINAL_48);
    		TERMINAL_403.addFollower(TERMINAL_49);
    		TERMINAL_403.addFollower(TERMINAL_50);
    		TERMINAL_403.addFollower(TERMINAL_51);
    		TERMINAL_403.addFollower(TERMINAL_52);
    		TERMINAL_403.addFollower(TERMINAL_53);
    		TERMINAL_403.addFollower(TERMINAL_23);
    		TERMINAL_403.addFollower(TERMINAL_54);
    		TERMINAL_403.addFollower(TERMINAL_55);
    		TERMINAL_403.addFollower(TERMINAL_56);
    		TERMINAL_403.addFollower(TERMINAL_57);
    		TERMINAL_403.addFollower(TERMINAL_58);
    		TERMINAL_403.addFollower(TERMINAL_59);
    		TERMINAL_403.addFollower(TERMINAL_60);
    		TERMINAL_403.addFollower(TERMINAL_61);
    		TERMINAL_403.addFollower(TERMINAL_62);
    		TERMINAL_403.addFollower(TERMINAL_63);
    		TERMINAL_403.addFollower(TERMINAL_64);
    		TERMINAL_402.addFollower(TERMINAL_391);
    		TERMINAL_402.addFollower(TERMINAL_392);
    		TERMINAL_402.addFollower(TERMINAL_393);
    		TERMINAL_402.addFollower(TERMINAL_394);
    		TERMINAL_402.addFollower(TERMINAL_395);
    		TERMINAL_402.addFollower(TERMINAL_396);
    		TERMINAL_402.addFollower(TERMINAL_397);
    		TERMINAL_402.addFollower(TERMINAL_398);
    		TERMINAL_402.addFollower(TERMINAL_46);
    		TERMINAL_402.addFollower(TERMINAL_47);
    		TERMINAL_402.addFollower(TERMINAL_48);
    		TERMINAL_402.addFollower(TERMINAL_49);
    		TERMINAL_402.addFollower(TERMINAL_50);
    		TERMINAL_402.addFollower(TERMINAL_51);
    		TERMINAL_402.addFollower(TERMINAL_52);
    		TERMINAL_402.addFollower(TERMINAL_53);
    		TERMINAL_402.addFollower(TERMINAL_23);
    		TERMINAL_402.addFollower(TERMINAL_54);
    		TERMINAL_402.addFollower(TERMINAL_55);
    		TERMINAL_402.addFollower(TERMINAL_56);
    		TERMINAL_402.addFollower(TERMINAL_57);
    		TERMINAL_402.addFollower(TERMINAL_58);
    		TERMINAL_402.addFollower(TERMINAL_59);
    		TERMINAL_402.addFollower(TERMINAL_60);
    		TERMINAL_402.addFollower(TERMINAL_61);
    		TERMINAL_402.addFollower(TERMINAL_62);
    		TERMINAL_402.addFollower(TERMINAL_63);
    		TERMINAL_402.addFollower(TERMINAL_64);
    		TERMINAL_402.addFollower(TERMINAL_347);
    		TERMINAL_402.addFollower(TERMINAL_348);
    		TERMINAL_402.addFollower(TERMINAL_349);
    		TERMINAL_402.addFollower(TERMINAL_350);
    		TERMINAL_402.addFollower(TERMINAL_351);
    		TERMINAL_402.addFollower(TERMINAL_352);
    		TERMINAL_402.addFollower(TERMINAL_353);
    		TERMINAL_402.addFollower(TERMINAL_354);
    		TERMINAL_402.addFollower(TERMINAL_355);
    		TERMINAL_402.addFollower(TERMINAL_140);
    		TERMINAL_402.addFollower(TERMINAL_141);
    		TERMINAL_402.addFollower(TERMINAL_142);
    		TERMINAL_402.addFollower(TERMINAL_143);
    		TERMINAL_402.addFollower(TERMINAL_144);
    		TERMINAL_402.addFollower(TERMINAL_145);
    		TERMINAL_402.addFollower(TERMINAL_146);
    		TERMINAL_402.addFollower(TERMINAL_147);
    		TERMINAL_402.addFollower(TERMINAL_153);
    		TERMINAL_402.addFollower(TERMINAL_154);
    		TERMINAL_402.addFollower(TERMINAL_155);
    		TERMINAL_402.addFollower(TERMINAL_156);
    		TERMINAL_402.addFollower(TERMINAL_157);
    		TERMINAL_402.addFollower(TERMINAL_158);
    		TERMINAL_402.addFollower(TERMINAL_159);
    		TERMINAL_402.addFollower(TERMINAL_160);
    		TERMINAL_402.addFollower(TERMINAL_161);
    		TERMINAL_402.addFollower(TERMINAL_162);
    		TERMINAL_402.addFollower(TERMINAL_163);
    		TERMINAL_402.addFollower(TERMINAL_164);
    		TERMINAL_402.addFollower(TERMINAL_165);
    		TERMINAL_402.addFollower(TERMINAL_166);
    		TERMINAL_402.addFollower(TERMINAL_167);
    		TERMINAL_402.addFollower(TERMINAL_365);
    		TERMINAL_402.addFollower(TERMINAL_366);
    		TERMINAL_393.addFollower(TERMINAL_404);
    		TERMINAL_404.addFollower(TERMINAL_391);
    		TERMINAL_404.addFollower(TERMINAL_392);
    		TERMINAL_404.addFollower(TERMINAL_393);
    		TERMINAL_404.addFollower(TERMINAL_394);
    		TERMINAL_404.addFollower(TERMINAL_395);
    		TERMINAL_404.addFollower(TERMINAL_396);
    		TERMINAL_404.addFollower(TERMINAL_397);
    		TERMINAL_404.addFollower(TERMINAL_398);
    		TERMINAL_404.addFollower(TERMINAL_46);
    		TERMINAL_404.addFollower(TERMINAL_47);
    		TERMINAL_404.addFollower(TERMINAL_48);
    		TERMINAL_404.addFollower(TERMINAL_49);
    		TERMINAL_404.addFollower(TERMINAL_50);
    		TERMINAL_404.addFollower(TERMINAL_51);
    		TERMINAL_404.addFollower(TERMINAL_52);
    		TERMINAL_404.addFollower(TERMINAL_53);
    		TERMINAL_404.addFollower(TERMINAL_23);
    		TERMINAL_404.addFollower(TERMINAL_54);
    		TERMINAL_404.addFollower(TERMINAL_55);
    		TERMINAL_404.addFollower(TERMINAL_56);
    		TERMINAL_404.addFollower(TERMINAL_57);
    		TERMINAL_404.addFollower(TERMINAL_58);
    		TERMINAL_404.addFollower(TERMINAL_59);
    		TERMINAL_404.addFollower(TERMINAL_60);
    		TERMINAL_404.addFollower(TERMINAL_61);
    		TERMINAL_404.addFollower(TERMINAL_62);
    		TERMINAL_404.addFollower(TERMINAL_63);
    		TERMINAL_404.addFollower(TERMINAL_64);
    		TERMINAL_404.addFollower(TERMINAL_347);
    		TERMINAL_404.addFollower(TERMINAL_348);
    		TERMINAL_404.addFollower(TERMINAL_349);
    		TERMINAL_404.addFollower(TERMINAL_350);
    		TERMINAL_404.addFollower(TERMINAL_351);
    		TERMINAL_404.addFollower(TERMINAL_352);
    		TERMINAL_404.addFollower(TERMINAL_353);
    		TERMINAL_404.addFollower(TERMINAL_354);
    		TERMINAL_404.addFollower(TERMINAL_355);
    		TERMINAL_404.addFollower(TERMINAL_140);
    		TERMINAL_404.addFollower(TERMINAL_141);
    		TERMINAL_404.addFollower(TERMINAL_142);
    		TERMINAL_404.addFollower(TERMINAL_143);
    		TERMINAL_404.addFollower(TERMINAL_144);
    		TERMINAL_404.addFollower(TERMINAL_145);
    		TERMINAL_404.addFollower(TERMINAL_146);
    		TERMINAL_404.addFollower(TERMINAL_147);
    		TERMINAL_404.addFollower(TERMINAL_153);
    		TERMINAL_404.addFollower(TERMINAL_154);
    		TERMINAL_404.addFollower(TERMINAL_155);
    		TERMINAL_404.addFollower(TERMINAL_156);
    		TERMINAL_404.addFollower(TERMINAL_157);
    		TERMINAL_404.addFollower(TERMINAL_158);
    		TERMINAL_404.addFollower(TERMINAL_159);
    		TERMINAL_404.addFollower(TERMINAL_160);
    		TERMINAL_404.addFollower(TERMINAL_161);
    		TERMINAL_404.addFollower(TERMINAL_162);
    		TERMINAL_404.addFollower(TERMINAL_163);
    		TERMINAL_404.addFollower(TERMINAL_164);
    		TERMINAL_404.addFollower(TERMINAL_165);
    		TERMINAL_404.addFollower(TERMINAL_166);
    		TERMINAL_404.addFollower(TERMINAL_167);
    		TERMINAL_404.addFollower(TERMINAL_365);
    		TERMINAL_404.addFollower(TERMINAL_366);
    		TERMINAL_394.addFollower(TERMINAL_405);
    		TERMINAL_405.addFollower(TERMINAL_391);
    		TERMINAL_405.addFollower(TERMINAL_392);
    		TERMINAL_405.addFollower(TERMINAL_393);
    		TERMINAL_405.addFollower(TERMINAL_394);
    		TERMINAL_405.addFollower(TERMINAL_395);
    		TERMINAL_405.addFollower(TERMINAL_396);
    		TERMINAL_405.addFollower(TERMINAL_397);
    		TERMINAL_405.addFollower(TERMINAL_398);
    		TERMINAL_405.addFollower(TERMINAL_46);
    		TERMINAL_405.addFollower(TERMINAL_47);
    		TERMINAL_405.addFollower(TERMINAL_48);
    		TERMINAL_405.addFollower(TERMINAL_49);
    		TERMINAL_405.addFollower(TERMINAL_50);
    		TERMINAL_405.addFollower(TERMINAL_51);
    		TERMINAL_405.addFollower(TERMINAL_52);
    		TERMINAL_405.addFollower(TERMINAL_53);
    		TERMINAL_405.addFollower(TERMINAL_23);
    		TERMINAL_405.addFollower(TERMINAL_54);
    		TERMINAL_405.addFollower(TERMINAL_55);
    		TERMINAL_405.addFollower(TERMINAL_56);
    		TERMINAL_405.addFollower(TERMINAL_57);
    		TERMINAL_405.addFollower(TERMINAL_58);
    		TERMINAL_405.addFollower(TERMINAL_59);
    		TERMINAL_405.addFollower(TERMINAL_60);
    		TERMINAL_405.addFollower(TERMINAL_61);
    		TERMINAL_405.addFollower(TERMINAL_62);
    		TERMINAL_405.addFollower(TERMINAL_63);
    		TERMINAL_405.addFollower(TERMINAL_64);
    		TERMINAL_405.addFollower(TERMINAL_347);
    		TERMINAL_405.addFollower(TERMINAL_348);
    		TERMINAL_405.addFollower(TERMINAL_349);
    		TERMINAL_405.addFollower(TERMINAL_350);
    		TERMINAL_405.addFollower(TERMINAL_351);
    		TERMINAL_405.addFollower(TERMINAL_352);
    		TERMINAL_405.addFollower(TERMINAL_353);
    		TERMINAL_405.addFollower(TERMINAL_354);
    		TERMINAL_405.addFollower(TERMINAL_355);
    		TERMINAL_405.addFollower(TERMINAL_140);
    		TERMINAL_405.addFollower(TERMINAL_141);
    		TERMINAL_405.addFollower(TERMINAL_142);
    		TERMINAL_405.addFollower(TERMINAL_143);
    		TERMINAL_405.addFollower(TERMINAL_144);
    		TERMINAL_405.addFollower(TERMINAL_145);
    		TERMINAL_405.addFollower(TERMINAL_146);
    		TERMINAL_405.addFollower(TERMINAL_147);
    		TERMINAL_405.addFollower(TERMINAL_153);
    		TERMINAL_405.addFollower(TERMINAL_154);
    		TERMINAL_405.addFollower(TERMINAL_155);
    		TERMINAL_405.addFollower(TERMINAL_156);
    		TERMINAL_405.addFollower(TERMINAL_157);
    		TERMINAL_405.addFollower(TERMINAL_158);
    		TERMINAL_405.addFollower(TERMINAL_159);
    		TERMINAL_405.addFollower(TERMINAL_160);
    		TERMINAL_405.addFollower(TERMINAL_161);
    		TERMINAL_405.addFollower(TERMINAL_162);
    		TERMINAL_405.addFollower(TERMINAL_163);
    		TERMINAL_405.addFollower(TERMINAL_164);
    		TERMINAL_405.addFollower(TERMINAL_165);
    		TERMINAL_405.addFollower(TERMINAL_166);
    		TERMINAL_405.addFollower(TERMINAL_167);
    		TERMINAL_405.addFollower(TERMINAL_365);
    		TERMINAL_405.addFollower(TERMINAL_366);
    		TERMINAL_395.addFollower(TERMINAL_46);
    		TERMINAL_395.addFollower(TERMINAL_47);
    		TERMINAL_395.addFollower(TERMINAL_48);
    		TERMINAL_395.addFollower(TERMINAL_49);
    		TERMINAL_395.addFollower(TERMINAL_50);
    		TERMINAL_395.addFollower(TERMINAL_51);
    		TERMINAL_395.addFollower(TERMINAL_52);
    		TERMINAL_395.addFollower(TERMINAL_53);
    		TERMINAL_395.addFollower(TERMINAL_23);
    		TERMINAL_395.addFollower(TERMINAL_54);
    		TERMINAL_395.addFollower(TERMINAL_55);
    		TERMINAL_395.addFollower(TERMINAL_56);
    		TERMINAL_395.addFollower(TERMINAL_57);
    		TERMINAL_395.addFollower(TERMINAL_58);
    		TERMINAL_395.addFollower(TERMINAL_59);
    		TERMINAL_395.addFollower(TERMINAL_60);
    		TERMINAL_395.addFollower(TERMINAL_61);
    		TERMINAL_395.addFollower(TERMINAL_62);
    		TERMINAL_395.addFollower(TERMINAL_63);
    		TERMINAL_395.addFollower(TERMINAL_64);
    		TERMINAL_396.addFollower(TERMINAL_46);
    		TERMINAL_396.addFollower(TERMINAL_47);
    		TERMINAL_396.addFollower(TERMINAL_48);
    		TERMINAL_396.addFollower(TERMINAL_49);
    		TERMINAL_396.addFollower(TERMINAL_50);
    		TERMINAL_396.addFollower(TERMINAL_51);
    		TERMINAL_396.addFollower(TERMINAL_52);
    		TERMINAL_396.addFollower(TERMINAL_53);
    		TERMINAL_396.addFollower(TERMINAL_23);
    		TERMINAL_396.addFollower(TERMINAL_54);
    		TERMINAL_396.addFollower(TERMINAL_55);
    		TERMINAL_396.addFollower(TERMINAL_56);
    		TERMINAL_396.addFollower(TERMINAL_57);
    		TERMINAL_396.addFollower(TERMINAL_58);
    		TERMINAL_396.addFollower(TERMINAL_59);
    		TERMINAL_396.addFollower(TERMINAL_60);
    		TERMINAL_396.addFollower(TERMINAL_61);
    		TERMINAL_396.addFollower(TERMINAL_62);
    		TERMINAL_396.addFollower(TERMINAL_63);
    		TERMINAL_396.addFollower(TERMINAL_64);
    		TERMINAL_397.addFollower(TERMINAL_46);
    		TERMINAL_397.addFollower(TERMINAL_47);
    		TERMINAL_397.addFollower(TERMINAL_48);
    		TERMINAL_397.addFollower(TERMINAL_49);
    		TERMINAL_397.addFollower(TERMINAL_50);
    		TERMINAL_397.addFollower(TERMINAL_51);
    		TERMINAL_397.addFollower(TERMINAL_52);
    		TERMINAL_397.addFollower(TERMINAL_53);
    		TERMINAL_397.addFollower(TERMINAL_23);
    		TERMINAL_397.addFollower(TERMINAL_54);
    		TERMINAL_397.addFollower(TERMINAL_55);
    		TERMINAL_397.addFollower(TERMINAL_56);
    		TERMINAL_397.addFollower(TERMINAL_57);
    		TERMINAL_397.addFollower(TERMINAL_58);
    		TERMINAL_397.addFollower(TERMINAL_59);
    		TERMINAL_397.addFollower(TERMINAL_60);
    		TERMINAL_397.addFollower(TERMINAL_61);
    		TERMINAL_397.addFollower(TERMINAL_62);
    		TERMINAL_397.addFollower(TERMINAL_63);
    		TERMINAL_397.addFollower(TERMINAL_64);
    		TERMINAL_398.addFollower(TERMINAL_46);
    		TERMINAL_398.addFollower(TERMINAL_47);
    		TERMINAL_398.addFollower(TERMINAL_48);
    		TERMINAL_398.addFollower(TERMINAL_49);
    		TERMINAL_398.addFollower(TERMINAL_50);
    		TERMINAL_398.addFollower(TERMINAL_51);
    		TERMINAL_398.addFollower(TERMINAL_52);
    		TERMINAL_398.addFollower(TERMINAL_53);
    		TERMINAL_398.addFollower(TERMINAL_23);
    		TERMINAL_398.addFollower(TERMINAL_54);
    		TERMINAL_398.addFollower(TERMINAL_55);
    		TERMINAL_398.addFollower(TERMINAL_56);
    		TERMINAL_398.addFollower(TERMINAL_57);
    		TERMINAL_398.addFollower(TERMINAL_58);
    		TERMINAL_398.addFollower(TERMINAL_59);
    		TERMINAL_398.addFollower(TERMINAL_60);
    		TERMINAL_398.addFollower(TERMINAL_61);
    		TERMINAL_398.addFollower(TERMINAL_62);
    		TERMINAL_398.addFollower(TERMINAL_63);
    		TERMINAL_398.addFollower(TERMINAL_64);
    		TERMINAL_60.addFollower(TERMINAL_48);
    		TERMINAL_60.addFollower(TERMINAL_54);
    		TERMINAL_60.addFollower(TERMINAL_57);
    		TERMINAL_60.addFollower(TERMINAL_58);
    		TERMINAL_60.addFollower(TERMINAL_59);
    		TERMINAL_60.addFollower(TERMINAL_50);
    		TERMINAL_60.addFollower(TERMINAL_49);
    		TERMINAL_406.addFollower(TERMINAL_415);
    		TERMINAL_415.addFollower(TERMINAL_406);
    		TERMINAL_415.addFollower(TERMINAL_407);
    		TERMINAL_415.addFollower(TERMINAL_408);
    		TERMINAL_415.addFollower(TERMINAL_409);
    		TERMINAL_415.addFollower(TERMINAL_410);
    		TERMINAL_415.addFollower(TERMINAL_411);
    		TERMINAL_415.addFollower(TERMINAL_412);
    		TERMINAL_415.addFollower(TERMINAL_413);
    		TERMINAL_415.addFollower(TERMINAL_414);
    		TERMINAL_407.addFollower(TERMINAL_416);
    		TERMINAL_416.addFollower(TERMINAL_417);
    		TERMINAL_417.addFollower(TERMINAL_46);
    		TERMINAL_417.addFollower(TERMINAL_47);
    		TERMINAL_417.addFollower(TERMINAL_48);
    		TERMINAL_417.addFollower(TERMINAL_49);
    		TERMINAL_417.addFollower(TERMINAL_50);
    		TERMINAL_417.addFollower(TERMINAL_51);
    		TERMINAL_417.addFollower(TERMINAL_52);
    		TERMINAL_417.addFollower(TERMINAL_53);
    		TERMINAL_417.addFollower(TERMINAL_23);
    		TERMINAL_417.addFollower(TERMINAL_54);
    		TERMINAL_417.addFollower(TERMINAL_55);
    		TERMINAL_417.addFollower(TERMINAL_56);
    		TERMINAL_417.addFollower(TERMINAL_57);
    		TERMINAL_417.addFollower(TERMINAL_58);
    		TERMINAL_417.addFollower(TERMINAL_59);
    		TERMINAL_417.addFollower(TERMINAL_60);
    		TERMINAL_417.addFollower(TERMINAL_61);
    		TERMINAL_417.addFollower(TERMINAL_62);
    		TERMINAL_417.addFollower(TERMINAL_63);
    		TERMINAL_417.addFollower(TERMINAL_64);
    		TERMINAL_417.addFollower(TERMINAL_418);
    		TERMINAL_419.addFollower(TERMINAL_46);
    		TERMINAL_419.addFollower(TERMINAL_47);
    		TERMINAL_419.addFollower(TERMINAL_48);
    		TERMINAL_419.addFollower(TERMINAL_49);
    		TERMINAL_419.addFollower(TERMINAL_50);
    		TERMINAL_419.addFollower(TERMINAL_51);
    		TERMINAL_419.addFollower(TERMINAL_52);
    		TERMINAL_419.addFollower(TERMINAL_53);
    		TERMINAL_419.addFollower(TERMINAL_23);
    		TERMINAL_419.addFollower(TERMINAL_54);
    		TERMINAL_419.addFollower(TERMINAL_55);
    		TERMINAL_419.addFollower(TERMINAL_56);
    		TERMINAL_419.addFollower(TERMINAL_57);
    		TERMINAL_419.addFollower(TERMINAL_58);
    		TERMINAL_419.addFollower(TERMINAL_59);
    		TERMINAL_419.addFollower(TERMINAL_60);
    		TERMINAL_419.addFollower(TERMINAL_61);
    		TERMINAL_419.addFollower(TERMINAL_62);
    		TERMINAL_419.addFollower(TERMINAL_63);
    		TERMINAL_419.addFollower(TERMINAL_64);
    		TERMINAL_418.addFollower(TERMINAL_406);
    		TERMINAL_418.addFollower(TERMINAL_407);
    		TERMINAL_418.addFollower(TERMINAL_408);
    		TERMINAL_418.addFollower(TERMINAL_409);
    		TERMINAL_418.addFollower(TERMINAL_410);
    		TERMINAL_418.addFollower(TERMINAL_411);
    		TERMINAL_418.addFollower(TERMINAL_412);
    		TERMINAL_418.addFollower(TERMINAL_413);
    		TERMINAL_418.addFollower(TERMINAL_414);
    		TERMINAL_408.addFollower(TERMINAL_420);
    		TERMINAL_420.addFollower(TERMINAL_406);
    		TERMINAL_420.addFollower(TERMINAL_407);
    		TERMINAL_420.addFollower(TERMINAL_408);
    		TERMINAL_420.addFollower(TERMINAL_409);
    		TERMINAL_420.addFollower(TERMINAL_410);
    		TERMINAL_420.addFollower(TERMINAL_411);
    		TERMINAL_420.addFollower(TERMINAL_412);
    		TERMINAL_420.addFollower(TERMINAL_413);
    		TERMINAL_420.addFollower(TERMINAL_414);
    		TERMINAL_409.addFollower(TERMINAL_421);
    		TERMINAL_421.addFollower(TERMINAL_406);
    		TERMINAL_421.addFollower(TERMINAL_407);
    		TERMINAL_421.addFollower(TERMINAL_408);
    		TERMINAL_421.addFollower(TERMINAL_409);
    		TERMINAL_421.addFollower(TERMINAL_410);
    		TERMINAL_421.addFollower(TERMINAL_411);
    		TERMINAL_421.addFollower(TERMINAL_412);
    		TERMINAL_421.addFollower(TERMINAL_413);
    		TERMINAL_421.addFollower(TERMINAL_414);
    		TERMINAL_410.addFollower(TERMINAL_46);
    		TERMINAL_410.addFollower(TERMINAL_47);
    		TERMINAL_410.addFollower(TERMINAL_48);
    		TERMINAL_410.addFollower(TERMINAL_49);
    		TERMINAL_410.addFollower(TERMINAL_50);
    		TERMINAL_410.addFollower(TERMINAL_51);
    		TERMINAL_410.addFollower(TERMINAL_52);
    		TERMINAL_410.addFollower(TERMINAL_53);
    		TERMINAL_410.addFollower(TERMINAL_23);
    		TERMINAL_410.addFollower(TERMINAL_54);
    		TERMINAL_410.addFollower(TERMINAL_55);
    		TERMINAL_410.addFollower(TERMINAL_56);
    		TERMINAL_410.addFollower(TERMINAL_57);
    		TERMINAL_410.addFollower(TERMINAL_58);
    		TERMINAL_410.addFollower(TERMINAL_59);
    		TERMINAL_410.addFollower(TERMINAL_60);
    		TERMINAL_410.addFollower(TERMINAL_61);
    		TERMINAL_410.addFollower(TERMINAL_62);
    		TERMINAL_410.addFollower(TERMINAL_63);
    		TERMINAL_410.addFollower(TERMINAL_64);
    		TERMINAL_411.addFollower(TERMINAL_46);
    		TERMINAL_411.addFollower(TERMINAL_47);
    		TERMINAL_411.addFollower(TERMINAL_48);
    		TERMINAL_411.addFollower(TERMINAL_49);
    		TERMINAL_411.addFollower(TERMINAL_50);
    		TERMINAL_411.addFollower(TERMINAL_51);
    		TERMINAL_411.addFollower(TERMINAL_52);
    		TERMINAL_411.addFollower(TERMINAL_53);
    		TERMINAL_411.addFollower(TERMINAL_23);
    		TERMINAL_411.addFollower(TERMINAL_54);
    		TERMINAL_411.addFollower(TERMINAL_55);
    		TERMINAL_411.addFollower(TERMINAL_56);
    		TERMINAL_411.addFollower(TERMINAL_57);
    		TERMINAL_411.addFollower(TERMINAL_58);
    		TERMINAL_411.addFollower(TERMINAL_59);
    		TERMINAL_411.addFollower(TERMINAL_60);
    		TERMINAL_411.addFollower(TERMINAL_61);
    		TERMINAL_411.addFollower(TERMINAL_62);
    		TERMINAL_411.addFollower(TERMINAL_63);
    		TERMINAL_411.addFollower(TERMINAL_64);
    		TERMINAL_412.addFollower(TERMINAL_46);
    		TERMINAL_412.addFollower(TERMINAL_47);
    		TERMINAL_412.addFollower(TERMINAL_48);
    		TERMINAL_412.addFollower(TERMINAL_49);
    		TERMINAL_412.addFollower(TERMINAL_50);
    		TERMINAL_412.addFollower(TERMINAL_51);
    		TERMINAL_412.addFollower(TERMINAL_52);
    		TERMINAL_412.addFollower(TERMINAL_53);
    		TERMINAL_412.addFollower(TERMINAL_23);
    		TERMINAL_412.addFollower(TERMINAL_54);
    		TERMINAL_412.addFollower(TERMINAL_55);
    		TERMINAL_412.addFollower(TERMINAL_56);
    		TERMINAL_412.addFollower(TERMINAL_57);
    		TERMINAL_412.addFollower(TERMINAL_58);
    		TERMINAL_412.addFollower(TERMINAL_59);
    		TERMINAL_412.addFollower(TERMINAL_60);
    		TERMINAL_412.addFollower(TERMINAL_61);
    		TERMINAL_412.addFollower(TERMINAL_62);
    		TERMINAL_412.addFollower(TERMINAL_63);
    		TERMINAL_412.addFollower(TERMINAL_64);
    		TERMINAL_413.addFollower(TERMINAL_46);
    		TERMINAL_413.addFollower(TERMINAL_47);
    		TERMINAL_413.addFollower(TERMINAL_48);
    		TERMINAL_413.addFollower(TERMINAL_49);
    		TERMINAL_413.addFollower(TERMINAL_50);
    		TERMINAL_413.addFollower(TERMINAL_51);
    		TERMINAL_413.addFollower(TERMINAL_52);
    		TERMINAL_413.addFollower(TERMINAL_53);
    		TERMINAL_413.addFollower(TERMINAL_23);
    		TERMINAL_413.addFollower(TERMINAL_54);
    		TERMINAL_413.addFollower(TERMINAL_55);
    		TERMINAL_413.addFollower(TERMINAL_56);
    		TERMINAL_413.addFollower(TERMINAL_57);
    		TERMINAL_413.addFollower(TERMINAL_58);
    		TERMINAL_413.addFollower(TERMINAL_59);
    		TERMINAL_413.addFollower(TERMINAL_60);
    		TERMINAL_413.addFollower(TERMINAL_61);
    		TERMINAL_413.addFollower(TERMINAL_62);
    		TERMINAL_413.addFollower(TERMINAL_63);
    		TERMINAL_413.addFollower(TERMINAL_64);
    		TERMINAL_414.addFollower(TERMINAL_422);
    		TERMINAL_414.addFollower(TERMINAL_423);
    		TERMINAL_414.addFollower(TERMINAL_424);
    		TERMINAL_414.addFollower(TERMINAL_425);
    		TERMINAL_414.addFollower(TERMINAL_46);
    		TERMINAL_414.addFollower(TERMINAL_47);
    		TERMINAL_414.addFollower(TERMINAL_48);
    		TERMINAL_414.addFollower(TERMINAL_49);
    		TERMINAL_414.addFollower(TERMINAL_50);
    		TERMINAL_414.addFollower(TERMINAL_51);
    		TERMINAL_414.addFollower(TERMINAL_52);
    		TERMINAL_414.addFollower(TERMINAL_53);
    		TERMINAL_414.addFollower(TERMINAL_23);
    		TERMINAL_414.addFollower(TERMINAL_54);
    		TERMINAL_414.addFollower(TERMINAL_55);
    		TERMINAL_414.addFollower(TERMINAL_56);
    		TERMINAL_414.addFollower(TERMINAL_57);
    		TERMINAL_414.addFollower(TERMINAL_58);
    		TERMINAL_414.addFollower(TERMINAL_59);
    		TERMINAL_414.addFollower(TERMINAL_60);
    		TERMINAL_414.addFollower(TERMINAL_61);
    		TERMINAL_414.addFollower(TERMINAL_62);
    		TERMINAL_414.addFollower(TERMINAL_63);
    		TERMINAL_414.addFollower(TERMINAL_64);
    		TERMINAL_414.addFollower(TERMINAL_347);
    		TERMINAL_414.addFollower(TERMINAL_348);
    		TERMINAL_414.addFollower(TERMINAL_349);
    		TERMINAL_414.addFollower(TERMINAL_350);
    		TERMINAL_414.addFollower(TERMINAL_351);
    		TERMINAL_414.addFollower(TERMINAL_352);
    		TERMINAL_414.addFollower(TERMINAL_353);
    		TERMINAL_414.addFollower(TERMINAL_354);
    		TERMINAL_414.addFollower(TERMINAL_355);
    		TERMINAL_414.addFollower(TERMINAL_140);
    		TERMINAL_414.addFollower(TERMINAL_141);
    		TERMINAL_414.addFollower(TERMINAL_142);
    		TERMINAL_414.addFollower(TERMINAL_143);
    		TERMINAL_414.addFollower(TERMINAL_144);
    		TERMINAL_414.addFollower(TERMINAL_145);
    		TERMINAL_414.addFollower(TERMINAL_146);
    		TERMINAL_414.addFollower(TERMINAL_147);
    		TERMINAL_414.addFollower(TERMINAL_153);
    		TERMINAL_414.addFollower(TERMINAL_154);
    		TERMINAL_414.addFollower(TERMINAL_155);
    		TERMINAL_414.addFollower(TERMINAL_156);
    		TERMINAL_414.addFollower(TERMINAL_157);
    		TERMINAL_414.addFollower(TERMINAL_158);
    		TERMINAL_414.addFollower(TERMINAL_159);
    		TERMINAL_414.addFollower(TERMINAL_160);
    		TERMINAL_414.addFollower(TERMINAL_161);
    		TERMINAL_414.addFollower(TERMINAL_162);
    		TERMINAL_414.addFollower(TERMINAL_163);
    		TERMINAL_414.addFollower(TERMINAL_164);
    		TERMINAL_414.addFollower(TERMINAL_165);
    		TERMINAL_414.addFollower(TERMINAL_166);
    		TERMINAL_414.addFollower(TERMINAL_167);
    		TERMINAL_414.addFollower(TERMINAL_365);
    		TERMINAL_414.addFollower(TERMINAL_366);
    		TERMINAL_422.addFollower(TERMINAL_46);
    		TERMINAL_422.addFollower(TERMINAL_47);
    		TERMINAL_422.addFollower(TERMINAL_48);
    		TERMINAL_422.addFollower(TERMINAL_49);
    		TERMINAL_422.addFollower(TERMINAL_50);
    		TERMINAL_422.addFollower(TERMINAL_51);
    		TERMINAL_422.addFollower(TERMINAL_52);
    		TERMINAL_422.addFollower(TERMINAL_53);
    		TERMINAL_422.addFollower(TERMINAL_23);
    		TERMINAL_422.addFollower(TERMINAL_54);
    		TERMINAL_422.addFollower(TERMINAL_55);
    		TERMINAL_422.addFollower(TERMINAL_56);
    		TERMINAL_422.addFollower(TERMINAL_57);
    		TERMINAL_422.addFollower(TERMINAL_58);
    		TERMINAL_422.addFollower(TERMINAL_59);
    		TERMINAL_422.addFollower(TERMINAL_60);
    		TERMINAL_422.addFollower(TERMINAL_61);
    		TERMINAL_422.addFollower(TERMINAL_62);
    		TERMINAL_422.addFollower(TERMINAL_63);
    		TERMINAL_422.addFollower(TERMINAL_64);
    		TERMINAL_423.addFollower(TERMINAL_46);
    		TERMINAL_423.addFollower(TERMINAL_47);
    		TERMINAL_423.addFollower(TERMINAL_48);
    		TERMINAL_423.addFollower(TERMINAL_49);
    		TERMINAL_423.addFollower(TERMINAL_50);
    		TERMINAL_423.addFollower(TERMINAL_51);
    		TERMINAL_423.addFollower(TERMINAL_52);
    		TERMINAL_423.addFollower(TERMINAL_53);
    		TERMINAL_423.addFollower(TERMINAL_23);
    		TERMINAL_423.addFollower(TERMINAL_54);
    		TERMINAL_423.addFollower(TERMINAL_55);
    		TERMINAL_423.addFollower(TERMINAL_56);
    		TERMINAL_423.addFollower(TERMINAL_57);
    		TERMINAL_423.addFollower(TERMINAL_58);
    		TERMINAL_423.addFollower(TERMINAL_59);
    		TERMINAL_423.addFollower(TERMINAL_60);
    		TERMINAL_423.addFollower(TERMINAL_61);
    		TERMINAL_423.addFollower(TERMINAL_62);
    		TERMINAL_423.addFollower(TERMINAL_63);
    		TERMINAL_423.addFollower(TERMINAL_64);
    		TERMINAL_424.addFollower(TERMINAL_46);
    		TERMINAL_424.addFollower(TERMINAL_47);
    		TERMINAL_424.addFollower(TERMINAL_48);
    		TERMINAL_424.addFollower(TERMINAL_49);
    		TERMINAL_424.addFollower(TERMINAL_50);
    		TERMINAL_424.addFollower(TERMINAL_51);
    		TERMINAL_424.addFollower(TERMINAL_52);
    		TERMINAL_424.addFollower(TERMINAL_53);
    		TERMINAL_424.addFollower(TERMINAL_23);
    		TERMINAL_424.addFollower(TERMINAL_54);
    		TERMINAL_424.addFollower(TERMINAL_55);
    		TERMINAL_424.addFollower(TERMINAL_56);
    		TERMINAL_424.addFollower(TERMINAL_57);
    		TERMINAL_424.addFollower(TERMINAL_58);
    		TERMINAL_424.addFollower(TERMINAL_59);
    		TERMINAL_424.addFollower(TERMINAL_60);
    		TERMINAL_424.addFollower(TERMINAL_61);
    		TERMINAL_424.addFollower(TERMINAL_62);
    		TERMINAL_424.addFollower(TERMINAL_63);
    		TERMINAL_424.addFollower(TERMINAL_64);
    		TERMINAL_425.addFollower(TERMINAL_46);
    		TERMINAL_425.addFollower(TERMINAL_47);
    		TERMINAL_425.addFollower(TERMINAL_48);
    		TERMINAL_425.addFollower(TERMINAL_49);
    		TERMINAL_425.addFollower(TERMINAL_50);
    		TERMINAL_425.addFollower(TERMINAL_51);
    		TERMINAL_425.addFollower(TERMINAL_52);
    		TERMINAL_425.addFollower(TERMINAL_53);
    		TERMINAL_425.addFollower(TERMINAL_23);
    		TERMINAL_425.addFollower(TERMINAL_54);
    		TERMINAL_425.addFollower(TERMINAL_55);
    		TERMINAL_425.addFollower(TERMINAL_56);
    		TERMINAL_425.addFollower(TERMINAL_57);
    		TERMINAL_425.addFollower(TERMINAL_58);
    		TERMINAL_425.addFollower(TERMINAL_59);
    		TERMINAL_425.addFollower(TERMINAL_60);
    		TERMINAL_425.addFollower(TERMINAL_61);
    		TERMINAL_425.addFollower(TERMINAL_62);
    		TERMINAL_425.addFollower(TERMINAL_63);
    		TERMINAL_425.addFollower(TERMINAL_64);
    		TERMINAL_61.addFollower(TERMINAL_426);
    		TERMINAL_426.addFollower(TERMINAL_140);
    		TERMINAL_426.addFollower(TERMINAL_141);
    		TERMINAL_426.addFollower(TERMINAL_142);
    		TERMINAL_426.addFollower(TERMINAL_143);
    		TERMINAL_426.addFollower(TERMINAL_144);
    		TERMINAL_426.addFollower(TERMINAL_145);
    		TERMINAL_426.addFollower(TERMINAL_146);
    		TERMINAL_426.addFollower(TERMINAL_147);
    		TERMINAL_140.addFollower(TERMINAL_427);
    		TERMINAL_427.addFollower(TERMINAL_428);
    		TERMINAL_428.addFollower(TERMINAL_140);
    		TERMINAL_428.addFollower(TERMINAL_141);
    		TERMINAL_428.addFollower(TERMINAL_142);
    		TERMINAL_428.addFollower(TERMINAL_143);
    		TERMINAL_428.addFollower(TERMINAL_144);
    		TERMINAL_428.addFollower(TERMINAL_145);
    		TERMINAL_428.addFollower(TERMINAL_146);
    		TERMINAL_428.addFollower(TERMINAL_147);
    		TERMINAL_141.addFollower(TERMINAL_429);
    		TERMINAL_429.addFollower(TERMINAL_183);
    		TERMINAL_142.addFollower(TERMINAL_430);
    		TERMINAL_430.addFollower(TERMINAL_80);
    		TERMINAL_430.addFollower(TERMINAL_6);
    		TERMINAL_430.addFollower(TERMINAL_7);
    		TERMINAL_430.addFollower(TERMINAL_8);
    		TERMINAL_430.addFollower(TERMINAL_11);
    		TERMINAL_430.addFollower(TERMINAL_12);
    		TERMINAL_430.addFollower(TERMINAL_213);
    		TERMINAL_430.addFollower(TERMINAL_214);
    		TERMINAL_430.addFollower(TERMINAL_215);
    		TERMINAL_430.addFollower(TERMINAL_216);
    		TERMINAL_430.addFollower(TERMINAL_217);
    		TERMINAL_430.addFollower(TERMINAL_218);
    		TERMINAL_143.addFollower(TERMINAL_431);
    		TERMINAL_431.addFollower(TERMINAL_432);
    		TERMINAL_432.addFollower(TERMINAL_140);
    		TERMINAL_432.addFollower(TERMINAL_141);
    		TERMINAL_432.addFollower(TERMINAL_142);
    		TERMINAL_432.addFollower(TERMINAL_143);
    		TERMINAL_432.addFollower(TERMINAL_144);
    		TERMINAL_432.addFollower(TERMINAL_145);
    		TERMINAL_432.addFollower(TERMINAL_146);
    		TERMINAL_432.addFollower(TERMINAL_147);
    	}
    	public static void wire4() {
    		TERMINAL_144.addFollower(TERMINAL_433);
    		TERMINAL_433.addFollower(TERMINAL_46);
    		TERMINAL_433.addFollower(TERMINAL_47);
    		TERMINAL_433.addFollower(TERMINAL_48);
    		TERMINAL_433.addFollower(TERMINAL_49);
    		TERMINAL_433.addFollower(TERMINAL_50);
    		TERMINAL_433.addFollower(TERMINAL_51);
    		TERMINAL_433.addFollower(TERMINAL_52);
    		TERMINAL_433.addFollower(TERMINAL_53);
    		TERMINAL_433.addFollower(TERMINAL_23);
    		TERMINAL_433.addFollower(TERMINAL_54);
    		TERMINAL_433.addFollower(TERMINAL_55);
    		TERMINAL_433.addFollower(TERMINAL_56);
    		TERMINAL_433.addFollower(TERMINAL_57);
    		TERMINAL_433.addFollower(TERMINAL_58);
    		TERMINAL_433.addFollower(TERMINAL_59);
    		TERMINAL_433.addFollower(TERMINAL_60);
    		TERMINAL_433.addFollower(TERMINAL_61);
    		TERMINAL_433.addFollower(TERMINAL_62);
    		TERMINAL_433.addFollower(TERMINAL_63);
    		TERMINAL_433.addFollower(TERMINAL_64);
    		TERMINAL_145.addFollower(TERMINAL_434);
    		TERMINAL_434.addFollower(TERMINAL_435);
    		TERMINAL_435.addFollower(TERMINAL_140);
    		TERMINAL_435.addFollower(TERMINAL_141);
    		TERMINAL_435.addFollower(TERMINAL_142);
    		TERMINAL_435.addFollower(TERMINAL_143);
    		TERMINAL_435.addFollower(TERMINAL_144);
    		TERMINAL_435.addFollower(TERMINAL_145);
    		TERMINAL_435.addFollower(TERMINAL_146);
    		TERMINAL_435.addFollower(TERMINAL_147);
    		TERMINAL_146.addFollower(TERMINAL_436);
    		TERMINAL_436.addFollower(TERMINAL_437);
    		TERMINAL_437.addFollower(TERMINAL_140);
    		TERMINAL_437.addFollower(TERMINAL_141);
    		TERMINAL_437.addFollower(TERMINAL_142);
    		TERMINAL_437.addFollower(TERMINAL_143);
    		TERMINAL_437.addFollower(TERMINAL_144);
    		TERMINAL_437.addFollower(TERMINAL_145);
    		TERMINAL_437.addFollower(TERMINAL_146);
    		TERMINAL_437.addFollower(TERMINAL_147);
    		TERMINAL_147.addFollower(TERMINAL_46);
    		TERMINAL_147.addFollower(TERMINAL_47);
    		TERMINAL_147.addFollower(TERMINAL_48);
    		TERMINAL_147.addFollower(TERMINAL_49);
    		TERMINAL_147.addFollower(TERMINAL_50);
    		TERMINAL_147.addFollower(TERMINAL_51);
    		TERMINAL_147.addFollower(TERMINAL_52);
    		TERMINAL_147.addFollower(TERMINAL_53);
    		TERMINAL_147.addFollower(TERMINAL_23);
    		TERMINAL_147.addFollower(TERMINAL_54);
    		TERMINAL_147.addFollower(TERMINAL_55);
    		TERMINAL_147.addFollower(TERMINAL_56);
    		TERMINAL_147.addFollower(TERMINAL_57);
    		TERMINAL_147.addFollower(TERMINAL_58);
    		TERMINAL_147.addFollower(TERMINAL_59);
    		TERMINAL_147.addFollower(TERMINAL_60);
    		TERMINAL_147.addFollower(TERMINAL_61);
    		TERMINAL_147.addFollower(TERMINAL_62);
    		TERMINAL_147.addFollower(TERMINAL_63);
    		TERMINAL_147.addFollower(TERMINAL_64);
    		TERMINAL_147.addFollower(TERMINAL_347);
    		TERMINAL_147.addFollower(TERMINAL_348);
    		TERMINAL_147.addFollower(TERMINAL_349);
    		TERMINAL_147.addFollower(TERMINAL_350);
    		TERMINAL_147.addFollower(TERMINAL_351);
    		TERMINAL_147.addFollower(TERMINAL_352);
    		TERMINAL_147.addFollower(TERMINAL_353);
    		TERMINAL_147.addFollower(TERMINAL_354);
    		TERMINAL_147.addFollower(TERMINAL_355);
    		TERMINAL_147.addFollower(TERMINAL_140);
    		TERMINAL_147.addFollower(TERMINAL_141);
    		TERMINAL_147.addFollower(TERMINAL_142);
    		TERMINAL_147.addFollower(TERMINAL_143);
    		TERMINAL_147.addFollower(TERMINAL_144);
    		TERMINAL_147.addFollower(TERMINAL_145);
    		TERMINAL_147.addFollower(TERMINAL_146);
    		TERMINAL_147.addFollower(TERMINAL_147);
    		TERMINAL_147.addFollower(TERMINAL_153);
    		TERMINAL_147.addFollower(TERMINAL_154);
    		TERMINAL_147.addFollower(TERMINAL_155);
    		TERMINAL_147.addFollower(TERMINAL_156);
    		TERMINAL_147.addFollower(TERMINAL_157);
    		TERMINAL_147.addFollower(TERMINAL_158);
    		TERMINAL_147.addFollower(TERMINAL_159);
    		TERMINAL_147.addFollower(TERMINAL_160);
    		TERMINAL_147.addFollower(TERMINAL_161);
    		TERMINAL_147.addFollower(TERMINAL_162);
    		TERMINAL_147.addFollower(TERMINAL_163);
    		TERMINAL_147.addFollower(TERMINAL_164);
    		TERMINAL_147.addFollower(TERMINAL_165);
    		TERMINAL_147.addFollower(TERMINAL_166);
    		TERMINAL_147.addFollower(TERMINAL_167);
    		TERMINAL_62.addFollower(TERMINAL_438);
    		TERMINAL_438.addFollower(TERMINAL_148);
    		TERMINAL_438.addFollower(TERMINAL_149);
    		TERMINAL_438.addFollower(TERMINAL_150);
    		TERMINAL_438.addFollower(TERMINAL_151);
    		TERMINAL_438.addFollower(TERMINAL_152);
    		TERMINAL_148.addFollower(TERMINAL_439);
    		TERMINAL_439.addFollower(TERMINAL_440);
    		TERMINAL_440.addFollower(TERMINAL_148);
    		TERMINAL_440.addFollower(TERMINAL_149);
    		TERMINAL_440.addFollower(TERMINAL_150);
    		TERMINAL_440.addFollower(TERMINAL_151);
    		TERMINAL_440.addFollower(TERMINAL_152);
    		TERMINAL_149.addFollower(TERMINAL_441);
    		TERMINAL_441.addFollower(TERMINAL_183);
    		TERMINAL_150.addFollower(TERMINAL_442);
    		TERMINAL_442.addFollower(TERMINAL_80);
    		TERMINAL_442.addFollower(TERMINAL_6);
    		TERMINAL_442.addFollower(TERMINAL_7);
    		TERMINAL_442.addFollower(TERMINAL_8);
    		TERMINAL_442.addFollower(TERMINAL_11);
    		TERMINAL_442.addFollower(TERMINAL_12);
    		TERMINAL_442.addFollower(TERMINAL_213);
    		TERMINAL_442.addFollower(TERMINAL_214);
    		TERMINAL_442.addFollower(TERMINAL_215);
    		TERMINAL_442.addFollower(TERMINAL_216);
    		TERMINAL_442.addFollower(TERMINAL_217);
    		TERMINAL_442.addFollower(TERMINAL_218);
    		TERMINAL_151.addFollower(TERMINAL_443);
    		TERMINAL_443.addFollower(TERMINAL_444);
    		TERMINAL_444.addFollower(TERMINAL_148);
    		TERMINAL_444.addFollower(TERMINAL_149);
    		TERMINAL_444.addFollower(TERMINAL_150);
    		TERMINAL_444.addFollower(TERMINAL_151);
    		TERMINAL_444.addFollower(TERMINAL_152);
    		TERMINAL_152.addFollower(TERMINAL_46);
    		TERMINAL_152.addFollower(TERMINAL_47);
    		TERMINAL_152.addFollower(TERMINAL_48);
    		TERMINAL_152.addFollower(TERMINAL_49);
    		TERMINAL_152.addFollower(TERMINAL_50);
    		TERMINAL_152.addFollower(TERMINAL_51);
    		TERMINAL_152.addFollower(TERMINAL_52);
    		TERMINAL_152.addFollower(TERMINAL_53);
    		TERMINAL_152.addFollower(TERMINAL_23);
    		TERMINAL_152.addFollower(TERMINAL_54);
    		TERMINAL_152.addFollower(TERMINAL_55);
    		TERMINAL_152.addFollower(TERMINAL_56);
    		TERMINAL_152.addFollower(TERMINAL_57);
    		TERMINAL_152.addFollower(TERMINAL_58);
    		TERMINAL_152.addFollower(TERMINAL_59);
    		TERMINAL_152.addFollower(TERMINAL_60);
    		TERMINAL_152.addFollower(TERMINAL_61);
    		TERMINAL_152.addFollower(TERMINAL_62);
    		TERMINAL_152.addFollower(TERMINAL_63);
    		TERMINAL_152.addFollower(TERMINAL_64);
    		TERMINAL_152.addFollower(TERMINAL_347);
    		TERMINAL_152.addFollower(TERMINAL_348);
    		TERMINAL_152.addFollower(TERMINAL_349);
    		TERMINAL_152.addFollower(TERMINAL_350);
    		TERMINAL_152.addFollower(TERMINAL_351);
    		TERMINAL_152.addFollower(TERMINAL_352);
    		TERMINAL_152.addFollower(TERMINAL_353);
    		TERMINAL_152.addFollower(TERMINAL_354);
    		TERMINAL_152.addFollower(TERMINAL_355);
    		TERMINAL_152.addFollower(TERMINAL_140);
    		TERMINAL_152.addFollower(TERMINAL_141);
    		TERMINAL_152.addFollower(TERMINAL_142);
    		TERMINAL_152.addFollower(TERMINAL_143);
    		TERMINAL_152.addFollower(TERMINAL_144);
    		TERMINAL_152.addFollower(TERMINAL_145);
    		TERMINAL_152.addFollower(TERMINAL_146);
    		TERMINAL_152.addFollower(TERMINAL_147);
    		TERMINAL_152.addFollower(TERMINAL_153);
    		TERMINAL_152.addFollower(TERMINAL_154);
    		TERMINAL_152.addFollower(TERMINAL_155);
    		TERMINAL_152.addFollower(TERMINAL_156);
    		TERMINAL_152.addFollower(TERMINAL_157);
    		TERMINAL_152.addFollower(TERMINAL_158);
    		TERMINAL_152.addFollower(TERMINAL_159);
    		TERMINAL_152.addFollower(TERMINAL_160);
    		TERMINAL_152.addFollower(TERMINAL_161);
    		TERMINAL_152.addFollower(TERMINAL_162);
    		TERMINAL_152.addFollower(TERMINAL_163);
    		TERMINAL_152.addFollower(TERMINAL_164);
    		TERMINAL_152.addFollower(TERMINAL_165);
    		TERMINAL_152.addFollower(TERMINAL_166);
    		TERMINAL_152.addFollower(TERMINAL_167);
    		TERMINAL_58.addFollower(TERMINAL_445);
    		TERMINAL_445.addFollower(TERMINAL_153);
    		TERMINAL_445.addFollower(TERMINAL_154);
    		TERMINAL_445.addFollower(TERMINAL_155);
    		TERMINAL_445.addFollower(TERMINAL_156);
    		TERMINAL_445.addFollower(TERMINAL_157);
    		TERMINAL_445.addFollower(TERMINAL_158);
    		TERMINAL_445.addFollower(TERMINAL_159);
    		TERMINAL_445.addFollower(TERMINAL_160);
    		TERMINAL_153.addFollower(TERMINAL_446);
    		TERMINAL_446.addFollower(TERMINAL_447);
    		TERMINAL_447.addFollower(TERMINAL_153);
    		TERMINAL_447.addFollower(TERMINAL_154);
    		TERMINAL_447.addFollower(TERMINAL_155);
    		TERMINAL_447.addFollower(TERMINAL_156);
    		TERMINAL_447.addFollower(TERMINAL_157);
    		TERMINAL_447.addFollower(TERMINAL_158);
    		TERMINAL_447.addFollower(TERMINAL_159);
    		TERMINAL_447.addFollower(TERMINAL_160);
    		TERMINAL_154.addFollower(TERMINAL_448);
    		TERMINAL_448.addFollower(TERMINAL_183);
    		TERMINAL_155.addFollower(TERMINAL_449);
    		TERMINAL_449.addFollower(TERMINAL_80);
    		TERMINAL_449.addFollower(TERMINAL_6);
    		TERMINAL_449.addFollower(TERMINAL_7);
    		TERMINAL_449.addFollower(TERMINAL_8);
    		TERMINAL_449.addFollower(TERMINAL_11);
    		TERMINAL_449.addFollower(TERMINAL_12);
    		TERMINAL_449.addFollower(TERMINAL_213);
    		TERMINAL_449.addFollower(TERMINAL_214);
    		TERMINAL_449.addFollower(TERMINAL_215);
    		TERMINAL_449.addFollower(TERMINAL_216);
    		TERMINAL_449.addFollower(TERMINAL_217);
    		TERMINAL_449.addFollower(TERMINAL_218);
    		TERMINAL_156.addFollower(TERMINAL_450);
    		TERMINAL_450.addFollower(TERMINAL_451);
    		TERMINAL_451.addFollower(TERMINAL_153);
    		TERMINAL_451.addFollower(TERMINAL_154);
    		TERMINAL_451.addFollower(TERMINAL_155);
    		TERMINAL_451.addFollower(TERMINAL_156);
    		TERMINAL_451.addFollower(TERMINAL_157);
    		TERMINAL_451.addFollower(TERMINAL_158);
    		TERMINAL_451.addFollower(TERMINAL_159);
    		TERMINAL_451.addFollower(TERMINAL_160);
    		TERMINAL_157.addFollower(TERMINAL_452);
    		TERMINAL_452.addFollower(TERMINAL_46);
    		TERMINAL_452.addFollower(TERMINAL_47);
    		TERMINAL_452.addFollower(TERMINAL_48);
    		TERMINAL_452.addFollower(TERMINAL_49);
    		TERMINAL_452.addFollower(TERMINAL_50);
    		TERMINAL_452.addFollower(TERMINAL_51);
    		TERMINAL_452.addFollower(TERMINAL_52);
    		TERMINAL_452.addFollower(TERMINAL_53);
    		TERMINAL_452.addFollower(TERMINAL_23);
    		TERMINAL_452.addFollower(TERMINAL_54);
    		TERMINAL_452.addFollower(TERMINAL_55);
    		TERMINAL_452.addFollower(TERMINAL_56);
    		TERMINAL_452.addFollower(TERMINAL_57);
    		TERMINAL_452.addFollower(TERMINAL_58);
    		TERMINAL_452.addFollower(TERMINAL_59);
    		TERMINAL_452.addFollower(TERMINAL_60);
    		TERMINAL_452.addFollower(TERMINAL_61);
    		TERMINAL_452.addFollower(TERMINAL_62);
    		TERMINAL_452.addFollower(TERMINAL_63);
    		TERMINAL_452.addFollower(TERMINAL_64);
    		TERMINAL_158.addFollower(TERMINAL_453);
    		TERMINAL_453.addFollower(TERMINAL_454);
    		TERMINAL_454.addFollower(TERMINAL_153);
    		TERMINAL_454.addFollower(TERMINAL_154);
    		TERMINAL_454.addFollower(TERMINAL_155);
    		TERMINAL_454.addFollower(TERMINAL_156);
    		TERMINAL_454.addFollower(TERMINAL_157);
    		TERMINAL_454.addFollower(TERMINAL_158);
    		TERMINAL_454.addFollower(TERMINAL_159);
    		TERMINAL_454.addFollower(TERMINAL_160);
    		TERMINAL_159.addFollower(TERMINAL_455);
    		TERMINAL_455.addFollower(TERMINAL_456);
    		TERMINAL_456.addFollower(TERMINAL_153);
    		TERMINAL_456.addFollower(TERMINAL_154);
    		TERMINAL_456.addFollower(TERMINAL_155);
    		TERMINAL_456.addFollower(TERMINAL_156);
    		TERMINAL_456.addFollower(TERMINAL_157);
    		TERMINAL_456.addFollower(TERMINAL_158);
    		TERMINAL_456.addFollower(TERMINAL_159);
    		TERMINAL_456.addFollower(TERMINAL_160);
    		TERMINAL_160.addFollower(TERMINAL_46);
    		TERMINAL_160.addFollower(TERMINAL_47);
    		TERMINAL_160.addFollower(TERMINAL_48);
    		TERMINAL_160.addFollower(TERMINAL_49);
    		TERMINAL_160.addFollower(TERMINAL_50);
    		TERMINAL_160.addFollower(TERMINAL_51);
    		TERMINAL_160.addFollower(TERMINAL_52);
    		TERMINAL_160.addFollower(TERMINAL_53);
    		TERMINAL_160.addFollower(TERMINAL_23);
    		TERMINAL_160.addFollower(TERMINAL_54);
    		TERMINAL_160.addFollower(TERMINAL_55);
    		TERMINAL_160.addFollower(TERMINAL_56);
    		TERMINAL_160.addFollower(TERMINAL_57);
    		TERMINAL_160.addFollower(TERMINAL_58);
    		TERMINAL_160.addFollower(TERMINAL_59);
    		TERMINAL_160.addFollower(TERMINAL_60);
    		TERMINAL_160.addFollower(TERMINAL_61);
    		TERMINAL_160.addFollower(TERMINAL_62);
    		TERMINAL_160.addFollower(TERMINAL_63);
    		TERMINAL_160.addFollower(TERMINAL_64);
    		TERMINAL_160.addFollower(TERMINAL_347);
    		TERMINAL_160.addFollower(TERMINAL_348);
    		TERMINAL_160.addFollower(TERMINAL_349);
    		TERMINAL_160.addFollower(TERMINAL_350);
    		TERMINAL_160.addFollower(TERMINAL_351);
    		TERMINAL_160.addFollower(TERMINAL_352);
    		TERMINAL_160.addFollower(TERMINAL_353);
    		TERMINAL_160.addFollower(TERMINAL_354);
    		TERMINAL_160.addFollower(TERMINAL_355);
    		TERMINAL_160.addFollower(TERMINAL_140);
    		TERMINAL_160.addFollower(TERMINAL_141);
    		TERMINAL_160.addFollower(TERMINAL_142);
    		TERMINAL_160.addFollower(TERMINAL_143);
    		TERMINAL_160.addFollower(TERMINAL_144);
    		TERMINAL_160.addFollower(TERMINAL_145);
    		TERMINAL_160.addFollower(TERMINAL_146);
    		TERMINAL_160.addFollower(TERMINAL_147);
    		TERMINAL_160.addFollower(TERMINAL_153);
    		TERMINAL_160.addFollower(TERMINAL_154);
    		TERMINAL_160.addFollower(TERMINAL_155);
    		TERMINAL_160.addFollower(TERMINAL_156);
    		TERMINAL_160.addFollower(TERMINAL_157);
    		TERMINAL_160.addFollower(TERMINAL_158);
    		TERMINAL_160.addFollower(TERMINAL_159);
    		TERMINAL_160.addFollower(TERMINAL_160);
    		TERMINAL_160.addFollower(TERMINAL_161);
    		TERMINAL_160.addFollower(TERMINAL_162);
    		TERMINAL_160.addFollower(TERMINAL_163);
    		TERMINAL_160.addFollower(TERMINAL_164);
    		TERMINAL_160.addFollower(TERMINAL_165);
    		TERMINAL_160.addFollower(TERMINAL_166);
    		TERMINAL_160.addFollower(TERMINAL_167);
    		TERMINAL_63.addFollower(TERMINAL_457);
    		TERMINAL_457.addFollower(TERMINAL_161);
    		TERMINAL_457.addFollower(TERMINAL_162);
    		TERMINAL_457.addFollower(TERMINAL_163);
    		TERMINAL_457.addFollower(TERMINAL_164);
    		TERMINAL_457.addFollower(TERMINAL_165);
    		TERMINAL_457.addFollower(TERMINAL_166);
    		TERMINAL_457.addFollower(TERMINAL_167);
    		TERMINAL_161.addFollower(TERMINAL_458);
    		TERMINAL_458.addFollower(TERMINAL_459);
    		TERMINAL_459.addFollower(TERMINAL_161);
    		TERMINAL_459.addFollower(TERMINAL_162);
    		TERMINAL_459.addFollower(TERMINAL_163);
    		TERMINAL_459.addFollower(TERMINAL_164);
    		TERMINAL_459.addFollower(TERMINAL_165);
    		TERMINAL_459.addFollower(TERMINAL_166);
    		TERMINAL_459.addFollower(TERMINAL_167);
    		TERMINAL_162.addFollower(TERMINAL_460);
    		TERMINAL_460.addFollower(TERMINAL_183);
    		TERMINAL_163.addFollower(TERMINAL_461);
    		TERMINAL_461.addFollower(TERMINAL_80);
    		TERMINAL_461.addFollower(TERMINAL_6);
    		TERMINAL_461.addFollower(TERMINAL_7);
    		TERMINAL_461.addFollower(TERMINAL_8);
    		TERMINAL_461.addFollower(TERMINAL_11);
    		TERMINAL_461.addFollower(TERMINAL_12);
    		TERMINAL_461.addFollower(TERMINAL_213);
    		TERMINAL_461.addFollower(TERMINAL_214);
    		TERMINAL_461.addFollower(TERMINAL_215);
    		TERMINAL_461.addFollower(TERMINAL_216);
    		TERMINAL_461.addFollower(TERMINAL_217);
    		TERMINAL_461.addFollower(TERMINAL_218);
    		TERMINAL_164.addFollower(TERMINAL_462);
    		TERMINAL_462.addFollower(TERMINAL_463);
    		TERMINAL_463.addFollower(TERMINAL_161);
    		TERMINAL_463.addFollower(TERMINAL_162);
    		TERMINAL_463.addFollower(TERMINAL_163);
    		TERMINAL_463.addFollower(TERMINAL_164);
    		TERMINAL_463.addFollower(TERMINAL_165);
    		TERMINAL_463.addFollower(TERMINAL_166);
    		TERMINAL_463.addFollower(TERMINAL_167);
    		TERMINAL_165.addFollower(TERMINAL_464);
    		TERMINAL_464.addFollower(TERMINAL_465);
    		TERMINAL_166.addFollower(TERMINAL_466);
    		TERMINAL_466.addFollower(TERMINAL_46);
    		TERMINAL_466.addFollower(TERMINAL_47);
    		TERMINAL_466.addFollower(TERMINAL_48);
    		TERMINAL_466.addFollower(TERMINAL_49);
    		TERMINAL_466.addFollower(TERMINAL_50);
    		TERMINAL_466.addFollower(TERMINAL_51);
    		TERMINAL_466.addFollower(TERMINAL_52);
    		TERMINAL_466.addFollower(TERMINAL_53);
    		TERMINAL_466.addFollower(TERMINAL_23);
    		TERMINAL_466.addFollower(TERMINAL_54);
    		TERMINAL_466.addFollower(TERMINAL_55);
    		TERMINAL_466.addFollower(TERMINAL_56);
    		TERMINAL_466.addFollower(TERMINAL_57);
    		TERMINAL_466.addFollower(TERMINAL_58);
    		TERMINAL_466.addFollower(TERMINAL_59);
    		TERMINAL_466.addFollower(TERMINAL_60);
    		TERMINAL_466.addFollower(TERMINAL_61);
    		TERMINAL_466.addFollower(TERMINAL_62);
    		TERMINAL_466.addFollower(TERMINAL_63);
    		TERMINAL_466.addFollower(TERMINAL_64);
    		TERMINAL_167.addFollower(TERMINAL_46);
    		TERMINAL_167.addFollower(TERMINAL_47);
    		TERMINAL_167.addFollower(TERMINAL_48);
    		TERMINAL_167.addFollower(TERMINAL_49);
    		TERMINAL_167.addFollower(TERMINAL_50);
    		TERMINAL_167.addFollower(TERMINAL_51);
    		TERMINAL_167.addFollower(TERMINAL_52);
    		TERMINAL_167.addFollower(TERMINAL_53);
    		TERMINAL_167.addFollower(TERMINAL_23);
    		TERMINAL_167.addFollower(TERMINAL_54);
    		TERMINAL_167.addFollower(TERMINAL_55);
    		TERMINAL_167.addFollower(TERMINAL_56);
    		TERMINAL_167.addFollower(TERMINAL_57);
    		TERMINAL_167.addFollower(TERMINAL_58);
    		TERMINAL_167.addFollower(TERMINAL_59);
    		TERMINAL_167.addFollower(TERMINAL_60);
    		TERMINAL_167.addFollower(TERMINAL_61);
    		TERMINAL_167.addFollower(TERMINAL_62);
    		TERMINAL_167.addFollower(TERMINAL_63);
    		TERMINAL_167.addFollower(TERMINAL_64);
    		TERMINAL_167.addFollower(TERMINAL_347);
    		TERMINAL_167.addFollower(TERMINAL_348);
    		TERMINAL_167.addFollower(TERMINAL_349);
    		TERMINAL_167.addFollower(TERMINAL_350);
    		TERMINAL_167.addFollower(TERMINAL_351);
    		TERMINAL_167.addFollower(TERMINAL_352);
    		TERMINAL_167.addFollower(TERMINAL_353);
    		TERMINAL_167.addFollower(TERMINAL_354);
    		TERMINAL_167.addFollower(TERMINAL_355);
    		TERMINAL_167.addFollower(TERMINAL_140);
    		TERMINAL_167.addFollower(TERMINAL_141);
    		TERMINAL_167.addFollower(TERMINAL_142);
    		TERMINAL_167.addFollower(TERMINAL_143);
    		TERMINAL_167.addFollower(TERMINAL_144);
    		TERMINAL_167.addFollower(TERMINAL_145);
    		TERMINAL_167.addFollower(TERMINAL_146);
    		TERMINAL_167.addFollower(TERMINAL_147);
    		TERMINAL_167.addFollower(TERMINAL_153);
    		TERMINAL_167.addFollower(TERMINAL_154);
    		TERMINAL_167.addFollower(TERMINAL_155);
    		TERMINAL_167.addFollower(TERMINAL_156);
    		TERMINAL_167.addFollower(TERMINAL_157);
    		TERMINAL_167.addFollower(TERMINAL_158);
    		TERMINAL_167.addFollower(TERMINAL_159);
    		TERMINAL_167.addFollower(TERMINAL_160);
    		TERMINAL_167.addFollower(TERMINAL_161);
    		TERMINAL_167.addFollower(TERMINAL_162);
    		TERMINAL_167.addFollower(TERMINAL_163);
    		TERMINAL_167.addFollower(TERMINAL_164);
    		TERMINAL_167.addFollower(TERMINAL_165);
    		TERMINAL_167.addFollower(TERMINAL_166);
    		TERMINAL_167.addFollower(TERMINAL_167);
    		TERMINAL_465.addFollower(TERMINAL_467);
    		TERMINAL_467.addFollower(TERMINAL_277);
    		TERMINAL_467.addFollower(TERMINAL_278);
    		TERMINAL_467.addFollower(TERMINAL_279);
    		TERMINAL_467.addFollower(TERMINAL_280);
    		TERMINAL_467.addFollower(TERMINAL_281);
    		TERMINAL_277.addFollower(TERMINAL_468);
    		TERMINAL_468.addFollower(TERMINAL_469);
    		TERMINAL_469.addFollower(TERMINAL_277);
    		TERMINAL_469.addFollower(TERMINAL_278);
    		TERMINAL_469.addFollower(TERMINAL_279);
    		TERMINAL_469.addFollower(TERMINAL_280);
    		TERMINAL_469.addFollower(TERMINAL_281);
    		TERMINAL_278.addFollower(TERMINAL_470);
    		TERMINAL_470.addFollower(TERMINAL_183);
    		TERMINAL_279.addFollower(TERMINAL_471);
    		TERMINAL_471.addFollower(TERMINAL_472);
    		TERMINAL_472.addFollower(TERMINAL_277);
    		TERMINAL_472.addFollower(TERMINAL_278);
    		TERMINAL_472.addFollower(TERMINAL_279);
    		TERMINAL_472.addFollower(TERMINAL_280);
    		TERMINAL_472.addFollower(TERMINAL_281);
    		TERMINAL_280.addFollower(TERMINAL_473);
    		TERMINAL_473.addFollower(TERMINAL_23);
    		TERMINAL_281.addFollower(TERMINAL_161);
    		TERMINAL_281.addFollower(TERMINAL_162);
    		TERMINAL_281.addFollower(TERMINAL_163);
    		TERMINAL_281.addFollower(TERMINAL_164);
    		TERMINAL_281.addFollower(TERMINAL_165);
    		TERMINAL_281.addFollower(TERMINAL_166);
    		TERMINAL_281.addFollower(TERMINAL_167);
    		TERMINAL_64.addFollower(TERMINAL_46);
    		TERMINAL_64.addFollower(TERMINAL_47);
    		TERMINAL_64.addFollower(TERMINAL_48);
    		TERMINAL_64.addFollower(TERMINAL_49);
    		TERMINAL_64.addFollower(TERMINAL_50);
    		TERMINAL_64.addFollower(TERMINAL_51);
    		TERMINAL_64.addFollower(TERMINAL_52);
    		TERMINAL_64.addFollower(TERMINAL_53);
    		TERMINAL_64.addFollower(TERMINAL_23);
    		TERMINAL_64.addFollower(TERMINAL_54);
    		TERMINAL_64.addFollower(TERMINAL_55);
    		TERMINAL_64.addFollower(TERMINAL_56);
    		TERMINAL_64.addFollower(TERMINAL_57);
    		TERMINAL_64.addFollower(TERMINAL_58);
    		TERMINAL_64.addFollower(TERMINAL_59);
    		TERMINAL_64.addFollower(TERMINAL_60);
    		TERMINAL_64.addFollower(TERMINAL_61);
    		TERMINAL_64.addFollower(TERMINAL_62);
    		TERMINAL_64.addFollower(TERMINAL_63);
    		TERMINAL_64.addFollower(TERMINAL_64);
    		TERMINAL_64.addFollower(TERMINAL_347);
    		TERMINAL_64.addFollower(TERMINAL_348);
    		TERMINAL_64.addFollower(TERMINAL_349);
    		TERMINAL_64.addFollower(TERMINAL_350);
    		TERMINAL_64.addFollower(TERMINAL_351);
    		TERMINAL_64.addFollower(TERMINAL_352);
    		TERMINAL_64.addFollower(TERMINAL_353);
    		TERMINAL_64.addFollower(TERMINAL_354);
    		TERMINAL_64.addFollower(TERMINAL_355);
    		TERMINAL_64.addFollower(TERMINAL_140);
    		TERMINAL_64.addFollower(TERMINAL_141);
    		TERMINAL_64.addFollower(TERMINAL_142);
    		TERMINAL_64.addFollower(TERMINAL_143);
    		TERMINAL_64.addFollower(TERMINAL_144);
    		TERMINAL_64.addFollower(TERMINAL_145);
    		TERMINAL_64.addFollower(TERMINAL_146);
    		TERMINAL_64.addFollower(TERMINAL_147);
    		TERMINAL_64.addFollower(TERMINAL_153);
    		TERMINAL_64.addFollower(TERMINAL_154);
    		TERMINAL_64.addFollower(TERMINAL_155);
    		TERMINAL_64.addFollower(TERMINAL_156);
    		TERMINAL_64.addFollower(TERMINAL_157);
    		TERMINAL_64.addFollower(TERMINAL_158);
    		TERMINAL_64.addFollower(TERMINAL_159);
    		TERMINAL_64.addFollower(TERMINAL_160);
    		TERMINAL_64.addFollower(TERMINAL_161);
    		TERMINAL_64.addFollower(TERMINAL_162);
    		TERMINAL_64.addFollower(TERMINAL_163);
    		TERMINAL_64.addFollower(TERMINAL_164);
    		TERMINAL_64.addFollower(TERMINAL_165);
    		TERMINAL_64.addFollower(TERMINAL_166);
    		TERMINAL_64.addFollower(TERMINAL_167);
    	}
    	// wire the terminals
    	static {
    		wire0();
    		wire1();
    		wire2();
    		wire3();
    		wire4();
    	}



    // $ANTLR start "start"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5283:1: start returns [ org.eclipse.emf.ecore.EObject element = null] : (c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Model | c2= parse_org_kermeta_language_structure_Property | c3= parse_org_kermeta_language_structure_Operation | c4= parse_org_kermeta_language_structure_Parameter | c5= parse_org_kermeta_language_structure_MultiplicityElement | c6= parse_org_kermeta_language_behavior_TypeReference ) EOF ;
    public final org.eclipse.emf.ecore.EObject start() throws RecognitionException {
        org.eclipse.emf.ecore.EObject element =  null;
        int start_StartIndex = input.index();
        org.kermeta.language.structure.ModelingUnit c0 = null;

        org.kermeta.language.structure.Model c1 = null;

        org.kermeta.language.structure.Property c2 = null;

        org.kermeta.language.structure.Operation c3 = null;

        org.kermeta.language.structure.Parameter c4 = null;

        org.kermeta.language.structure.MultiplicityElement c5 = null;

        org.kermeta.language.behavior.TypeReference c6 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 1) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5284:1: ( (c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Model | c2= parse_org_kermeta_language_structure_Property | c3= parse_org_kermeta_language_structure_Operation | c4= parse_org_kermeta_language_structure_Parameter | c5= parse_org_kermeta_language_structure_MultiplicityElement | c6= parse_org_kermeta_language_behavior_TypeReference ) EOF )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5285:2: (c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Model | c2= parse_org_kermeta_language_structure_Property | c3= parse_org_kermeta_language_structure_Operation | c4= parse_org_kermeta_language_structure_Parameter | c5= parse_org_kermeta_language_structure_MultiplicityElement | c6= parse_org_kermeta_language_behavior_TypeReference ) EOF
            {
            if ( state.backtracking==0 ) {

              		// follow set for start rule(s)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 0));
              		expectedElementsIndexOfLastCompleteElement = expectedElements.size() - 1;
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5313:2: (c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Model | c2= parse_org_kermeta_language_structure_Property | c3= parse_org_kermeta_language_structure_Operation | c4= parse_org_kermeta_language_structure_Parameter | c5= parse_org_kermeta_language_structure_MultiplicityElement | c6= parse_org_kermeta_language_behavior_TypeReference )
            int alt1=7;
            alt1 = dfa1.predict(input);
            switch (alt1) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5314:3: c0= parse_org_kermeta_language_structure_ModelingUnit
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_start82);
                    c0=parse_org_kermeta_language_structure_ModelingUnit();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; 
                    }

                    }
                    break;
                case 2 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5315:8: c1= parse_org_kermeta_language_structure_Model
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Model_in_start96);
                    c1=parse_org_kermeta_language_structure_Model();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; 
                    }

                    }
                    break;
                case 3 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5316:8: c2= parse_org_kermeta_language_structure_Property
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_start110);
                    c2=parse_org_kermeta_language_structure_Property();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; 
                    }

                    }
                    break;
                case 4 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5317:8: c3= parse_org_kermeta_language_structure_Operation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_start124);
                    c3=parse_org_kermeta_language_structure_Operation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; 
                    }

                    }
                    break;
                case 5 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5318:8: c4= parse_org_kermeta_language_structure_Parameter
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_start138);
                    c4=parse_org_kermeta_language_structure_Parameter();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c4; 
                    }

                    }
                    break;
                case 6 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5319:8: c5= parse_org_kermeta_language_structure_MultiplicityElement
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_start152);
                    c5=parse_org_kermeta_language_structure_MultiplicityElement();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c5; 
                    }

                    }
                    break;
                case 7 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5320:8: c6= parse_org_kermeta_language_behavior_TypeReference
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_start166);
                    c6=parse_org_kermeta_language_behavior_TypeReference();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c6; 
                    }

                    }
                    break;

            }

            match(input,EOF,FOLLOW_EOF_in_start173); if (state.failed) return element;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 1, start_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "start"


    // $ANTLR start "parse_org_kermeta_language_structure_ModelingUnit"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5325:1: parse_org_kermeta_language_structure_ModelingUnit returns [org.kermeta.language.structure.ModelingUnit element = null] : ( ( (a0_0= parse_org_kermeta_language_structure_Require ) ) )* ( ( (a1_0= parse_org_kermeta_language_structure_Using ) ) )* ( ( (a2_0= parse_org_kermeta_language_structure_Package ) ) )* ;
    public final org.kermeta.language.structure.ModelingUnit parse_org_kermeta_language_structure_ModelingUnit() throws RecognitionException {
        org.kermeta.language.structure.ModelingUnit element =  null;
        int parse_org_kermeta_language_structure_ModelingUnit_StartIndex = input.index();
        org.kermeta.language.structure.Require a0_0 = null;

        org.kermeta.language.structure.Using a1_0 = null;

        org.kermeta.language.structure.Package a2_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 2) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5328:1: ( ( ( (a0_0= parse_org_kermeta_language_structure_Require ) ) )* ( ( (a1_0= parse_org_kermeta_language_structure_Using ) ) )* ( ( (a2_0= parse_org_kermeta_language_structure_Package ) ) )* )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5329:2: ( ( (a0_0= parse_org_kermeta_language_structure_Require ) ) )* ( ( (a1_0= parse_org_kermeta_language_structure_Using ) ) )* ( ( (a2_0= parse_org_kermeta_language_structure_Package ) ) )*
            {
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5329:2: ( ( (a0_0= parse_org_kermeta_language_structure_Require ) ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==17) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5330:3: ( (a0_0= parse_org_kermeta_language_structure_Require ) )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5330:3: ( (a0_0= parse_org_kermeta_language_structure_Require ) )
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5331:4: (a0_0= parse_org_kermeta_language_structure_Require )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5331:4: (a0_0= parse_org_kermeta_language_structure_Require )
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5332:5: a0_0= parse_org_kermeta_language_structure_Require
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Require_in_parse_org_kermeta_language_structure_ModelingUnit211);
            	    a0_0=parse_org_kermeta_language_structure_Require();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelingUnit();
            	      					}
            	      					if (a0_0 != null) {
            	      						if (a0_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODELING_UNIT__REQUIRES, a0_0);
            	      							completedElement(a0_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a0_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 1));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 2));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5384:2: ( ( (a1_0= parse_org_kermeta_language_structure_Using ) ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==16) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5385:3: ( (a1_0= parse_org_kermeta_language_structure_Using ) )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5385:3: ( (a1_0= parse_org_kermeta_language_structure_Using ) )
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5386:4: (a1_0= parse_org_kermeta_language_structure_Using )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5386:4: (a1_0= parse_org_kermeta_language_structure_Using )
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5387:5: a1_0= parse_org_kermeta_language_structure_Using
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Using_in_parse_org_kermeta_language_structure_ModelingUnit267);
            	    a1_0=parse_org_kermeta_language_structure_Using();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelingUnit();
            	      					}
            	      					if (a1_0 != null) {
            	      						if (a1_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODELING_UNIT__USINGS, a1_0);
            	      							completedElement(a1_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a1_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 3));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 3));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 3));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 3));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 3));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 3));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 3));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 3));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 3));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 3));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 3));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 3));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 4));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 4));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 4));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 4));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 4));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 4));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 4));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 4));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 4));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 4));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 4));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 4));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5437:2: ( ( (a2_0= parse_org_kermeta_language_structure_Package ) ) )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==STRING||LA4_0==18||(LA4_0>=22 && LA4_0<=24)||LA4_0==35||LA4_0==41||(LA4_0>=52 && LA4_0<=53)) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5438:3: ( (a2_0= parse_org_kermeta_language_structure_Package ) )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5438:3: ( (a2_0= parse_org_kermeta_language_structure_Package ) )
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5439:4: (a2_0= parse_org_kermeta_language_structure_Package )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5439:4: (a2_0= parse_org_kermeta_language_structure_Package )
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5440:5: a2_0= parse_org_kermeta_language_structure_Package
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_ModelingUnit323);
            	    a2_0=parse_org_kermeta_language_structure_Package();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelingUnit();
            	      					}
            	      					if (a2_0 != null) {
            	      						if (a2_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODELING_UNIT__PACKAGES, a2_0);
            	      							completedElement(a2_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a2_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 5));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 5));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 5));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 5));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 5));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 5));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 5));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 5));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 5));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 5));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 5));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 6));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 6));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 6));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 6));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 6));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 6));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 6));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 6));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 6));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 6));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 6));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 2, parse_org_kermeta_language_structure_ModelingUnit_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ModelingUnit"


    // $ANTLR start "parse_org_kermeta_language_structure_Using"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5490:1: parse_org_kermeta_language_structure_Using returns [org.kermeta.language.structure.Using element = null] : a0= 'using' ( (a1= QUALIFIEDNAME ) | (a2= STRING ) ) ;
    public final org.kermeta.language.structure.Using parse_org_kermeta_language_structure_Using() throws RecognitionException {
        org.kermeta.language.structure.Using element =  null;
        int parse_org_kermeta_language_structure_Using_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5493:1: (a0= 'using' ( (a1= QUALIFIEDNAME ) | (a2= STRING ) ) )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5494:2: a0= 'using' ( (a1= QUALIFIEDNAME ) | (a2= STRING ) )
            {
            a0=(Token)match(input,16,FOLLOW_16_in_parse_org_kermeta_language_structure_Using379); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createUsing();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 7));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 7));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5507:2: ( (a1= QUALIFIEDNAME ) | (a2= STRING ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==QUALIFIEDNAME) ) {
                alt5=1;
            }
            else if ( (LA5_0==STRING) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5508:3: (a1= QUALIFIEDNAME )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5508:3: (a1= QUALIFIEDNAME )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5509:4: a1= QUALIFIEDNAME
                    {
                    a1=(Token)match(input,QUALIFIEDNAME,FOLLOW_QUALIFIEDNAME_in_parse_org_kermeta_language_structure_Using402); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createUsing();
                      				}
                      				if (a1 != null) {
                      					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QUALIFIEDNAME");
                      					tokenResolver.setOptions(getOptions());
                      					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      					tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.USING__QUALIFIED_NAME), result);
                      					java.lang.Object resolvedObject = result.getResolvedToken();
                      					if (resolvedObject == null) {
                      						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
                      					}
                      					java.lang.String resolved = (java.lang.String)resolvedObject;
                      					if (resolved != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.USING__QUALIFIED_NAME), resolved);
                      						completedElement(resolved);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
                      				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 8));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 8));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 8));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 8));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 8));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 8));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 8));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 8));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 8));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 8));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 8));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 8));
                      		
                    }

                    }
                    break;
                case 2 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5553:6: (a2= STRING )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5553:6: (a2= STRING )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5554:4: a2= STRING
                    {
                    a2=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_Using440); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createUsing();
                      				}
                      				if (a2 != null) {
                      					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                      					tokenResolver.setOptions(getOptions());
                      					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      					tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.USING__QUALIFIED_NAME), result);
                      					java.lang.Object resolvedObject = result.getResolvedToken();
                      					if (resolvedObject == null) {
                      						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
                      					}
                      					java.lang.String resolved = (java.lang.String)resolvedObject;
                      					if (resolved != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.USING__QUALIFIED_NAME), resolved);
                      						completedElement(resolved);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
                      				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 9));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 9));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 9));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 9));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 9));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 9));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 9));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 9));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 9));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 9));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 9));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 9));
                      		
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 10));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 10));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 10));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 10));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 10));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 10));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 10));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 10));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 10));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 10));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 10));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 10));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 3, parse_org_kermeta_language_structure_Using_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Using"


    // $ANTLR start "parse_org_kermeta_language_structure_Require"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5616:1: parse_org_kermeta_language_structure_Require returns [org.kermeta.language.structure.Require element = null] : a0= 'require' (a1= STRING_LITERAL ) ;
    public final org.kermeta.language.structure.Require parse_org_kermeta_language_structure_Require() throws RecognitionException {
        org.kermeta.language.structure.Require element =  null;
        int parse_org_kermeta_language_structure_Require_StartIndex = input.index();
        Token a0=null;
        Token a1=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5619:1: (a0= 'require' (a1= STRING_LITERAL ) )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5620:2: a0= 'require' (a1= STRING_LITERAL )
            {
            a0=(Token)match(input,17,FOLLOW_17_in_parse_org_kermeta_language_structure_Require489); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createRequire();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 11));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5632:2: (a1= STRING_LITERAL )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5633:3: a1= STRING_LITERAL
            {
            a1=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_parse_org_kermeta_language_structure_Require507); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createRequire();
              			}
              			if (a1 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING_LITERAL");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.REQUIRE__URI), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.REQUIRE__URI), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 12));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 12));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 12));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 12));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 12));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 12));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 12));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 12));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 12));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 12));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 12));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 12));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 12));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 4, parse_org_kermeta_language_structure_Require_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Require"


    // $ANTLR start "parse_org_kermeta_language_structure_Package"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5679:1: parse_org_kermeta_language_structure_Package returns [org.kermeta.language.structure.Package element = null] : ( (a0= 'package' ( ( (a1= STRING ) a2= '.' ) )* (a3= STRING ) ( ( ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_Package ) ) )* a7= '}' | a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a10= '}' ) )? ) | ( ( ( (a11_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ ) );
    public final org.kermeta.language.structure.Package parse_org_kermeta_language_structure_Package() throws RecognitionException {
        org.kermeta.language.structure.Package element =  null;
        int parse_org_kermeta_language_structure_Package_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a5=null;
        Token a7=null;
        Token a8=null;
        Token a10=null;
        org.kermeta.language.structure.TypeDefinition a4_0 = null;

        org.kermeta.language.structure.Package a6_0 = null;

        org.kermeta.language.structure.TypeDefinition a9_0 = null;

        org.kermeta.language.structure.TypeDefinition a11_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5682:1: ( (a0= 'package' ( ( (a1= STRING ) a2= '.' ) )* (a3= STRING ) ( ( ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_Package ) ) )* a7= '}' | a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a10= '}' ) )? ) | ( ( ( (a11_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==18) ) {
                alt13=1;
            }
            else if ( (LA13_0==STRING||(LA13_0>=22 && LA13_0<=24)||LA13_0==35||LA13_0==41||(LA13_0>=52 && LA13_0<=53)) ) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5683:2: (a0= 'package' ( ( (a1= STRING ) a2= '.' ) )* (a3= STRING ) ( ( ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_Package ) ) )* a7= '}' | a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a10= '}' ) )? )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5683:2: (a0= 'package' ( ( (a1= STRING ) a2= '.' ) )* (a3= STRING ) ( ( ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_Package ) ) )* a7= '}' | a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a10= '}' ) )? )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5684:3: a0= 'package' ( ( (a1= STRING ) a2= '.' ) )* (a3= STRING ) ( ( ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_Package ) ) )* a7= '}' | a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a10= '}' ) )?
                    {
                    a0=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_Package547); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (element == null) {
                      				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                      			}
                      			collectHiddenTokens(element);
                      			copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 13));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 13));
                      		
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5697:3: ( ( (a1= STRING ) a2= '.' ) )*
                    loop6:
                    do {
                        int alt6=2;
                        int LA6_0 = input.LA(1);

                        if ( (LA6_0==STRING) ) {
                            int LA6_1 = input.LA(2);

                            if ( (LA6_1==19) ) {
                                alt6=1;
                            }


                        }


                        switch (alt6) {
                    	case 1 :
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5698:4: ( (a1= STRING ) a2= '.' )
                    	    {
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5698:4: ( (a1= STRING ) a2= '.' )
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5699:5: (a1= STRING ) a2= '.'
                    	    {
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5699:5: (a1= STRING )
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5700:6: a1= STRING
                    	    {
                    	    a1=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_Package582); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      						if (terminateParsing) {
                    	      							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      						}
                    	      						if (element == null) {
                    	      							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                    	      						}
                    	      						if (a1 != null) {
                    	      							org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	      							tokenResolver.setOptions(getOptions());
                    	      							org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	      							tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NESTING_PACKAGE), result);
                    	      							java.lang.Object resolvedObject = result.getResolvedToken();
                    	      							if (resolvedObject == null) {
                    	      								addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
                    	      							}
                    	      							String resolved = (String) resolvedObject;
                    	      							org.kermeta.language.structure.Package proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                    	      							collectHiddenTokens(element);
                    	      							registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Package, org.kermeta.language.structure.Package>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getPackageNestingPackageReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NESTING_PACKAGE), resolved, proxy);
                    	      							if (proxy != null) {
                    	      								element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NESTING_PACKAGE), proxy);
                    	      								completedElement(proxy);
                    	      							}
                    	      							collectHiddenTokens(element);
                    	      							copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
                    	      							copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, proxy);
                    	      						}
                    	      					
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      					// expected elements (follow set)
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 14));
                    	      				
                    	    }
                    	    a2=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_Package621); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      					if (element == null) {
                    	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                    	      					}
                    	      					collectHiddenTokens(element);
                    	      					copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
                    	      				
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      					// expected elements (follow set)
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 15));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 15));
                    	      				
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop6;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 16));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 16));
                      		
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5757:3: (a3= STRING )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5758:4: a3= STRING
                    {
                    a3=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_Package667); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                      				}
                      				if (a3 != null) {
                      					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                      					tokenResolver.setOptions(getOptions());
                      					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      					tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), result);
                      					java.lang.Object resolvedObject = result.getResolvedToken();
                      					if (resolvedObject == null) {
                      						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a3).getLine(), ((org.antlr.runtime.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a3).getStartIndex(), ((org.antlr.runtime.CommonToken) a3).getStopIndex());
                      					}
                      					java.lang.String resolved = (java.lang.String)resolvedObject;
                      					if (resolved != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), resolved);
                      						completedElement(resolved);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos((org.antlr.runtime.CommonToken) a3, element);
                      				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 17));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 17));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 17));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 17));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 17));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 17));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 17));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 17));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 17));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 17));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_30, 17));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_31, 17));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 17));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 17));
                      		
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5803:3: ( ( ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_Package ) ) )* a7= '}' | a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a10= '}' ) )?
                    int alt11=2;
                    alt11 = dfa11.predict(input);
                    switch (alt11) {
                        case 1 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5804:4: ( ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_Package ) ) )* a7= '}' | a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a10= '}' )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5804:4: ( ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_Package ) ) )* a7= '}' | a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a10= '}' )
                            int alt10=3;
                            alt10 = dfa10.predict(input);
                            switch (alt10) {
                                case 1 :
                                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5805:5: ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                                    {
                                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5805:5: ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                                    int cnt7=0;
                                    loop7:
                                    do {
                                        int alt7=2;
                                        alt7 = dfa7.predict(input);
                                        switch (alt7) {
                                    	case 1 :
                                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5806:6: ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                                    	    {
                                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5806:6: ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5807:7: (a4_0= parse_org_kermeta_language_structure_TypeDefinition )
                                    	    {
                                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5807:7: (a4_0= parse_org_kermeta_language_structure_TypeDefinition )
                                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5808:8: a4_0= parse_org_kermeta_language_structure_TypeDefinition
                                    	    {
                                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Package729);
                                    	    a4_0=parse_org_kermeta_language_structure_TypeDefinition();

                                    	    state._fsp--;
                                    	    if (state.failed) return element;
                                    	    if ( state.backtracking==0 ) {

                                    	      								if (terminateParsing) {
                                    	      									throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                                    	      								}
                                    	      								if (element == null) {
                                    	      									element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                    	      								}
                                    	      								if (a4_0 != null) {
                                    	      									if (a4_0 != null) {
                                    	      										addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__OWNED_TYPE_DEFINITION, a4_0);
                                    	      										completedElement(a4_0);
                                    	      									}
                                    	      									collectHiddenTokens(element);
                                    	      									copyLocalizationInfos(a4_0, element); 								}
                                    	      							
                                    	    }

                                    	    }

                                    	    if ( state.backtracking==0 ) {

                                    	      							// expected elements (follow set)
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 18));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 18));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 18));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 18));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 18));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 18));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 18));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 18));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 18));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 18));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 18));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 18));
                                    	      						
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    if ( cnt7 >= 1 ) break loop7;
                                    	    if (state.backtracking>0) {state.failed=true; return element;}
                                                EarlyExitException eee =
                                                    new EarlyExitException(7, input);
                                                throw eee;
                                        }
                                        cnt7++;
                                    } while (true);

                                    if ( state.backtracking==0 ) {

                                      					// expected elements (follow set)
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 19));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 19));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 19));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 19));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 19));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 19));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 19));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 19));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 19));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 19));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 19));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 19));
                                      				
                                    }

                                    }
                                    break;
                                case 2 :
                                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5859:10: a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_Package ) ) )* a7= '}'
                                    {
                                    a5=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_Package810); if (state.failed) return element;
                                    if ( state.backtracking==0 ) {

                                      					if (element == null) {
                                      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                      					}
                                      					collectHiddenTokens(element);
                                      					copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                                      				
                                    }
                                    if ( state.backtracking==0 ) {

                                      					// expected elements (follow set)
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 20));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 20));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 20));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 20));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 20));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 20));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 20));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 20));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 20));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 20));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 20));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 20));
                                      				
                                    }
                                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5882:5: ( ( (a6_0= parse_org_kermeta_language_structure_Package ) ) )*
                                    loop8:
                                    do {
                                        int alt8=2;
                                        int LA8_0 = input.LA(1);

                                        if ( (LA8_0==STRING||LA8_0==18||(LA8_0>=22 && LA8_0<=24)||LA8_0==35||LA8_0==41||(LA8_0>=52 && LA8_0<=53)) ) {
                                            alt8=1;
                                        }


                                        switch (alt8) {
                                    	case 1 :
                                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5883:6: ( (a6_0= parse_org_kermeta_language_structure_Package ) )
                                    	    {
                                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5883:6: ( (a6_0= parse_org_kermeta_language_structure_Package ) )
                                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5884:7: (a6_0= parse_org_kermeta_language_structure_Package )
                                    	    {
                                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5884:7: (a6_0= parse_org_kermeta_language_structure_Package )
                                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5885:8: a6_0= parse_org_kermeta_language_structure_Package
                                    	    {
                                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Package857);
                                    	    a6_0=parse_org_kermeta_language_structure_Package();

                                    	    state._fsp--;
                                    	    if (state.failed) return element;
                                    	    if ( state.backtracking==0 ) {

                                    	      								if (terminateParsing) {
                                    	      									throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                                    	      								}
                                    	      								if (element == null) {
                                    	      									element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                    	      								}
                                    	      								if (a6_0 != null) {
                                    	      									if (a6_0 != null) {
                                    	      										addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__NESTED_PACKAGE, a6_0);
                                    	      										completedElement(a6_0);
                                    	      									}
                                    	      									collectHiddenTokens(element);
                                    	      									copyLocalizationInfos(a6_0, element); 								}
                                    	      							
                                    	    }

                                    	    }

                                    	    if ( state.backtracking==0 ) {

                                    	      							// expected elements (follow set)
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 21));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 21));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 21));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 21));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 21));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 21));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 21));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 21));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 21));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 21));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 21));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 21));
                                    	      						
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    break loop8;
                                        }
                                    } while (true);

                                    if ( state.backtracking==0 ) {

                                      					// expected elements (follow set)
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 22));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 22));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 22));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 22));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 22));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 22));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 22));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 22));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 22));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 22));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 22));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 22));
                                      				
                                    }
                                    a7=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_structure_Package928); if (state.failed) return element;
                                    if ( state.backtracking==0 ) {

                                      					if (element == null) {
                                      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                      					}
                                      					collectHiddenTokens(element);
                                      					copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
                                      				
                                    }
                                    if ( state.backtracking==0 ) {

                                      					// expected elements (follow set)
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 23));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 23));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 23));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 23));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 23));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 23));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 23));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 23));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 23));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 23));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 23));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 23));
                                      				
                                    }

                                    }
                                    break;
                                case 3 :
                                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5959:10: a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a10= '}'
                                    {
                                    a8=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_Package961); if (state.failed) return element;
                                    if ( state.backtracking==0 ) {

                                      					if (element == null) {
                                      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                      					}
                                      					collectHiddenTokens(element);
                                      					copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
                                      				
                                    }
                                    if ( state.backtracking==0 ) {

                                      					// expected elements (follow set)
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 24));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 24));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 24));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 24));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 24));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 24));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 24));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 24));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 24));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 24));
                                      				
                                    }
                                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5980:5: ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                                    int cnt9=0;
                                    loop9:
                                    do {
                                        int alt9=2;
                                        int LA9_0 = input.LA(1);

                                        if ( (LA9_0==STRING||(LA9_0>=22 && LA9_0<=24)||LA9_0==35||LA9_0==41||(LA9_0>=52 && LA9_0<=53)) ) {
                                            alt9=1;
                                        }


                                        switch (alt9) {
                                    	case 1 :
                                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5981:6: ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                                    	    {
                                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5981:6: ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5982:7: (a9_0= parse_org_kermeta_language_structure_TypeDefinition )
                                    	    {
                                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5982:7: (a9_0= parse_org_kermeta_language_structure_TypeDefinition )
                                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5983:8: a9_0= parse_org_kermeta_language_structure_TypeDefinition
                                    	    {
                                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Package1008);
                                    	    a9_0=parse_org_kermeta_language_structure_TypeDefinition();

                                    	    state._fsp--;
                                    	    if (state.failed) return element;
                                    	    if ( state.backtracking==0 ) {

                                    	      								if (terminateParsing) {
                                    	      									throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                                    	      								}
                                    	      								if (element == null) {
                                    	      									element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                    	      								}
                                    	      								if (a9_0 != null) {
                                    	      									if (a9_0 != null) {
                                    	      										addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__OWNED_TYPE_DEFINITION, a9_0);
                                    	      										completedElement(a9_0);
                                    	      									}
                                    	      									collectHiddenTokens(element);
                                    	      									copyLocalizationInfos(a9_0, element); 								}
                                    	      							
                                    	    }

                                    	    }

                                    	    if ( state.backtracking==0 ) {

                                    	      							// expected elements (follow set)
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 25));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 25));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 25));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 25));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 25));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 25));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 25));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 25));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 25));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 25));
                                    	      							addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_33, 25));
                                    	      						
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    if ( cnt9 >= 1 ) break loop9;
                                    	    if (state.backtracking>0) {state.failed=true; return element;}
                                                EarlyExitException eee =
                                                    new EarlyExitException(9, input);
                                                throw eee;
                                        }
                                        cnt9++;
                                    } while (true);

                                    if ( state.backtracking==0 ) {

                                      					// expected elements (follow set)
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 26));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 26));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 26));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 26));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 26));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 26));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 26));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 26));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 26));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 26));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_33, 26));
                                      				
                                    }
                                    a10=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_structure_Package1079); if (state.failed) return element;
                                    if ( state.backtracking==0 ) {

                                      					if (element == null) {
                                      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                      					}
                                      					collectHiddenTokens(element);
                                      					copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
                                      				
                                    }
                                    if ( state.backtracking==0 ) {

                                      					// expected elements (follow set)
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 27));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 27));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 27));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 27));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 27));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 27));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 27));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 27));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 27));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 27));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 27));
                                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 27));
                                      				
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 28));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 28));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 28));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 28));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 28));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 28));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 28));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 28));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 28));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 28));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 28));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 28));
                      		
                    }

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 29));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 29));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 29));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 29));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 29));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 29));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 29));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 29));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 29));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 29));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 29));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 29));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6090:4: ( ( ( (a11_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6090:4: ( ( ( (a11_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6091:3: ( ( (a11_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6091:3: ( ( (a11_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                    int cnt12=0;
                    loop12:
                    do {
                        int alt12=2;
                        alt12 = dfa12.predict(input);
                        switch (alt12) {
                    	case 1 :
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6092:4: ( (a11_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                    	    {
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6092:4: ( (a11_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6093:5: (a11_0= parse_org_kermeta_language_structure_TypeDefinition )
                    	    {
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6093:5: (a11_0= parse_org_kermeta_language_structure_TypeDefinition )
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6094:6: a11_0= parse_org_kermeta_language_structure_TypeDefinition
                    	    {
                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Package1153);
                    	    a11_0=parse_org_kermeta_language_structure_TypeDefinition();

                    	    state._fsp--;
                    	    if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      						if (terminateParsing) {
                    	      							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      						}
                    	      						if (element == null) {
                    	      							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                    	      						}
                    	      						if (a11_0 != null) {
                    	      							if (a11_0 != null) {
                    	      								addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__OWNED_TYPE_DEFINITION, a11_0);
                    	      								completedElement(a11_0);
                    	      							}
                    	      							collectHiddenTokens(element);
                    	      							copyLocalizationInfos(a11_0, element); 						}
                    	      					
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      					// expected elements (follow set)
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 30));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 30));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 30));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 30));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 30));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 30));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 30));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 30));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 30));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 30));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 30));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 30));
                    	      				
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt12 >= 1 ) break loop12;
                    	    if (state.backtracking>0) {state.failed=true; return element;}
                                EarlyExitException eee =
                                    new EarlyExitException(12, input);
                                throw eee;
                        }
                        cnt12++;
                    } while (true);

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 31));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 31));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 31));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 31));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 31));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 31));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 31));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 31));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 31));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 31));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 31));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 31));
                      		
                    }

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 32));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 32));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 32));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 32));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 32));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 32));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 32));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 32));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 32));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 32));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 32));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 32));
                      	
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 5, parse_org_kermeta_language_structure_Package_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Package"


    // $ANTLR start "parse_org_kermeta_language_structure_ClassDefinition"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6163:1: parse_org_kermeta_language_structure_ClassDefinition returns [org.kermeta.language.structure.ClassDefinition element = null] : ( (a0= 'aspect' ) )? ( (a1= 'abstract' ) )? a2= 'class' (a3= STRING ) ( (a4= 'inherits' (a5= STRING ) ( (a6= ',' (a7= STRING ) ) )* ) )? a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Constraint ) ) )* ( ( (a10_0= parse_org_kermeta_language_structure_Property ) ) )* ( ( (a11_0= parse_org_kermeta_language_structure_Operation ) ) )* a12= '}' ;
    public final org.kermeta.language.structure.ClassDefinition parse_org_kermeta_language_structure_ClassDefinition() throws RecognitionException {
        org.kermeta.language.structure.ClassDefinition element =  null;
        int parse_org_kermeta_language_structure_ClassDefinition_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a8=null;
        Token a12=null;
        org.kermeta.language.structure.Constraint a9_0 = null;

        org.kermeta.language.structure.Property a10_0 = null;

        org.kermeta.language.structure.Operation a11_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6166:1: ( ( (a0= 'aspect' ) )? ( (a1= 'abstract' ) )? a2= 'class' (a3= STRING ) ( (a4= 'inherits' (a5= STRING ) ( (a6= ',' (a7= STRING ) ) )* ) )? a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Constraint ) ) )* ( ( (a10_0= parse_org_kermeta_language_structure_Property ) ) )* ( ( (a11_0= parse_org_kermeta_language_structure_Operation ) ) )* a12= '}' )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6167:2: ( (a0= 'aspect' ) )? ( (a1= 'abstract' ) )? a2= 'class' (a3= STRING ) ( (a4= 'inherits' (a5= STRING ) ( (a6= ',' (a7= STRING ) ) )* ) )? a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Constraint ) ) )* ( ( (a10_0= parse_org_kermeta_language_structure_Property ) ) )* ( ( (a11_0= parse_org_kermeta_language_structure_Operation ) ) )* a12= '}'
            {
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6167:2: ( (a0= 'aspect' ) )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==22) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6168:3: (a0= 'aspect' )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6168:3: (a0= 'aspect' )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6169:4: a0= 'aspect'
                    {
                    a0=(Token)match(input,22,FOLLOW_22_in_parse_org_kermeta_language_structure_ClassDefinition1235); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 33));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 33));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 34));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 34));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6190:2: ( (a1= 'abstract' ) )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==23) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6191:3: (a1= 'abstract' )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6191:3: (a1= 'abstract' )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6192:4: a1= 'abstract'
                    {
                    a1=(Token)match(input,23,FOLLOW_23_in_parse_org_kermeta_language_structure_ClassDefinition1277); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 35));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 36));
              	
            }
            a2=(Token)match(input,24,FOLLOW_24_in_parse_org_kermeta_language_structure_ClassDefinition1310); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_34, 37));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6223:2: (a3= STRING )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6224:3: a3= STRING
            {
            a3=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_ClassDefinition1328); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
              			}
              			if (a3 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a3).getLine(), ((org.antlr.runtime.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a3).getStartIndex(), ((org.antlr.runtime.CommonToken) a3).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a3, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_35, 38));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 38));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6257:2: ( (a4= 'inherits' (a5= STRING ) ( (a6= ',' (a7= STRING ) ) )* ) )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==25) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6258:3: (a4= 'inherits' (a5= STRING ) ( (a6= ',' (a7= STRING ) ) )* )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6258:3: (a4= 'inherits' (a5= STRING ) ( (a6= ',' (a7= STRING ) ) )* )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6259:4: a4= 'inherits' (a5= STRING ) ( (a6= ',' (a7= STRING ) ) )*
                    {
                    a4=(Token)match(input,25,FOLLOW_25_in_parse_org_kermeta_language_structure_ClassDefinition1358); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 39));
                      			
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6271:4: (a5= STRING )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6272:5: a5= STRING
                    {
                    a5=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_ClassDefinition1384); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                      					}
                      					if (a5 != null) {
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                      						tokenResolver.setOptions(getOptions());
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      						tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), result);
                      						java.lang.Object resolvedObject = result.getResolvedToken();
                      						if (resolvedObject == null) {
                      							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a5).getLine(), ((org.antlr.runtime.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a5).getStartIndex(), ((org.antlr.runtime.CommonToken) a5).getStopIndex());
                      						}
                      						String resolved = (String) resolvedObject;
                      						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
                      						collectHiddenTokens(element);
                      						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ClassDefinition, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getClassDefinitionSuperTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), resolved, proxy);
                      						if (proxy != null) {
                      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE, proxy);
                      							completedElement(proxy);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, proxy);
                      					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_38, 40));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 40));
                      			
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6309:4: ( (a6= ',' (a7= STRING ) ) )*
                    loop16:
                    do {
                        int alt16=2;
                        int LA16_0 = input.LA(1);

                        if ( (LA16_0==26) ) {
                            alt16=1;
                        }


                        switch (alt16) {
                    	case 1 :
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6310:5: (a6= ',' (a7= STRING ) )
                    	    {
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6310:5: (a6= ',' (a7= STRING ) )
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6311:6: a6= ',' (a7= STRING )
                    	    {
                    	    a6=(Token)match(input,26,FOLLOW_26_in_parse_org_kermeta_language_structure_ClassDefinition1430); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      						if (element == null) {
                    	      							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                    	      						}
                    	      						collectHiddenTokens(element);
                    	      						copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                    	      					
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_39, 41));
                    	      					
                    	    }
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6323:6: (a7= STRING )
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6324:7: a7= STRING
                    	    {
                    	    a7=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_ClassDefinition1464); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      							if (terminateParsing) {
                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      							}
                    	      							if (element == null) {
                    	      								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                    	      							}
                    	      							if (a7 != null) {
                    	      								org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	      								tokenResolver.setOptions(getOptions());
                    	      								org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	      								tokenResolver.resolve(a7.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), result);
                    	      								java.lang.Object resolvedObject = result.getResolvedToken();
                    	      								if (resolvedObject == null) {
                    	      									addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a7).getLine(), ((org.antlr.runtime.CommonToken) a7).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a7).getStartIndex(), ((org.antlr.runtime.CommonToken) a7).getStopIndex());
                    	      								}
                    	      								String resolved = (String) resolvedObject;
                    	      								org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
                    	      								collectHiddenTokens(element);
                    	      								registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ClassDefinition, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getClassDefinitionSuperTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), resolved, proxy);
                    	      								if (proxy != null) {
                    	      									addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE, proxy);
                    	      									completedElement(proxy);
                    	      								}
                    	      								collectHiddenTokens(element);
                    	      								copyLocalizationInfos((org.antlr.runtime.CommonToken) a7, element);
                    	      								copyLocalizationInfos((org.antlr.runtime.CommonToken) a7, proxy);
                    	      							}
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_38, 42));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 42));
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop16;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_38, 43));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 43));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 44));
              	
            }
            a8=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_ClassDefinition1545); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 45));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 45));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 45));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 45));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 45));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 45));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6393:2: ( ( (a9_0= parse_org_kermeta_language_structure_Constraint ) ) )*
            loop18:
            do {
                int alt18=2;
                int LA18_0 = input.LA(1);

                if ( (LA18_0==STRING) ) {
                    int LA18_2 = input.LA(2);

                    if ( (LA18_2==STRING) ) {
                        int LA18_3 = input.LA(3);

                        if ( (synpred24_Kermeta()) ) {
                            alt18=1;
                        }


                    }


                }


                switch (alt18) {
            	case 1 :
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6394:3: ( (a9_0= parse_org_kermeta_language_structure_Constraint ) )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6394:3: ( (a9_0= parse_org_kermeta_language_structure_Constraint ) )
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6395:4: (a9_0= parse_org_kermeta_language_structure_Constraint )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6395:4: (a9_0= parse_org_kermeta_language_structure_Constraint )
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6396:5: a9_0= parse_org_kermeta_language_structure_Constraint
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_ClassDefinition1574);
            	    a9_0=parse_org_kermeta_language_structure_Constraint();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
            	      					}
            	      					if (a9_0 != null) {
            	      						if (a9_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__INV, a9_0);
            	      							completedElement(a9_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a9_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 46));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 46));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 46));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 46));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 46));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 46));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop18;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 47));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 47));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 47));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 47));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 47));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 47));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6434:2: ( ( (a10_0= parse_org_kermeta_language_structure_Property ) ) )*
            loop19:
            do {
                int alt19=2;
                int LA19_0 = input.LA(1);

                if ( ((LA19_0>=27 && LA19_0<=28)||LA19_0==30) ) {
                    alt19=1;
                }


                switch (alt19) {
            	case 1 :
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6435:3: ( (a10_0= parse_org_kermeta_language_structure_Property ) )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6435:3: ( (a10_0= parse_org_kermeta_language_structure_Property ) )
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6436:4: (a10_0= parse_org_kermeta_language_structure_Property )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6436:4: (a10_0= parse_org_kermeta_language_structure_Property )
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6437:5: a10_0= parse_org_kermeta_language_structure_Property
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_ClassDefinition1630);
            	    a10_0=parse_org_kermeta_language_structure_Property();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
            	      					}
            	      					if (a10_0 != null) {
            	      						if (a10_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__OWNED_ATTRIBUTE, a10_0);
            	      							completedElement(a10_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a10_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 48));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 48));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 48));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 48));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 48));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 48));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop19;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 49));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 49));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 49));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 49));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 49));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 49));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6475:2: ( ( (a11_0= parse_org_kermeta_language_structure_Operation ) ) )*
            loop20:
            do {
                int alt20=2;
                int LA20_0 = input.LA(1);

                if ( (LA20_0==STRING||LA20_0==31) ) {
                    alt20=1;
                }


                switch (alt20) {
            	case 1 :
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6476:3: ( (a11_0= parse_org_kermeta_language_structure_Operation ) )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6476:3: ( (a11_0= parse_org_kermeta_language_structure_Operation ) )
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6477:4: (a11_0= parse_org_kermeta_language_structure_Operation )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6477:4: (a11_0= parse_org_kermeta_language_structure_Operation )
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6478:5: a11_0= parse_org_kermeta_language_structure_Operation
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_ClassDefinition1686);
            	    a11_0=parse_org_kermeta_language_structure_Operation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
            	      					}
            	      					if (a11_0 != null) {
            	      						if (a11_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__OWNED_OPERATION, a11_0);
            	      							completedElement(a11_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a11_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 50));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 50));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 50));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop20;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 51));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 51));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 51));
              	
            }
            a12=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_structure_ClassDefinition1727); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 52));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 52));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 52));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 52));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 52));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 52));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 52));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 52));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 52));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 52));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 52));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 6, parse_org_kermeta_language_structure_ClassDefinition_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ClassDefinition"


    // $ANTLR start "parse_org_kermeta_language_structure_Property"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6534:1: parse_org_kermeta_language_structure_Property returns [org.kermeta.language.structure.Property element = null] : ( (a0= 'attribute' | a1= 'reference' ) (a2= STRING ) ( (a3= ':' (a4= STRING ) ) )? | a5= 'property' (a6= STRING ) ( (a7= ':' (a8= STRING ) ) )? (a9_0= parse_org_kermeta_language_behavior_Expression ) (a10_0= parse_org_kermeta_language_behavior_Expression ) ) ;
    public final org.kermeta.language.structure.Property parse_org_kermeta_language_structure_Property() throws RecognitionException {
        org.kermeta.language.structure.Property element =  null;
        int parse_org_kermeta_language_structure_Property_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a8=null;
        org.kermeta.language.behavior.Expression a9_0 = null;

        org.kermeta.language.behavior.Expression a10_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6537:1: ( ( (a0= 'attribute' | a1= 'reference' ) (a2= STRING ) ( (a3= ':' (a4= STRING ) ) )? | a5= 'property' (a6= STRING ) ( (a7= ':' (a8= STRING ) ) )? (a9_0= parse_org_kermeta_language_behavior_Expression ) (a10_0= parse_org_kermeta_language_behavior_Expression ) ) )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6538:2: ( (a0= 'attribute' | a1= 'reference' ) (a2= STRING ) ( (a3= ':' (a4= STRING ) ) )? | a5= 'property' (a6= STRING ) ( (a7= ':' (a8= STRING ) ) )? (a9_0= parse_org_kermeta_language_behavior_Expression ) (a10_0= parse_org_kermeta_language_behavior_Expression ) )
            {
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6538:2: ( (a0= 'attribute' | a1= 'reference' ) (a2= STRING ) ( (a3= ':' (a4= STRING ) ) )? | a5= 'property' (a6= STRING ) ( (a7= ':' (a8= STRING ) ) )? (a9_0= parse_org_kermeta_language_behavior_Expression ) (a10_0= parse_org_kermeta_language_behavior_Expression ) )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( ((LA24_0>=27 && LA24_0<=28)) ) {
                alt24=1;
            }
            else if ( (LA24_0==30) ) {
                alt24=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6539:3: (a0= 'attribute' | a1= 'reference' ) (a2= STRING ) ( (a3= ':' (a4= STRING ) ) )?
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6539:3: (a0= 'attribute' | a1= 'reference' )
                    int alt21=2;
                    int LA21_0 = input.LA(1);

                    if ( (LA21_0==27) ) {
                        alt21=1;
                    }
                    else if ( (LA21_0==28) ) {
                        alt21=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 21, 0, input);

                        throw nvae;
                    }
                    switch (alt21) {
                        case 1 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6540:4: a0= 'attribute'
                            {
                            a0=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Property1765); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              				}
                              				collectHiddenTokens(element);
                              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                              			
                            }
                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 53));
                              			
                            }

                            }
                            break;
                        case 2 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6553:8: a1= 'reference'
                            {
                            a1=(Token)match(input,28,FOLLOW_28_in_parse_org_kermeta_language_structure_Property1793); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              				}
                              				collectHiddenTokens(element);
                              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                              			
                            }
                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 54));
                              			
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 55));
                      		
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6571:3: (a2= STRING )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6572:4: a2= STRING
                    {
                    a2=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_Property1828); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                      				}
                      				if (a2 != null) {
                      					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                      					tokenResolver.setOptions(getOptions());
                      					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      					tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), result);
                      					java.lang.Object resolvedObject = result.getResolvedToken();
                      					if (resolvedObject == null) {
                      						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
                      					}
                      					java.lang.String resolved = (java.lang.String)resolvedObject;
                      					if (resolved != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), resolved);
                      						completedElement(resolved);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
                      				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_42, 56));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 56));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 56));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 56));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 56));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 56));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 56));
                      		
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6610:3: ( (a3= ':' (a4= STRING ) ) )?
                    int alt22=2;
                    int LA22_0 = input.LA(1);

                    if ( (LA22_0==29) ) {
                        alt22=1;
                    }
                    switch (alt22) {
                        case 1 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6611:4: (a3= ':' (a4= STRING ) )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6611:4: (a3= ':' (a4= STRING ) )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6612:5: a3= ':' (a4= STRING )
                            {
                            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Property1866); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (element == null) {
                              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					// expected elements (follow set)
                              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 57));
                              				
                            }
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6624:5: (a4= STRING )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6625:6: a4= STRING
                            {
                            a4=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_Property1896); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              						if (terminateParsing) {
                              							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              						}
                              						if (element == null) {
                              							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              						}
                              						if (a4 != null) {
                              							org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                              							tokenResolver.setOptions(getOptions());
                              							org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              							tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), result);
                              							java.lang.Object resolvedObject = result.getResolvedToken();
                              							if (resolvedObject == null) {
                              								addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
                              							}
                              							String resolved = (String) resolvedObject;
                              							org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
                              							collectHiddenTokens(element);
                              							registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), resolved, proxy);
                              							if (proxy != null) {
                              								element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), proxy);
                              								completedElement(proxy);
                              							}
                              							collectHiddenTokens(element);
                              							copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
                              							copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
                              						}
                              					
                            }

                            }

                            if ( state.backtracking==0 ) {

                              					// expected elements (follow set)
                              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 58));
                              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 58));
                              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 58));
                              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 58));
                              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 58));
                              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 58));
                              				
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 59));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 59));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 59));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 59));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 59));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 59));
                      		
                    }

                    }
                    break;
                case 2 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6679:6: a5= 'property' (a6= STRING ) ( (a7= ':' (a8= STRING ) ) )? (a9_0= parse_org_kermeta_language_behavior_Expression ) (a10_0= parse_org_kermeta_language_behavior_Expression )
                    {
                    a5=(Token)match(input,30,FOLLOW_30_in_parse_org_kermeta_language_structure_Property1959); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (element == null) {
                      				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                      			}
                      			collectHiddenTokens(element);
                      			copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 60));
                      		
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6691:3: (a6= STRING )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6692:4: a6= STRING
                    {
                    a6=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_Property1981); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                      				}
                      				if (a6 != null) {
                      					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                      					tokenResolver.setOptions(getOptions());
                      					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      					tokenResolver.resolve(a6.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), result);
                      					java.lang.Object resolvedObject = result.getResolvedToken();
                      					if (resolvedObject == null) {
                      						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a6).getLine(), ((org.antlr.runtime.CommonToken) a6).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a6).getStartIndex(), ((org.antlr.runtime.CommonToken) a6).getStopIndex());
                      					}
                      					java.lang.String resolved = (java.lang.String)resolvedObject;
                      					if (resolved != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), resolved);
                      						completedElement(resolved);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos((org.antlr.runtime.CommonToken) a6, element);
                      				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 61));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 61));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 61));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 61));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 61));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 61));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 61));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 61));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 61));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 61));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 61));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 61));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 61));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 61));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 61));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 61));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 61));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 61));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 61));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 61));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 61));
                      		
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6744:3: ( (a7= ':' (a8= STRING ) ) )?
                    int alt23=2;
                    int LA23_0 = input.LA(1);

                    if ( (LA23_0==29) ) {
                        alt23=1;
                    }
                    switch (alt23) {
                        case 1 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6745:4: (a7= ':' (a8= STRING ) )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6745:4: (a7= ':' (a8= STRING ) )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6746:5: a7= ':' (a8= STRING )
                            {
                            a7=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Property2019); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (element == null) {
                              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					// expected elements (follow set)
                              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 62));
                              				
                            }
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6758:5: (a8= STRING )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6759:6: a8= STRING
                            {
                            a8=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_Property2049); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              						if (terminateParsing) {
                              							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              						}
                              						if (element == null) {
                              							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              						}
                              						if (a8 != null) {
                              							org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                              							tokenResolver.setOptions(getOptions());
                              							org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              							tokenResolver.resolve(a8.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), result);
                              							java.lang.Object resolvedObject = result.getResolvedToken();
                              							if (resolvedObject == null) {
                              								addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a8).getLine(), ((org.antlr.runtime.CommonToken) a8).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a8).getStartIndex(), ((org.antlr.runtime.CommonToken) a8).getStopIndex());
                              							}
                              							String resolved = (String) resolvedObject;
                              							org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
                              							collectHiddenTokens(element);
                              							registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), resolved, proxy);
                              							if (proxy != null) {
                              								element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), proxy);
                              								completedElement(proxy);
                              							}
                              							collectHiddenTokens(element);
                              							copyLocalizationInfos((org.antlr.runtime.CommonToken) a8, element);
                              							copyLocalizationInfos((org.antlr.runtime.CommonToken) a8, proxy);
                              						}
                              					
                            }

                            }

                            if ( state.backtracking==0 ) {

                              					// expected elements (follow set)
                              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 63));
                              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 63));
                              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 63));
                              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 63));
                              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 63));
                              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 63));
                              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 63));
                              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 63));
                              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 63));
                              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 63));
                              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 63));
                              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 63));
                              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 63));
                              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 63));
                              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 63));
                              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 63));
                              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 63));
                              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 63));
                              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 63));
                              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 63));
                              				
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 64));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 64));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 64));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 64));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 64));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 64));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 64));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 64));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 64));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 64));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 64));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 64));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 64));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 64));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 64));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 64));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 64));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 64));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 64));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 64));
                      		
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6840:3: (a9_0= parse_org_kermeta_language_behavior_Expression )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6841:4: a9_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_structure_Property2111);
                    a9_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                      				}
                      				if (a9_0 != null) {
                      					if (a9_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__GETTER_BODY), a9_0);
                      						completedElement(a9_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a9_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 65));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 65));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 65));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 65));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 65));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 65));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 65));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 65));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 65));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 65));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 65));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 65));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 65));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 65));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 65));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 65));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 65));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 65));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 65));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 65));
                      		
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6881:3: (a10_0= parse_org_kermeta_language_behavior_Expression )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6882:4: a10_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_structure_Property2139);
                    a10_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                      				}
                      				if (a10_0 != null) {
                      					if (a10_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__SETTER_BODY), a10_0);
                      						completedElement(a10_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a10_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 66));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 66));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 66));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 66));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 66));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 66));
                      		
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 67));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 67));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 67));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 67));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 67));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 67));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 7, parse_org_kermeta_language_structure_Property_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Property"


    // $ANTLR start "parse_org_kermeta_language_structure_Operation"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6921:1: parse_org_kermeta_language_structure_Operation returns [org.kermeta.language.structure.Operation element = null] : ( (a0_0= parse_org_kermeta_language_structure_Constraint ) )* ( (a1_0= parse_org_kermeta_language_structure_Constraint ) )* a2= 'operation' (a3= STRING ) a4= '(' ( ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= STRING ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= STRING ) ) )? ) )* ) )? a12= ')' ( (a13= ':' (a14= STRING ) ) )? a15= 'is' ( (a16_0= parse_org_kermeta_language_behavior_Block ) | a17= 'abstract' ) ;
    public final org.kermeta.language.structure.Operation parse_org_kermeta_language_structure_Operation() throws RecognitionException {
        org.kermeta.language.structure.Operation element =  null;
        int parse_org_kermeta_language_structure_Operation_StartIndex = input.index();
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a6=null;
        Token a7=null;
        Token a8=null;
        Token a10=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a17=null;
        org.kermeta.language.structure.Constraint a0_0 = null;

        org.kermeta.language.structure.Constraint a1_0 = null;

        org.kermeta.language.structure.Parameter a5_0 = null;

        org.kermeta.language.structure.Parameter a9_0 = null;

        org.kermeta.language.behavior.Block a16_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6924:1: ( ( (a0_0= parse_org_kermeta_language_structure_Constraint ) )* ( (a1_0= parse_org_kermeta_language_structure_Constraint ) )* a2= 'operation' (a3= STRING ) a4= '(' ( ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= STRING ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= STRING ) ) )? ) )* ) )? a12= ')' ( (a13= ':' (a14= STRING ) ) )? a15= 'is' ( (a16_0= parse_org_kermeta_language_behavior_Block ) | a17= 'abstract' ) )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6925:2: ( (a0_0= parse_org_kermeta_language_structure_Constraint ) )* ( (a1_0= parse_org_kermeta_language_structure_Constraint ) )* a2= 'operation' (a3= STRING ) a4= '(' ( ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= STRING ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= STRING ) ) )? ) )* ) )? a12= ')' ( (a13= ':' (a14= STRING ) ) )? a15= 'is' ( (a16_0= parse_org_kermeta_language_behavior_Block ) | a17= 'abstract' )
            {
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6925:2: ( (a0_0= parse_org_kermeta_language_structure_Constraint ) )*
            loop25:
            do {
                int alt25=2;
                int LA25_0 = input.LA(1);

                if ( (LA25_0==STRING) ) {
                    int LA25_1 = input.LA(2);

                    if ( (LA25_1==STRING) ) {
                        int LA25_3 = input.LA(3);

                        if ( (synpred31_Kermeta()) ) {
                            alt25=1;
                        }


                    }


                }


                switch (alt25) {
            	case 1 :
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6926:3: (a0_0= parse_org_kermeta_language_structure_Constraint )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6926:3: (a0_0= parse_org_kermeta_language_structure_Constraint )
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6927:4: a0_0= parse_org_kermeta_language_structure_Constraint
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Operation2193);
            	    a0_0=parse_org_kermeta_language_structure_Constraint();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
            	      				}
            	      				if (a0_0 != null) {
            	      					if (a0_0 != null) {
            	      						addObjectToList(element, org.kermeta.language.structure.StructurePackage.OPERATION__PRE, a0_0);
            	      						completedElement(a0_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a0_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop25;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 68));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 68));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6950:2: ( (a1_0= parse_org_kermeta_language_structure_Constraint ) )*
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( (LA26_0==STRING) ) {
                    alt26=1;
                }


                switch (alt26) {
            	case 1 :
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6951:3: (a1_0= parse_org_kermeta_language_structure_Constraint )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6951:3: (a1_0= parse_org_kermeta_language_structure_Constraint )
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6952:4: a1_0= parse_org_kermeta_language_structure_Constraint
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Operation2228);
            	    a1_0=parse_org_kermeta_language_structure_Constraint();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
            	      				}
            	      				if (a1_0 != null) {
            	      					if (a1_0 != null) {
            	      						addObjectToList(element, org.kermeta.language.structure.StructurePackage.OPERATION__POST, a1_0);
            	      						completedElement(a1_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a1_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop26;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 69));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 69));
              	
            }
            a2=(Token)match(input,31,FOLLOW_31_in_parse_org_kermeta_language_structure_Operation2254); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 70));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6987:2: (a3= STRING )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6988:3: a3= STRING
            {
            a3=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_Operation2272); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
              			}
              			if (a3 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a3).getLine(), ((org.antlr.runtime.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a3).getStartIndex(), ((org.antlr.runtime.CommonToken) a3).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a3, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 71));
              	
            }
            a4=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_structure_Operation2293); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 72));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 72));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7033:2: ( ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= STRING ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= STRING ) ) )? ) )* ) )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==STRING) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7034:3: ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= STRING ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= STRING ) ) )? ) )* )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7034:3: ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= STRING ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= STRING ) ) )? ) )* )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7035:4: (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= STRING ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= STRING ) ) )? ) )*
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7035:4: (a5_0= parse_org_kermeta_language_structure_Parameter )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7036:5: a5_0= parse_org_kermeta_language_structure_Parameter
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Operation2322);
                    a5_0=parse_org_kermeta_language_structure_Parameter();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                      					}
                      					if (a5_0 != null) {
                      						if (a5_0 != null) {
                      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OPERATION__OWNED_PARAMETER, a5_0);
                      							completedElement(a5_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a5_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 73));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 73));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 73));
                      			
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7059:4: ( (a6= ':' (a7= STRING ) ) )?
                    int alt27=2;
                    int LA27_0 = input.LA(1);

                    if ( (LA27_0==29) ) {
                        alt27=1;
                    }
                    switch (alt27) {
                        case 1 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7060:5: (a6= ':' (a7= STRING ) )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7060:5: (a6= ':' (a7= STRING ) )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7061:6: a6= ':' (a7= STRING )
                            {
                            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Operation2363); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              						if (element == null) {
                              							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						// expected elements (follow set)
                              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 74));
                              					
                            }
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7073:6: (a7= STRING )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7074:7: a7= STRING
                            {
                            a7=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_Operation2397); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              							if (terminateParsing) {
                              								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              							}
                              							if (element == null) {
                              								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                              							}
                              							if (a7 != null) {
                              								org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                              								tokenResolver.setOptions(getOptions());
                              								org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              								tokenResolver.resolve(a7.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), result);
                              								java.lang.Object resolvedObject = result.getResolvedToken();
                              								if (resolvedObject == null) {
                              									addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a7).getLine(), ((org.antlr.runtime.CommonToken) a7).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a7).getStartIndex(), ((org.antlr.runtime.CommonToken) a7).getStopIndex());
                              								}
                              								String resolved = (String) resolvedObject;
                              								org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
                              								collectHiddenTokens(element);
                              								registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), resolved, proxy);
                              								if (proxy != null) {
                              									element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), proxy);
                              									completedElement(proxy);
                              								}
                              								collectHiddenTokens(element);
                              								copyLocalizationInfos((org.antlr.runtime.CommonToken) a7, element);
                              								copyLocalizationInfos((org.antlr.runtime.CommonToken) a7, proxy);
                              							}
                              						
                            }

                            }

                            if ( state.backtracking==0 ) {

                              						// expected elements (follow set)
                              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 75));
                              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 75));
                              					
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 76));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 76));
                      			
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7119:4: ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= STRING ) ) )? ) )*
                    loop29:
                    do {
                        int alt29=2;
                        int LA29_0 = input.LA(1);

                        if ( (LA29_0==26) ) {
                            alt29=1;
                        }


                        switch (alt29) {
                    	case 1 :
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7120:5: (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= STRING ) ) )? )
                    	    {
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7120:5: (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= STRING ) ) )? )
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7121:6: a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= STRING ) ) )?
                    	    {
                    	    a8=(Token)match(input,26,FOLLOW_26_in_parse_org_kermeta_language_structure_Operation2478); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      						if (element == null) {
                    	      							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	      						}
                    	      						collectHiddenTokens(element);
                    	      						copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
                    	      					
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 77));
                    	      					
                    	    }
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7133:6: (a9_0= parse_org_kermeta_language_structure_Parameter )
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7134:7: a9_0= parse_org_kermeta_language_structure_Parameter
                    	    {
                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Operation2512);
                    	    a9_0=parse_org_kermeta_language_structure_Parameter();

                    	    state._fsp--;
                    	    if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      							if (terminateParsing) {
                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      							}
                    	      							if (element == null) {
                    	      								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	      							}
                    	      							if (a9_0 != null) {
                    	      								if (a9_0 != null) {
                    	      									addObjectToList(element, org.kermeta.language.structure.StructurePackage.OPERATION__OWNED_PARAMETER, a9_0);
                    	      									completedElement(a9_0);
                    	      								}
                    	      								collectHiddenTokens(element);
                    	      								copyLocalizationInfos(a9_0, element); 							}
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_72, 78));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 78));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 78));
                    	      					
                    	    }
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7157:6: ( (a10= ':' (a11= STRING ) ) )?
                    	    int alt28=2;
                    	    int LA28_0 = input.LA(1);

                    	    if ( (LA28_0==29) ) {
                    	        alt28=1;
                    	    }
                    	    switch (alt28) {
                    	        case 1 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7158:7: (a10= ':' (a11= STRING ) )
                    	            {
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7158:7: (a10= ':' (a11= STRING ) )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7159:8: a10= ':' (a11= STRING )
                    	            {
                    	            a10=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Operation2567); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              								if (element == null) {
                    	              									element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              								}
                    	              								collectHiddenTokens(element);
                    	              								copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
                    	              							
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								// expected elements (follow set)
                    	              								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_73, 79));
                    	              							
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7171:8: (a11= STRING )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7172:9: a11= STRING
                    	            {
                    	            a11=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_Operation2609); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              									if (terminateParsing) {
                    	              										throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              									}
                    	              									if (element == null) {
                    	              										element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              									}
                    	              									if (a11 != null) {
                    	              										org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	              										tokenResolver.setOptions(getOptions());
                    	              										org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              										tokenResolver.resolve(a11.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), result);
                    	              										java.lang.Object resolvedObject = result.getResolvedToken();
                    	              										if (resolvedObject == null) {
                    	              											addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a11).getLine(), ((org.antlr.runtime.CommonToken) a11).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a11).getStartIndex(), ((org.antlr.runtime.CommonToken) a11).getStopIndex());
                    	              										}
                    	              										String resolved = (String) resolvedObject;
                    	              										org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
                    	              										collectHiddenTokens(element);
                    	              										registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), resolved, proxy);
                    	              										if (proxy != null) {
                    	              											element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), proxy);
                    	              											completedElement(proxy);
                    	              										}
                    	              										collectHiddenTokens(element);
                    	              										copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, element);
                    	              										copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, proxy);
                    	              									}
                    	              								
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              								// expected elements (follow set)
                    	              								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 80));
                    	              								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 80));
                    	              							
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 81));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 81));
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop29;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 82));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 82));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 83));
              	
            }
            a12=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_structure_Operation2735); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_74, 84));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_75, 84));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7245:2: ( (a13= ':' (a14= STRING ) ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==29) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7246:3: (a13= ':' (a14= STRING ) )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7246:3: (a13= ':' (a14= STRING ) )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7247:4: a13= ':' (a14= STRING )
                    {
                    a13=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Operation2758); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_76, 85));
                      			
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7259:4: (a14= STRING )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7260:5: a14= STRING
                    {
                    a14=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_Operation2784); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                      					}
                      					if (a14 != null) {
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                      						tokenResolver.setOptions(getOptions());
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      						tokenResolver.resolve(a14.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), result);
                      						java.lang.Object resolvedObject = result.getResolvedToken();
                      						if (resolvedObject == null) {
                      							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a14).getLine(), ((org.antlr.runtime.CommonToken) a14).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a14).getStartIndex(), ((org.antlr.runtime.CommonToken) a14).getStopIndex());
                      						}
                      						String resolved = (String) resolvedObject;
                      						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
                      						collectHiddenTokens(element);
                      						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), resolved, proxy);
                      						if (proxy != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), proxy);
                      							completedElement(proxy);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a14, element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a14, proxy);
                      					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_75, 86));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_75, 87));
              	
            }
            a15=(Token)match(input,34,FOLLOW_34_in_parse_org_kermeta_language_structure_Operation2830); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 88));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_77, 88));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7316:2: ( (a16_0= parse_org_kermeta_language_behavior_Block ) | a17= 'abstract' )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==71) ) {
                alt32=1;
            }
            else if ( (LA32_0==23) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7317:3: (a16_0= parse_org_kermeta_language_behavior_Block )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7317:3: (a16_0= parse_org_kermeta_language_behavior_Block )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7318:4: a16_0= parse_org_kermeta_language_behavior_Block
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_structure_Operation2853);
                    a16_0=parse_org_kermeta_language_behavior_Block();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                      				}
                      				if (a16_0 != null) {
                      					if (a16_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__BODY), a16_0);
                      						completedElement(a16_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a16_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 89));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 89));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 89));
                      		
                    }

                    }
                    break;
                case 2 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7342:6: a17= 'abstract'
                    {
                    a17=(Token)match(input,23,FOLLOW_23_in_parse_org_kermeta_language_structure_Operation2882); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (element == null) {
                      				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                      			}
                      			collectHiddenTokens(element);
                      			copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 90));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 90));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 90));
                      		
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 91));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 91));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 91));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 8, parse_org_kermeta_language_structure_Operation_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Operation"


    // $ANTLR start "parse_org_kermeta_language_structure_Parameter"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7366:1: parse_org_kermeta_language_structure_Parameter returns [org.kermeta.language.structure.Parameter element = null] : (a0= STRING ) a1= ':' (a2= STRING ) ;
    public final org.kermeta.language.structure.Parameter parse_org_kermeta_language_structure_Parameter() throws RecognitionException {
        org.kermeta.language.structure.Parameter element =  null;
        int parse_org_kermeta_language_structure_Parameter_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7369:1: ( (a0= STRING ) a1= ':' (a2= STRING ) )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7370:2: (a0= STRING ) a1= ':' (a2= STRING )
            {
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7370:2: (a0= STRING )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7371:3: a0= STRING
            {
            a0=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_Parameter2925); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createParameter();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 92));
              	
            }
            a1=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Parameter2946); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createParameter();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 93));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7415:2: (a2= STRING )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7416:3: a2= STRING
            {
            a2=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_Parameter2964); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createParameter();
              			}
              			if (a2 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__TYPE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
              				}
              				String resolved = (String) resolvedObject;
              				org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
              				collectHiddenTokens(element);
              				registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__TYPE), resolved, proxy);
              				if (proxy != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__TYPE), proxy);
              					completedElement(proxy);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, proxy);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 94));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 94));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 94));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 9, parse_org_kermeta_language_structure_Parameter_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Parameter"


    // $ANTLR start "parse_org_kermeta_language_structure_Class"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7456:1: parse_org_kermeta_language_structure_Class returns [org.kermeta.language.structure.Class element = null] : (a0= STRING ) ;
    public final org.kermeta.language.structure.Class parse_org_kermeta_language_structure_Class() throws RecognitionException {
        org.kermeta.language.structure.Class element =  null;
        int parse_org_kermeta_language_structure_Class_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7459:1: ( (a0= STRING ) )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7460:2: (a0= STRING )
            {
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7460:2: (a0= STRING )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7461:3: a0= STRING
            {
            a0=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_Class3004); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS__TYPE_DEFINITION), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				String resolved = (String) resolvedObject;
              				org.kermeta.language.structure.ClassDefinition proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
              				collectHiddenTokens(element);
              				registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ParameterizedType, org.kermeta.language.structure.GenericTypeDefinition>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getParameterizedTypeTypeDefinitionReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS__TYPE_DEFINITION), resolved, proxy);
              				if (proxy != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS__TYPE_DEFINITION), proxy);
              					completedElement(proxy);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, proxy);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 95));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 95));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 10, parse_org_kermeta_language_structure_Class_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Class"


    // $ANTLR start "parse_org_kermeta_language_structure_Enumeration"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7585:1: parse_org_kermeta_language_structure_Enumeration returns [org.kermeta.language.structure.Enumeration element = null] : a0= 'enumeration' (a1= STRING ) a2= '{' ( (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a4= ';' ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )* ) a7= '}' ;
    public final org.kermeta.language.structure.Enumeration parse_org_kermeta_language_structure_Enumeration() throws RecognitionException {
        org.kermeta.language.structure.Enumeration element =  null;
        int parse_org_kermeta_language_structure_Enumeration_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        Token a6=null;
        Token a7=null;
        org.kermeta.language.structure.EnumerationLiteral a3_0 = null;

        org.kermeta.language.structure.EnumerationLiteral a5_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7588:1: (a0= 'enumeration' (a1= STRING ) a2= '{' ( (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a4= ';' ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )* ) a7= '}' )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7589:2: a0= 'enumeration' (a1= STRING ) a2= '{' ( (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a4= ';' ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )* ) a7= '}'
            {
            a0=(Token)match(input,35,FOLLOW_35_in_parse_org_kermeta_language_structure_Enumeration3040); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 96));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7601:2: (a1= STRING )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7602:3: a1= STRING
            {
            a1=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_Enumeration3058); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              			}
              			if (a1 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_169, 97));
              	
            }
            a2=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_Enumeration3079); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 98));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7646:2: ( (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a4= ';' ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )* )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7647:3: (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a4= ';' ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )*
            {
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7647:3: (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7648:4: a3_0= parse_org_kermeta_language_structure_EnumerationLiteral
            {
            pushFollow(FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Enumeration3102);
            a3_0=parse_org_kermeta_language_structure_EnumerationLiteral();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              				if (terminateParsing) {
              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              				}
              				if (element == null) {
              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              				}
              				if (a3_0 != null) {
              					if (a3_0 != null) {
              						addObjectToList(element, org.kermeta.language.structure.StructurePackage.ENUMERATION__OWNED_LITERAL, a3_0);
              						completedElement(a3_0);
              					}
              					collectHiddenTokens(element);
              					copyLocalizationInfos(a3_0, element); 				}
              			
            }

            }

            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_171, 99));
              		
            }
            a4=(Token)match(input,36,FOLLOW_36_in_parse_org_kermeta_language_structure_Enumeration3125); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              			}
              			collectHiddenTokens(element);
              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              		
            }
            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 100));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 100));
              		
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7682:3: ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( (LA33_0==STRING) ) {
                    alt33=1;
                }


                switch (alt33) {
            	case 1 :
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7683:4: ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7683:4: ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' )
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7684:5: (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';'
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7684:5: (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral )
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7685:6: a5_0= parse_org_kermeta_language_structure_EnumerationLiteral
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Enumeration3160);
            	    a5_0=parse_org_kermeta_language_structure_EnumerationLiteral();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      						if (terminateParsing) {
            	      							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      						}
            	      						if (element == null) {
            	      							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
            	      						}
            	      						if (a5_0 != null) {
            	      							if (a5_0 != null) {
            	      								addObjectToList(element, org.kermeta.language.structure.StructurePackage.ENUMERATION__OWNED_LITERAL, a5_0);
            	      								completedElement(a5_0);
            	      							}
            	      							collectHiddenTokens(element);
            	      							copyLocalizationInfos(a5_0, element); 						}
            	      					
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      					// expected elements (follow set)
            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 101));
            	      				
            	    }
            	    a6=(Token)match(input,36,FOLLOW_36_in_parse_org_kermeta_language_structure_Enumeration3193); if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	      				
            	    }
            	    if ( state.backtracking==0 ) {

            	      					// expected elements (follow set)
            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 102));
            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 102));
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 103));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 103));
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 104));
              	
            }
            a7=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_structure_Enumeration3241); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 105));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 11, parse_org_kermeta_language_structure_Enumeration_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Enumeration"


    // $ANTLR start "parse_org_kermeta_language_structure_EnumerationLiteral"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7844:1: parse_org_kermeta_language_structure_EnumerationLiteral returns [org.kermeta.language.structure.EnumerationLiteral element = null] : (a0= STRING ) ;
    public final org.kermeta.language.structure.EnumerationLiteral parse_org_kermeta_language_structure_EnumerationLiteral() throws RecognitionException {
        org.kermeta.language.structure.EnumerationLiteral element =  null;
        int parse_org_kermeta_language_structure_EnumerationLiteral_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7847:1: ( (a0= STRING ) )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7848:2: (a0= STRING )
            {
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7848:2: (a0= STRING )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7849:3: a0= STRING
            {
            a0=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_EnumerationLiteral3274); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumerationLiteral();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION_LITERAL__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION_LITERAL__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_171, 106));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 12, parse_org_kermeta_language_structure_EnumerationLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_EnumerationLiteral"


    // $ANTLR start "parse_org_kermeta_language_structure_Constraint"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7883:1: parse_org_kermeta_language_structure_Constraint returns [org.kermeta.language.structure.Constraint element = null] : (a0= STRING ) (a1= STRING ) ;
    public final org.kermeta.language.structure.Constraint parse_org_kermeta_language_structure_Constraint() throws RecognitionException {
        org.kermeta.language.structure.Constraint element =  null;
        int parse_org_kermeta_language_structure_Constraint_StartIndex = input.index();
        Token a0=null;
        Token a1=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7886:1: ( (a0= STRING ) (a1= STRING ) )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7887:2: (a0= STRING ) (a1= STRING )
            {
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7887:2: (a0= STRING )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7888:3: a0= STRING
            {
            a0=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_Constraint3314); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createConstraint();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__STEREOTYPE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				org.kermeta.language.structure.ConstraintType resolved = (org.kermeta.language.structure.ConstraintType)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__STEREOTYPE), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_174, 107));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7920:2: (a1= STRING )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7921:3: a1= STRING
            {
            a1=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_Constraint3339); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createConstraint();
              			}
              			if (a1 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__LANGUAGE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
              				}
              				org.kermeta.language.structure.ConstraintLanguage resolved = (org.kermeta.language.structure.ConstraintLanguage)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__LANGUAGE), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 108));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 13, parse_org_kermeta_language_structure_Constraint_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Constraint"


    // $ANTLR start "parse_org_kermeta_language_structure_Object"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7960:1: parse_org_kermeta_language_structure_Object returns [org.kermeta.language.structure.Object element = null] : (a0= 'Object' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}' | c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Using | c2= parse_org_kermeta_language_structure_Require | c3= parse_org_kermeta_language_structure_Package | c4= parse_org_kermeta_language_structure_ClassDefinition | c5= parse_org_kermeta_language_structure_Property | c6= parse_org_kermeta_language_structure_Operation | c7= parse_org_kermeta_language_structure_Parameter | c8= parse_org_kermeta_language_structure_Class | c9= parse_org_kermeta_language_structure_Enumeration | c10= parse_org_kermeta_language_structure_EnumerationLiteral | c11= parse_org_kermeta_language_structure_Constraint | c12= parse_org_kermeta_language_structure_Model | c13= parse_org_kermeta_language_structure_ModelType | c14= parse_org_kermeta_language_structure_TypeVariableBinding | c15= parse_org_kermeta_language_structure_MultiplicityElement | c16= parse_org_kermeta_language_structure_TypeDefinition | c17= parse_org_kermeta_language_structure_PrimitiveType | c18= parse_org_kermeta_language_structure_Tag | c19= parse_org_kermeta_language_structure_ObjectTypeVariable | c20= parse_org_kermeta_language_structure_ModelTypeVariable | c21= parse_org_kermeta_language_structure_VirtualType | c22= parse_org_kermeta_language_structure_ProductType | c23= parse_org_kermeta_language_structure_FunctionType | c24= parse_org_kermeta_language_structure_VoidType | c25= parse_org_kermeta_language_behavior_Block | c26= parse_org_kermeta_language_behavior_Rescue | c27= parse_org_kermeta_language_behavior_TypeReference | c28= parse_org_kermeta_language_behavior_Raise | c29= parse_org_kermeta_language_behavior_BooleanLiteral | c30= parse_org_kermeta_language_behavior_IntegerLiteral | c31= parse_org_kermeta_language_behavior_StringLiteral | c32= parse_org_kermeta_language_behavior_Conditional | c33= parse_org_kermeta_language_behavior_Loop | c34= parse_org_kermeta_language_behavior_VariableDecl | c35= parse_org_kermeta_language_behavior_TypeLiteral | c36= parse_org_kermeta_language_behavior_CallResult | c37= parse_org_kermeta_language_behavior_CallSuperOperation | c38= parse_org_kermeta_language_behavior_Assignment | c39= parse_org_kermeta_language_behavior_CallVariable | c40= parse_org_kermeta_language_behavior_SelfExpression | c41= parse_org_kermeta_language_behavior_CallFeature | c42= parse_org_kermeta_language_behavior_CallValue | c43= parse_org_kermeta_language_behavior_EmptyExpression | c44= parse_org_kermeta_language_behavior_JavaStaticCall | c45= parse_org_kermeta_language_behavior_LambdaExpression | c46= parse_org_kermeta_language_behavior_LambdaParameter | c47= parse_org_kermeta_language_behavior_VoidLiteral );
    public final org.kermeta.language.structure.Object parse_org_kermeta_language_structure_Object() throws RecognitionException {
        org.kermeta.language.structure.Object element =  null;
        int parse_org_kermeta_language_structure_Object_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.ModelingUnit c0 = null;

        org.kermeta.language.structure.Using c1 = null;

        org.kermeta.language.structure.Require c2 = null;

        org.kermeta.language.structure.Package c3 = null;

        org.kermeta.language.structure.ClassDefinition c4 = null;

        org.kermeta.language.structure.Property c5 = null;

        org.kermeta.language.structure.Operation c6 = null;

        org.kermeta.language.structure.Parameter c7 = null;

        org.kermeta.language.structure.Class c8 = null;

        org.kermeta.language.structure.Enumeration c9 = null;

        org.kermeta.language.structure.EnumerationLiteral c10 = null;

        org.kermeta.language.structure.Constraint c11 = null;

        org.kermeta.language.structure.Model c12 = null;

        org.kermeta.language.structure.ModelType c13 = null;

        org.kermeta.language.structure.TypeVariableBinding c14 = null;

        org.kermeta.language.structure.MultiplicityElement c15 = null;

        org.kermeta.language.structure.TypeDefinition c16 = null;

        org.kermeta.language.structure.PrimitiveType c17 = null;

        org.kermeta.language.structure.Tag c18 = null;

        org.kermeta.language.structure.ObjectTypeVariable c19 = null;

        org.kermeta.language.structure.ModelTypeVariable c20 = null;

        org.kermeta.language.structure.VirtualType c21 = null;

        org.kermeta.language.structure.ProductType c22 = null;

        org.kermeta.language.structure.FunctionType c23 = null;

        org.kermeta.language.structure.VoidType c24 = null;

        org.kermeta.language.behavior.Block c25 = null;

        org.kermeta.language.behavior.Rescue c26 = null;

        org.kermeta.language.behavior.TypeReference c27 = null;

        org.kermeta.language.behavior.Raise c28 = null;

        org.kermeta.language.behavior.BooleanLiteral c29 = null;

        org.kermeta.language.behavior.IntegerLiteral c30 = null;

        org.kermeta.language.behavior.StringLiteral c31 = null;

        org.kermeta.language.behavior.Conditional c32 = null;

        org.kermeta.language.behavior.Loop c33 = null;

        org.kermeta.language.behavior.VariableDecl c34 = null;

        org.kermeta.language.behavior.TypeLiteral c35 = null;

        org.kermeta.language.behavior.CallResult c36 = null;

        org.kermeta.language.behavior.CallSuperOperation c37 = null;

        org.kermeta.language.behavior.Assignment c38 = null;

        org.kermeta.language.behavior.CallVariable c39 = null;

        org.kermeta.language.behavior.SelfExpression c40 = null;

        org.kermeta.language.behavior.CallFeature c41 = null;

        org.kermeta.language.behavior.CallValue c42 = null;

        org.kermeta.language.behavior.EmptyExpression c43 = null;

        org.kermeta.language.behavior.JavaStaticCall c44 = null;

        org.kermeta.language.behavior.LambdaExpression c45 = null;

        org.kermeta.language.behavior.LambdaParameter c46 = null;

        org.kermeta.language.behavior.VoidLiteral c47 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7963:1: (a0= 'Object' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}' | c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Using | c2= parse_org_kermeta_language_structure_Require | c3= parse_org_kermeta_language_structure_Package | c4= parse_org_kermeta_language_structure_ClassDefinition | c5= parse_org_kermeta_language_structure_Property | c6= parse_org_kermeta_language_structure_Operation | c7= parse_org_kermeta_language_structure_Parameter | c8= parse_org_kermeta_language_structure_Class | c9= parse_org_kermeta_language_structure_Enumeration | c10= parse_org_kermeta_language_structure_EnumerationLiteral | c11= parse_org_kermeta_language_structure_Constraint | c12= parse_org_kermeta_language_structure_Model | c13= parse_org_kermeta_language_structure_ModelType | c14= parse_org_kermeta_language_structure_TypeVariableBinding | c15= parse_org_kermeta_language_structure_MultiplicityElement | c16= parse_org_kermeta_language_structure_TypeDefinition | c17= parse_org_kermeta_language_structure_PrimitiveType | c18= parse_org_kermeta_language_structure_Tag | c19= parse_org_kermeta_language_structure_ObjectTypeVariable | c20= parse_org_kermeta_language_structure_ModelTypeVariable | c21= parse_org_kermeta_language_structure_VirtualType | c22= parse_org_kermeta_language_structure_ProductType | c23= parse_org_kermeta_language_structure_FunctionType | c24= parse_org_kermeta_language_structure_VoidType | c25= parse_org_kermeta_language_behavior_Block | c26= parse_org_kermeta_language_behavior_Rescue | c27= parse_org_kermeta_language_behavior_TypeReference | c28= parse_org_kermeta_language_behavior_Raise | c29= parse_org_kermeta_language_behavior_BooleanLiteral | c30= parse_org_kermeta_language_behavior_IntegerLiteral | c31= parse_org_kermeta_language_behavior_StringLiteral | c32= parse_org_kermeta_language_behavior_Conditional | c33= parse_org_kermeta_language_behavior_Loop | c34= parse_org_kermeta_language_behavior_VariableDecl | c35= parse_org_kermeta_language_behavior_TypeLiteral | c36= parse_org_kermeta_language_behavior_CallResult | c37= parse_org_kermeta_language_behavior_CallSuperOperation | c38= parse_org_kermeta_language_behavior_Assignment | c39= parse_org_kermeta_language_behavior_CallVariable | c40= parse_org_kermeta_language_behavior_SelfExpression | c41= parse_org_kermeta_language_behavior_CallFeature | c42= parse_org_kermeta_language_behavior_CallValue | c43= parse_org_kermeta_language_behavior_EmptyExpression | c44= parse_org_kermeta_language_behavior_JavaStaticCall | c45= parse_org_kermeta_language_behavior_LambdaExpression | c46= parse_org_kermeta_language_behavior_LambdaParameter | c47= parse_org_kermeta_language_behavior_VoidLiteral )
            int alt36=49;
            alt36 = dfa36.predict(input);
            switch (alt36) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7964:2: a0= 'Object' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}'
                    {
                    a0=(Token)match(input,37,FOLLOW_37_in_parse_org_kermeta_language_structure_Object3375); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_176, 109));
                      	
                    }
                    a1=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_Object3389); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 110));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 110));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_179, 110));
                      	
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7990:2: ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )*
                    loop35:
                    do {
                        int alt35=2;
                        int LA35_0 = input.LA(1);

                        if ( ((LA35_0>=38 && LA35_0<=39)) ) {
                            alt35=1;
                        }


                        switch (alt35) {
                    	case 1 :
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7991:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) )
                    	    {
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7991:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) )
                    	    int alt34=2;
                    	    int LA34_0 = input.LA(1);

                    	    if ( (LA34_0==38) ) {
                    	        alt34=1;
                    	    }
                    	    else if ( (LA34_0==39) ) {
                    	        alt34=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 34, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt34) {
                    	        case 1 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7992:4: a2= 'tag' a3= ':' (a4= STRING )
                    	            {
                    	            a2=(Token)match(input,38,FOLLOW_38_in_parse_org_kermeta_language_structure_Object3412); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_180, 111));
                    	              			
                    	            }
                    	            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Object3432); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_181, 112));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8016:4: (a4= STRING )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8017:5: a4= STRING
                    	            {
                    	            a4=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_Object3458); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              					}
                    	              					if (a4 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT__TAG), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT__TAG), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT__TAG, proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 113));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 113));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_179, 113));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8056:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
                    	            {
                    	            a5=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_Object3499); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_182, 114));
                    	              			
                    	            }
                    	            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Object3519); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 115));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8080:4: (a7_0= parse_org_kermeta_language_structure_Tag )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8081:5: a7_0= parse_org_kermeta_language_structure_Tag
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Object3545);
                    	            a7_0=parse_org_kermeta_language_structure_Tag();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              					}
                    	              					if (a7_0 != null) {
                    	              						if (a7_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT__OWNED_TAGS, a7_0);
                    	              							completedElement(a7_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a7_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 116));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 116));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_179, 116));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop35;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 117));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 117));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_179, 117));
                      	
                    }
                    a8=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_structure_Object3586); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      	
                    }

                    }
                    break;
                case 2 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8126:2: c0= parse_org_kermeta_language_structure_ModelingUnit
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_parse_org_kermeta_language_structure_Object3605);
                    c0=parse_org_kermeta_language_structure_ModelingUnit();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8127:4: c1= parse_org_kermeta_language_structure_Using
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Using_in_parse_org_kermeta_language_structure_Object3615);
                    c1=parse_org_kermeta_language_structure_Using();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8128:4: c2= parse_org_kermeta_language_structure_Require
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Require_in_parse_org_kermeta_language_structure_Object3625);
                    c2=parse_org_kermeta_language_structure_Require();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 5 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8129:4: c3= parse_org_kermeta_language_structure_Package
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Object3635);
                    c3=parse_org_kermeta_language_structure_Package();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 6 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8130:4: c4= parse_org_kermeta_language_structure_ClassDefinition
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_parse_org_kermeta_language_structure_Object3645);
                    c4=parse_org_kermeta_language_structure_ClassDefinition();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c4; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 7 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8131:4: c5= parse_org_kermeta_language_structure_Property
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_Object3655);
                    c5=parse_org_kermeta_language_structure_Property();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c5; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 8 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8132:4: c6= parse_org_kermeta_language_structure_Operation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_Object3665);
                    c6=parse_org_kermeta_language_structure_Operation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c6; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 9 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8133:4: c7= parse_org_kermeta_language_structure_Parameter
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Object3675);
                    c7=parse_org_kermeta_language_structure_Parameter();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c7; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 10 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8134:4: c8= parse_org_kermeta_language_structure_Class
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Class_in_parse_org_kermeta_language_structure_Object3685);
                    c8=parse_org_kermeta_language_structure_Class();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c8; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 11 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8135:4: c9= parse_org_kermeta_language_structure_Enumeration
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_Object3695);
                    c9=parse_org_kermeta_language_structure_Enumeration();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c9; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 12 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8136:4: c10= parse_org_kermeta_language_structure_EnumerationLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Object3705);
                    c10=parse_org_kermeta_language_structure_EnumerationLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c10; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 13 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8137:4: c11= parse_org_kermeta_language_structure_Constraint
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Object3715);
                    c11=parse_org_kermeta_language_structure_Constraint();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c11; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 14 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8138:4: c12= parse_org_kermeta_language_structure_Model
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Model_in_parse_org_kermeta_language_structure_Object3725);
                    c12=parse_org_kermeta_language_structure_Model();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c12; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 15 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8139:4: c13= parse_org_kermeta_language_structure_ModelType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_Object3735);
                    c13=parse_org_kermeta_language_structure_ModelType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c13; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 16 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8140:4: c14= parse_org_kermeta_language_structure_TypeVariableBinding
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeVariableBinding_in_parse_org_kermeta_language_structure_Object3745);
                    c14=parse_org_kermeta_language_structure_TypeVariableBinding();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c14; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 17 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8141:4: c15= parse_org_kermeta_language_structure_MultiplicityElement
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_parse_org_kermeta_language_structure_Object3755);
                    c15=parse_org_kermeta_language_structure_MultiplicityElement();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c15; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 18 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8142:4: c16= parse_org_kermeta_language_structure_TypeDefinition
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Object3765);
                    c16=parse_org_kermeta_language_structure_TypeDefinition();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c16; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 19 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8143:4: c17= parse_org_kermeta_language_structure_PrimitiveType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_Object3775);
                    c17=parse_org_kermeta_language_structure_PrimitiveType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c17; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 20 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8144:4: c18= parse_org_kermeta_language_structure_Tag
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Object3785);
                    c18=parse_org_kermeta_language_structure_Tag();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c18; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 21 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8145:4: c19= parse_org_kermeta_language_structure_ObjectTypeVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_parse_org_kermeta_language_structure_Object3795);
                    c19=parse_org_kermeta_language_structure_ObjectTypeVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c19; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 22 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8146:4: c20= parse_org_kermeta_language_structure_ModelTypeVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelTypeVariable_in_parse_org_kermeta_language_structure_Object3805);
                    c20=parse_org_kermeta_language_structure_ModelTypeVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c20; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 23 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8147:4: c21= parse_org_kermeta_language_structure_VirtualType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_Object3815);
                    c21=parse_org_kermeta_language_structure_VirtualType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c21; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 24 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8148:4: c22= parse_org_kermeta_language_structure_ProductType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ProductType_in_parse_org_kermeta_language_structure_Object3825);
                    c22=parse_org_kermeta_language_structure_ProductType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c22; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 25 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8149:4: c23= parse_org_kermeta_language_structure_FunctionType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_FunctionType_in_parse_org_kermeta_language_structure_Object3835);
                    c23=parse_org_kermeta_language_structure_FunctionType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c23; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 26 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8150:4: c24= parse_org_kermeta_language_structure_VoidType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_VoidType_in_parse_org_kermeta_language_structure_Object3845);
                    c24=parse_org_kermeta_language_structure_VoidType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c24; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 27 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8151:4: c25= parse_org_kermeta_language_behavior_Block
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_structure_Object3855);
                    c25=parse_org_kermeta_language_behavior_Block();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c25; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 28 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8152:4: c26= parse_org_kermeta_language_behavior_Rescue
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Rescue_in_parse_org_kermeta_language_structure_Object3865);
                    c26=parse_org_kermeta_language_behavior_Rescue();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c26; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 29 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8153:4: c27= parse_org_kermeta_language_behavior_TypeReference
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_structure_Object3875);
                    c27=parse_org_kermeta_language_behavior_TypeReference();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c27; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 30 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8154:4: c28= parse_org_kermeta_language_behavior_Raise
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Raise_in_parse_org_kermeta_language_structure_Object3885);
                    c28=parse_org_kermeta_language_behavior_Raise();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c28; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 31 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8155:4: c29= parse_org_kermeta_language_behavior_BooleanLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_structure_Object3895);
                    c29=parse_org_kermeta_language_behavior_BooleanLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c29; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 32 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8156:4: c30= parse_org_kermeta_language_behavior_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_structure_Object3905);
                    c30=parse_org_kermeta_language_behavior_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c30; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 33 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8157:4: c31= parse_org_kermeta_language_behavior_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_structure_Object3915);
                    c31=parse_org_kermeta_language_behavior_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c31; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 34 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8158:4: c32= parse_org_kermeta_language_behavior_Conditional
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_structure_Object3925);
                    c32=parse_org_kermeta_language_behavior_Conditional();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c32; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 35 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8159:4: c33= parse_org_kermeta_language_behavior_Loop
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_structure_Object3935);
                    c33=parse_org_kermeta_language_behavior_Loop();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c33; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 36 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8160:4: c34= parse_org_kermeta_language_behavior_VariableDecl
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_structure_Object3945);
                    c34=parse_org_kermeta_language_behavior_VariableDecl();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c34; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 37 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8161:4: c35= parse_org_kermeta_language_behavior_TypeLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_parse_org_kermeta_language_structure_Object3955);
                    c35=parse_org_kermeta_language_behavior_TypeLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c35; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 38 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8162:4: c36= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_structure_Object3965);
                    c36=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c36; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 39 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8163:4: c37= parse_org_kermeta_language_behavior_CallSuperOperation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_structure_Object3975);
                    c37=parse_org_kermeta_language_behavior_CallSuperOperation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c37; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 40 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8164:4: c38= parse_org_kermeta_language_behavior_Assignment
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_structure_Object3985);
                    c38=parse_org_kermeta_language_behavior_Assignment();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c38; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 41 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8165:4: c39= parse_org_kermeta_language_behavior_CallVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_structure_Object3995);
                    c39=parse_org_kermeta_language_behavior_CallVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c39; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 42 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8166:4: c40= parse_org_kermeta_language_behavior_SelfExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_structure_Object4005);
                    c40=parse_org_kermeta_language_behavior_SelfExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c40; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 43 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8167:4: c41= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_structure_Object4015);
                    c41=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c41; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 44 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8168:4: c42= parse_org_kermeta_language_behavior_CallValue
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_structure_Object4025);
                    c42=parse_org_kermeta_language_behavior_CallValue();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c42; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 45 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8169:4: c43= parse_org_kermeta_language_behavior_EmptyExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_structure_Object4035);
                    c43=parse_org_kermeta_language_behavior_EmptyExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c43; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 46 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8170:4: c44= parse_org_kermeta_language_behavior_JavaStaticCall
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_structure_Object4045);
                    c44=parse_org_kermeta_language_behavior_JavaStaticCall();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c44; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 47 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8171:4: c45= parse_org_kermeta_language_behavior_LambdaExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_LambdaExpression_in_parse_org_kermeta_language_structure_Object4055);
                    c45=parse_org_kermeta_language_behavior_LambdaExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c45; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 48 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8172:4: c46= parse_org_kermeta_language_behavior_LambdaParameter
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_LambdaParameter_in_parse_org_kermeta_language_structure_Object4065);
                    c46=parse_org_kermeta_language_behavior_LambdaParameter();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c46; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 49 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8173:4: c47= parse_org_kermeta_language_behavior_VoidLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_structure_Object4075);
                    c47=parse_org_kermeta_language_behavior_VoidLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c47; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 14, parse_org_kermeta_language_structure_Object_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Object"


    // $ANTLR start "parse_org_kermeta_language_structure_Model"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8177:1: parse_org_kermeta_language_structure_Model returns [org.kermeta.language.structure.Model element = null] : a0= 'Model' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}' ;
    public final org.kermeta.language.structure.Model parse_org_kermeta_language_structure_Model() throws RecognitionException {
        org.kermeta.language.structure.Model element =  null;
        int parse_org_kermeta_language_structure_Model_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        org.kermeta.language.structure.Tag a7_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8180:1: (a0= 'Model' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}' )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8181:2: a0= 'Model' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}'
            {
            a0=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_Model4100); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_184, 119));
              	
            }
            a1=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_Model4114); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_185, 120));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_186, 120));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_187, 120));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8207:2: ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( ((LA38_0>=38 && LA38_0<=39)) ) {
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8208:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8208:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) )
            	    int alt37=2;
            	    int LA37_0 = input.LA(1);

            	    if ( (LA37_0==38) ) {
            	        alt37=1;
            	    }
            	    else if ( (LA37_0==39) ) {
            	        alt37=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 37, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt37) {
            	        case 1 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8209:4: a2= 'tag' a3= ':' (a4= STRING )
            	            {
            	            a2=(Token)match(input,38,FOLLOW_38_in_parse_org_kermeta_language_structure_Model4137); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_188, 121));
            	              			
            	            }
            	            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Model4157); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_189, 122));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8233:4: (a4= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8234:5: a4= STRING
            	            {
            	            a4=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_Model4183); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_185, 123));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_186, 123));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_187, 123));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8273:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_Model4224); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_190, 124));
            	              			
            	            }
            	            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Model4244); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 125));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8297:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8298:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Model4270);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_185, 126));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_186, 126));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_187, 126));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_185, 127));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_186, 127));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_187, 127));
              	
            }
            a8=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_structure_Model4311); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 15, parse_org_kermeta_language_structure_Model_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Model"


    // $ANTLR start "parse_org_kermeta_language_structure_ModelType"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8343:1: parse_org_kermeta_language_structure_ModelType returns [org.kermeta.language.structure.ModelType element = null] : ( (a0= STRING ) )? a1= 'ModelType' a2= '{' ( (a3= 'tag' a4= ':' (a5= STRING ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= STRING ) | a12= 'name' a13= ':' (a14= STRING ) | a15= 'includedTypeDefinition' a16= ':' (a17= STRING ) ) )* a18= '}' ;
    public final org.kermeta.language.structure.ModelType parse_org_kermeta_language_structure_ModelType() throws RecognitionException {
        org.kermeta.language.structure.ModelType element =  null;
        int parse_org_kermeta_language_structure_ModelType_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        org.kermeta.language.structure.Tag a8_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8346:1: ( ( (a0= STRING ) )? a1= 'ModelType' a2= '{' ( (a3= 'tag' a4= ':' (a5= STRING ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= STRING ) | a12= 'name' a13= ':' (a14= STRING ) | a15= 'includedTypeDefinition' a16= ':' (a17= STRING ) ) )* a18= '}' )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8347:2: ( (a0= STRING ) )? a1= 'ModelType' a2= '{' ( (a3= 'tag' a4= ':' (a5= STRING ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= STRING ) | a12= 'name' a13= ':' (a14= STRING ) | a15= 'includedTypeDefinition' a16= ':' (a17= STRING ) ) )* a18= '}'
            {
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8347:2: ( (a0= STRING ) )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==STRING) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8348:3: (a0= STRING )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8348:3: (a0= STRING )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8349:4: a0= STRING
                    {
                    a0=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_ModelType4349); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
                      				}
                      				if (a0 != null) {
                      					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                      					tokenResolver.setOptions(getOptions());
                      					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__IS_ASPECT), result);
                      					java.lang.Object resolvedObject = result.getResolvedToken();
                      					if (resolvedObject == null) {
                      						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
                      					}
                      					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
                      					if (resolved != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__IS_ASPECT), resolved);
                      						completedElement(resolved);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
                      				}
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 129));
              	
            }
            a1=(Token)match(input,41,FOLLOW_41_in_parse_org_kermeta_language_structure_ModelType4379); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_191, 130));
              	
            }
            a2=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_ModelType4393); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 131));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 131));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 131));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 131));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 131));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 131));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8411:2: ( (a3= 'tag' a4= ':' (a5= STRING ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= STRING ) | a12= 'name' a13= ':' (a14= STRING ) | a15= 'includedTypeDefinition' a16= ':' (a17= STRING ) ) )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( ((LA41_0>=38 && LA41_0<=39)||(LA41_0>=42 && LA41_0<=44)) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8412:3: (a3= 'tag' a4= ':' (a5= STRING ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= STRING ) | a12= 'name' a13= ':' (a14= STRING ) | a15= 'includedTypeDefinition' a16= ':' (a17= STRING ) )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8412:3: (a3= 'tag' a4= ':' (a5= STRING ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= STRING ) | a12= 'name' a13= ':' (a14= STRING ) | a15= 'includedTypeDefinition' a16= ':' (a17= STRING ) )
            	    int alt40=5;
            	    switch ( input.LA(1) ) {
            	    case 38:
            	        {
            	        alt40=1;
            	        }
            	        break;
            	    case 39:
            	        {
            	        alt40=2;
            	        }
            	        break;
            	    case 42:
            	        {
            	        alt40=3;
            	        }
            	        break;
            	    case 43:
            	        {
            	        alt40=4;
            	        }
            	        break;
            	    case 44:
            	        {
            	        alt40=5;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 40, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt40) {
            	        case 1 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8413:4: a3= 'tag' a4= ':' (a5= STRING )
            	            {
            	            a3=(Token)match(input,38,FOLLOW_38_in_parse_org_kermeta_language_structure_ModelType4416); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 132));
            	              			
            	            }
            	            a4=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ModelType4436); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_199, 133));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8437:4: (a5= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8438:5: a5= STRING
            	            {
            	            a5=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_ModelType4462); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              					}
            	              					if (a5 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a5).getLine(), ((org.antlr.runtime.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a5).getStartIndex(), ((org.antlr.runtime.CommonToken) a5).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 134));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 134));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 134));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 134));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 134));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 134));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8480:8: a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a6=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_ModelType4503); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_200, 135));
            	              			
            	            }
            	            a7=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ModelType4523); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 136));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8504:4: (a8_0= parse_org_kermeta_language_structure_Tag )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8505:5: a8_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ModelType4549);
            	            a8_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              					}
            	              					if (a8_0 != null) {
            	              						if (a8_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE__OWNED_TAGS, a8_0);
            	              							completedElement(a8_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a8_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 137));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 137));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 137));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 137));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 137));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 137));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8532:8: a9= 'typeContainer' a10= ':' (a11= STRING )
            	            {
            	            a9=(Token)match(input,42,FOLLOW_42_in_parse_org_kermeta_language_structure_ModelType4585); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_201, 138));
            	              			
            	            }
            	            a10=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ModelType4605); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_202, 139));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8556:4: (a11= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8557:5: a11= STRING
            	            {
            	            a11=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_ModelType4631); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              					}
            	              					if (a11 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a11.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TYPE_CONTAINER), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a11).getLine(), ((org.antlr.runtime.CommonToken) a11).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a11).getStartIndex(), ((org.antlr.runtime.CommonToken) a11).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.behavior.Raise proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TYPE_CONTAINER), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TYPE_CONTAINER), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 140));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 140));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 140));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 140));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 140));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 140));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8599:8: a12= 'name' a13= ':' (a14= STRING )
            	            {
            	            a12=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_structure_ModelType4672); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_203, 141));
            	              			
            	            }
            	            a13=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ModelType4692); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_204, 142));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8623:4: (a14= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8624:5: a14= STRING
            	            {
            	            a14=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_ModelType4718); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              					}
            	              					if (a14 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a14.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__NAME), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a14).getLine(), ((org.antlr.runtime.CommonToken) a14).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a14).getStartIndex(), ((org.antlr.runtime.CommonToken) a14).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__NAME), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a14, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 143));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 143));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 143));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 143));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 143));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 143));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8662:8: a15= 'includedTypeDefinition' a16= ':' (a17= STRING )
            	            {
            	            a15=(Token)match(input,44,FOLLOW_44_in_parse_org_kermeta_language_structure_ModelType4759); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_205, 144));
            	              			
            	            }
            	            a16=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ModelType4779); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a16, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_206, 145));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8686:4: (a17= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8687:5: a17= STRING
            	            {
            	            a17=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_ModelType4805); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              					}
            	              					if (a17 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a17.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__INCLUDED_TYPE_DEFINITION), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a17).getLine(), ((org.antlr.runtime.CommonToken) a17).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a17).getStartIndex(), ((org.antlr.runtime.CommonToken) a17).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.TypeDefinition proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ModelType, org.kermeta.language.structure.TypeDefinition>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getModelTypeIncludedTypeDefinitionReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__INCLUDED_TYPE_DEFINITION), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE__INCLUDED_TYPE_DEFINITION, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a17, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a17, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 146));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 146));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 146));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 146));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 146));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 146));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 147));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 147));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 147));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 147));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 147));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 147));
              	
            }
            a18=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_structure_ModelType4851); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 148));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 16, parse_org_kermeta_language_structure_ModelType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ModelType"


    // $ANTLR start "parse_org_kermeta_language_structure_TypeVariableBinding"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8851:1: parse_org_kermeta_language_structure_TypeVariableBinding returns [org.kermeta.language.structure.TypeVariableBinding element = null] : a0= 'TypeVariableBinding' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= STRING ) | a14= 'type' a15= ':' (a16= STRING ) ) )* a17= '}' ;
    public final org.kermeta.language.structure.TypeVariableBinding parse_org_kermeta_language_structure_TypeVariableBinding() throws RecognitionException {
        org.kermeta.language.structure.TypeVariableBinding element =  null;
        int parse_org_kermeta_language_structure_TypeVariableBinding_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8854:1: (a0= 'TypeVariableBinding' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= STRING ) | a14= 'type' a15= ':' (a16= STRING ) ) )* a17= '}' )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8855:2: a0= 'TypeVariableBinding' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= STRING ) | a14= 'type' a15= ':' (a16= STRING ) ) )* a17= '}'
            {
            a0=(Token)match(input,45,FOLLOW_45_in_parse_org_kermeta_language_structure_TypeVariableBinding4880); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_208, 149));
              	
            }
            a1=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_TypeVariableBinding4894); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 150));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 150));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 150));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 150));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 150));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 150));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8884:2: ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= STRING ) | a14= 'type' a15= ':' (a16= STRING ) ) )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( ((LA43_0>=38 && LA43_0<=39)||(LA43_0>=46 && LA43_0<=48)) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8885:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= STRING ) | a14= 'type' a15= ':' (a16= STRING ) )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8885:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= STRING ) | a14= 'type' a15= ':' (a16= STRING ) )
            	    int alt42=5;
            	    switch ( input.LA(1) ) {
            	    case 38:
            	        {
            	        alt42=1;
            	        }
            	        break;
            	    case 39:
            	        {
            	        alt42=2;
            	        }
            	        break;
            	    case 46:
            	        {
            	        alt42=3;
            	        }
            	        break;
            	    case 47:
            	        {
            	        alt42=4;
            	        }
            	        break;
            	    case 48:
            	        {
            	        alt42=5;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 42, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt42) {
            	        case 1 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8886:4: a2= 'tag' a3= ':' (a4= STRING )
            	            {
            	            a2=(Token)match(input,38,FOLLOW_38_in_parse_org_kermeta_language_structure_TypeVariableBinding4917); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_209, 151));
            	              			
            	            }
            	            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_TypeVariableBinding4937); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_210, 152));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8910:4: (a4= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8911:5: a4= STRING
            	            {
            	            a4=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_TypeVariableBinding4963); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 153));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 153));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 153));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 153));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 153));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 153));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8953:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_TypeVariableBinding5004); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_211, 154));
            	              			
            	            }
            	            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_TypeVariableBinding5024); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 155));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8977:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8978:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_TypeVariableBinding5050);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 156));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 156));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 156));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 156));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 156));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 156));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9005:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,46,FOLLOW_46_in_parse_org_kermeta_language_structure_TypeVariableBinding5086); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_212, 157));
            	              			
            	            }
            	            a9=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_TypeVariableBinding5106); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 158));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 158));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 158));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 158));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 158));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 158));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 158));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 158));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 158));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 158));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 158));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 158));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9040:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9041:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_TypeVariableBinding5132);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 159));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 159));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 159));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 159));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 159));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 159));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9068:8: a11= 'variable' a12= ':' (a13= STRING )
            	            {
            	            a11=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_structure_TypeVariableBinding5168); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_219, 160));
            	              			
            	            }
            	            a12=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_TypeVariableBinding5188); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_220, 161));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9092:4: (a13= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9093:5: a13= STRING
            	            {
            	            a13=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_TypeVariableBinding5214); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__VARIABLE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariableBinding, org.kermeta.language.structure.TypeVariable>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableBindingVariableReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__VARIABLE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__VARIABLE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 162));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 162));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 162));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 162));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 162));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 162));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9135:8: a14= 'type' a15= ':' (a16= STRING )
            	            {
            	            a14=(Token)match(input,48,FOLLOW_48_in_parse_org_kermeta_language_structure_TypeVariableBinding5255); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_221, 163));
            	              			
            	            }
            	            a15=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_TypeVariableBinding5275); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_222, 164));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9159:4: (a16= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9160:5: a16= STRING
            	            {
            	            a16=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_TypeVariableBinding5301); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariableBinding, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableBindingTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 165));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 165));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 165));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 165));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 165));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 165));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 166));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 166));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 166));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 166));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 166));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 166));
              	
            }
            a17=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_structure_TypeVariableBinding5347); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 167));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 167));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 167));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 167));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 167));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 167));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 167));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 167));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 167));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 167));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 17, parse_org_kermeta_language_structure_TypeVariableBinding_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_TypeVariableBinding"


    // $ANTLR start "parse_org_kermeta_language_structure_MultiplicityElement"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9236:1: parse_org_kermeta_language_structure_MultiplicityElement returns [org.kermeta.language.structure.MultiplicityElement element = null] : ( ( (a0= STRING ) )? ( (a1= STRING ) )? a2= 'MultiplicityElement' a3= '{' ( (a4= 'tag' a5= ':' (a6= STRING ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= STRING ) | a16= 'type' a17= ':' (a18= STRING ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) ) )* a25= '}' | c0= parse_org_kermeta_language_structure_Property | c1= parse_org_kermeta_language_structure_Operation | c2= parse_org_kermeta_language_structure_Parameter | c3= parse_org_kermeta_language_behavior_TypeReference );
    public final org.kermeta.language.structure.MultiplicityElement parse_org_kermeta_language_structure_MultiplicityElement() throws RecognitionException {
        org.kermeta.language.structure.MultiplicityElement element =  null;
        int parse_org_kermeta_language_structure_MultiplicityElement_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a8=null;
        Token a10=null;
        Token a11=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        Token a21=null;
        Token a22=null;
        Token a23=null;
        Token a24=null;
        Token a25=null;
        org.kermeta.language.structure.Tag a9_0 = null;

        org.kermeta.language.structure.Type a12_0 = null;

        org.kermeta.language.structure.Property c0 = null;

        org.kermeta.language.structure.Operation c1 = null;

        org.kermeta.language.structure.Parameter c2 = null;

        org.kermeta.language.behavior.TypeReference c3 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9239:1: ( ( (a0= STRING ) )? ( (a1= STRING ) )? a2= 'MultiplicityElement' a3= '{' ( (a4= 'tag' a5= ':' (a6= STRING ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= STRING ) | a16= 'type' a17= ':' (a18= STRING ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) ) )* a25= '}' | c0= parse_org_kermeta_language_structure_Property | c1= parse_org_kermeta_language_structure_Operation | c2= parse_org_kermeta_language_structure_Parameter | c3= parse_org_kermeta_language_behavior_TypeReference )
            int alt48=5;
            switch ( input.LA(1) ) {
            case STRING:
                {
                switch ( input.LA(2) ) {
                case STRING:
                    {
                    int LA48_5 = input.LA(3);

                    if ( (LA48_5==49) ) {
                        alt48=1;
                    }
                    else if ( (LA48_5==STRING||LA48_5==31) ) {
                        alt48=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 48, 5, input);

                        throw nvae;
                    }
                    }
                    break;
                case 49:
                    {
                    alt48=1;
                    }
                    break;
                case EOF:
                    {
                    alt48=5;
                    }
                    break;
                case 29:
                    {
                    alt48=4;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 48, 1, input);

                    throw nvae;
                }

                }
                break;
            case 49:
                {
                alt48=1;
                }
                break;
            case 27:
            case 28:
            case 30:
                {
                alt48=2;
                }
                break;
            case 31:
                {
                alt48=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;
            }

            switch (alt48) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9240:2: ( (a0= STRING ) )? ( (a1= STRING ) )? a2= 'MultiplicityElement' a3= '{' ( (a4= 'tag' a5= ':' (a6= STRING ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= STRING ) | a16= 'type' a17= ':' (a18= STRING ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) ) )* a25= '}'
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9240:2: ( (a0= STRING ) )?
                    int alt44=2;
                    int LA44_0 = input.LA(1);

                    if ( (LA44_0==STRING) ) {
                        int LA44_1 = input.LA(2);

                        if ( (synpred103_Kermeta()) ) {
                            alt44=1;
                        }
                    }
                    switch (alt44) {
                        case 1 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9241:3: (a0= STRING )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9241:3: (a0= STRING )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9242:4: a0= STRING
                            {
                            a0=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_MultiplicityElement5385); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                              				}
                              				if (a0 != null) {
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                              					tokenResolver.setOptions(getOptions());
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_ORDERED), result);
                              					java.lang.Object resolvedObject = result.getResolvedToken();
                              					if (resolvedObject == null) {
                              						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
                              					}
                              					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
                              					if (resolved != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_ORDERED), resolved);
                              						completedElement(resolved);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
                              				}
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 168));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 168));
                      	
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9276:2: ( (a1= STRING ) )?
                    int alt45=2;
                    int LA45_0 = input.LA(1);

                    if ( (LA45_0==STRING) ) {
                        alt45=1;
                    }
                    switch (alt45) {
                        case 1 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9277:3: (a1= STRING )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9277:3: (a1= STRING )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9278:4: a1= STRING
                            {
                            a1=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_MultiplicityElement5424); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                              				}
                              				if (a1 != null) {
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                              					tokenResolver.setOptions(getOptions());
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              					tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_UNIQUE), result);
                              					java.lang.Object resolvedObject = result.getResolvedToken();
                              					if (resolvedObject == null) {
                              						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
                              					}
                              					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
                              					if (resolved != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_UNIQUE), resolved);
                              						completedElement(resolved);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
                              				}
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 169));
                      	
                    }
                    a2=(Token)match(input,49,FOLLOW_49_in_parse_org_kermeta_language_structure_MultiplicityElement5454); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_223, 170));
                      	
                    }
                    a3=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_MultiplicityElement5468); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 171));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 171));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 171));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 171));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 171));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 171));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 171));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 171));
                      	
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9342:2: ( (a4= 'tag' a5= ':' (a6= STRING ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= STRING ) | a16= 'type' a17= ':' (a18= STRING ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) ) )*
                    loop47:
                    do {
                        int alt47=2;
                        int LA47_0 = input.LA(1);

                        if ( ((LA47_0>=38 && LA47_0<=39)||LA47_0==43||LA47_0==46||LA47_0==48||(LA47_0>=50 && LA47_0<=51)) ) {
                            alt47=1;
                        }


                        switch (alt47) {
                    	case 1 :
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9343:3: (a4= 'tag' a5= ':' (a6= STRING ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= STRING ) | a16= 'type' a17= ':' (a18= STRING ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) )
                    	    {
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9343:3: (a4= 'tag' a5= ':' (a6= STRING ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= STRING ) | a16= 'type' a17= ':' (a18= STRING ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) )
                    	    int alt46=7;
                    	    switch ( input.LA(1) ) {
                    	    case 38:
                    	        {
                    	        alt46=1;
                    	        }
                    	        break;
                    	    case 39:
                    	        {
                    	        alt46=2;
                    	        }
                    	        break;
                    	    case 46:
                    	        {
                    	        alt46=3;
                    	        }
                    	        break;
                    	    case 43:
                    	        {
                    	        alt46=4;
                    	        }
                    	        break;
                    	    case 48:
                    	        {
                    	        alt46=5;
                    	        }
                    	        break;
                    	    case 50:
                    	        {
                    	        alt46=6;
                    	        }
                    	        break;
                    	    case 51:
                    	        {
                    	        alt46=7;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 46, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt46) {
                    	        case 1 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9344:4: a4= 'tag' a5= ':' (a6= STRING )
                    	            {
                    	            a4=(Token)match(input,38,FOLLOW_38_in_parse_org_kermeta_language_structure_MultiplicityElement5491); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_224, 172));
                    	              			
                    	            }
                    	            a5=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_MultiplicityElement5511); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_225, 173));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9368:4: (a6= STRING )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9369:5: a6= STRING
                    	            {
                    	            a6=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_MultiplicityElement5537); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a6 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a6.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TAG), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a6).getLine(), ((org.antlr.runtime.CommonToken) a6).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a6).getStartIndex(), ((org.antlr.runtime.CommonToken) a6).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TAG), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TAG, proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a6, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a6, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 174));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 174));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 174));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 174));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 174));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 174));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 174));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 174));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9413:8: a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag )
                    	            {
                    	            a7=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_MultiplicityElement5578); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_226, 175));
                    	              			
                    	            }
                    	            a8=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_MultiplicityElement5598); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 176));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9437:4: (a9_0= parse_org_kermeta_language_structure_Tag )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9438:5: a9_0= parse_org_kermeta_language_structure_Tag
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_MultiplicityElement5624);
                    	            a9_0=parse_org_kermeta_language_structure_Tag();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a9_0 != null) {
                    	              						if (a9_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__OWNED_TAGS, a9_0);
                    	              							completedElement(a9_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a9_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 177));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 177));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 177));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 177));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 177));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 177));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 177));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 177));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9467:8: a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type )
                    	            {
                    	            a10=(Token)match(input,46,FOLLOW_46_in_parse_org_kermeta_language_structure_MultiplicityElement5660); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 178));
                    	              			
                    	            }
                    	            a11=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_MultiplicityElement5680); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 179));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 179));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 179));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 179));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 179));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 179));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 179));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 179));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 179));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 179));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 179));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 179));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9502:4: (a12_0= parse_org_kermeta_language_structure_Type )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9503:5: a12_0= parse_org_kermeta_language_structure_Type
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_MultiplicityElement5706);
                    	            a12_0=parse_org_kermeta_language_structure_Type();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a12_0 != null) {
                    	              						if (a12_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__CONTAINED_TYPE, a12_0);
                    	              							completedElement(a12_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a12_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 180));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 180));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 180));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 180));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 180));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 180));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 180));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 180));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9532:8: a13= 'name' a14= ':' (a15= STRING )
                    	            {
                    	            a13=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_structure_MultiplicityElement5742); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_228, 181));
                    	              			
                    	            }
                    	            a14=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_MultiplicityElement5762); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_229, 182));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9556:4: (a15= STRING )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9557:5: a15= STRING
                    	            {
                    	            a15=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_MultiplicityElement5788); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a15 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a15.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__NAME), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a15).getLine(), ((org.antlr.runtime.CommonToken) a15).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a15).getStartIndex(), ((org.antlr.runtime.CommonToken) a15).getStopIndex());
                    	              						}
                    	              						java.lang.String resolved = (java.lang.String)resolvedObject;
                    	              						if (resolved != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__NAME), resolved);
                    	              							completedElement(resolved);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a15, element);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 183));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 183));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 183));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 183));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 183));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 183));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 183));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 183));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 5 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9597:8: a16= 'type' a17= ':' (a18= STRING )
                    	            {
                    	            a16=(Token)match(input,48,FOLLOW_48_in_parse_org_kermeta_language_structure_MultiplicityElement5829); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a16, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_230, 184));
                    	              			
                    	            }
                    	            a17=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_MultiplicityElement5849); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_231, 185));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9621:4: (a18= STRING )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9622:5: a18= STRING
                    	            {
                    	            a18=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_MultiplicityElement5875); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a18 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a18.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TYPE), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a18).getLine(), ((org.antlr.runtime.CommonToken) a18).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a18).getStartIndex(), ((org.antlr.runtime.CommonToken) a18).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TYPE), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TYPE), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a18, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a18, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 186));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 186));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 186));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 186));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 186));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 186));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 186));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 186));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 6 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9666:8: a19= 'lower' a20= ':' (a21= INTEGER )
                    	            {
                    	            a19=(Token)match(input,50,FOLLOW_50_in_parse_org_kermeta_language_structure_MultiplicityElement5916); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a19, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_232, 187));
                    	              			
                    	            }
                    	            a20=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_MultiplicityElement5936); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_233, 188));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9690:4: (a21= INTEGER )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9691:5: a21= INTEGER
                    	            {
                    	            a21=(Token)match(input,INTEGER,FOLLOW_INTEGER_in_parse_org_kermeta_language_structure_MultiplicityElement5962); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a21 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a21.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__LOWER), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a21).getLine(), ((org.antlr.runtime.CommonToken) a21).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a21).getStartIndex(), ((org.antlr.runtime.CommonToken) a21).getStopIndex());
                    	              						}
                    	              						java.lang.Integer resolved = (java.lang.Integer)resolvedObject;
                    	              						if (resolved != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__LOWER), resolved);
                    	              							completedElement(resolved);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a21, element);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 189));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 189));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 189));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 189));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 189));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 189));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 189));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 189));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 7 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9731:8: a22= 'upper' a23= ':' (a24= INTEGER )
                    	            {
                    	            a22=(Token)match(input,51,FOLLOW_51_in_parse_org_kermeta_language_structure_MultiplicityElement6003); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a22, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_234, 190));
                    	              			
                    	            }
                    	            a23=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_MultiplicityElement6023); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_235, 191));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9755:4: (a24= INTEGER )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9756:5: a24= INTEGER
                    	            {
                    	            a24=(Token)match(input,INTEGER,FOLLOW_INTEGER_in_parse_org_kermeta_language_structure_MultiplicityElement6049); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a24 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a24.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__UPPER), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a24).getLine(), ((org.antlr.runtime.CommonToken) a24).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a24).getStartIndex(), ((org.antlr.runtime.CommonToken) a24).getStopIndex());
                    	              						}
                    	              						java.lang.Integer resolved = (java.lang.Integer)resolvedObject;
                    	              						if (resolved != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__UPPER), resolved);
                    	              							completedElement(resolved);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a24, element);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 192));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 192));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 192));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 192));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 192));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 192));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 192));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 192));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop47;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 193));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 193));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 193));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 193));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 193));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 193));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 193));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 193));
                      	
                    }
                    a25=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_structure_MultiplicityElement6095); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a25, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      	
                    }

                    }
                    break;
                case 2 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9822:2: c0= parse_org_kermeta_language_structure_Property
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_MultiplicityElement6114);
                    c0=parse_org_kermeta_language_structure_Property();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9823:4: c1= parse_org_kermeta_language_structure_Operation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_MultiplicityElement6124);
                    c1=parse_org_kermeta_language_structure_Operation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9824:4: c2= parse_org_kermeta_language_structure_Parameter
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_MultiplicityElement6134);
                    c2=parse_org_kermeta_language_structure_Parameter();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 5 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9825:4: c3= parse_org_kermeta_language_behavior_TypeReference
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_structure_MultiplicityElement6144);
                    c3=parse_org_kermeta_language_behavior_TypeReference();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 18, parse_org_kermeta_language_structure_MultiplicityElement_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_MultiplicityElement"


    // $ANTLR start "parse_org_kermeta_language_structure_TypeDefinition"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9829:1: parse_org_kermeta_language_structure_TypeDefinition returns [org.kermeta.language.structure.TypeDefinition element = null] : ( ( (a0= STRING ) )? a1= 'TypeDefinition' a2= '{' ( (a3= 'tag' a4= ':' (a5= STRING ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= STRING ) ) )* a12= '}' | c0= parse_org_kermeta_language_structure_ClassDefinition | c1= parse_org_kermeta_language_structure_Enumeration | c2= parse_org_kermeta_language_structure_ModelType | c3= parse_org_kermeta_language_structure_PrimitiveType );
    public final org.kermeta.language.structure.TypeDefinition parse_org_kermeta_language_structure_TypeDefinition() throws RecognitionException {
        org.kermeta.language.structure.TypeDefinition element =  null;
        int parse_org_kermeta_language_structure_TypeDefinition_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        Token a12=null;
        org.kermeta.language.structure.Tag a8_0 = null;

        org.kermeta.language.structure.ClassDefinition c0 = null;

        org.kermeta.language.structure.Enumeration c1 = null;

        org.kermeta.language.structure.ModelType c2 = null;

        org.kermeta.language.structure.PrimitiveType c3 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9832:1: ( ( (a0= STRING ) )? a1= 'TypeDefinition' a2= '{' ( (a3= 'tag' a4= ':' (a5= STRING ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= STRING ) ) )* a12= '}' | c0= parse_org_kermeta_language_structure_ClassDefinition | c1= parse_org_kermeta_language_structure_Enumeration | c2= parse_org_kermeta_language_structure_ModelType | c3= parse_org_kermeta_language_structure_PrimitiveType )
            int alt52=5;
            switch ( input.LA(1) ) {
            case STRING:
                {
                switch ( input.LA(2) ) {
                case 52:
                    {
                    alt52=1;
                    }
                    break;
                case 41:
                    {
                    alt52=4;
                    }
                    break;
                case 53:
                    {
                    alt52=5;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 1, input);

                    throw nvae;
                }

                }
                break;
            case 52:
                {
                alt52=1;
                }
                break;
            case 22:
            case 23:
            case 24:
                {
                alt52=2;
                }
                break;
            case 35:
                {
                alt52=3;
                }
                break;
            case 41:
                {
                alt52=4;
                }
                break;
            case 53:
                {
                alt52=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }

            switch (alt52) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9833:2: ( (a0= STRING ) )? a1= 'TypeDefinition' a2= '{' ( (a3= 'tag' a4= ':' (a5= STRING ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= STRING ) ) )* a12= '}'
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9833:2: ( (a0= STRING ) )?
                    int alt49=2;
                    int LA49_0 = input.LA(1);

                    if ( (LA49_0==STRING) ) {
                        alt49=1;
                    }
                    switch (alt49) {
                        case 1 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9834:3: (a0= STRING )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9834:3: (a0= STRING )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9835:4: a0= STRING
                            {
                            a0=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_TypeDefinition6178); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                              				}
                              				if (a0 != null) {
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                              					tokenResolver.setOptions(getOptions());
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__IS_ASPECT), result);
                              					java.lang.Object resolvedObject = result.getResolvedToken();
                              					if (resolvedObject == null) {
                              						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
                              					}
                              					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
                              					if (resolved != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__IS_ASPECT), resolved);
                              						completedElement(resolved);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
                              				}
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 195));
                      	
                    }
                    a1=(Token)match(input,52,FOLLOW_52_in_parse_org_kermeta_language_structure_TypeDefinition6208); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_236, 196));
                      	
                    }
                    a2=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_TypeDefinition6222); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_237, 197));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 197));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 197));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 197));
                      	
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9895:2: ( (a3= 'tag' a4= ':' (a5= STRING ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= STRING ) ) )*
                    loop51:
                    do {
                        int alt51=2;
                        int LA51_0 = input.LA(1);

                        if ( ((LA51_0>=38 && LA51_0<=39)||LA51_0==43) ) {
                            alt51=1;
                        }


                        switch (alt51) {
                    	case 1 :
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9896:3: (a3= 'tag' a4= ':' (a5= STRING ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= STRING ) )
                    	    {
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9896:3: (a3= 'tag' a4= ':' (a5= STRING ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= STRING ) )
                    	    int alt50=3;
                    	    switch ( input.LA(1) ) {
                    	    case 38:
                    	        {
                    	        alt50=1;
                    	        }
                    	        break;
                    	    case 39:
                    	        {
                    	        alt50=2;
                    	        }
                    	        break;
                    	    case 43:
                    	        {
                    	        alt50=3;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 50, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt50) {
                    	        case 1 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9897:4: a3= 'tag' a4= ':' (a5= STRING )
                    	            {
                    	            a3=(Token)match(input,38,FOLLOW_38_in_parse_org_kermeta_language_structure_TypeDefinition6245); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_241, 198));
                    	              			
                    	            }
                    	            a4=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_TypeDefinition6265); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_242, 199));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9921:4: (a5= STRING )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9922:5: a5= STRING
                    	            {
                    	            a5=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_TypeDefinition6291); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              					}
                    	              					if (a5 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__TAG), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a5).getLine(), ((org.antlr.runtime.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a5).getStartIndex(), ((org.antlr.runtime.CommonToken) a5).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__TAG), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__TAG, proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_237, 200));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 200));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 200));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 200));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9962:8: a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag )
                    	            {
                    	            a6=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_TypeDefinition6332); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_243, 201));
                    	              			
                    	            }
                    	            a7=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_TypeDefinition6352); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 202));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9986:4: (a8_0= parse_org_kermeta_language_structure_Tag )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9987:5: a8_0= parse_org_kermeta_language_structure_Tag
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_TypeDefinition6378);
                    	            a8_0=parse_org_kermeta_language_structure_Tag();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              					}
                    	              					if (a8_0 != null) {
                    	              						if (a8_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__OWNED_TAGS, a8_0);
                    	              							completedElement(a8_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a8_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_237, 203));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 203));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 203));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 203));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10012:8: a9= 'name' a10= ':' (a11= STRING )
                    	            {
                    	            a9=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_structure_TypeDefinition6414); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_244, 204));
                    	              			
                    	            }
                    	            a10=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_TypeDefinition6434); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_245, 205));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10036:4: (a11= STRING )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10037:5: a11= STRING
                    	            {
                    	            a11=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_TypeDefinition6460); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              					}
                    	              					if (a11 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a11.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__NAME), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a11).getLine(), ((org.antlr.runtime.CommonToken) a11).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a11).getStartIndex(), ((org.antlr.runtime.CommonToken) a11).getStopIndex());
                    	              						}
                    	              						java.lang.String resolved = (java.lang.String)resolvedObject;
                    	              						if (resolved != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__NAME), resolved);
                    	              							completedElement(resolved);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, element);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_237, 206));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 206));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 206));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 206));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop51;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_237, 207));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 207));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 207));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 207));
                      	
                    }
                    a12=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_structure_TypeDefinition6506); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 208));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 208));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 208));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 208));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 208));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 208));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 208));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 208));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 208));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 208));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 208));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10106:2: c0= parse_org_kermeta_language_structure_ClassDefinition
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_parse_org_kermeta_language_structure_TypeDefinition6525);
                    c0=parse_org_kermeta_language_structure_ClassDefinition();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10107:4: c1= parse_org_kermeta_language_structure_Enumeration
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_TypeDefinition6535);
                    c1=parse_org_kermeta_language_structure_Enumeration();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10108:4: c2= parse_org_kermeta_language_structure_ModelType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_TypeDefinition6545);
                    c2=parse_org_kermeta_language_structure_ModelType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 5 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10109:4: c3= parse_org_kermeta_language_structure_PrimitiveType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_TypeDefinition6555);
                    c3=parse_org_kermeta_language_structure_PrimitiveType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 19, parse_org_kermeta_language_structure_TypeDefinition_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_TypeDefinition"


    // $ANTLR start "parse_org_kermeta_language_structure_PrimitiveType"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10113:1: parse_org_kermeta_language_structure_PrimitiveType returns [org.kermeta.language.structure.PrimitiveType element = null] : ( (a0= STRING ) )? a1= 'PrimitiveType' a2= '{' ( (a3= 'tag' a4= ':' (a5= STRING ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= STRING ) | a12= 'name' a13= ':' (a14= STRING ) | a15= 'containedType' a16= ':' (a17_0= parse_org_kermeta_language_structure_Type ) | a18= 'instanceType' a19= ':' (a20= STRING ) ) )* a21= '}' ;
    public final org.kermeta.language.structure.PrimitiveType parse_org_kermeta_language_structure_PrimitiveType() throws RecognitionException {
        org.kermeta.language.structure.PrimitiveType element =  null;
        int parse_org_kermeta_language_structure_PrimitiveType_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        Token a21=null;
        org.kermeta.language.structure.Tag a8_0 = null;

        org.kermeta.language.structure.Type a17_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10116:1: ( ( (a0= STRING ) )? a1= 'PrimitiveType' a2= '{' ( (a3= 'tag' a4= ':' (a5= STRING ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= STRING ) | a12= 'name' a13= ':' (a14= STRING ) | a15= 'containedType' a16= ':' (a17_0= parse_org_kermeta_language_structure_Type ) | a18= 'instanceType' a19= ':' (a20= STRING ) ) )* a21= '}' )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10117:2: ( (a0= STRING ) )? a1= 'PrimitiveType' a2= '{' ( (a3= 'tag' a4= ':' (a5= STRING ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= STRING ) | a12= 'name' a13= ':' (a14= STRING ) | a15= 'containedType' a16= ':' (a17_0= parse_org_kermeta_language_structure_Type ) | a18= 'instanceType' a19= ':' (a20= STRING ) ) )* a21= '}'
            {
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10117:2: ( (a0= STRING ) )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==STRING) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10118:3: (a0= STRING )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10118:3: (a0= STRING )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10119:4: a0= STRING
                    {
                    a0=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_PrimitiveType6589); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
                      				}
                      				if (a0 != null) {
                      					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                      					tokenResolver.setOptions(getOptions());
                      					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__IS_ASPECT), result);
                      					java.lang.Object resolvedObject = result.getResolvedToken();
                      					if (resolvedObject == null) {
                      						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
                      					}
                      					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
                      					if (resolved != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__IS_ASPECT), resolved);
                      						completedElement(resolved);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
                      				}
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 209));
              	
            }
            a1=(Token)match(input,53,FOLLOW_53_in_parse_org_kermeta_language_structure_PrimitiveType6619); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_246, 210));
              	
            }
            a2=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_PrimitiveType6633); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 211));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 211));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 211));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 211));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 211));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 211));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 211));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10182:2: ( (a3= 'tag' a4= ':' (a5= STRING ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= STRING ) | a12= 'name' a13= ':' (a14= STRING ) | a15= 'containedType' a16= ':' (a17_0= parse_org_kermeta_language_structure_Type ) | a18= 'instanceType' a19= ':' (a20= STRING ) ) )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( ((LA55_0>=38 && LA55_0<=39)||(LA55_0>=42 && LA55_0<=43)||LA55_0==46||LA55_0==54) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10183:3: (a3= 'tag' a4= ':' (a5= STRING ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= STRING ) | a12= 'name' a13= ':' (a14= STRING ) | a15= 'containedType' a16= ':' (a17_0= parse_org_kermeta_language_structure_Type ) | a18= 'instanceType' a19= ':' (a20= STRING ) )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10183:3: (a3= 'tag' a4= ':' (a5= STRING ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= STRING ) | a12= 'name' a13= ':' (a14= STRING ) | a15= 'containedType' a16= ':' (a17_0= parse_org_kermeta_language_structure_Type ) | a18= 'instanceType' a19= ':' (a20= STRING ) )
            	    int alt54=6;
            	    switch ( input.LA(1) ) {
            	    case 38:
            	        {
            	        alt54=1;
            	        }
            	        break;
            	    case 39:
            	        {
            	        alt54=2;
            	        }
            	        break;
            	    case 42:
            	        {
            	        alt54=3;
            	        }
            	        break;
            	    case 43:
            	        {
            	        alt54=4;
            	        }
            	        break;
            	    case 46:
            	        {
            	        alt54=5;
            	        }
            	        break;
            	    case 54:
            	        {
            	        alt54=6;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 54, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt54) {
            	        case 1 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10184:4: a3= 'tag' a4= ':' (a5= STRING )
            	            {
            	            a3=(Token)match(input,38,FOLLOW_38_in_parse_org_kermeta_language_structure_PrimitiveType6656); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_247, 212));
            	              			
            	            }
            	            a4=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_PrimitiveType6676); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_248, 213));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10208:4: (a5= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10209:5: a5= STRING
            	            {
            	            a5=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_PrimitiveType6702); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
            	              					}
            	              					if (a5 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a5).getLine(), ((org.antlr.runtime.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a5).getStartIndex(), ((org.antlr.runtime.CommonToken) a5).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 214));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 214));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 214));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 214));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 214));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 214));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 214));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10252:8: a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a6=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_PrimitiveType6743); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_249, 215));
            	              			
            	            }
            	            a7=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_PrimitiveType6763); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 216));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10276:4: (a8_0= parse_org_kermeta_language_structure_Tag )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10277:5: a8_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_PrimitiveType6789);
            	            a8_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
            	              					}
            	              					if (a8_0 != null) {
            	              						if (a8_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__OWNED_TAGS, a8_0);
            	              							completedElement(a8_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a8_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 217));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 217));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 217));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 217));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 217));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 217));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 217));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10305:8: a9= 'typeContainer' a10= ':' (a11= STRING )
            	            {
            	            a9=(Token)match(input,42,FOLLOW_42_in_parse_org_kermeta_language_structure_PrimitiveType6825); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_250, 218));
            	              			
            	            }
            	            a10=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_PrimitiveType6845); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_251, 219));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10329:4: (a11= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10330:5: a11= STRING
            	            {
            	            a11=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_PrimitiveType6871); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
            	              					}
            	              					if (a11 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a11.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__TYPE_CONTAINER), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a11).getLine(), ((org.antlr.runtime.CommonToken) a11).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a11).getStartIndex(), ((org.antlr.runtime.CommonToken) a11).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.behavior.Raise proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__TYPE_CONTAINER), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__TYPE_CONTAINER), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 220));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 220));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 220));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 220));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 220));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 220));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 220));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10373:8: a12= 'name' a13= ':' (a14= STRING )
            	            {
            	            a12=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_structure_PrimitiveType6912); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_252, 221));
            	              			
            	            }
            	            a13=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_PrimitiveType6932); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_253, 222));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10397:4: (a14= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10398:5: a14= STRING
            	            {
            	            a14=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_PrimitiveType6958); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
            	              					}
            	              					if (a14 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a14.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__NAME), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a14).getLine(), ((org.antlr.runtime.CommonToken) a14).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a14).getStartIndex(), ((org.antlr.runtime.CommonToken) a14).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__NAME), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a14, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 223));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 223));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 223));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 223));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 223));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 223));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 223));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10437:8: a15= 'containedType' a16= ':' (a17_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a15=(Token)match(input,46,FOLLOW_46_in_parse_org_kermeta_language_structure_PrimitiveType6999); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_254, 224));
            	              			
            	            }
            	            a16=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_PrimitiveType7019); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a16, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 225));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 225));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 225));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 225));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 225));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 225));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 225));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 225));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 225));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 225));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 225));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 225));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10472:4: (a17_0= parse_org_kermeta_language_structure_Type )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10473:5: a17_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_PrimitiveType7045);
            	            a17_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
            	              					}
            	              					if (a17_0 != null) {
            	              						if (a17_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__CONTAINED_TYPE, a17_0);
            	              							completedElement(a17_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a17_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 226));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 226));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 226));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 226));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 226));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 226));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 226));
            	              			
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10501:8: a18= 'instanceType' a19= ':' (a20= STRING )
            	            {
            	            a18=(Token)match(input,54,FOLLOW_54_in_parse_org_kermeta_language_structure_PrimitiveType7081); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_255, 227));
            	              			
            	            }
            	            a19=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_PrimitiveType7101); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a19, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_256, 228));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10525:4: (a20= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10526:5: a20= STRING
            	            {
            	            a20=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_PrimitiveType7127); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
            	              					}
            	              					if (a20 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a20.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__INSTANCE_TYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a20).getLine(), ((org.antlr.runtime.CommonToken) a20).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a20).getStartIndex(), ((org.antlr.runtime.CommonToken) a20).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.PrimitiveType, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getPrimitiveTypeInstanceTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__INSTANCE_TYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__INSTANCE_TYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a20, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a20, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 229));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 229));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 229));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 229));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 229));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 229));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 229));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 230));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 230));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 230));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 230));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 230));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 230));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 230));
              	
            }
            a21=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_structure_PrimitiveType7173); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a21, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 231));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 231));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 20, parse_org_kermeta_language_structure_PrimitiveType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_PrimitiveType"


    // $ANTLR start "parse_org_kermeta_language_structure_Tag"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10692:1: parse_org_kermeta_language_structure_Tag returns [org.kermeta.language.structure.Tag element = null] : a0= 'Tag' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= STRING ) | a11= 'value' a12= ':' (a13= STRING ) | a14= 'object' a15= ':' (a16= STRING ) ) )* a17= '}' ;
    public final org.kermeta.language.structure.Tag parse_org_kermeta_language_structure_Tag() throws RecognitionException {
        org.kermeta.language.structure.Tag element =  null;
        int parse_org_kermeta_language_structure_Tag_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        org.kermeta.language.structure.Tag a7_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10695:1: (a0= 'Tag' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= STRING ) | a11= 'value' a12= ':' (a13= STRING ) | a14= 'object' a15= ':' (a16= STRING ) ) )* a17= '}' )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10696:2: a0= 'Tag' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= STRING ) | a11= 'value' a12= ':' (a13= STRING ) | a14= 'object' a15= ':' (a16= STRING ) ) )* a17= '}'
            {
            a0=(Token)match(input,55,FOLLOW_55_in_parse_org_kermeta_language_structure_Tag7202); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_257, 232));
              	
            }
            a1=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_Tag7216); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_258, 233));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_259, 233));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_260, 233));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_261, 233));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_262, 233));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_263, 233));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10725:2: ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= STRING ) | a11= 'value' a12= ':' (a13= STRING ) | a14= 'object' a15= ':' (a16= STRING ) ) )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( ((LA57_0>=38 && LA57_0<=39)||LA57_0==43||(LA57_0>=56 && LA57_0<=57)) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10726:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= STRING ) | a11= 'value' a12= ':' (a13= STRING ) | a14= 'object' a15= ':' (a16= STRING ) )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10726:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= STRING ) | a11= 'value' a12= ':' (a13= STRING ) | a14= 'object' a15= ':' (a16= STRING ) )
            	    int alt56=5;
            	    switch ( input.LA(1) ) {
            	    case 38:
            	        {
            	        alt56=1;
            	        }
            	        break;
            	    case 39:
            	        {
            	        alt56=2;
            	        }
            	        break;
            	    case 43:
            	        {
            	        alt56=3;
            	        }
            	        break;
            	    case 56:
            	        {
            	        alt56=4;
            	        }
            	        break;
            	    case 57:
            	        {
            	        alt56=5;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 56, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt56) {
            	        case 1 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10727:4: a2= 'tag' a3= ':' (a4= STRING )
            	            {
            	            a2=(Token)match(input,38,FOLLOW_38_in_parse_org_kermeta_language_structure_Tag7239); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_264, 234));
            	              			
            	            }
            	            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Tag7259); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_265, 235));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10751:4: (a4= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10752:5: a4= STRING
            	            {
            	            a4=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_Tag7285); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TAG__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_258, 236));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_259, 236));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_260, 236));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_261, 236));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_262, 236));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_263, 236));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10794:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_Tag7326); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_266, 237));
            	              			
            	            }
            	            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Tag7346); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 238));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10818:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10819:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Tag7372);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TAG__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_258, 239));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_259, 239));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_260, 239));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_261, 239));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_262, 239));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_263, 239));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10846:8: a8= 'name' a9= ':' (a10= STRING )
            	            {
            	            a8=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_structure_Tag7408); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_267, 240));
            	              			
            	            }
            	            a9=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Tag7428); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_268, 241));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10870:4: (a10= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10871:5: a10= STRING
            	            {
            	            a10=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_Tag7454); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              					}
            	              					if (a10 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a10.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__NAME), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a10).getLine(), ((org.antlr.runtime.CommonToken) a10).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a10).getStartIndex(), ((org.antlr.runtime.CommonToken) a10).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__NAME), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_258, 242));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_259, 242));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_260, 242));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_261, 242));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_262, 242));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_263, 242));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10909:8: a11= 'value' a12= ':' (a13= STRING )
            	            {
            	            a11=(Token)match(input,56,FOLLOW_56_in_parse_org_kermeta_language_structure_Tag7495); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_269, 243));
            	              			
            	            }
            	            a12=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Tag7515); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_270, 244));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10933:4: (a13= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10934:5: a13= STRING
            	            {
            	            a13=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_Tag7541); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__VALUE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__VALUE), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_258, 245));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_259, 245));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_260, 245));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_261, 245));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_262, 245));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_263, 245));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10972:8: a14= 'object' a15= ':' (a16= STRING )
            	            {
            	            a14=(Token)match(input,57,FOLLOW_57_in_parse_org_kermeta_language_structure_Tag7582); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_271, 246));
            	              			
            	            }
            	            a15=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Tag7602); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_272, 247));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10996:4: (a16= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10997:5: a16= STRING
            	            {
            	            a16=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_Tag7628); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__OBJECT), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Object proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Tag, org.kermeta.language.structure.Object>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTagObjectReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__OBJECT), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TAG__OBJECT, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_258, 248));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_259, 248));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_260, 248));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_261, 248));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_262, 248));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_263, 248));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_258, 249));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_259, 249));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_260, 249));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_261, 249));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_262, 249));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_263, 249));
              	
            }
            a17=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_structure_Tag7674); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_179, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_185, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_186, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_187, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_237, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_258, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_259, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_260, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_261, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_262, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_263, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_273, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_274, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_275, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_276, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_277, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_278, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_279, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_280, 250));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_281, 250));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 21, parse_org_kermeta_language_structure_Tag_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Tag"


    // $ANTLR start "parse_org_kermeta_language_structure_ObjectTypeVariable"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11181:1: parse_org_kermeta_language_structure_ObjectTypeVariable returns [org.kermeta.language.structure.ObjectTypeVariable element = null] : (a0= 'ObjectTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'name' a15= ':' (a16= STRING ) | a17= 'supertype' a18= ':' (a19= STRING ) ) )* a20= '}' | c0= parse_org_kermeta_language_structure_VirtualType );
    public final org.kermeta.language.structure.ObjectTypeVariable parse_org_kermeta_language_structure_ObjectTypeVariable() throws RecognitionException {
        org.kermeta.language.structure.ObjectTypeVariable element =  null;
        int parse_org_kermeta_language_structure_ObjectTypeVariable_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;

        org.kermeta.language.structure.VirtualType c0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11184:1: (a0= 'ObjectTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'name' a15= ':' (a16= STRING ) | a17= 'supertype' a18= ':' (a19= STRING ) ) )* a20= '}' | c0= parse_org_kermeta_language_structure_VirtualType )
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==58) ) {
                alt60=1;
            }
            else if ( (LA60_0==62) ) {
                alt60=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 60, 0, input);

                throw nvae;
            }
            switch (alt60) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11185:2: a0= 'ObjectTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'name' a15= ':' (a16= STRING ) | a17= 'supertype' a18= ':' (a19= STRING ) ) )* a20= '}'
                    {
                    a0=(Token)match(input,58,FOLLOW_58_in_parse_org_kermeta_language_structure_ObjectTypeVariable7703); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_282, 251));
                      	
                    }
                    a1=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_ObjectTypeVariable7717); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 252));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 252));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 252));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 252));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 252));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 252));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 252));
                      	
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11215:2: ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'name' a15= ':' (a16= STRING ) | a17= 'supertype' a18= ':' (a19= STRING ) ) )*
                    loop59:
                    do {
                        int alt59=2;
                        int LA59_0 = input.LA(1);

                        if ( ((LA59_0>=38 && LA59_0<=39)||(LA59_0>=42 && LA59_0<=43)||LA59_0==46||LA59_0==59) ) {
                            alt59=1;
                        }


                        switch (alt59) {
                    	case 1 :
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11216:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'name' a15= ':' (a16= STRING ) | a17= 'supertype' a18= ':' (a19= STRING ) )
                    	    {
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11216:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'name' a15= ':' (a16= STRING ) | a17= 'supertype' a18= ':' (a19= STRING ) )
                    	    int alt58=6;
                    	    switch ( input.LA(1) ) {
                    	    case 38:
                    	        {
                    	        alt58=1;
                    	        }
                    	        break;
                    	    case 39:
                    	        {
                    	        alt58=2;
                    	        }
                    	        break;
                    	    case 46:
                    	        {
                    	        alt58=3;
                    	        }
                    	        break;
                    	    case 42:
                    	        {
                    	        alt58=4;
                    	        }
                    	        break;
                    	    case 43:
                    	        {
                    	        alt58=5;
                    	        }
                    	        break;
                    	    case 59:
                    	        {
                    	        alt58=6;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 58, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt58) {
                    	        case 1 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11217:4: a2= 'tag' a3= ':' (a4= STRING )
                    	            {
                    	            a2=(Token)match(input,38,FOLLOW_38_in_parse_org_kermeta_language_structure_ObjectTypeVariable7740); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_283, 253));
                    	              			
                    	            }
                    	            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ObjectTypeVariable7760); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_284, 254));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11241:4: (a4= STRING )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11242:5: a4= STRING
                    	            {
                    	            a4=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_ObjectTypeVariable7786); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a4 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TAG), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TAG), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TAG, proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 255));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 255));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 255));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 255));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 255));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 255));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 255));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11285:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
                    	            {
                    	            a5=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_ObjectTypeVariable7827); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_285, 256));
                    	              			
                    	            }
                    	            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ObjectTypeVariable7847); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 257));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11309:4: (a7_0= parse_org_kermeta_language_structure_Tag )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11310:5: a7_0= parse_org_kermeta_language_structure_Tag
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ObjectTypeVariable7873);
                    	            a7_0=parse_org_kermeta_language_structure_Tag();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a7_0 != null) {
                    	              						if (a7_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__OWNED_TAGS, a7_0);
                    	              							completedElement(a7_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a7_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 258));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 258));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 258));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 258));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 258));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 258));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 258));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11338:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
                    	            {
                    	            a8=(Token)match(input,46,FOLLOW_46_in_parse_org_kermeta_language_structure_ObjectTypeVariable7909); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_286, 259));
                    	              			
                    	            }
                    	            a9=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ObjectTypeVariable7929); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 260));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 260));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 260));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 260));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 260));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 260));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 260));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 260));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 260));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 260));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 260));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 260));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11373:4: (a10_0= parse_org_kermeta_language_structure_Type )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11374:5: a10_0= parse_org_kermeta_language_structure_Type
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ObjectTypeVariable7955);
                    	            a10_0=parse_org_kermeta_language_structure_Type();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a10_0 != null) {
                    	              						if (a10_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__CONTAINED_TYPE, a10_0);
                    	              							completedElement(a10_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a10_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 261));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 261));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 261));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 261));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 261));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 261));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 261));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11402:8: a11= 'typeContainer' a12= ':' (a13= STRING )
                    	            {
                    	            a11=(Token)match(input,42,FOLLOW_42_in_parse_org_kermeta_language_structure_ObjectTypeVariable7991); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_287, 262));
                    	              			
                    	            }
                    	            a12=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ObjectTypeVariable8011); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_288, 263));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11426:4: (a13= STRING )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11427:5: a13= STRING
                    	            {
                    	            a13=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_ObjectTypeVariable8037); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a13 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TYPE_CONTAINER), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.behavior.Raise proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TYPE_CONTAINER), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TYPE_CONTAINER), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 264));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 264));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 264));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 264));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 264));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 264));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 264));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 5 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11470:8: a14= 'name' a15= ':' (a16= STRING )
                    	            {
                    	            a14=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_structure_ObjectTypeVariable8078); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_289, 265));
                    	              			
                    	            }
                    	            a15=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ObjectTypeVariable8098); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_290, 266));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11494:4: (a16= STRING )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11495:5: a16= STRING
                    	            {
                    	            a16=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_ObjectTypeVariable8124); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a16 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__NAME), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
                    	              						}
                    	              						java.lang.String resolved = (java.lang.String)resolvedObject;
                    	              						if (resolved != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__NAME), resolved);
                    	              							completedElement(resolved);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 267));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 267));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 267));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 267));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 267));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 267));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 267));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 6 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11534:8: a17= 'supertype' a18= ':' (a19= STRING )
                    	            {
                    	            a17=(Token)match(input,59,FOLLOW_59_in_parse_org_kermeta_language_structure_ObjectTypeVariable8165); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_291, 268));
                    	              			
                    	            }
                    	            a18=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ObjectTypeVariable8185); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_292, 269));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11558:4: (a19= STRING )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11559:5: a19= STRING
                    	            {
                    	            a19=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_ObjectTypeVariable8211); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a19 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__SUPERTYPE), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariable, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableSupertypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__SUPERTYPE), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__SUPERTYPE), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 270));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 270));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 270));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 270));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 270));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 270));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 270));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop59;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 271));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 271));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 271));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 271));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 271));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 271));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 271));
                      	
                    }
                    a20=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_structure_ObjectTypeVariable8257); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 272));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 272));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11714:2: c0= parse_org_kermeta_language_structure_VirtualType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_ObjectTypeVariable8276);
                    c0=parse_org_kermeta_language_structure_VirtualType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 22, parse_org_kermeta_language_structure_ObjectTypeVariable_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ObjectTypeVariable"


    // $ANTLR start "parse_org_kermeta_language_structure_ModelTypeVariable"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11718:1: parse_org_kermeta_language_structure_ModelTypeVariable returns [org.kermeta.language.structure.ModelTypeVariable element = null] : a0= 'ModelTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'name' a15= ':' (a16= STRING ) | a17= 'supertype' a18= ':' (a19= STRING ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) ) )* a23= '}' ;
    public final org.kermeta.language.structure.ModelTypeVariable parse_org_kermeta_language_structure_ModelTypeVariable() throws RecognitionException {
        org.kermeta.language.structure.ModelTypeVariable element =  null;
        int parse_org_kermeta_language_structure_ModelTypeVariable_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        Token a21=null;
        Token a23=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;

        org.kermeta.language.structure.VirtualType a22_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11721:1: (a0= 'ModelTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'name' a15= ':' (a16= STRING ) | a17= 'supertype' a18= ':' (a19= STRING ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) ) )* a23= '}' )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11722:2: a0= 'ModelTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'name' a15= ':' (a16= STRING ) | a17= 'supertype' a18= ':' (a19= STRING ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) ) )* a23= '}'
            {
            a0=(Token)match(input,60,FOLLOW_60_in_parse_org_kermeta_language_structure_ModelTypeVariable8301); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_293, 273));
              	
            }
            a1=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_ModelTypeVariable8315); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 274));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11753:2: ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'name' a15= ':' (a16= STRING ) | a17= 'supertype' a18= ':' (a19= STRING ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) ) )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( ((LA62_0>=38 && LA62_0<=39)||(LA62_0>=42 && LA62_0<=43)||LA62_0==46||LA62_0==59||LA62_0==61) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11754:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'name' a15= ':' (a16= STRING ) | a17= 'supertype' a18= ':' (a19= STRING ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11754:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'name' a15= ':' (a16= STRING ) | a17= 'supertype' a18= ':' (a19= STRING ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) )
            	    int alt61=7;
            	    switch ( input.LA(1) ) {
            	    case 38:
            	        {
            	        alt61=1;
            	        }
            	        break;
            	    case 39:
            	        {
            	        alt61=2;
            	        }
            	        break;
            	    case 46:
            	        {
            	        alt61=3;
            	        }
            	        break;
            	    case 42:
            	        {
            	        alt61=4;
            	        }
            	        break;
            	    case 43:
            	        {
            	        alt61=5;
            	        }
            	        break;
            	    case 59:
            	        {
            	        alt61=6;
            	        }
            	        break;
            	    case 61:
            	        {
            	        alt61=7;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 61, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt61) {
            	        case 1 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11755:4: a2= 'tag' a3= ':' (a4= STRING )
            	            {
            	            a2=(Token)match(input,38,FOLLOW_38_in_parse_org_kermeta_language_structure_ModelTypeVariable8338); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_294, 275));
            	              			
            	            }
            	            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ModelTypeVariable8358); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_295, 276));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11779:4: (a4= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11780:5: a4= STRING
            	            {
            	            a4=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_ModelTypeVariable8384); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 277));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 277));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 277));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 277));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 277));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 277));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 277));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 277));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11824:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_ModelTypeVariable8425); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_296, 278));
            	              			
            	            }
            	            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ModelTypeVariable8445); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 279));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11848:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11849:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ModelTypeVariable8471);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 280));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 280));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 280));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 280));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 280));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 280));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 280));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 280));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11878:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,46,FOLLOW_46_in_parse_org_kermeta_language_structure_ModelTypeVariable8507); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_297, 281));
            	              			
            	            }
            	            a9=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ModelTypeVariable8527); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 282));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 282));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 282));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 282));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 282));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 282));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 282));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 282));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 282));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 282));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 282));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 282));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11913:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11914:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ModelTypeVariable8553);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 283));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 283));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 283));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 283));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 283));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 283));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 283));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 283));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11943:8: a11= 'typeContainer' a12= ':' (a13= STRING )
            	            {
            	            a11=(Token)match(input,42,FOLLOW_42_in_parse_org_kermeta_language_structure_ModelTypeVariable8589); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_298, 284));
            	              			
            	            }
            	            a12=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ModelTypeVariable8609); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_299, 285));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11967:4: (a13= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11968:5: a13= STRING
            	            {
            	            a13=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_ModelTypeVariable8635); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TYPE_CONTAINER), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.behavior.Raise proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TYPE_CONTAINER), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TYPE_CONTAINER), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 286));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 286));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 286));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 286));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 286));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 286));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 286));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 286));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12012:8: a14= 'name' a15= ':' (a16= STRING )
            	            {
            	            a14=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_structure_ModelTypeVariable8676); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_300, 287));
            	              			
            	            }
            	            a15=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ModelTypeVariable8696); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 288));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12036:4: (a16= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12037:5: a16= STRING
            	            {
            	            a16=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_ModelTypeVariable8722); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__NAME), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__NAME), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 289));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 289));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 289));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 289));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 289));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 289));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 289));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 289));
            	              			
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12077:8: a17= 'supertype' a18= ':' (a19= STRING )
            	            {
            	            a17=(Token)match(input,59,FOLLOW_59_in_parse_org_kermeta_language_structure_ModelTypeVariable8763); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 290));
            	              			
            	            }
            	            a18=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ModelTypeVariable8783); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 291));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12101:4: (a19= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12102:5: a19= STRING
            	            {
            	            a19=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_ModelTypeVariable8809); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a19 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__SUPERTYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariable, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableSupertypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__SUPERTYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__SUPERTYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 292));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 292));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 292));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 292));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 292));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 292));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 292));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 292));
            	              			
            	            }

            	            }
            	            break;
            	        case 7 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12146:8: a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType )
            	            {
            	            a20=(Token)match(input,61,FOLLOW_61_in_parse_org_kermeta_language_structure_ModelTypeVariable8850); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 293));
            	              			
            	            }
            	            a21=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ModelTypeVariable8870); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a21, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 294));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12170:4: (a22_0= parse_org_kermeta_language_structure_VirtualType )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12171:5: a22_0= parse_org_kermeta_language_structure_VirtualType
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_ModelTypeVariable8896);
            	            a22_0=parse_org_kermeta_language_structure_VirtualType();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a22_0 != null) {
            	              						if (a22_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__VIRTUAL_TYPE, a22_0);
            	              							completedElement(a22_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a22_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 295));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 295));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 295));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 295));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 295));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 295));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 295));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 295));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 296));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 296));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 296));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 296));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 296));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 296));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 296));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 296));
              	
            }
            a23=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_structure_ModelTypeVariable8937); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 297));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 297));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 23, parse_org_kermeta_language_structure_ModelTypeVariable_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ModelTypeVariable"


    // $ANTLR start "parse_org_kermeta_language_structure_VirtualType"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12313:1: parse_org_kermeta_language_structure_VirtualType returns [org.kermeta.language.structure.VirtualType element = null] : a0= 'VirtualType' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'name' a15= ':' (a16= STRING ) | a17= 'supertype' a18= ':' (a19= STRING ) | a20= 'classDefinition' a21= ':' (a22= STRING ) | a23= 'modelType' a24= ':' (a25= STRING ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) ) )* a29= '}' ;
    public final org.kermeta.language.structure.VirtualType parse_org_kermeta_language_structure_VirtualType() throws RecognitionException {
        org.kermeta.language.structure.VirtualType element =  null;
        int parse_org_kermeta_language_structure_VirtualType_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        Token a21=null;
        Token a22=null;
        Token a23=null;
        Token a24=null;
        Token a25=null;
        Token a26=null;
        Token a27=null;
        Token a29=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;

        org.kermeta.language.structure.TypeVariableBinding a28_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12316:1: (a0= 'VirtualType' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'name' a15= ':' (a16= STRING ) | a17= 'supertype' a18= ':' (a19= STRING ) | a20= 'classDefinition' a21= ':' (a22= STRING ) | a23= 'modelType' a24= ':' (a25= STRING ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) ) )* a29= '}' )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12317:2: a0= 'VirtualType' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'name' a15= ':' (a16= STRING ) | a17= 'supertype' a18= ':' (a19= STRING ) | a20= 'classDefinition' a21= ':' (a22= STRING ) | a23= 'modelType' a24= ':' (a25= STRING ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) ) )* a29= '}'
            {
            a0=(Token)match(input,62,FOLLOW_62_in_parse_org_kermeta_language_structure_VirtualType8966); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 298));
              	
            }
            a1=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_VirtualType8980); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 299));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 299));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 299));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 299));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 299));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 299));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 299));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 299));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 299));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 299));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12350:2: ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'name' a15= ':' (a16= STRING ) | a17= 'supertype' a18= ':' (a19= STRING ) | a20= 'classDefinition' a21= ':' (a22= STRING ) | a23= 'modelType' a24= ':' (a25= STRING ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) ) )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( ((LA64_0>=38 && LA64_0<=39)||(LA64_0>=42 && LA64_0<=43)||LA64_0==46||LA64_0==59||(LA64_0>=63 && LA64_0<=65)) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12351:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'name' a15= ':' (a16= STRING ) | a17= 'supertype' a18= ':' (a19= STRING ) | a20= 'classDefinition' a21= ':' (a22= STRING ) | a23= 'modelType' a24= ':' (a25= STRING ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12351:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'name' a15= ':' (a16= STRING ) | a17= 'supertype' a18= ':' (a19= STRING ) | a20= 'classDefinition' a21= ':' (a22= STRING ) | a23= 'modelType' a24= ':' (a25= STRING ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) )
            	    int alt63=9;
            	    switch ( input.LA(1) ) {
            	    case 38:
            	        {
            	        alt63=1;
            	        }
            	        break;
            	    case 39:
            	        {
            	        alt63=2;
            	        }
            	        break;
            	    case 46:
            	        {
            	        alt63=3;
            	        }
            	        break;
            	    case 42:
            	        {
            	        alt63=4;
            	        }
            	        break;
            	    case 43:
            	        {
            	        alt63=5;
            	        }
            	        break;
            	    case 59:
            	        {
            	        alt63=6;
            	        }
            	        break;
            	    case 63:
            	        {
            	        alt63=7;
            	        }
            	        break;
            	    case 64:
            	        {
            	        alt63=8;
            	        }
            	        break;
            	    case 65:
            	        {
            	        alt63=9;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 63, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt63) {
            	        case 1 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12352:4: a2= 'tag' a3= ':' (a4= STRING )
            	            {
            	            a2=(Token)match(input,38,FOLLOW_38_in_parse_org_kermeta_language_structure_VirtualType9003); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 300));
            	              			
            	            }
            	            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9023); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 301));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12376:4: (a4= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12377:5: a4= STRING
            	            {
            	            a4=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_VirtualType9049); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 302));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 302));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 302));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 302));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 302));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 302));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 302));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 302));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 302));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 302));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12423:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_VirtualType9090); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 303));
            	              			
            	            }
            	            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9110); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 304));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12447:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12448:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_VirtualType9136);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 305));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 305));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 305));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 305));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 305));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 305));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 305));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 305));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 305));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 305));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12479:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,46,FOLLOW_46_in_parse_org_kermeta_language_structure_VirtualType9172); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 306));
            	              			
            	            }
            	            a9=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9192); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 307));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 307));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 307));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 307));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 307));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 307));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 307));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 307));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 307));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 307));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 307));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 307));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12514:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12515:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_VirtualType9218);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 308));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 308));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 308));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 308));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 308));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 308));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 308));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 308));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 308));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 308));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12546:8: a11= 'typeContainer' a12= ':' (a13= STRING )
            	            {
            	            a11=(Token)match(input,42,FOLLOW_42_in_parse_org_kermeta_language_structure_VirtualType9254); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 309));
            	              			
            	            }
            	            a12=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9274); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 310));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12570:4: (a13= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12571:5: a13= STRING
            	            {
            	            a13=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_VirtualType9300); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_CONTAINER), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.behavior.Raise proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_CONTAINER), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_CONTAINER), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 311));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 311));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 311));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 311));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 311));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 311));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 311));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 311));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 311));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 311));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12617:8: a14= 'name' a15= ':' (a16= STRING )
            	            {
            	            a14=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_structure_VirtualType9341); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 312));
            	              			
            	            }
            	            a15=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9361); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 313));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12641:4: (a16= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12642:5: a16= STRING
            	            {
            	            a16=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_VirtualType9387); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__NAME), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__NAME), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 314));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 314));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 314));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 314));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 314));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 314));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 314));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 314));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 314));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 314));
            	              			
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12684:8: a17= 'supertype' a18= ':' (a19= STRING )
            	            {
            	            a17=(Token)match(input,59,FOLLOW_59_in_parse_org_kermeta_language_structure_VirtualType9428); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 315));
            	              			
            	            }
            	            a18=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9448); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 316));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12708:4: (a19= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12709:5: a19= STRING
            	            {
            	            a19=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_VirtualType9474); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a19 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__SUPERTYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariable, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableSupertypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__SUPERTYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__SUPERTYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 317));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 317));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 317));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 317));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 317));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 317));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 317));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 317));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 317));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 317));
            	              			
            	            }

            	            }
            	            break;
            	        case 7 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12755:8: a20= 'classDefinition' a21= ':' (a22= STRING )
            	            {
            	            a20=(Token)match(input,63,FOLLOW_63_in_parse_org_kermeta_language_structure_VirtualType9515); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 318));
            	              			
            	            }
            	            a21=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9535); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a21, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 319));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12779:4: (a22= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12780:5: a22= STRING
            	            {
            	            a22=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_VirtualType9561); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a22 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a22.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CLASS_DEFINITION), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a22).getLine(), ((org.antlr.runtime.CommonToken) a22).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a22).getStartIndex(), ((org.antlr.runtime.CommonToken) a22).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.ClassDefinition proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.VirtualType, org.kermeta.language.structure.ClassDefinition>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getVirtualTypeClassDefinitionReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CLASS_DEFINITION), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CLASS_DEFINITION), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a22, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a22, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 320));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 320));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 320));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 320));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 320));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 320));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 320));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 320));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 320));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 320));
            	              			
            	            }

            	            }
            	            break;
            	        case 8 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12826:8: a23= 'modelType' a24= ':' (a25= STRING )
            	            {
            	            a23=(Token)match(input,64,FOLLOW_64_in_parse_org_kermeta_language_structure_VirtualType9602); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 321));
            	              			
            	            }
            	            a24=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9622); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a24, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 322));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12850:4: (a25= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12851:5: a25= STRING
            	            {
            	            a25=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_VirtualType9648); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a25 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a25.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__MODEL_TYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a25).getLine(), ((org.antlr.runtime.CommonToken) a25).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a25).getStartIndex(), ((org.antlr.runtime.CommonToken) a25).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.ModelTypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.VirtualType, org.kermeta.language.structure.ModelTypeVariable>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getVirtualTypeModelTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__MODEL_TYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__MODEL_TYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a25, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a25, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 323));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 323));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 323));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 323));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 323));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 323));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 323));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 323));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 323));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 323));
            	              			
            	            }

            	            }
            	            break;
            	        case 9 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12897:8: a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding )
            	            {
            	            a26=(Token)match(input,65,FOLLOW_65_in_parse_org_kermeta_language_structure_VirtualType9689); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a26, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 324));
            	              			
            	            }
            	            a27=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9709); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a27, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_207, 325));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12921:4: (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12922:5: a28_0= parse_org_kermeta_language_structure_TypeVariableBinding
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeVariableBinding_in_parse_org_kermeta_language_structure_VirtualType9735);
            	            a28_0=parse_org_kermeta_language_structure_TypeVariableBinding();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a28_0 != null) {
            	              						if (a28_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_PARAM_BINDING, a28_0);
            	              							completedElement(a28_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a28_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 326));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 326));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 326));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 326));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 326));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 326));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 326));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 326));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 326));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 326));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 327));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 327));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 327));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 327));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 327));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 327));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 327));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 327));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 327));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 327));
              	
            }
            a29=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_structure_VirtualType9776); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a29, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 328));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 328));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 24, parse_org_kermeta_language_structure_VirtualType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_VirtualType"


    // $ANTLR start "parse_org_kermeta_language_structure_ProductType"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13068:1: parse_org_kermeta_language_structure_ProductType returns [org.kermeta.language.structure.ProductType element = null] : a0= 'ProductType' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'type' a15= ':' (a16= STRING ) ) )* a17= '}' ;
    public final org.kermeta.language.structure.ProductType parse_org_kermeta_language_structure_ProductType() throws RecognitionException {
        org.kermeta.language.structure.ProductType element =  null;
        int parse_org_kermeta_language_structure_ProductType_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13071:1: (a0= 'ProductType' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'type' a15= ':' (a16= STRING ) ) )* a17= '}' )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13072:2: a0= 'ProductType' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'type' a15= ':' (a16= STRING ) ) )* a17= '}'
            {
            a0=(Token)match(input,66,FOLLOW_66_in_parse_org_kermeta_language_structure_ProductType9805); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 329));
              	
            }
            a1=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_ProductType9819); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 330));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 330));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 330));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 330));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 330));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 330));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13101:2: ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'type' a15= ':' (a16= STRING ) ) )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( ((LA66_0>=38 && LA66_0<=39)||LA66_0==42||LA66_0==46||LA66_0==48) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13102:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'type' a15= ':' (a16= STRING ) )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13102:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'type' a15= ':' (a16= STRING ) )
            	    int alt65=5;
            	    switch ( input.LA(1) ) {
            	    case 38:
            	        {
            	        alt65=1;
            	        }
            	        break;
            	    case 39:
            	        {
            	        alt65=2;
            	        }
            	        break;
            	    case 46:
            	        {
            	        alt65=3;
            	        }
            	        break;
            	    case 42:
            	        {
            	        alt65=4;
            	        }
            	        break;
            	    case 48:
            	        {
            	        alt65=5;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 65, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt65) {
            	        case 1 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13103:4: a2= 'tag' a3= ':' (a4= STRING )
            	            {
            	            a2=(Token)match(input,38,FOLLOW_38_in_parse_org_kermeta_language_structure_ProductType9842); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 331));
            	              			
            	            }
            	            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ProductType9862); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 332));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13127:4: (a4= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13128:5: a4= STRING
            	            {
            	            a4=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_ProductType9888); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 333));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 333));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 333));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 333));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 333));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 333));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13170:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_ProductType9929); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_324, 334));
            	              			
            	            }
            	            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ProductType9949); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 335));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13194:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13195:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ProductType9975);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 336));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 336));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 336));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 336));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 336));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 336));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13222:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,46,FOLLOW_46_in_parse_org_kermeta_language_structure_ProductType10011); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_325, 337));
            	              			
            	            }
            	            a9=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ProductType10031); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 338));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 338));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 338));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 338));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 338));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 338));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 338));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 338));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 338));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 338));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 338));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 338));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13257:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13258:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ProductType10057);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 339));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 339));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 339));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 339));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 339));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 339));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13285:8: a11= 'typeContainer' a12= ':' (a13= STRING )
            	            {
            	            a11=(Token)match(input,42,FOLLOW_42_in_parse_org_kermeta_language_structure_ProductType10093); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 340));
            	              			
            	            }
            	            a12=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ProductType10113); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 341));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13309:4: (a13= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13310:5: a13= STRING
            	            {
            	            a13=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_ProductType10139); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE_CONTAINER), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.behavior.Raise proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE_CONTAINER), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE_CONTAINER), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 342));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 342));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 342));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 342));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 342));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 342));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13352:8: a14= 'type' a15= ':' (a16= STRING )
            	            {
            	            a14=(Token)match(input,48,FOLLOW_48_in_parse_org_kermeta_language_structure_ProductType10180); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 343));
            	              			
            	            }
            	            a15=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ProductType10200); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 344));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13376:4: (a16= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13377:5: a16= STRING
            	            {
            	            a16=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_ProductType10226); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ProductType, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getProductTypeTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 345));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 345));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 345));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 345));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 345));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 345));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 346));
              	
            }
            a17=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_structure_ProductType10272); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 347));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 25, parse_org_kermeta_language_structure_ProductType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ProductType"


    // $ANTLR start "parse_org_kermeta_language_structure_FunctionType"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13530:1: parse_org_kermeta_language_structure_FunctionType returns [org.kermeta.language.structure.FunctionType element = null] : a0= 'FunctionType' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'left' a15= ':' (a16= STRING ) | a17= 'right' a18= ':' (a19= STRING ) ) )* a20= '}' ;
    public final org.kermeta.language.structure.FunctionType parse_org_kermeta_language_structure_FunctionType() throws RecognitionException {
        org.kermeta.language.structure.FunctionType element =  null;
        int parse_org_kermeta_language_structure_FunctionType_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13533:1: (a0= 'FunctionType' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'left' a15= ':' (a16= STRING ) | a17= 'right' a18= ':' (a19= STRING ) ) )* a20= '}' )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13534:2: a0= 'FunctionType' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'left' a15= ':' (a16= STRING ) | a17= 'right' a18= ':' (a19= STRING ) ) )* a20= '}'
            {
            a0=(Token)match(input,67,FOLLOW_67_in_parse_org_kermeta_language_structure_FunctionType10301); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 348));
              	
            }
            a1=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_FunctionType10315); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 349));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 349));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 349));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 349));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 349));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 349));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 349));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13564:2: ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'left' a15= ':' (a16= STRING ) | a17= 'right' a18= ':' (a19= STRING ) ) )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( ((LA68_0>=38 && LA68_0<=39)||LA68_0==42||LA68_0==46||(LA68_0>=68 && LA68_0<=69)) ) {
                    alt68=1;
                }


                switch (alt68) {
            	case 1 :
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13565:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'left' a15= ':' (a16= STRING ) | a17= 'right' a18= ':' (a19= STRING ) )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13565:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= STRING ) | a14= 'left' a15= ':' (a16= STRING ) | a17= 'right' a18= ':' (a19= STRING ) )
            	    int alt67=6;
            	    switch ( input.LA(1) ) {
            	    case 38:
            	        {
            	        alt67=1;
            	        }
            	        break;
            	    case 39:
            	        {
            	        alt67=2;
            	        }
            	        break;
            	    case 46:
            	        {
            	        alt67=3;
            	        }
            	        break;
            	    case 42:
            	        {
            	        alt67=4;
            	        }
            	        break;
            	    case 68:
            	        {
            	        alt67=5;
            	        }
            	        break;
            	    case 69:
            	        {
            	        alt67=6;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 67, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt67) {
            	        case 1 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13566:4: a2= 'tag' a3= ':' (a4= STRING )
            	            {
            	            a2=(Token)match(input,38,FOLLOW_38_in_parse_org_kermeta_language_structure_FunctionType10338); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 350));
            	              			
            	            }
            	            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_FunctionType10358); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 351));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13590:4: (a4= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13591:5: a4= STRING
            	            {
            	            a4=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_FunctionType10384); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 352));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13634:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_FunctionType10425); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 353));
            	              			
            	            }
            	            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_FunctionType10445); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 354));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13658:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13659:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_FunctionType10471);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 355));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13687:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,46,FOLLOW_46_in_parse_org_kermeta_language_structure_FunctionType10507); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 356));
            	              			
            	            }
            	            a9=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_FunctionType10527); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 357));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13722:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13723:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_FunctionType10553);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 358));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13751:8: a11= 'typeContainer' a12= ':' (a13= STRING )
            	            {
            	            a11=(Token)match(input,42,FOLLOW_42_in_parse_org_kermeta_language_structure_FunctionType10589); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 359));
            	              			
            	            }
            	            a12=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_FunctionType10609); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 360));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13775:4: (a13= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13776:5: a13= STRING
            	            {
            	            a13=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_FunctionType10635); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TYPE_CONTAINER), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.behavior.Raise proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TYPE_CONTAINER), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TYPE_CONTAINER), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 361));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 361));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 361));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 361));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 361));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 361));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 361));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13819:8: a14= 'left' a15= ':' (a16= STRING )
            	            {
            	            a14=(Token)match(input,68,FOLLOW_68_in_parse_org_kermeta_language_structure_FunctionType10676); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 362));
            	              			
            	            }
            	            a15=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_FunctionType10696); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 363));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13843:4: (a16= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13844:5: a16= STRING
            	            {
            	            a16=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_FunctionType10722); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__LEFT), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.FunctionType, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getFunctionTypeLeftReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__LEFT), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__LEFT), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 364));
            	              			
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13887:8: a17= 'right' a18= ':' (a19= STRING )
            	            {
            	            a17=(Token)match(input,69,FOLLOW_69_in_parse_org_kermeta_language_structure_FunctionType10763); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 365));
            	              			
            	            }
            	            a18=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_FunctionType10783); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_340, 366));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13911:4: (a19= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13912:5: a19= STRING
            	            {
            	            a19=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_FunctionType10809); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a19 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__RIGHT), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.FunctionType, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getFunctionTypeRightReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__RIGHT), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__RIGHT), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 367));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 368));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 368));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 368));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 368));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 368));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 368));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 368));
              	
            }
            a20=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_structure_FunctionType10855); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 369));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 26, parse_org_kermeta_language_structure_FunctionType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_FunctionType"


    // $ANTLR start "parse_org_kermeta_language_structure_VoidType"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14067:1: parse_org_kermeta_language_structure_VoidType returns [org.kermeta.language.structure.VoidType element = null] : a0= 'VoidType' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'typeContainer' a9= ':' (a10= STRING ) ) )* a11= '}' ;
    public final org.kermeta.language.structure.VoidType parse_org_kermeta_language_structure_VoidType() throws RecognitionException {
        org.kermeta.language.structure.VoidType element =  null;
        int parse_org_kermeta_language_structure_VoidType_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        org.kermeta.language.structure.Tag a7_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14070:1: (a0= 'VoidType' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'typeContainer' a9= ':' (a10= STRING ) ) )* a11= '}' )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14071:2: a0= 'VoidType' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'typeContainer' a9= ':' (a10= STRING ) ) )* a11= '}'
            {
            a0=(Token)match(input,70,FOLLOW_70_in_parse_org_kermeta_language_structure_VoidType10884); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_341, 370));
              	
            }
            a1=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_VoidType10898); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_273, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_274, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_275, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_276, 371));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14098:2: ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'typeContainer' a9= ':' (a10= STRING ) ) )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( ((LA70_0>=38 && LA70_0<=39)||LA70_0==42) ) {
                    alt70=1;
                }


                switch (alt70) {
            	case 1 :
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14099:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'typeContainer' a9= ':' (a10= STRING ) )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14099:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'typeContainer' a9= ':' (a10= STRING ) )
            	    int alt69=3;
            	    switch ( input.LA(1) ) {
            	    case 38:
            	        {
            	        alt69=1;
            	        }
            	        break;
            	    case 39:
            	        {
            	        alt69=2;
            	        }
            	        break;
            	    case 42:
            	        {
            	        alt69=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 69, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt69) {
            	        case 1 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14100:4: a2= 'tag' a3= ':' (a4= STRING )
            	            {
            	            a2=(Token)match(input,38,FOLLOW_38_in_parse_org_kermeta_language_structure_VoidType10921); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_342, 372));
            	              			
            	            }
            	            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_VoidType10941); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_343, 373));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14124:4: (a4= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14125:5: a4= STRING
            	            {
            	            a4=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_VoidType10967); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VOID_TYPE__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VOID_TYPE__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VOID_TYPE__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_273, 374));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_274, 374));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_275, 374));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_276, 374));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14165:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_VoidType11008); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_344, 375));
            	              			
            	            }
            	            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_VoidType11028); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 376));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14189:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14190:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_VoidType11054);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VOID_TYPE__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_273, 377));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_274, 377));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_275, 377));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_276, 377));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14215:8: a8= 'typeContainer' a9= ':' (a10= STRING )
            	            {
            	            a8=(Token)match(input,42,FOLLOW_42_in_parse_org_kermeta_language_structure_VoidType11090); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_345, 378));
            	              			
            	            }
            	            a9=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_VoidType11110); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 379));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14239:4: (a10= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14240:5: a10= STRING
            	            {
            	            a10=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_structure_VoidType11136); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
            	              					}
            	              					if (a10 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a10.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VOID_TYPE__TYPE_CONTAINER), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a10).getLine(), ((org.antlr.runtime.CommonToken) a10).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a10).getStartIndex(), ((org.antlr.runtime.CommonToken) a10).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.behavior.Raise proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VOID_TYPE__TYPE_CONTAINER), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VOID_TYPE__TYPE_CONTAINER), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_273, 380));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_274, 380));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_275, 380));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_276, 380));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_273, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_274, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_275, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_276, 381));
              	
            }
            a11=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_structure_VoidType11182); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 382));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 27, parse_org_kermeta_language_structure_VoidType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_VoidType"


    // $ANTLR start "parse_org_kermeta_language_behavior_Block"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14389:1: parse_org_kermeta_language_behavior_Block returns [org.kermeta.language.behavior.Block element = null] : a0= 'do' ( ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_Block ) ) )* ( ( (a12_0= parse_org_kermeta_language_behavior_Rescue ) ) )* a13= 'end' ;
    public final org.kermeta.language.behavior.Block parse_org_kermeta_language_behavior_Block() throws RecognitionException {
        org.kermeta.language.behavior.Block element =  null;
        int parse_org_kermeta_language_behavior_Block_StartIndex = input.index();
        Token a0=null;
        Token a13=null;
        org.kermeta.language.behavior.VariableDecl a1_0 = null;

        org.kermeta.language.behavior.Loop a2_0 = null;

        org.kermeta.language.behavior.Conditional a3_0 = null;

        org.kermeta.language.behavior.Assignment a4_0 = null;

        org.kermeta.language.behavior.CallFeature a5_0 = null;

        org.kermeta.language.behavior.CallVariable a6_0 = null;

        org.kermeta.language.behavior.CallSuperOperation a7_0 = null;

        org.kermeta.language.behavior.CallResult a8_0 = null;

        org.kermeta.language.behavior.JavaStaticCall a9_0 = null;

        org.kermeta.language.behavior.EmptyExpression a10_0 = null;

        org.kermeta.language.behavior.Block a11_0 = null;

        org.kermeta.language.behavior.Rescue a12_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 28) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14392:1: (a0= 'do' ( ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_Block ) ) )* ( ( (a12_0= parse_org_kermeta_language_behavior_Rescue ) ) )* a13= 'end' )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14393:2: a0= 'do' ( ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_Block ) ) )* ( ( (a12_0= parse_org_kermeta_language_behavior_Rescue ) ) )* a13= 'end'
            {
            a0=(Token)match(input,71,FOLLOW_71_in_parse_org_kermeta_language_behavior_Block11211); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 383));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14421:2: ( ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_Block ) ) )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( ((LA72_0>=STRING && LA72_0<=BOOLEAN)||LA72_0==32||LA72_0==71||LA72_0==75||LA72_0==78||LA72_0==81||(LA72_0>=83 && LA72_0<=84)||LA72_0==87||(LA72_0>=97 && LA72_0<=98)) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14422:3: ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_Block ) )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14422:3: ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_Block ) )
            	    int alt71=11;
            	    alt71 = dfa71.predict(input);
            	    switch (alt71) {
            	        case 1 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14423:4: (a1_0= parse_org_kermeta_language_behavior_VariableDecl )
            	            {
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14423:4: (a1_0= parse_org_kermeta_language_behavior_VariableDecl )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14424:5: a1_0= parse_org_kermeta_language_behavior_VariableDecl
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Block11240);
            	            a1_0=parse_org_kermeta_language_behavior_VariableDecl();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a1_0 != null) {
            	              						if (a1_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a1_0);
            	              							completedElement(a1_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a1_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 384));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 384));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 384));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 384));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 384));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 384));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 384));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 384));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 384));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 384));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 384));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 384));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 384));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 384));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 384));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 384));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 384));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14462:8: (a2_0= parse_org_kermeta_language_behavior_Loop )
            	            {
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14462:8: (a2_0= parse_org_kermeta_language_behavior_Loop )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14463:5: a2_0= parse_org_kermeta_language_behavior_Loop
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_behavior_Block11282);
            	            a2_0=parse_org_kermeta_language_behavior_Loop();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a2_0 != null) {
            	              						if (a2_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a2_0);
            	              							completedElement(a2_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a2_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 385));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 385));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 385));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 385));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 385));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 385));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 385));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 385));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 385));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 385));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 385));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 385));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 385));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 385));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 385));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 385));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 385));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14501:8: (a3_0= parse_org_kermeta_language_behavior_Conditional )
            	            {
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14501:8: (a3_0= parse_org_kermeta_language_behavior_Conditional )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14502:5: a3_0= parse_org_kermeta_language_behavior_Conditional
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Block11324);
            	            a3_0=parse_org_kermeta_language_behavior_Conditional();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a3_0 != null) {
            	              						if (a3_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a3_0);
            	              							completedElement(a3_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a3_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 386));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 386));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 386));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 386));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 386));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 386));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 386));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 386));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 386));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 386));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 386));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 386));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 386));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 386));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 386));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 386));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 386));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14540:8: (a4_0= parse_org_kermeta_language_behavior_Assignment )
            	            {
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14540:8: (a4_0= parse_org_kermeta_language_behavior_Assignment )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14541:5: a4_0= parse_org_kermeta_language_behavior_Assignment
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Block11366);
            	            a4_0=parse_org_kermeta_language_behavior_Assignment();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a4_0 != null) {
            	              						if (a4_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a4_0);
            	              							completedElement(a4_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a4_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 387));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 387));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 387));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 387));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 387));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 387));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 387));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 387));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 387));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 387));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 387));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 387));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 387));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 387));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 387));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 387));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 387));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14579:8: (a5_0= parse_org_kermeta_language_behavior_CallFeature )
            	            {
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14579:8: (a5_0= parse_org_kermeta_language_behavior_CallFeature )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14580:5: a5_0= parse_org_kermeta_language_behavior_CallFeature
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Block11408);
            	            a5_0=parse_org_kermeta_language_behavior_CallFeature();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a5_0 != null) {
            	              						if (a5_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a5_0);
            	              							completedElement(a5_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a5_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 388));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 388));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 388));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 388));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 388));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 388));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 388));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 388));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 388));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 388));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 388));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 388));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 388));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 388));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 388));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 388));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 388));
            	              			
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14618:8: (a6_0= parse_org_kermeta_language_behavior_CallVariable )
            	            {
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14618:8: (a6_0= parse_org_kermeta_language_behavior_CallVariable )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14619:5: a6_0= parse_org_kermeta_language_behavior_CallVariable
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Block11450);
            	            a6_0=parse_org_kermeta_language_behavior_CallVariable();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a6_0 != null) {
            	              						if (a6_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a6_0);
            	              							completedElement(a6_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a6_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 389));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 389));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 389));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 389));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 389));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 389));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 389));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 389));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 389));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 389));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 389));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 389));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 389));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 389));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 389));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 389));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 389));
            	              			
            	            }

            	            }
            	            break;
            	        case 7 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14657:8: (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation )
            	            {
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14657:8: (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14658:5: a7_0= parse_org_kermeta_language_behavior_CallSuperOperation
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Block11492);
            	            a7_0=parse_org_kermeta_language_behavior_CallSuperOperation();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 390));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 390));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 390));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 390));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 390));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 390));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 390));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 390));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 390));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 390));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 390));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 390));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 390));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 390));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 390));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 390));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 390));
            	              			
            	            }

            	            }
            	            break;
            	        case 8 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14696:8: (a8_0= parse_org_kermeta_language_behavior_CallResult )
            	            {
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14696:8: (a8_0= parse_org_kermeta_language_behavior_CallResult )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14697:5: a8_0= parse_org_kermeta_language_behavior_CallResult
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Block11534);
            	            a8_0=parse_org_kermeta_language_behavior_CallResult();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a8_0 != null) {
            	              						if (a8_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a8_0);
            	              							completedElement(a8_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a8_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 391));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 391));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 391));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 391));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 391));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 391));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 391));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 391));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 391));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 391));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 391));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 391));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 391));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 391));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 391));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 391));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 391));
            	              			
            	            }

            	            }
            	            break;
            	        case 9 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14735:8: (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall )
            	            {
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14735:8: (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14736:5: a9_0= parse_org_kermeta_language_behavior_JavaStaticCall
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_Block11576);
            	            a9_0=parse_org_kermeta_language_behavior_JavaStaticCall();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a9_0 != null) {
            	              						if (a9_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a9_0);
            	              							completedElement(a9_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a9_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 392));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 392));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 392));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 392));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 392));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 392));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 392));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 392));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 392));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 392));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 392));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 392));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 392));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 392));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 392));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 392));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 392));
            	              			
            	            }

            	            }
            	            break;
            	        case 10 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14774:8: (a10_0= parse_org_kermeta_language_behavior_EmptyExpression )
            	            {
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14774:8: (a10_0= parse_org_kermeta_language_behavior_EmptyExpression )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14775:5: a10_0= parse_org_kermeta_language_behavior_EmptyExpression
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_behavior_Block11618);
            	            a10_0=parse_org_kermeta_language_behavior_EmptyExpression();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 393));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 393));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 393));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 393));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 393));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 393));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 393));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 393));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 393));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 393));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 393));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 393));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 393));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 393));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 393));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 393));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 393));
            	              			
            	            }

            	            }
            	            break;
            	        case 11 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14813:8: (a11_0= parse_org_kermeta_language_behavior_Block )
            	            {
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14813:8: (a11_0= parse_org_kermeta_language_behavior_Block )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14814:5: a11_0= parse_org_kermeta_language_behavior_Block
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Block11660);
            	            a11_0=parse_org_kermeta_language_behavior_Block();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a11_0 != null) {
            	              						if (a11_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a11_0);
            	              							completedElement(a11_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a11_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 394));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 394));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 394));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 394));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 394));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 394));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 394));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 394));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 394));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 394));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 394));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 394));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 394));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 394));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 394));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 394));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 394));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 395));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 395));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 395));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 395));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 395));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 395));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 395));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 395));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 395));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 395));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 395));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 395));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 395));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 395));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 395));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 395));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 395));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14874:2: ( ( (a12_0= parse_org_kermeta_language_behavior_Rescue ) ) )*
            loop73:
            do {
                int alt73=2;
                int LA73_0 = input.LA(1);

                if ( (LA73_0==73) ) {
                    alt73=1;
                }


                switch (alt73) {
            	case 1 :
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14875:3: ( (a12_0= parse_org_kermeta_language_behavior_Rescue ) )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14875:3: ( (a12_0= parse_org_kermeta_language_behavior_Rescue ) )
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14876:4: (a12_0= parse_org_kermeta_language_behavior_Rescue )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14876:4: (a12_0= parse_org_kermeta_language_behavior_Rescue )
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14877:5: a12_0= parse_org_kermeta_language_behavior_Rescue
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Rescue_in_parse_org_kermeta_language_behavior_Block11716);
            	    a12_0=parse_org_kermeta_language_behavior_Rescue();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	      					}
            	      					if (a12_0 != null) {
            	      						if (a12_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__RESCUE_BLOCK, a12_0);
            	      							completedElement(a12_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a12_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 396));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 396));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 397));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 397));
              	
            }
            a13=(Token)match(input,72,FOLLOW_72_in_parse_org_kermeta_language_behavior_Block11757); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 398));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 398));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 28, parse_org_kermeta_language_behavior_Block_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Block"


    // $ANTLR start "parse_org_kermeta_language_behavior_Rescue"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14975:1: parse_org_kermeta_language_behavior_Rescue returns [org.kermeta.language.behavior.Rescue element = null] : a0= 'rescue' ( (a1= '(' (a2= STRING ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' ) )? ( ( (a6_0= parse_org_kermeta_language_behavior_Expression ) ) )? ;
    public final org.kermeta.language.behavior.Rescue parse_org_kermeta_language_behavior_Rescue() throws RecognitionException {
        org.kermeta.language.behavior.Rescue element =  null;
        int parse_org_kermeta_language_behavior_Rescue_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a5=null;
        org.kermeta.language.behavior.TypeReference a4_0 = null;

        org.kermeta.language.behavior.Expression a6_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14978:1: (a0= 'rescue' ( (a1= '(' (a2= STRING ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' ) )? ( ( (a6_0= parse_org_kermeta_language_behavior_Expression ) ) )? )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14979:2: a0= 'rescue' ( (a1= '(' (a2= STRING ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' ) )? ( ( (a6_0= parse_org_kermeta_language_behavior_Expression ) ) )?
            {
            a0=(Token)match(input,73,FOLLOW_73_in_parse_org_kermeta_language_behavior_Rescue11786); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 399));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15013:2: ( (a1= '(' (a2= STRING ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' ) )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==32) ) {
                int LA74_1 = input.LA(2);

                if ( (LA74_1==STRING) ) {
                    int LA74_3 = input.LA(3);

                    if ( (LA74_3==29) ) {
                        alt74=1;
                    }
                }
            }
            switch (alt74) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15014:3: (a1= '(' (a2= STRING ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15014:3: (a1= '(' (a2= STRING ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15015:4: a1= '(' (a2= STRING ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')'
                    {
                    a1=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_behavior_Rescue11809); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 400));
                      			
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15027:4: (a2= STRING )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15028:5: a2= STRING
                    {
                    a2=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_Rescue11835); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      					}
                      					if (a2 != null) {
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                      						tokenResolver.setOptions(getOptions());
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      						tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RESCUE__EXCEPTION_NAME), result);
                      						java.lang.Object resolvedObject = result.getResolvedToken();
                      						if (resolvedObject == null) {
                      							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
                      						}
                      						java.lang.String resolved = (java.lang.String)resolvedObject;
                      						if (resolved != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RESCUE__EXCEPTION_NAME), resolved);
                      							completedElement(resolved);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
                      					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 401));
                      			
                    }
                    a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_Rescue11868); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 402));
                      			
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15072:4: (a4_0= parse_org_kermeta_language_behavior_TypeReference )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15073:5: a4_0= parse_org_kermeta_language_behavior_TypeReference
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_Rescue11894);
                    a4_0=parse_org_kermeta_language_behavior_TypeReference();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      					}
                      					if (a4_0 != null) {
                      						if (a4_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RESCUE__EXCEPTION_TYPE), a4_0);
                      							completedElement(a4_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a4_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_359, 403));
                      			
                    }
                    a5=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_Rescue11922); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 404));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 404));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 404));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 404));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 404));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 404));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 404));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 404));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 404));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 404));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 404));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 404));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 404));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 404));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 404));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 404));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 404));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 404));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 404));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 404));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 404));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 404));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 405));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15155:2: ( ( (a6_0= parse_org_kermeta_language_behavior_Expression ) ) )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( ((LA75_0>=STRING && LA75_0<=BOOLEAN)||LA75_0==32||LA75_0==71||(LA75_0>=74 && LA75_0<=75)||LA75_0==78||LA75_0==81||(LA75_0>=83 && LA75_0<=84)||LA75_0==87||LA75_0==93||(LA75_0>=97 && LA75_0<=98)||LA75_0==101||LA75_0==104) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15156:3: ( (a6_0= parse_org_kermeta_language_behavior_Expression ) )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15156:3: ( (a6_0= parse_org_kermeta_language_behavior_Expression ) )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15157:4: (a6_0= parse_org_kermeta_language_behavior_Expression )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15157:4: (a6_0= parse_org_kermeta_language_behavior_Expression )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15158:5: a6_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Rescue11970);
                    a6_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      					}
                      					if (a6_0 != null) {
                      						if (a6_0 != null) {
                      							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.RESCUE__BODY, a6_0);
                      							completedElement(a6_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a6_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 406));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 406));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 407));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 407));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 29, parse_org_kermeta_language_behavior_Rescue_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Rescue"


    // $ANTLR start "parse_org_kermeta_language_behavior_TypeReference"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15190:1: parse_org_kermeta_language_behavior_TypeReference returns [org.kermeta.language.behavior.TypeReference element = null] : (a0= STRING ) ;
    public final org.kermeta.language.behavior.TypeReference parse_org_kermeta_language_behavior_TypeReference() throws RecognitionException {
        org.kermeta.language.behavior.TypeReference element =  null;
        int parse_org_kermeta_language_behavior_TypeReference_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15193:1: ( (a0= STRING ) )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15194:2: (a0= STRING )
            {
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15194:2: (a0= STRING )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15195:3: a0= STRING
            {
            a0=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_TypeReference12030); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createTypeReference();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_REFERENCE__TYPE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				String resolved = (String) resolvedObject;
              				org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
              				collectHiddenTokens(element);
              				registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_REFERENCE__TYPE), resolved, proxy);
              				if (proxy != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_REFERENCE__TYPE), proxy);
              					completedElement(proxy);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, proxy);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_359, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_360, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_277, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_278, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_279, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_280, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_281, 408));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 30, parse_org_kermeta_language_behavior_TypeReference_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_TypeReference"


    // $ANTLR start "parse_org_kermeta_language_behavior_Raise"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15291:1: parse_org_kermeta_language_behavior_Raise returns [org.kermeta.language.behavior.Raise element = null] : a0= 'raise' (a1_0= parse_org_kermeta_language_behavior_Expression ) ;
    public final org.kermeta.language.behavior.Raise parse_org_kermeta_language_behavior_Raise() throws RecognitionException {
        org.kermeta.language.behavior.Raise element =  null;
        int parse_org_kermeta_language_behavior_Raise_StartIndex = input.index();
        Token a0=null;
        org.kermeta.language.behavior.Expression a1_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15294:1: (a0= 'raise' (a1_0= parse_org_kermeta_language_behavior_Expression ) )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15295:2: a0= 'raise' (a1_0= parse_org_kermeta_language_behavior_Expression )
            {
            a0=(Token)match(input,74,FOLLOW_74_in_parse_org_kermeta_language_behavior_Raise12066); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 409));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15326:2: (a1_0= parse_org_kermeta_language_behavior_Expression )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15327:3: a1_0= parse_org_kermeta_language_behavior_Expression
            {
            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Raise12084);
            a1_0=parse_org_kermeta_language_behavior_Expression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
              			}
              			if (a1_0 != null) {
              				if (a1_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RAISE__EXPRESSION), a1_0);
              					completedElement(a1_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a1_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 410));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 31, parse_org_kermeta_language_behavior_Raise_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Raise"


    // $ANTLR start "parse_org_kermeta_language_behavior_BooleanLiteral"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15401:1: parse_org_kermeta_language_behavior_BooleanLiteral returns [org.kermeta.language.behavior.BooleanLiteral element = null] : (a0= BOOLEAN ) ;
    public final org.kermeta.language.behavior.BooleanLiteral parse_org_kermeta_language_behavior_BooleanLiteral() throws RecognitionException {
        org.kermeta.language.behavior.BooleanLiteral element =  null;
        int parse_org_kermeta_language_behavior_BooleanLiteral_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15404:1: ( (a0= BOOLEAN ) )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15405:2: (a0= BOOLEAN )
            {
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15405:2: (a0= BOOLEAN )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15406:3: a0= BOOLEAN
            {
            a0=(Token)match(input,BOOLEAN,FOLLOW_BOOLEAN_in_parse_org_kermeta_language_behavior_BooleanLiteral12121); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBooleanLiteral();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("BOOLEAN");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.BOOLEAN_LITERAL__VALUE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.BOOLEAN_LITERAL__VALUE), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 411));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 411));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 32, parse_org_kermeta_language_behavior_BooleanLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_BooleanLiteral"


    // $ANTLR start "parse_org_kermeta_language_behavior_IntegerLiteral"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15491:1: parse_org_kermeta_language_behavior_IntegerLiteral returns [org.kermeta.language.behavior.IntegerLiteral element = null] : (a0= INTEGER ) ;
    public final org.kermeta.language.behavior.IntegerLiteral parse_org_kermeta_language_behavior_IntegerLiteral() throws RecognitionException {
        org.kermeta.language.behavior.IntegerLiteral element =  null;
        int parse_org_kermeta_language_behavior_IntegerLiteral_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15494:1: ( (a0= INTEGER ) )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15495:2: (a0= INTEGER )
            {
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15495:2: (a0= INTEGER )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15496:3: a0= INTEGER
            {
            a0=(Token)match(input,INTEGER,FOLLOW_INTEGER_in_parse_org_kermeta_language_behavior_IntegerLiteral12161); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createIntegerLiteral();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.INTEGER_LITERAL__VALUE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.Integer resolved = (java.lang.Integer)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.INTEGER_LITERAL__VALUE), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 412));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 412));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 33, parse_org_kermeta_language_behavior_IntegerLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_IntegerLiteral"


    // $ANTLR start "parse_org_kermeta_language_behavior_StringLiteral"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15581:1: parse_org_kermeta_language_behavior_StringLiteral returns [org.kermeta.language.behavior.StringLiteral element = null] : (a0= STRING_LITERAL ) ;
    public final org.kermeta.language.behavior.StringLiteral parse_org_kermeta_language_behavior_StringLiteral() throws RecognitionException {
        org.kermeta.language.behavior.StringLiteral element =  null;
        int parse_org_kermeta_language_behavior_StringLiteral_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15584:1: ( (a0= STRING_LITERAL ) )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15585:2: (a0= STRING_LITERAL )
            {
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15585:2: (a0= STRING_LITERAL )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15586:3: a0= STRING_LITERAL
            {
            a0=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_parse_org_kermeta_language_behavior_StringLiteral12201); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createStringLiteral();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING_LITERAL");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.STRING_LITERAL__VALUE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.STRING_LITERAL__VALUE), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 413));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 34, parse_org_kermeta_language_behavior_StringLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_StringLiteral"


    // $ANTLR start "parse_org_kermeta_language_behavior_Conditional"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15671:1: parse_org_kermeta_language_behavior_Conditional returns [org.kermeta.language.behavior.Conditional element = null] : a0= 'if' ( (a1_0= parse_org_kermeta_language_behavior_CallFeature ) | (a2_0= parse_org_kermeta_language_behavior_Conditional ) ) a3= 'then' ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a5_0= parse_org_kermeta_language_behavior_Block ) | (a6_0= parse_org_kermeta_language_behavior_Assignment ) | (a7_0= parse_org_kermeta_language_behavior_CallFeature ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallVariable ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_VariableDecl ) ) ( (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) ) )? a23= 'end' ;
    public final org.kermeta.language.behavior.Conditional parse_org_kermeta_language_behavior_Conditional() throws RecognitionException {
        org.kermeta.language.behavior.Conditional element =  null;
        int parse_org_kermeta_language_behavior_Conditional_StartIndex = input.index();
        Token a0=null;
        Token a3=null;
        Token a13=null;
        Token a23=null;
        org.kermeta.language.behavior.CallFeature a1_0 = null;

        org.kermeta.language.behavior.Conditional a2_0 = null;

        org.kermeta.language.behavior.BooleanLiteral a4_0 = null;

        org.kermeta.language.behavior.Block a5_0 = null;

        org.kermeta.language.behavior.Assignment a6_0 = null;

        org.kermeta.language.behavior.CallFeature a7_0 = null;

        org.kermeta.language.behavior.CallSuperOperation a8_0 = null;

        org.kermeta.language.behavior.CallResult a9_0 = null;

        org.kermeta.language.behavior.CallVariable a10_0 = null;

        org.kermeta.language.behavior.CallValue a11_0 = null;

        org.kermeta.language.behavior.VariableDecl a12_0 = null;

        org.kermeta.language.behavior.BooleanLiteral a14_0 = null;

        org.kermeta.language.behavior.Block a15_0 = null;

        org.kermeta.language.behavior.Assignment a16_0 = null;

        org.kermeta.language.behavior.CallFeature a17_0 = null;

        org.kermeta.language.behavior.CallSuperOperation a18_0 = null;

        org.kermeta.language.behavior.CallResult a19_0 = null;

        org.kermeta.language.behavior.VariableDecl a20_0 = null;

        org.kermeta.language.behavior.CallVariable a21_0 = null;

        org.kermeta.language.behavior.CallValue a22_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15674:1: (a0= 'if' ( (a1_0= parse_org_kermeta_language_behavior_CallFeature ) | (a2_0= parse_org_kermeta_language_behavior_Conditional ) ) a3= 'then' ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a5_0= parse_org_kermeta_language_behavior_Block ) | (a6_0= parse_org_kermeta_language_behavior_Assignment ) | (a7_0= parse_org_kermeta_language_behavior_CallFeature ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallVariable ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_VariableDecl ) ) ( (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) ) )? a23= 'end' )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15675:2: a0= 'if' ( (a1_0= parse_org_kermeta_language_behavior_CallFeature ) | (a2_0= parse_org_kermeta_language_behavior_Conditional ) ) a3= 'then' ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a5_0= parse_org_kermeta_language_behavior_Block ) | (a6_0= parse_org_kermeta_language_behavior_Assignment ) | (a7_0= parse_org_kermeta_language_behavior_CallFeature ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallVariable ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_VariableDecl ) ) ( (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) ) )? a23= 'end'
            {
            a0=(Token)match(input,75,FOLLOW_75_in_parse_org_kermeta_language_behavior_Conditional12237); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 414));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15696:2: ( (a1_0= parse_org_kermeta_language_behavior_CallFeature ) | (a2_0= parse_org_kermeta_language_behavior_Conditional ) )
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( ((LA76_0>=STRING && LA76_0<=BOOLEAN)||LA76_0==32||LA76_0==83||LA76_0==87||LA76_0==98) ) {
                alt76=1;
            }
            else if ( (LA76_0==75) ) {
                alt76=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 76, 0, input);

                throw nvae;
            }
            switch (alt76) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15697:3: (a1_0= parse_org_kermeta_language_behavior_CallFeature )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15697:3: (a1_0= parse_org_kermeta_language_behavior_CallFeature )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15698:4: a1_0= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional12260);
                    a1_0=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a1_0 != null) {
                      					if (a1_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__CONDITION), a1_0);
                      						completedElement(a1_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a1_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_361, 415));
                      		
                    }

                    }
                    break;
                case 2 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15720:6: (a2_0= parse_org_kermeta_language_behavior_Conditional )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15720:6: (a2_0= parse_org_kermeta_language_behavior_Conditional )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15721:4: a2_0= parse_org_kermeta_language_behavior_Conditional
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Conditional12294);
                    a2_0=parse_org_kermeta_language_behavior_Conditional();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a2_0 != null) {
                      					if (a2_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__CONDITION), a2_0);
                      						completedElement(a2_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a2_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_361, 416));
                      		
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_361, 417));
              	
            }
            a3=(Token)match(input,76,FOLLOW_76_in_parse_org_kermeta_language_behavior_Conditional12324); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 418));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15772:2: ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a5_0= parse_org_kermeta_language_behavior_Block ) | (a6_0= parse_org_kermeta_language_behavior_Assignment ) | (a7_0= parse_org_kermeta_language_behavior_CallFeature ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallVariable ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_VariableDecl ) )
            int alt77=9;
            alt77 = dfa77.predict(input);
            switch (alt77) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15773:3: (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15773:3: (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15774:4: a4_0= parse_org_kermeta_language_behavior_BooleanLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Conditional12347);
                    a4_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a4_0 != null) {
                      					if (a4_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a4_0);
                      						completedElement(a4_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a4_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 419));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 419));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 419));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 419));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 419));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 419));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 419));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 419));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 419));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 419));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 419));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 419));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 419));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 419));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 419));
                      		
                    }

                    }
                    break;
                case 2 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15810:6: (a5_0= parse_org_kermeta_language_behavior_Block )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15810:6: (a5_0= parse_org_kermeta_language_behavior_Block )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15811:4: a5_0= parse_org_kermeta_language_behavior_Block
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Conditional12381);
                    a5_0=parse_org_kermeta_language_behavior_Block();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a5_0 != null) {
                      					if (a5_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a5_0);
                      						completedElement(a5_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a5_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 420));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 420));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 420));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 420));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 420));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 420));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 420));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 420));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 420));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 420));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 420));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 420));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 420));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 420));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 420));
                      		
                    }

                    }
                    break;
                case 3 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15847:6: (a6_0= parse_org_kermeta_language_behavior_Assignment )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15847:6: (a6_0= parse_org_kermeta_language_behavior_Assignment )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15848:4: a6_0= parse_org_kermeta_language_behavior_Assignment
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Conditional12415);
                    a6_0=parse_org_kermeta_language_behavior_Assignment();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a6_0 != null) {
                      					if (a6_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a6_0);
                      						completedElement(a6_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a6_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 421));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 421));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 421));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 421));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 421));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 421));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 421));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 421));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 421));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 421));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 421));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 421));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 421));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 421));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 421));
                      		
                    }

                    }
                    break;
                case 4 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15884:6: (a7_0= parse_org_kermeta_language_behavior_CallFeature )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15884:6: (a7_0= parse_org_kermeta_language_behavior_CallFeature )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15885:4: a7_0= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional12449);
                    a7_0=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a7_0 != null) {
                      					if (a7_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a7_0);
                      						completedElement(a7_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a7_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 422));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 422));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 422));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 422));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 422));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 422));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 422));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 422));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 422));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 422));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 422));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 422));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 422));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 422));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 422));
                      		
                    }

                    }
                    break;
                case 5 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15921:6: (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15921:6: (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15922:4: a8_0= parse_org_kermeta_language_behavior_CallSuperOperation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Conditional12483);
                    a8_0=parse_org_kermeta_language_behavior_CallSuperOperation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a8_0 != null) {
                      					if (a8_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a8_0);
                      						completedElement(a8_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a8_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 423));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 423));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 423));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 423));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 423));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 423));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 423));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 423));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 423));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 423));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 423));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 423));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 423));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 423));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 423));
                      		
                    }

                    }
                    break;
                case 6 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15958:6: (a9_0= parse_org_kermeta_language_behavior_CallResult )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15958:6: (a9_0= parse_org_kermeta_language_behavior_CallResult )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15959:4: a9_0= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Conditional12517);
                    a9_0=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a9_0 != null) {
                      					if (a9_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a9_0);
                      						completedElement(a9_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a9_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 424));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 424));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 424));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 424));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 424));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 424));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 424));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 424));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 424));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 424));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 424));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 424));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 424));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 424));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 424));
                      		
                    }

                    }
                    break;
                case 7 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15995:6: (a10_0= parse_org_kermeta_language_behavior_CallVariable )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15995:6: (a10_0= parse_org_kermeta_language_behavior_CallVariable )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15996:4: a10_0= parse_org_kermeta_language_behavior_CallVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Conditional12551);
                    a10_0=parse_org_kermeta_language_behavior_CallVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a10_0 != null) {
                      					if (a10_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a10_0);
                      						completedElement(a10_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a10_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 425));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 425));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 425));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 425));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 425));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 425));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 425));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 425));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 425));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 425));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 425));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 425));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 425));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 425));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 425));
                      		
                    }

                    }
                    break;
                case 8 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16032:6: (a11_0= parse_org_kermeta_language_behavior_CallValue )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16032:6: (a11_0= parse_org_kermeta_language_behavior_CallValue )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16033:4: a11_0= parse_org_kermeta_language_behavior_CallValue
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Conditional12585);
                    a11_0=parse_org_kermeta_language_behavior_CallValue();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a11_0 != null) {
                      					if (a11_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a11_0);
                      						completedElement(a11_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a11_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 426));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 426));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 426));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 426));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 426));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 426));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 426));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 426));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 426));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 426));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 426));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 426));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 426));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 426));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 426));
                      		
                    }

                    }
                    break;
                case 9 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16069:6: (a12_0= parse_org_kermeta_language_behavior_VariableDecl )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16069:6: (a12_0= parse_org_kermeta_language_behavior_VariableDecl )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16070:4: a12_0= parse_org_kermeta_language_behavior_VariableDecl
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Conditional12619);
                    a12_0=parse_org_kermeta_language_behavior_VariableDecl();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a12_0 != null) {
                      					if (a12_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a12_0);
                      						completedElement(a12_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a12_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 427));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 427));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 427));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 427));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 427));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 427));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 427));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 427));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 427));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 427));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 427));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 427));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 427));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 427));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 427));
                      		
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 428));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 428));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 428));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 428));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 428));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 428));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 428));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 428));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 428));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 428));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 428));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 428));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 428));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 428));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 428));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16125:2: ( (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) ) )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( ((LA79_0>=STRING && LA79_0<=BOOLEAN)||LA79_0==32||LA79_0==71||LA79_0==77||LA79_0==81||(LA79_0>=83 && LA79_0<=84)||LA79_0==87||LA79_0==93||LA79_0==98) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16126:3: (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16126:3: (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) )
                    int alt78=8;
                    alt78 = dfa78.predict(input);
                    switch (alt78) {
                        case 1 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16127:4: a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            {
                            a13=(Token)match(input,77,FOLLOW_77_in_parse_org_kermeta_language_behavior_Conditional12658); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              				}
                              				collectHiddenTokens(element);
                              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
                              			
                            }
                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 429));
                              			
                            }
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16139:4: (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16140:5: a14_0= parse_org_kermeta_language_behavior_BooleanLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Conditional12684);
                            a14_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a14_0 != null) {
                              						if (a14_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a14_0);
                              							completedElement(a14_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a14_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 430));
                              			
                            }

                            }
                            break;
                        case 2 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16162:8: (a15_0= parse_org_kermeta_language_behavior_Block )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16162:8: (a15_0= parse_org_kermeta_language_behavior_Block )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16163:5: a15_0= parse_org_kermeta_language_behavior_Block
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Conditional12726);
                            a15_0=parse_org_kermeta_language_behavior_Block();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a15_0 != null) {
                              						if (a15_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a15_0);
                              							completedElement(a15_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a15_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 431));
                              			
                            }

                            }
                            break;
                        case 3 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16185:8: (a16_0= parse_org_kermeta_language_behavior_Assignment )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16185:8: (a16_0= parse_org_kermeta_language_behavior_Assignment )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16186:5: a16_0= parse_org_kermeta_language_behavior_Assignment
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Conditional12768);
                            a16_0=parse_org_kermeta_language_behavior_Assignment();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a16_0 != null) {
                              						if (a16_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a16_0);
                              							completedElement(a16_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a16_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 432));
                              			
                            }

                            }
                            break;
                        case 4 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16208:8: (a17_0= parse_org_kermeta_language_behavior_CallFeature )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16208:8: (a17_0= parse_org_kermeta_language_behavior_CallFeature )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16209:5: a17_0= parse_org_kermeta_language_behavior_CallFeature
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional12810);
                            a17_0=parse_org_kermeta_language_behavior_CallFeature();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a17_0 != null) {
                              						if (a17_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a17_0);
                              							completedElement(a17_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a17_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 433));
                              			
                            }

                            }
                            break;
                        case 5 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16231:8: (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16231:8: (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16232:5: a18_0= parse_org_kermeta_language_behavior_CallSuperOperation
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Conditional12852);
                            a18_0=parse_org_kermeta_language_behavior_CallSuperOperation();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a18_0 != null) {
                              						if (a18_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a18_0);
                              							completedElement(a18_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a18_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 434));
                              			
                            }

                            }
                            break;
                        case 6 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16254:8: (a19_0= parse_org_kermeta_language_behavior_CallResult )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16254:8: (a19_0= parse_org_kermeta_language_behavior_CallResult )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16255:5: a19_0= parse_org_kermeta_language_behavior_CallResult
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Conditional12894);
                            a19_0=parse_org_kermeta_language_behavior_CallResult();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a19_0 != null) {
                              						if (a19_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a19_0);
                              							completedElement(a19_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a19_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 435));
                              			
                            }

                            }
                            break;
                        case 7 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16277:8: (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16277:8: (a20_0= parse_org_kermeta_language_behavior_VariableDecl )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16278:5: a20_0= parse_org_kermeta_language_behavior_VariableDecl
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Conditional12936);
                            a20_0=parse_org_kermeta_language_behavior_VariableDecl();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a20_0 != null) {
                              						if (a20_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a20_0);
                              							completedElement(a20_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a20_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 436));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 436));
                              			
                            }
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16300:4: (a21_0= parse_org_kermeta_language_behavior_CallVariable )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16301:5: a21_0= parse_org_kermeta_language_behavior_CallVariable
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Conditional12970);
                            a21_0=parse_org_kermeta_language_behavior_CallVariable();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a21_0 != null) {
                              						if (a21_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a21_0);
                              							completedElement(a21_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a21_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 437));
                              			
                            }

                            }
                            break;
                        case 8 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16323:8: (a22_0= parse_org_kermeta_language_behavior_CallValue )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16323:8: (a22_0= parse_org_kermeta_language_behavior_CallValue )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16324:5: a22_0= parse_org_kermeta_language_behavior_CallValue
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Conditional13012);
                            a22_0=parse_org_kermeta_language_behavior_CallValue();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a22_0 != null) {
                              						if (a22_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a22_0);
                              							completedElement(a22_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a22_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 438));
                              			
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 439));
              	
            }
            a23=(Token)match(input,72,FOLLOW_72_in_parse_org_kermeta_language_behavior_Conditional13053); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 440));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 440));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 35, parse_org_kermeta_language_behavior_Conditional_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Conditional"


    // $ANTLR start "parse_org_kermeta_language_behavior_Loop"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16417:1: parse_org_kermeta_language_behavior_Loop returns [org.kermeta.language.behavior.Loop element = null] : a0= 'from' ( ( (a1_0= parse_org_kermeta_language_behavior_Expression ) ) )? a2= 'until' (a3_0= parse_org_kermeta_language_behavior_Expression ) ( (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) ) )? ;
    public final org.kermeta.language.behavior.Loop parse_org_kermeta_language_behavior_Loop() throws RecognitionException {
        org.kermeta.language.behavior.Loop element =  null;
        int parse_org_kermeta_language_behavior_Loop_StartIndex = input.index();
        Token a0=null;
        Token a2=null;
        Token a4=null;
        org.kermeta.language.behavior.Expression a1_0 = null;

        org.kermeta.language.behavior.Expression a3_0 = null;

        org.kermeta.language.behavior.Expression a5_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16420:1: (a0= 'from' ( ( (a1_0= parse_org_kermeta_language_behavior_Expression ) ) )? a2= 'until' (a3_0= parse_org_kermeta_language_behavior_Expression ) ( (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) ) )? )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16421:2: a0= 'from' ( ( (a1_0= parse_org_kermeta_language_behavior_Expression ) ) )? a2= 'until' (a3_0= parse_org_kermeta_language_behavior_Expression ) ( (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) ) )?
            {
            a0=(Token)match(input,78,FOLLOW_78_in_parse_org_kermeta_language_behavior_Loop13082); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 441));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16453:2: ( ( (a1_0= parse_org_kermeta_language_behavior_Expression ) ) )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( ((LA80_0>=STRING && LA80_0<=BOOLEAN)||LA80_0==32||LA80_0==71||(LA80_0>=74 && LA80_0<=75)||LA80_0==78||LA80_0==81||(LA80_0>=83 && LA80_0<=84)||LA80_0==87||LA80_0==93||(LA80_0>=97 && LA80_0<=98)||LA80_0==101||LA80_0==104) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16454:3: ( (a1_0= parse_org_kermeta_language_behavior_Expression ) )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16454:3: ( (a1_0= parse_org_kermeta_language_behavior_Expression ) )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16455:4: (a1_0= parse_org_kermeta_language_behavior_Expression )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16455:4: (a1_0= parse_org_kermeta_language_behavior_Expression )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16456:5: a1_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop13111);
                    a1_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
                      					}
                      					if (a1_0 != null) {
                      						if (a1_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LOOP__INITIALIZATION), a1_0);
                      							completedElement(a1_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a1_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 442));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 443));
              	
            }
            a2=(Token)match(input,79,FOLLOW_79_in_parse_org_kermeta_language_behavior_Loop13152); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 444));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 444));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 444));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 444));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 444));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 444));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 444));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 444));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 444));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 444));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 444));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 444));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 444));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 444));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 444));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 444));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 444));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 444));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 444));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 444));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16515:2: (a3_0= parse_org_kermeta_language_behavior_Expression )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16516:3: a3_0= parse_org_kermeta_language_behavior_Expression
            {
            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop13170);
            a3_0=parse_org_kermeta_language_behavior_Expression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LOOP__STOP_CONDITION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_362, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 445));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 445));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16589:2: ( (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) ) )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==80) ) {
                int LA81_1 = input.LA(2);

                if ( (synpred205_Kermeta()) ) {
                    alt81=1;
                }
            }
            switch (alt81) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16590:3: (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16590:3: (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16591:4: a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) )
                    {
                    a4=(Token)match(input,80,FOLLOW_80_in_parse_org_kermeta_language_behavior_Loop13197); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 446));
                      			
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16622:4: ( (a5_0= parse_org_kermeta_language_behavior_Expression ) )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16623:5: (a5_0= parse_org_kermeta_language_behavior_Expression )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16623:5: (a5_0= parse_org_kermeta_language_behavior_Expression )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16624:6: a5_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop13230);
                    a5_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      						if (terminateParsing) {
                      							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      						}
                      						if (element == null) {
                      							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
                      						}
                      						if (a5_0 != null) {
                      							if (a5_0 != null) {
                      								element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LOOP__BODY), a5_0);
                      								completedElement(a5_0);
                      							}
                      							collectHiddenTokens(element);
                      							copyLocalizationInfos(a5_0, element); 						}
                      					
                    }

                    }

                    if ( state.backtracking==0 ) {

                      					// expected elements (follow set)
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 447));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 447));
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 448));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 449));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 36, parse_org_kermeta_language_behavior_Loop_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Loop"


    // $ANTLR start "parse_org_kermeta_language_behavior_VariableDecl"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16813:1: parse_org_kermeta_language_behavior_VariableDecl returns [org.kermeta.language.behavior.VariableDecl element = null] : a0= 'var' (a1= STRING ) a2= ':' (a3_0= parse_org_kermeta_language_behavior_TypeReference ) ( (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )? ;
    public final org.kermeta.language.behavior.VariableDecl parse_org_kermeta_language_behavior_VariableDecl() throws RecognitionException {
        org.kermeta.language.behavior.VariableDecl element =  null;
        int parse_org_kermeta_language_behavior_VariableDecl_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        org.kermeta.language.behavior.TypeReference a3_0 = null;

        org.kermeta.language.behavior.Expression a5_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16816:1: (a0= 'var' (a1= STRING ) a2= ':' (a3_0= parse_org_kermeta_language_behavior_TypeReference ) ( (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )? )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16817:2: a0= 'var' (a1= STRING ) a2= ':' (a3_0= parse_org_kermeta_language_behavior_TypeReference ) ( (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )?
            {
            a0=(Token)match(input,81,FOLLOW_81_in_parse_org_kermeta_language_behavior_VariableDecl13304); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_363, 450));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16829:2: (a1= STRING )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16830:3: a1= STRING
            {
            a1=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_VariableDecl13322); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
              			}
              			if (a1 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__IDENTIFIER), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__IDENTIFIER), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_364, 451));
              	
            }
            a2=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_VariableDecl13343); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 452));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16874:2: (a3_0= parse_org_kermeta_language_behavior_TypeReference )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16875:3: a3_0= parse_org_kermeta_language_behavior_TypeReference
            {
            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_VariableDecl13361);
            a3_0=parse_org_kermeta_language_behavior_TypeReference();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__TYPE), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_360, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 453));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16948:2: ( (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==82) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16949:3: (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16949:3: (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16950:4: a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression )
                    {
                    a4=(Token)match(input,82,FOLLOW_82_in_parse_org_kermeta_language_behavior_VariableDecl13388); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 454));
                      			
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16981:4: (a5_0= parse_org_kermeta_language_behavior_Expression )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16982:5: a5_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_VariableDecl13414);
                    a5_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
                      					}
                      					if (a5_0 != null) {
                      						if (a5_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__INITIALIZATION), a5_0);
                      							completedElement(a5_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a5_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 455));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 456));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 456));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 37, parse_org_kermeta_language_behavior_VariableDecl_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_VariableDecl"


    // $ANTLR start "parse_org_kermeta_language_behavior_TypeLiteral"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17114:1: parse_org_kermeta_language_behavior_TypeLiteral returns [org.kermeta.language.behavior.TypeLiteral element = null] : (a0_0= parse_org_kermeta_language_behavior_TypeReference ) ;
    public final org.kermeta.language.behavior.TypeLiteral parse_org_kermeta_language_behavior_TypeLiteral() throws RecognitionException {
        org.kermeta.language.behavior.TypeLiteral element =  null;
        int parse_org_kermeta_language_behavior_TypeLiteral_StartIndex = input.index();
        org.kermeta.language.behavior.TypeReference a0_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17117:1: ( (a0_0= parse_org_kermeta_language_behavior_TypeReference ) )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17118:2: (a0_0= parse_org_kermeta_language_behavior_TypeReference )
            {
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17118:2: (a0_0= parse_org_kermeta_language_behavior_TypeReference )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17119:3: a0_0= parse_org_kermeta_language_behavior_TypeReference
            {
            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_TypeLiteral13474);
            a0_0=parse_org_kermeta_language_behavior_TypeReference();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createTypeLiteral();
              			}
              			if (a0_0 != null) {
              				if (a0_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_LITERAL__TYPEREF), a0_0);
              					completedElement(a0_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a0_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 457));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 457));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 38, parse_org_kermeta_language_behavior_TypeLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_TypeLiteral"


    // $ANTLR start "parse_org_kermeta_language_behavior_CallResult"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17193:1: parse_org_kermeta_language_behavior_CallResult returns [org.kermeta.language.behavior.CallResult element = null] : a0= 'result' ;
    public final org.kermeta.language.behavior.CallResult parse_org_kermeta_language_behavior_CallResult() throws RecognitionException {
        org.kermeta.language.behavior.CallResult element =  null;
        int parse_org_kermeta_language_behavior_CallResult_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17196:1: (a0= 'result' )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17197:2: a0= 'result'
            {
            a0=(Token)match(input,83,FOLLOW_83_in_parse_org_kermeta_language_behavior_CallResult13507); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallResult();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 458));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 458));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 39, parse_org_kermeta_language_behavior_CallResult_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_CallResult"


    // $ANTLR start "parse_org_kermeta_language_behavior_CallSuperOperation"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17264:1: parse_org_kermeta_language_behavior_CallSuperOperation returns [org.kermeta.language.behavior.CallSuperOperation element = null] : a0= 'super(' ( ( (a1_0= parse_org_kermeta_language_behavior_Expression ) ( (a2= ',' (a3_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a4= ')' ;
    public final org.kermeta.language.behavior.CallSuperOperation parse_org_kermeta_language_behavior_CallSuperOperation() throws RecognitionException {
        org.kermeta.language.behavior.CallSuperOperation element =  null;
        int parse_org_kermeta_language_behavior_CallSuperOperation_StartIndex = input.index();
        Token a0=null;
        Token a2=null;
        Token a4=null;
        org.kermeta.language.behavior.Expression a1_0 = null;

        org.kermeta.language.behavior.Expression a3_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17267:1: (a0= 'super(' ( ( (a1_0= parse_org_kermeta_language_behavior_Expression ) ( (a2= ',' (a3_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a4= ')' )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17268:2: a0= 'super(' ( ( (a1_0= parse_org_kermeta_language_behavior_Expression ) ( (a2= ',' (a3_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a4= ')'
            {
            a0=(Token)match(input,84,FOLLOW_84_in_parse_org_kermeta_language_behavior_CallSuperOperation13536); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 459));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17300:2: ( ( (a1_0= parse_org_kermeta_language_behavior_Expression ) ( (a2= ',' (a3_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( ((LA84_0>=STRING && LA84_0<=BOOLEAN)||LA84_0==32||LA84_0==71||(LA84_0>=74 && LA84_0<=75)||LA84_0==78||LA84_0==81||(LA84_0>=83 && LA84_0<=84)||LA84_0==87||LA84_0==93||(LA84_0>=97 && LA84_0<=98)||LA84_0==101||LA84_0==104) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17301:3: ( (a1_0= parse_org_kermeta_language_behavior_Expression ) ( (a2= ',' (a3_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17301:3: ( (a1_0= parse_org_kermeta_language_behavior_Expression ) ( (a2= ',' (a3_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17302:4: (a1_0= parse_org_kermeta_language_behavior_Expression ) ( (a2= ',' (a3_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17302:4: (a1_0= parse_org_kermeta_language_behavior_Expression )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17303:5: a1_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallSuperOperation13565);
                    a1_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
                      					}
                      					if (a1_0 != null) {
                      						if (a1_0 != null) {
                      							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_SUPER_OPERATION__PARAMETERS, a1_0);
                      							completedElement(a1_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a1_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 460));
                      			
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17325:4: ( (a2= ',' (a3_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    loop83:
                    do {
                        int alt83=2;
                        int LA83_0 = input.LA(1);

                        if ( (LA83_0==26) ) {
                            alt83=1;
                        }


                        switch (alt83) {
                    	case 1 :
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17326:5: (a2= ',' (a3_0= parse_org_kermeta_language_behavior_Expression ) )
                    	    {
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17326:5: (a2= ',' (a3_0= parse_org_kermeta_language_behavior_Expression ) )
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17327:6: a2= ',' (a3_0= parse_org_kermeta_language_behavior_Expression )
                    	    {
                    	    a2=(Token)match(input,26,FOLLOW_26_in_parse_org_kermeta_language_behavior_CallSuperOperation13606); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      						if (element == null) {
                    	      							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
                    	      						}
                    	      						collectHiddenTokens(element);
                    	      						copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
                    	      					
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 461));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 461));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 461));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 461));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 461));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 461));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 461));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 461));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 461));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 461));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 461));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 461));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 461));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 461));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 461));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 461));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 461));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 461));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 461));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 461));
                    	      					
                    	    }
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17358:6: (a3_0= parse_org_kermeta_language_behavior_Expression )
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17359:7: a3_0= parse_org_kermeta_language_behavior_Expression
                    	    {
                    	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallSuperOperation13640);
                    	    a3_0=parse_org_kermeta_language_behavior_Expression();

                    	    state._fsp--;
                    	    if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      							if (terminateParsing) {
                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      							}
                    	      							if (element == null) {
                    	      								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
                    	      							}
                    	      							if (a3_0 != null) {
                    	      								if (a3_0 != null) {
                    	      									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_SUPER_OPERATION__PARAMETERS, a3_0);
                    	      									completedElement(a3_0);
                    	      								}
                    	      								collectHiddenTokens(element);
                    	      								copyLocalizationInfos(a3_0, element); 							}
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 462));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 462));
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop83;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 463));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 464));
              	
            }
            a4=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_CallSuperOperation13714); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 465));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 465));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 40, parse_org_kermeta_language_behavior_CallSuperOperation_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_CallSuperOperation"


    // $ANTLR start "parse_org_kermeta_language_behavior_Assignment"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17461:1: parse_org_kermeta_language_behavior_Assignment returns [org.kermeta.language.behavior.Assignment element = null] : ( ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) ) (a3= ':=' | (a4= CASTED ) a5= '=' ) ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) ) ) ;
    public final org.kermeta.language.behavior.Assignment parse_org_kermeta_language_behavior_Assignment() throws RecognitionException {
        org.kermeta.language.behavior.Assignment element =  null;
        int parse_org_kermeta_language_behavior_Assignment_StartIndex = input.index();
        Token a3=null;
        Token a4=null;
        Token a5=null;
        org.kermeta.language.behavior.CallFeature a0_0 = null;

        org.kermeta.language.behavior.CallVariable a1_0 = null;

        org.kermeta.language.behavior.CallResult a2_0 = null;

        org.kermeta.language.behavior.CallFeature a6_0 = null;

        org.kermeta.language.behavior.SelfExpression a7_0 = null;

        org.kermeta.language.behavior.CallSuperOperation a8_0 = null;

        org.kermeta.language.behavior.CallResult a9_0 = null;

        org.kermeta.language.behavior.CallValue a10_0 = null;

        org.kermeta.language.behavior.CallVariable a11_0 = null;

        org.kermeta.language.behavior.VoidLiteral a12_0 = null;

        org.kermeta.language.behavior.IntegerLiteral a13_0 = null;

        org.kermeta.language.behavior.BooleanLiteral a14_0 = null;

        org.kermeta.language.behavior.StringLiteral a15_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17464:1: ( ( ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) ) (a3= ':=' | (a4= CASTED ) a5= '=' ) ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) ) ) )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17465:2: ( ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) ) (a3= ':=' | (a4= CASTED ) a5= '=' ) ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) ) )
            {
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17465:2: ( ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) ) (a3= ':=' | (a4= CASTED ) a5= '=' ) ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) ) )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17466:3: ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) ) (a3= ':=' | (a4= CASTED ) a5= '=' ) ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) )
            {
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17466:3: ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) )
            int alt85=3;
            switch ( input.LA(1) ) {
            case STRING_LITERAL:
            case INTEGER:
            case BOOLEAN:
            case 32:
            case 87:
            case 98:
                {
                alt85=1;
                }
                break;
            case STRING:
                {
                int LA85_2 = input.LA(2);

                if ( (synpred209_Kermeta()) ) {
                    alt85=1;
                }
                else if ( (synpred210_Kermeta()) ) {
                    alt85=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 85, 2, input);

                    throw nvae;
                }
                }
                break;
            case 83:
                {
                int LA85_3 = input.LA(2);

                if ( (synpred209_Kermeta()) ) {
                    alt85=1;
                }
                else if ( (synpred210_Kermeta()) ) {
                    alt85=2;
                }
                else if ( (true) ) {
                    alt85=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 85, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 85, 0, input);

                throw nvae;
            }

            switch (alt85) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17467:4: (a0_0= parse_org_kermeta_language_behavior_CallFeature )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17467:4: (a0_0= parse_org_kermeta_language_behavior_CallFeature )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17468:5: a0_0= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Assignment13758);
                    a0_0=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a0_0 != null) {
                      						if (a0_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__TARGET), a0_0);
                      							completedElement(a0_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a0_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 466));
                      			
                    }

                    }
                    break;
                case 2 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17491:8: (a1_0= parse_org_kermeta_language_behavior_CallVariable )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17491:8: (a1_0= parse_org_kermeta_language_behavior_CallVariable )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17492:5: a1_0= parse_org_kermeta_language_behavior_CallVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Assignment13800);
                    a1_0=parse_org_kermeta_language_behavior_CallVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a1_0 != null) {
                      						if (a1_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__TARGET), a1_0);
                      							completedElement(a1_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a1_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 467));
                      			
                    }

                    }
                    break;
                case 3 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17515:8: (a2_0= parse_org_kermeta_language_behavior_CallResult )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17515:8: (a2_0= parse_org_kermeta_language_behavior_CallResult )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17516:5: a2_0= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Assignment13842);
                    a2_0=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a2_0 != null) {
                      						if (a2_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__TARGET), a2_0);
                      							completedElement(a2_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a2_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 468));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 468));
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 469));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 469));
              		
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17545:3: (a3= ':=' | (a4= CASTED ) a5= '=' )
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==85) ) {
                alt86=1;
            }
            else if ( (LA86_0==CASTED) ) {
                alt86=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 86, 0, input);

                throw nvae;
            }
            switch (alt86) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17546:4: a3= ':='
                    {
                    a3=(Token)match(input,85,FOLLOW_85_in_parse_org_kermeta_language_behavior_Assignment13885); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 470));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 470));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 470));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 470));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 470));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 470));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 470));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 470));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 470));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 470));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 470));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 470));
                      			
                    }

                    }
                    break;
                case 2 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17570:8: (a4= CASTED ) a5= '='
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17570:8: (a4= CASTED )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17571:5: a4= CASTED
                    {
                    a4=(Token)match(input,CASTED,FOLLOW_CASTED_in_parse_org_kermeta_language_behavior_Assignment13919); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a4 != null) {
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("CASTED");
                      						tokenResolver.setOptions(getOptions());
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__IS_CAST), result);
                      						java.lang.Object resolvedObject = result.getResolvedToken();
                      						if (resolvedObject == null) {
                      							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
                      						}
                      						java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
                      						if (resolved != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__IS_CAST), resolved);
                      							completedElement(resolved);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
                      					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_367, 471));
                      			
                    }
                    a5=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_Assignment13952); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 472));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 472));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 472));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 472));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 472));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 472));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 472));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 472));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 472));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 472));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 472));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 472));
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 473));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 473));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 473));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 473));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 473));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 473));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 473));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 473));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 473));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 473));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 473));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 473));
              		
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17643:3: ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) )
            int alt87=10;
            alt87 = dfa87.predict(input);
            switch (alt87) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17644:4: (a6_0= parse_org_kermeta_language_behavior_CallFeature )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17644:4: (a6_0= parse_org_kermeta_language_behavior_CallFeature )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17645:5: a6_0= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Assignment13993);
                    a6_0=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a6_0 != null) {
                      						if (a6_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a6_0);
                      							completedElement(a6_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a6_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 474));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 474));
                      			
                    }

                    }
                    break;
                case 2 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17718:8: (a7_0= parse_org_kermeta_language_behavior_SelfExpression )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17718:8: (a7_0= parse_org_kermeta_language_behavior_SelfExpression )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17719:5: a7_0= parse_org_kermeta_language_behavior_SelfExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_Assignment14035);
                    a7_0=parse_org_kermeta_language_behavior_SelfExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a7_0 != null) {
                      						if (a7_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a7_0);
                      							completedElement(a7_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a7_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 475));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 475));
                      			
                    }

                    }
                    break;
                case 3 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17792:8: (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17792:8: (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17793:5: a8_0= parse_org_kermeta_language_behavior_CallSuperOperation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Assignment14077);
                    a8_0=parse_org_kermeta_language_behavior_CallSuperOperation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a8_0 != null) {
                      						if (a8_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a8_0);
                      							completedElement(a8_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a8_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 476));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 476));
                      			
                    }

                    }
                    break;
                case 4 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17866:8: (a9_0= parse_org_kermeta_language_behavior_CallResult )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17866:8: (a9_0= parse_org_kermeta_language_behavior_CallResult )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17867:5: a9_0= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Assignment14119);
                    a9_0=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a9_0 != null) {
                      						if (a9_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a9_0);
                      							completedElement(a9_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a9_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 477));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 477));
                      			
                    }

                    }
                    break;
                case 5 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17940:8: (a10_0= parse_org_kermeta_language_behavior_CallValue )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17940:8: (a10_0= parse_org_kermeta_language_behavior_CallValue )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17941:5: a10_0= parse_org_kermeta_language_behavior_CallValue
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Assignment14161);
                    a10_0=parse_org_kermeta_language_behavior_CallValue();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a10_0 != null) {
                      						if (a10_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a10_0);
                      							completedElement(a10_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a10_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 478));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 478));
                      			
                    }

                    }
                    break;
                case 6 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18014:8: (a11_0= parse_org_kermeta_language_behavior_CallVariable )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18014:8: (a11_0= parse_org_kermeta_language_behavior_CallVariable )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18015:5: a11_0= parse_org_kermeta_language_behavior_CallVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Assignment14203);
                    a11_0=parse_org_kermeta_language_behavior_CallVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a11_0 != null) {
                      						if (a11_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a11_0);
                      							completedElement(a11_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a11_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 479));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 479));
                      			
                    }

                    }
                    break;
                case 7 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18088:8: (a12_0= parse_org_kermeta_language_behavior_VoidLiteral )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18088:8: (a12_0= parse_org_kermeta_language_behavior_VoidLiteral )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18089:5: a12_0= parse_org_kermeta_language_behavior_VoidLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_behavior_Assignment14245);
                    a12_0=parse_org_kermeta_language_behavior_VoidLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a12_0 != null) {
                      						if (a12_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a12_0);
                      							completedElement(a12_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a12_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 480));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 480));
                      			
                    }

                    }
                    break;
                case 8 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18162:8: (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18162:8: (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18163:5: a13_0= parse_org_kermeta_language_behavior_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_Assignment14287);
                    a13_0=parse_org_kermeta_language_behavior_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a13_0 != null) {
                      						if (a13_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a13_0);
                      							completedElement(a13_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a13_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 481));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 481));
                      			
                    }

                    }
                    break;
                case 9 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18236:8: (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18236:8: (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18237:5: a14_0= parse_org_kermeta_language_behavior_BooleanLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Assignment14329);
                    a14_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a14_0 != null) {
                      						if (a14_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a14_0);
                      							completedElement(a14_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a14_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 482));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 482));
                      			
                    }

                    }
                    break;
                case 10 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18310:8: (a15_0= parse_org_kermeta_language_behavior_StringLiteral )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18310:8: (a15_0= parse_org_kermeta_language_behavior_StringLiteral )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18311:5: a15_0= parse_org_kermeta_language_behavior_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_Assignment14371);
                    a15_0=parse_org_kermeta_language_behavior_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a15_0 != null) {
                      						if (a15_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a15_0);
                      							completedElement(a15_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a15_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 483));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 483));
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 484));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 484));
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 485));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 485));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 41, parse_org_kermeta_language_behavior_Assignment_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Assignment"


    // $ANTLR start "parse_org_kermeta_language_behavior_CallVariable"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18499:1: parse_org_kermeta_language_behavior_CallVariable returns [org.kermeta.language.behavior.CallVariable element = null] : ( (a0= STRING ) | c0= parse_org_kermeta_language_behavior_CallResult );
    public final org.kermeta.language.behavior.CallVariable parse_org_kermeta_language_behavior_CallVariable() throws RecognitionException {
        org.kermeta.language.behavior.CallVariable element =  null;
        int parse_org_kermeta_language_behavior_CallVariable_StartIndex = input.index();
        Token a0=null;
        org.kermeta.language.behavior.CallResult c0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18502:1: ( (a0= STRING ) | c0= parse_org_kermeta_language_behavior_CallResult )
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==STRING) ) {
                alt88=1;
            }
            else if ( (LA88_0==83) ) {
                alt88=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 88, 0, input);

                throw nvae;
            }
            switch (alt88) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18503:2: (a0= STRING )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18503:2: (a0= STRING )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18504:3: a0= STRING
                    {
                    a0=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallVariable14435); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (terminateParsing) {
                      				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      			}
                      			if (element == null) {
                      				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallVariable();
                      			}
                      			if (a0 != null) {
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                      				tokenResolver.setOptions(getOptions());
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VARIABLE__NAME), result);
                      				java.lang.Object resolvedObject = result.getResolvedToken();
                      				if (resolvedObject == null) {
                      					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
                      				}
                      				java.lang.String resolved = (java.lang.String)resolvedObject;
                      				if (resolved != null) {
                      					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VARIABLE__NAME), resolved);
                      					completedElement(resolved);
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
                      			}
                      		
                    }

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 486));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 486));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18591:2: c0= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_CallVariable14461);
                    c0=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 42, parse_org_kermeta_language_behavior_CallVariable_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_CallVariable"


    // $ANTLR start "parse_org_kermeta_language_behavior_SelfExpression"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18595:1: parse_org_kermeta_language_behavior_SelfExpression returns [org.kermeta.language.behavior.SelfExpression element = null] : a0= 'self' ;
    public final org.kermeta.language.behavior.SelfExpression parse_org_kermeta_language_behavior_SelfExpression() throws RecognitionException {
        org.kermeta.language.behavior.SelfExpression element =  null;
        int parse_org_kermeta_language_behavior_SelfExpression_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18598:1: (a0= 'self' )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18599:2: a0= 'self'
            {
            a0=(Token)match(input,87,FOLLOW_87_in_parse_org_kermeta_language_behavior_SelfExpression14486); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createSelfExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 487));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 487));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 43, parse_org_kermeta_language_behavior_SelfExpression_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_SelfExpression"


    // $ANTLR start "parse_org_kermeta_language_behavior_CallFeature"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18664:1: parse_org_kermeta_language_behavior_CallFeature returns [org.kermeta.language.behavior.CallFeature element = null] : (a0= '(' ( (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a2_0= parse_org_kermeta_language_behavior_CallVariable ) | (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a4_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a5_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a7= '.' (a8= STRING ) | a9= '.' (a10= STRING ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= STRING ) | a18= '.' (a19= STRING ) ) )* a20= '==' (a21_0= parse_org_kermeta_language_behavior_Expression ) a22= ')' | ( (a23_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a24_0= parse_org_kermeta_language_behavior_CallVariable ) | (a25_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a26_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a27_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a28_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a29= '.' (a30= STRING ) | a31= '.' (a32= STRING ) a33= '(' ( ( (a34_0= parse_org_kermeta_language_behavior_Expression ) ( (a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a37= ')' | a38= '.' (a39= STRING ) | a40= '.' (a41= STRING ) ) )* a42= '==' (a43_0= parse_org_kermeta_language_behavior_Expression ) | ( (a44_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a45_0= parse_org_kermeta_language_behavior_CallVariable ) | (a46_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a47_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a48_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a49_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a50= '.' (a51= STRING ) | a52= '.' (a53= STRING ) a54= '(' ( ( (a55_0= parse_org_kermeta_language_behavior_Expression ) ( (a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a58= ')' | a59= '.' (a60= STRING ) | a61= '.' (a62= STRING ) ) )* ( ( (a63= '+' | a64= '-' | a65= '/' | a66= '*' ) (a67_0= parse_org_kermeta_language_behavior_Expression ) ) )* | a68= '(' ( (a69_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a70_0= parse_org_kermeta_language_behavior_CallVariable ) | (a71_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a72_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a73_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a74_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a75= '.' (a76= STRING ) | a77= '.' (a78= STRING ) a79= '(' ( ( (a80_0= parse_org_kermeta_language_behavior_Expression ) ( (a81= ',' (a82_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a83= ')' | a84= '.' (a85= STRING ) | a86= '.' (a87= STRING ) ) )* ( ( (a88= '+' | a89= '-' | a90= '/' | a91= '*' ) (a92_0= parse_org_kermeta_language_behavior_Expression ) ) )* a93= ')' ( ( (a94= '+' | a95= '-' | a96= '/' | a97= '*' ) (a98_0= parse_org_kermeta_language_behavior_Expression ) ) )* );
    public final org.kermeta.language.behavior.CallFeature parse_org_kermeta_language_behavior_CallFeature() throws RecognitionException {
        org.kermeta.language.behavior.CallFeature element =  null;
        int parse_org_kermeta_language_behavior_CallFeature_StartIndex = input.index();
        Token a0=null;
        Token a7=null;
        Token a8=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        Token a13=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        Token a22=null;
        Token a29=null;
        Token a30=null;
        Token a31=null;
        Token a32=null;
        Token a33=null;
        Token a35=null;
        Token a37=null;
        Token a38=null;
        Token a39=null;
        Token a40=null;
        Token a41=null;
        Token a42=null;
        Token a50=null;
        Token a51=null;
        Token a52=null;
        Token a53=null;
        Token a54=null;
        Token a56=null;
        Token a58=null;
        Token a59=null;
        Token a60=null;
        Token a61=null;
        Token a62=null;
        Token a63=null;
        Token a64=null;
        Token a65=null;
        Token a66=null;
        Token a68=null;
        Token a75=null;
        Token a76=null;
        Token a77=null;
        Token a78=null;
        Token a79=null;
        Token a81=null;
        Token a83=null;
        Token a84=null;
        Token a85=null;
        Token a86=null;
        Token a87=null;
        Token a88=null;
        Token a89=null;
        Token a90=null;
        Token a91=null;
        Token a93=null;
        Token a94=null;
        Token a95=null;
        Token a96=null;
        Token a97=null;
        org.kermeta.language.behavior.BooleanLiteral a1_0 = null;

        org.kermeta.language.behavior.CallVariable a2_0 = null;

        org.kermeta.language.behavior.JavaStaticCall a3_0 = null;

        org.kermeta.language.behavior.SelfExpression a4_0 = null;

        org.kermeta.language.behavior.StringLiteral a5_0 = null;

        org.kermeta.language.behavior.IntegerLiteral a6_0 = null;

        org.kermeta.language.behavior.Expression a12_0 = null;

        org.kermeta.language.behavior.Expression a14_0 = null;

        org.kermeta.language.behavior.Expression a21_0 = null;

        org.kermeta.language.behavior.BooleanLiteral a23_0 = null;

        org.kermeta.language.behavior.CallVariable a24_0 = null;

        org.kermeta.language.behavior.JavaStaticCall a25_0 = null;

        org.kermeta.language.behavior.SelfExpression a26_0 = null;

        org.kermeta.language.behavior.StringLiteral a27_0 = null;

        org.kermeta.language.behavior.IntegerLiteral a28_0 = null;

        org.kermeta.language.behavior.Expression a34_0 = null;

        org.kermeta.language.behavior.Expression a36_0 = null;

        org.kermeta.language.behavior.Expression a43_0 = null;

        org.kermeta.language.behavior.BooleanLiteral a44_0 = null;

        org.kermeta.language.behavior.CallVariable a45_0 = null;

        org.kermeta.language.behavior.JavaStaticCall a46_0 = null;

        org.kermeta.language.behavior.SelfExpression a47_0 = null;

        org.kermeta.language.behavior.StringLiteral a48_0 = null;

        org.kermeta.language.behavior.IntegerLiteral a49_0 = null;

        org.kermeta.language.behavior.Expression a55_0 = null;

        org.kermeta.language.behavior.Expression a57_0 = null;

        org.kermeta.language.behavior.Expression a67_0 = null;

        org.kermeta.language.behavior.BooleanLiteral a69_0 = null;

        org.kermeta.language.behavior.CallVariable a70_0 = null;

        org.kermeta.language.behavior.JavaStaticCall a71_0 = null;

        org.kermeta.language.behavior.SelfExpression a72_0 = null;

        org.kermeta.language.behavior.StringLiteral a73_0 = null;

        org.kermeta.language.behavior.IntegerLiteral a74_0 = null;

        org.kermeta.language.behavior.Expression a80_0 = null;

        org.kermeta.language.behavior.Expression a82_0 = null;

        org.kermeta.language.behavior.Expression a92_0 = null;

        org.kermeta.language.behavior.Expression a98_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18667:1: (a0= '(' ( (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a2_0= parse_org_kermeta_language_behavior_CallVariable ) | (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a4_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a5_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a7= '.' (a8= STRING ) | a9= '.' (a10= STRING ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= STRING ) | a18= '.' (a19= STRING ) ) )* a20= '==' (a21_0= parse_org_kermeta_language_behavior_Expression ) a22= ')' | ( (a23_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a24_0= parse_org_kermeta_language_behavior_CallVariable ) | (a25_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a26_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a27_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a28_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a29= '.' (a30= STRING ) | a31= '.' (a32= STRING ) a33= '(' ( ( (a34_0= parse_org_kermeta_language_behavior_Expression ) ( (a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a37= ')' | a38= '.' (a39= STRING ) | a40= '.' (a41= STRING ) ) )* a42= '==' (a43_0= parse_org_kermeta_language_behavior_Expression ) | ( (a44_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a45_0= parse_org_kermeta_language_behavior_CallVariable ) | (a46_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a47_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a48_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a49_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a50= '.' (a51= STRING ) | a52= '.' (a53= STRING ) a54= '(' ( ( (a55_0= parse_org_kermeta_language_behavior_Expression ) ( (a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a58= ')' | a59= '.' (a60= STRING ) | a61= '.' (a62= STRING ) ) )* ( ( (a63= '+' | a64= '-' | a65= '/' | a66= '*' ) (a67_0= parse_org_kermeta_language_behavior_Expression ) ) )* | a68= '(' ( (a69_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a70_0= parse_org_kermeta_language_behavior_CallVariable ) | (a71_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a72_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a73_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a74_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a75= '.' (a76= STRING ) | a77= '.' (a78= STRING ) a79= '(' ( ( (a80_0= parse_org_kermeta_language_behavior_Expression ) ( (a81= ',' (a82_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a83= ')' | a84= '.' (a85= STRING ) | a86= '.' (a87= STRING ) ) )* ( ( (a88= '+' | a89= '-' | a90= '/' | a91= '*' ) (a92_0= parse_org_kermeta_language_behavior_Expression ) ) )* a93= ')' ( ( (a94= '+' | a95= '-' | a96= '/' | a97= '*' ) (a98_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
            int alt115=4;
            alt115 = dfa115.predict(input);
            switch (alt115) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18668:2: a0= '(' ( (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a2_0= parse_org_kermeta_language_behavior_CallVariable ) | (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a4_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a5_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a7= '.' (a8= STRING ) | a9= '.' (a10= STRING ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= STRING ) | a18= '.' (a19= STRING ) ) )* a20= '==' (a21_0= parse_org_kermeta_language_behavior_Expression ) a22= ')'
                    {
                    a0=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature14515); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 488));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 488));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 488));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 488));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 488));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 488));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 488));
                      	
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18686:2: ( (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a2_0= parse_org_kermeta_language_behavior_CallVariable ) | (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a4_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a5_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral ) )
                    int alt89=6;
                    switch ( input.LA(1) ) {
                    case BOOLEAN:
                        {
                        alt89=1;
                        }
                        break;
                    case STRING:
                    case 83:
                        {
                        alt89=2;
                        }
                        break;
                    case 98:
                        {
                        alt89=3;
                        }
                        break;
                    case 87:
                        {
                        alt89=4;
                        }
                        break;
                    case STRING_LITERAL:
                        {
                        alt89=5;
                        }
                        break;
                    case INTEGER:
                        {
                        alt89=6;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 89, 0, input);

                        throw nvae;
                    }

                    switch (alt89) {
                        case 1 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18687:3: (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18687:3: (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18688:4: a1_0= parse_org_kermeta_language_behavior_BooleanLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_CallFeature14538);
                            a1_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a1_0 != null) {
                              					if (a1_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a1_0);
                              						completedElement(a1_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a1_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 489));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 489));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 489));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 489));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 489));
                              		
                            }

                            }
                            break;
                        case 2 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18714:6: (a2_0= parse_org_kermeta_language_behavior_CallVariable )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18714:6: (a2_0= parse_org_kermeta_language_behavior_CallVariable )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18715:4: a2_0= parse_org_kermeta_language_behavior_CallVariable
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_CallFeature14572);
                            a2_0=parse_org_kermeta_language_behavior_CallVariable();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a2_0 != null) {
                              					if (a2_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a2_0);
                              						completedElement(a2_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a2_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 490));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 490));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 490));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 490));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 490));
                              		
                            }

                            }
                            break;
                        case 3 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18741:6: (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18741:6: (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18742:4: a3_0= parse_org_kermeta_language_behavior_JavaStaticCall
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_CallFeature14606);
                            a3_0=parse_org_kermeta_language_behavior_JavaStaticCall();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a3_0 != null) {
                              					if (a3_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a3_0);
                              						completedElement(a3_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a3_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 491));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 491));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 491));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 491));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 491));
                              		
                            }

                            }
                            break;
                        case 4 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18768:6: (a4_0= parse_org_kermeta_language_behavior_SelfExpression )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18768:6: (a4_0= parse_org_kermeta_language_behavior_SelfExpression )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18769:4: a4_0= parse_org_kermeta_language_behavior_SelfExpression
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_CallFeature14640);
                            a4_0=parse_org_kermeta_language_behavior_SelfExpression();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a4_0 != null) {
                              					if (a4_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a4_0);
                              						completedElement(a4_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a4_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 492));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 492));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 492));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 492));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 492));
                              		
                            }

                            }
                            break;
                        case 5 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18795:6: (a5_0= parse_org_kermeta_language_behavior_StringLiteral )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18795:6: (a5_0= parse_org_kermeta_language_behavior_StringLiteral )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18796:4: a5_0= parse_org_kermeta_language_behavior_StringLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_CallFeature14674);
                            a5_0=parse_org_kermeta_language_behavior_StringLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a5_0 != null) {
                              					if (a5_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a5_0);
                              						completedElement(a5_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a5_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 493));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 493));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 493));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 493));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 493));
                              		
                            }

                            }
                            break;
                        case 6 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18822:6: (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18822:6: (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18823:4: a6_0= parse_org_kermeta_language_behavior_IntegerLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_CallFeature14708);
                            a6_0=parse_org_kermeta_language_behavior_IntegerLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a6_0 != null) {
                              					if (a6_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a6_0);
                              						completedElement(a6_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a6_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 494));
                              		
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 495));
                      	
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18858:2: ( (a7= '.' (a8= STRING ) | a9= '.' (a10= STRING ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= STRING ) | a18= '.' (a19= STRING ) ) )*
                    loop93:
                    do {
                        int alt93=2;
                        int LA93_0 = input.LA(1);

                        if ( (LA93_0==19) ) {
                            alt93=1;
                        }


                        switch (alt93) {
                    	case 1 :
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18859:3: (a7= '.' (a8= STRING ) | a9= '.' (a10= STRING ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= STRING ) | a18= '.' (a19= STRING ) )
                    	    {
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18859:3: (a7= '.' (a8= STRING ) | a9= '.' (a10= STRING ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= STRING ) | a18= '.' (a19= STRING ) )
                    	    int alt92=4;
                    	    int LA92_0 = input.LA(1);

                    	    if ( (LA92_0==19) ) {
                    	        int LA92_1 = input.LA(2);

                    	        if ( (LA92_1==STRING) ) {
                    	            int LA92_2 = input.LA(3);

                    	            if ( (LA92_2==32) ) {
                    	                alt92=2;
                    	            }
                    	            else if ( (synpred227_Kermeta()) ) {
                    	                alt92=1;
                    	            }
                    	            else if ( (synpred231_Kermeta()) ) {
                    	                alt92=3;
                    	            }
                    	            else if ( (true) ) {
                    	                alt92=4;
                    	            }
                    	            else {
                    	                if (state.backtracking>0) {state.failed=true; return element;}
                    	                NoViableAltException nvae =
                    	                    new NoViableAltException("", 92, 2, input);

                    	                throw nvae;
                    	            }
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 92, 1, input);

                    	            throw nvae;
                    	        }
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 92, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt92) {
                    	        case 1 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18860:4: a7= '.' (a8= STRING )
                    	            {
                    	            a7=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature14747); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_373, 496));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18872:4: (a8= STRING )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18873:5: a8= STRING
                    	            {
                    	            a8=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature14773); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a8 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a8.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a8).getLine(), ((org.antlr.runtime.CommonToken) a8).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a8).getStartIndex(), ((org.antlr.runtime.CommonToken) a8).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Property proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Property>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticPropertyReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a8, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a8, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 497));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 497));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 497));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 497));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 497));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18914:8: a9= '.' (a10= STRING ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')'
                    	            {
                    	            a9=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature14814); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_374, 498));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18926:4: (a10= STRING )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18927:5: a10= STRING
                    	            {
                    	            a10=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature14840); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a10 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a10.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a10).getLine(), ((org.antlr.runtime.CommonToken) a10).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a10).getStartIndex(), ((org.antlr.runtime.CommonToken) a10).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_375, 499));
                    	              			
                    	            }
                    	            a11=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature14873); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 500));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 500));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 500));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 500));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 500));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 500));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 500));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 500));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 500));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 500));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 500));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 500));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 500));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 500));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 500));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 500));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 500));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 500));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 500));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 500));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 500));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18995:4: ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )?
                    	            int alt91=2;
                    	            int LA91_0 = input.LA(1);

                    	            if ( ((LA91_0>=STRING && LA91_0<=BOOLEAN)||LA91_0==32||LA91_0==71||(LA91_0>=74 && LA91_0<=75)||LA91_0==78||LA91_0==81||(LA91_0>=83 && LA91_0<=84)||LA91_0==87||LA91_0==93||(LA91_0>=97 && LA91_0<=98)||LA91_0==101||LA91_0==104) ) {
                    	                alt91=1;
                    	            }
                    	            switch (alt91) {
                    	                case 1 :
                    	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18996:5: ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    	                    {
                    	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18996:5: ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18997:6: (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    	                    {
                    	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18997:6: (a12_0= parse_org_kermeta_language_behavior_Expression )
                    	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18998:7: a12_0= parse_org_kermeta_language_behavior_Expression
                    	                    {
                    	                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14914);
                    	                    a12_0=parse_org_kermeta_language_behavior_Expression();

                    	                    state._fsp--;
                    	                    if (state.failed) return element;
                    	                    if ( state.backtracking==0 ) {

                    	                      							if (terminateParsing) {
                    	                      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	                      							}
                    	                      							if (element == null) {
                    	                      								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                      							}
                    	                      							if (a12_0 != null) {
                    	                      								if (a12_0 != null) {
                    	                      									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a12_0);
                    	                      									completedElement(a12_0);
                    	                      								}
                    	                      								collectHiddenTokens(element);
                    	                      								copyLocalizationInfos(a12_0, element); 							}
                    	                      						
                    	                    }

                    	                    }

                    	                    if ( state.backtracking==0 ) {

                    	                      						// expected elements (follow set)
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 501));
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 501));
                    	                      					
                    	                    }
                    	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19020:6: ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    	                    loop90:
                    	                    do {
                    	                        int alt90=2;
                    	                        int LA90_0 = input.LA(1);

                    	                        if ( (LA90_0==26) ) {
                    	                            alt90=1;
                    	                        }


                    	                        switch (alt90) {
                    	                    	case 1 :
                    	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19021:7: (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) )
                    	                    	    {
                    	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19021:7: (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) )
                    	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19022:8: a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression )
                    	                    	    {
                    	                    	    a13=(Token)match(input,26,FOLLOW_26_in_parse_org_kermeta_language_behavior_CallFeature14969); if (state.failed) return element;
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								if (element == null) {
                    	                    	      									element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                    	      								}
                    	                    	      								collectHiddenTokens(element);
                    	                    	      								copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
                    	                    	      							
                    	                    	    }
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								// expected elements (follow set)
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 502));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 502));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 502));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 502));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 502));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 502));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 502));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 502));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 502));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 502));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 502));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 502));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 502));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 502));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 502));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 502));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 502));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 502));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 502));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 502));
                    	                    	      							
                    	                    	    }
                    	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19053:8: (a14_0= parse_org_kermeta_language_behavior_Expression )
                    	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19054:9: a14_0= parse_org_kermeta_language_behavior_Expression
                    	                    	    {
                    	                    	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15011);
                    	                    	    a14_0=parse_org_kermeta_language_behavior_Expression();

                    	                    	    state._fsp--;
                    	                    	    if (state.failed) return element;
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      									if (terminateParsing) {
                    	                    	      										throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	                    	      									}
                    	                    	      									if (element == null) {
                    	                    	      										element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                    	      									}
                    	                    	      									if (a14_0 != null) {
                    	                    	      										if (a14_0 != null) {
                    	                    	      											addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a14_0);
                    	                    	      											completedElement(a14_0);
                    	                    	      										}
                    	                    	      										collectHiddenTokens(element);
                    	                    	      										copyLocalizationInfos(a14_0, element); 									}
                    	                    	      								
                    	                    	    }

                    	                    	    }

                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								// expected elements (follow set)
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 503));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 503));
                    	                    	      							
                    	                    	    }

                    	                    	    }


                    	                    	    }
                    	                    	    break;

                    	                    	default :
                    	                    	    break loop90;
                    	                        }
                    	                    } while (true);

                    	                    if ( state.backtracking==0 ) {

                    	                      						// expected elements (follow set)
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 504));
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 504));
                    	                      					
                    	                    }

                    	                    }


                    	                    }
                    	                    break;

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 505));
                    	              			
                    	            }
                    	            a15=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature15115); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 506));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 506));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 506));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 506));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 506));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19108:8: a16= '.' (a17= STRING )
                    	            {
                    	            a16=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature15143); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a16, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_376, 507));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19120:4: (a17= STRING )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19121:5: a17= STRING
                    	            {
                    	            a17=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature15169); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a17 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a17.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a17).getLine(), ((org.antlr.runtime.CommonToken) a17).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a17).getStartIndex(), ((org.antlr.runtime.CommonToken) a17).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.EnumerationLiteral proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumerationLiteral();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.EnumerationLiteral>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticEnumLiteralReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a17, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a17, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 508));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 508));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 508));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 508));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 508));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19162:8: a18= '.' (a19= STRING )
                    	            {
                    	            a18=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature15210); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_377, 509));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19174:4: (a19= STRING )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19175:5: a19= STRING
                    	            {
                    	            a19=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature15236); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a19 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 510));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 510));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 510));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 510));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 510));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop93;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 511));
                      	
                    }
                    a20=(Token)match(input,88,FOLLOW_88_in_parse_org_kermeta_language_behavior_CallFeature15282); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 512));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 512));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 512));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 512));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 512));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 512));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 512));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 512));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 512));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 512));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 512));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 512));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 512));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 512));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 512));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 512));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 512));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 512));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 512));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 512));
                      	
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19257:2: (a21_0= parse_org_kermeta_language_behavior_Expression )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19258:3: a21_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15300);
                    a21_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (terminateParsing) {
                      				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      			}
                      			if (element == null) {
                      				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                      			}
                      			if (a21_0 != null) {
                      				if (a21_0 != null) {
                      					addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a21_0);
                      					completedElement(a21_0);
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos(a21_0, element); 			}
                      		
                    }

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_378, 513));
                      	
                    }
                    a22=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature15318); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a22, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 514));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19345:4: ( (a23_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a24_0= parse_org_kermeta_language_behavior_CallVariable ) | (a25_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a26_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a27_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a28_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a29= '.' (a30= STRING ) | a31= '.' (a32= STRING ) a33= '(' ( ( (a34_0= parse_org_kermeta_language_behavior_Expression ) ( (a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a37= ')' | a38= '.' (a39= STRING ) | a40= '.' (a41= STRING ) ) )* a42= '==' (a43_0= parse_org_kermeta_language_behavior_Expression )
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19345:4: ( (a23_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a24_0= parse_org_kermeta_language_behavior_CallVariable ) | (a25_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a26_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a27_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a28_0= parse_org_kermeta_language_behavior_IntegerLiteral ) )
                    int alt94=6;
                    switch ( input.LA(1) ) {
                    case BOOLEAN:
                        {
                        alt94=1;
                        }
                        break;
                    case STRING:
                    case 83:
                        {
                        alt94=2;
                        }
                        break;
                    case 98:
                        {
                        alt94=3;
                        }
                        break;
                    case 87:
                        {
                        alt94=4;
                        }
                        break;
                    case STRING_LITERAL:
                        {
                        alt94=5;
                        }
                        break;
                    case INTEGER:
                        {
                        alt94=6;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 94, 0, input);

                        throw nvae;
                    }

                    switch (alt94) {
                        case 1 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19346:3: (a23_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19346:3: (a23_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19347:4: a23_0= parse_org_kermeta_language_behavior_BooleanLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_CallFeature15345);
                            a23_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a23_0 != null) {
                              					if (a23_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a23_0);
                              						completedElement(a23_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a23_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 515));
                              		
                            }

                            }
                            break;
                        case 2 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19373:6: (a24_0= parse_org_kermeta_language_behavior_CallVariable )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19373:6: (a24_0= parse_org_kermeta_language_behavior_CallVariable )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19374:4: a24_0= parse_org_kermeta_language_behavior_CallVariable
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_CallFeature15379);
                            a24_0=parse_org_kermeta_language_behavior_CallVariable();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a24_0 != null) {
                              					if (a24_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a24_0);
                              						completedElement(a24_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a24_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 516));
                              		
                            }

                            }
                            break;
                        case 3 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19400:6: (a25_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19400:6: (a25_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19401:4: a25_0= parse_org_kermeta_language_behavior_JavaStaticCall
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_CallFeature15413);
                            a25_0=parse_org_kermeta_language_behavior_JavaStaticCall();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a25_0 != null) {
                              					if (a25_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a25_0);
                              						completedElement(a25_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a25_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 517));
                              		
                            }

                            }
                            break;
                        case 4 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19427:6: (a26_0= parse_org_kermeta_language_behavior_SelfExpression )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19427:6: (a26_0= parse_org_kermeta_language_behavior_SelfExpression )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19428:4: a26_0= parse_org_kermeta_language_behavior_SelfExpression
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_CallFeature15447);
                            a26_0=parse_org_kermeta_language_behavior_SelfExpression();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a26_0 != null) {
                              					if (a26_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a26_0);
                              						completedElement(a26_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a26_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 518));
                              		
                            }

                            }
                            break;
                        case 5 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19454:6: (a27_0= parse_org_kermeta_language_behavior_StringLiteral )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19454:6: (a27_0= parse_org_kermeta_language_behavior_StringLiteral )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19455:4: a27_0= parse_org_kermeta_language_behavior_StringLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_CallFeature15481);
                            a27_0=parse_org_kermeta_language_behavior_StringLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a27_0 != null) {
                              					if (a27_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a27_0);
                              						completedElement(a27_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a27_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 519));
                              		
                            }

                            }
                            break;
                        case 6 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19481:6: (a28_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19481:6: (a28_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19482:4: a28_0= parse_org_kermeta_language_behavior_IntegerLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_CallFeature15515);
                            a28_0=parse_org_kermeta_language_behavior_IntegerLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a28_0 != null) {
                              					if (a28_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a28_0);
                              						completedElement(a28_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a28_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 520));
                              		
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 521));
                      	
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19517:2: ( (a29= '.' (a30= STRING ) | a31= '.' (a32= STRING ) a33= '(' ( ( (a34_0= parse_org_kermeta_language_behavior_Expression ) ( (a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a37= ')' | a38= '.' (a39= STRING ) | a40= '.' (a41= STRING ) ) )*
                    loop98:
                    do {
                        int alt98=2;
                        int LA98_0 = input.LA(1);

                        if ( (LA98_0==19) ) {
                            alt98=1;
                        }


                        switch (alt98) {
                    	case 1 :
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19518:3: (a29= '.' (a30= STRING ) | a31= '.' (a32= STRING ) a33= '(' ( ( (a34_0= parse_org_kermeta_language_behavior_Expression ) ( (a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a37= ')' | a38= '.' (a39= STRING ) | a40= '.' (a41= STRING ) )
                    	    {
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19518:3: (a29= '.' (a30= STRING ) | a31= '.' (a32= STRING ) a33= '(' ( ( (a34_0= parse_org_kermeta_language_behavior_Expression ) ( (a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a37= ')' | a38= '.' (a39= STRING ) | a40= '.' (a41= STRING ) )
                    	    int alt97=4;
                    	    int LA97_0 = input.LA(1);

                    	    if ( (LA97_0==19) ) {
                    	        int LA97_1 = input.LA(2);

                    	        if ( (LA97_1==STRING) ) {
                    	            int LA97_2 = input.LA(3);

                    	            if ( (LA97_2==32) ) {
                    	                alt97=2;
                    	            }
                    	            else if ( (synpred239_Kermeta()) ) {
                    	                alt97=1;
                    	            }
                    	            else if ( (synpred243_Kermeta()) ) {
                    	                alt97=3;
                    	            }
                    	            else if ( (true) ) {
                    	                alt97=4;
                    	            }
                    	            else {
                    	                if (state.backtracking>0) {state.failed=true; return element;}
                    	                NoViableAltException nvae =
                    	                    new NoViableAltException("", 97, 2, input);

                    	                throw nvae;
                    	            }
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 97, 1, input);

                    	            throw nvae;
                    	        }
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 97, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt97) {
                    	        case 1 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19519:4: a29= '.' (a30= STRING )
                    	            {
                    	            a29=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature15554); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a29, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_384, 522));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19531:4: (a30= STRING )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19532:5: a30= STRING
                    	            {
                    	            a30=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature15580); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a30 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a30.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a30).getLine(), ((org.antlr.runtime.CommonToken) a30).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a30).getStartIndex(), ((org.antlr.runtime.CommonToken) a30).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Property proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Property>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticPropertyReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a30, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a30, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 523));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19573:8: a31= '.' (a32= STRING ) a33= '(' ( ( (a34_0= parse_org_kermeta_language_behavior_Expression ) ( (a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a37= ')'
                    	            {
                    	            a31=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature15621); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a31, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_385, 524));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19585:4: (a32= STRING )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19586:5: a32= STRING
                    	            {
                    	            a32=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature15647); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a32 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a32.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a32).getLine(), ((org.antlr.runtime.CommonToken) a32).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a32).getStartIndex(), ((org.antlr.runtime.CommonToken) a32).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a32, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a32, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_386, 525));
                    	              			
                    	            }
                    	            a33=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature15680); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a33, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_387, 526));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19654:4: ( ( (a34_0= parse_org_kermeta_language_behavior_Expression ) ( (a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )?
                    	            int alt96=2;
                    	            int LA96_0 = input.LA(1);

                    	            if ( ((LA96_0>=STRING && LA96_0<=BOOLEAN)||LA96_0==32||LA96_0==71||(LA96_0>=74 && LA96_0<=75)||LA96_0==78||LA96_0==81||(LA96_0>=83 && LA96_0<=84)||LA96_0==87||LA96_0==93||(LA96_0>=97 && LA96_0<=98)||LA96_0==101||LA96_0==104) ) {
                    	                alt96=1;
                    	            }
                    	            switch (alt96) {
                    	                case 1 :
                    	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19655:5: ( (a34_0= parse_org_kermeta_language_behavior_Expression ) ( (a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    	                    {
                    	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19655:5: ( (a34_0= parse_org_kermeta_language_behavior_Expression ) ( (a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19656:6: (a34_0= parse_org_kermeta_language_behavior_Expression ) ( (a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    	                    {
                    	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19656:6: (a34_0= parse_org_kermeta_language_behavior_Expression )
                    	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19657:7: a34_0= parse_org_kermeta_language_behavior_Expression
                    	                    {
                    	                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15721);
                    	                    a34_0=parse_org_kermeta_language_behavior_Expression();

                    	                    state._fsp--;
                    	                    if (state.failed) return element;
                    	                    if ( state.backtracking==0 ) {

                    	                      							if (terminateParsing) {
                    	                      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	                      							}
                    	                      							if (element == null) {
                    	                      								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                      							}
                    	                      							if (a34_0 != null) {
                    	                      								if (a34_0 != null) {
                    	                      									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a34_0);
                    	                      									completedElement(a34_0);
                    	                      								}
                    	                      								collectHiddenTokens(element);
                    	                      								copyLocalizationInfos(a34_0, element); 							}
                    	                      						
                    	                    }

                    	                    }

                    	                    if ( state.backtracking==0 ) {

                    	                      						// expected elements (follow set)
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_388, 527));
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_387, 527));
                    	                      					
                    	                    }
                    	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19679:6: ( (a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    	                    loop95:
                    	                    do {
                    	                        int alt95=2;
                    	                        int LA95_0 = input.LA(1);

                    	                        if ( (LA95_0==26) ) {
                    	                            alt95=1;
                    	                        }


                    	                        switch (alt95) {
                    	                    	case 1 :
                    	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19680:7: (a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression ) )
                    	                    	    {
                    	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19680:7: (a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression ) )
                    	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19681:8: a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression )
                    	                    	    {
                    	                    	    a35=(Token)match(input,26,FOLLOW_26_in_parse_org_kermeta_language_behavior_CallFeature15776); if (state.failed) return element;
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								if (element == null) {
                    	                    	      									element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                    	      								}
                    	                    	      								collectHiddenTokens(element);
                    	                    	      								copyLocalizationInfos((org.antlr.runtime.CommonToken)a35, element);
                    	                    	      							
                    	                    	    }
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								// expected elements (follow set)
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 528));
                    	                    	      							
                    	                    	    }
                    	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19712:8: (a36_0= parse_org_kermeta_language_behavior_Expression )
                    	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19713:9: a36_0= parse_org_kermeta_language_behavior_Expression
                    	                    	    {
                    	                    	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15818);
                    	                    	    a36_0=parse_org_kermeta_language_behavior_Expression();

                    	                    	    state._fsp--;
                    	                    	    if (state.failed) return element;
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      									if (terminateParsing) {
                    	                    	      										throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	                    	      									}
                    	                    	      									if (element == null) {
                    	                    	      										element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                    	      									}
                    	                    	      									if (a36_0 != null) {
                    	                    	      										if (a36_0 != null) {
                    	                    	      											addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a36_0);
                    	                    	      											completedElement(a36_0);
                    	                    	      										}
                    	                    	      										collectHiddenTokens(element);
                    	                    	      										copyLocalizationInfos(a36_0, element); 									}
                    	                    	      								
                    	                    	    }

                    	                    	    }

                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								// expected elements (follow set)
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_388, 529));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_387, 529));
                    	                    	      							
                    	                    	    }

                    	                    	    }


                    	                    	    }
                    	                    	    break;

                    	                    	default :
                    	                    	    break loop95;
                    	                        }
                    	                    } while (true);

                    	                    if ( state.backtracking==0 ) {

                    	                      						// expected elements (follow set)
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_388, 530));
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_387, 530));
                    	                      					
                    	                    }

                    	                    }


                    	                    }
                    	                    break;

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_387, 531));
                    	              			
                    	            }
                    	            a37=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature15922); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a37, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 532));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19767:8: a38= '.' (a39= STRING )
                    	            {
                    	            a38=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature15950); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a38, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_389, 533));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19779:4: (a39= STRING )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19780:5: a39= STRING
                    	            {
                    	            a39=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature15976); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a39 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a39.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a39).getLine(), ((org.antlr.runtime.CommonToken) a39).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a39).getStartIndex(), ((org.antlr.runtime.CommonToken) a39).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.EnumerationLiteral proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumerationLiteral();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.EnumerationLiteral>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticEnumLiteralReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a39, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a39, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 534));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19821:8: a40= '.' (a41= STRING )
                    	            {
                    	            a40=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature16017); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a40, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_390, 535));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19833:4: (a41= STRING )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19834:5: a41= STRING
                    	            {
                    	            a41=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature16043); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a41 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a41.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a41).getLine(), ((org.antlr.runtime.CommonToken) a41).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a41).getStartIndex(), ((org.antlr.runtime.CommonToken) a41).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a41, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a41, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 536));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop98;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 537));
                      	
                    }
                    a42=(Token)match(input,88,FOLLOW_88_in_parse_org_kermeta_language_behavior_CallFeature16089); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a42, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 538));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 538));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 538));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 538));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 538));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 538));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 538));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 538));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 538));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 538));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 538));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 538));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 538));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 538));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 538));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 538));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 538));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 538));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 538));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 538));
                      	
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19916:2: (a43_0= parse_org_kermeta_language_behavior_Expression )
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19917:3: a43_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature16107);
                    a43_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (terminateParsing) {
                      				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      			}
                      			if (element == null) {
                      				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                      			}
                      			if (a43_0 != null) {
                      				if (a43_0 != null) {
                      					addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a43_0);
                      					completedElement(a43_0);
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos(a43_0, element); 			}
                      		
                    }

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 539));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 539));
                      	
                    }

                    }
                    break;
                case 3 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19992:4: ( (a44_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a45_0= parse_org_kermeta_language_behavior_CallVariable ) | (a46_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a47_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a48_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a49_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a50= '.' (a51= STRING ) | a52= '.' (a53= STRING ) a54= '(' ( ( (a55_0= parse_org_kermeta_language_behavior_Expression ) ( (a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a58= ')' | a59= '.' (a60= STRING ) | a61= '.' (a62= STRING ) ) )* ( ( (a63= '+' | a64= '-' | a65= '/' | a66= '*' ) (a67_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    {
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19992:4: ( (a44_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a45_0= parse_org_kermeta_language_behavior_CallVariable ) | (a46_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a47_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a48_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a49_0= parse_org_kermeta_language_behavior_IntegerLiteral ) )
                    int alt99=6;
                    switch ( input.LA(1) ) {
                    case BOOLEAN:
                        {
                        alt99=1;
                        }
                        break;
                    case STRING:
                    case 83:
                        {
                        alt99=2;
                        }
                        break;
                    case 98:
                        {
                        alt99=3;
                        }
                        break;
                    case 87:
                        {
                        alt99=4;
                        }
                        break;
                    case STRING_LITERAL:
                        {
                        alt99=5;
                        }
                        break;
                    case INTEGER:
                        {
                        alt99=6;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 99, 0, input);

                        throw nvae;
                    }

                    switch (alt99) {
                        case 1 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19993:3: (a44_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19993:3: (a44_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19994:4: a44_0= parse_org_kermeta_language_behavior_BooleanLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_CallFeature16138);
                            a44_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a44_0 != null) {
                              					if (a44_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a44_0);
                              						completedElement(a44_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a44_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_391, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_392, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_393, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_394, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_398, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 540));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 540));
                              		
                            }

                            }
                            break;
                        case 2 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20077:6: (a45_0= parse_org_kermeta_language_behavior_CallVariable )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20077:6: (a45_0= parse_org_kermeta_language_behavior_CallVariable )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20078:4: a45_0= parse_org_kermeta_language_behavior_CallVariable
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_CallFeature16172);
                            a45_0=parse_org_kermeta_language_behavior_CallVariable();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a45_0 != null) {
                              					if (a45_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a45_0);
                              						completedElement(a45_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a45_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_391, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_392, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_393, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_394, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_398, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 541));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 541));
                              		
                            }

                            }
                            break;
                        case 3 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20161:6: (a46_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20161:6: (a46_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20162:4: a46_0= parse_org_kermeta_language_behavior_JavaStaticCall
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_CallFeature16206);
                            a46_0=parse_org_kermeta_language_behavior_JavaStaticCall();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a46_0 != null) {
                              					if (a46_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a46_0);
                              						completedElement(a46_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a46_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_391, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_392, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_393, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_394, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_398, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 542));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 542));
                              		
                            }

                            }
                            break;
                        case 4 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20245:6: (a47_0= parse_org_kermeta_language_behavior_SelfExpression )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20245:6: (a47_0= parse_org_kermeta_language_behavior_SelfExpression )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20246:4: a47_0= parse_org_kermeta_language_behavior_SelfExpression
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_CallFeature16240);
                            a47_0=parse_org_kermeta_language_behavior_SelfExpression();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a47_0 != null) {
                              					if (a47_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a47_0);
                              						completedElement(a47_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a47_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_391, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_392, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_393, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_394, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_398, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 543));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 543));
                              		
                            }

                            }
                            break;
                        case 5 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20329:6: (a48_0= parse_org_kermeta_language_behavior_StringLiteral )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20329:6: (a48_0= parse_org_kermeta_language_behavior_StringLiteral )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20330:4: a48_0= parse_org_kermeta_language_behavior_StringLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_CallFeature16274);
                            a48_0=parse_org_kermeta_language_behavior_StringLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a48_0 != null) {
                              					if (a48_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a48_0);
                              						completedElement(a48_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a48_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_391, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_392, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_393, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_394, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_398, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 544));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 544));
                              		
                            }

                            }
                            break;
                        case 6 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20413:6: (a49_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20413:6: (a49_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20414:4: a49_0= parse_org_kermeta_language_behavior_IntegerLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_CallFeature16308);
                            a49_0=parse_org_kermeta_language_behavior_IntegerLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a49_0 != null) {
                              					if (a49_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a49_0);
                              						completedElement(a49_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a49_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_391, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_392, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_393, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_394, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_398, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 545));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 545));
                              		
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_391, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_392, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_393, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_394, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_398, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 546));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 546));
                      	
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20563:2: ( (a50= '.' (a51= STRING ) | a52= '.' (a53= STRING ) a54= '(' ( ( (a55_0= parse_org_kermeta_language_behavior_Expression ) ( (a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a58= ')' | a59= '.' (a60= STRING ) | a61= '.' (a62= STRING ) ) )*
                    loop103:
                    do {
                        int alt103=2;
                        int LA103_0 = input.LA(1);

                        if ( (LA103_0==19) ) {
                            alt103=1;
                        }


                        switch (alt103) {
                    	case 1 :
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20564:3: (a50= '.' (a51= STRING ) | a52= '.' (a53= STRING ) a54= '(' ( ( (a55_0= parse_org_kermeta_language_behavior_Expression ) ( (a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a58= ')' | a59= '.' (a60= STRING ) | a61= '.' (a62= STRING ) )
                    	    {
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20564:3: (a50= '.' (a51= STRING ) | a52= '.' (a53= STRING ) a54= '(' ( ( (a55_0= parse_org_kermeta_language_behavior_Expression ) ( (a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a58= ')' | a59= '.' (a60= STRING ) | a61= '.' (a62= STRING ) )
                    	    int alt102=4;
                    	    int LA102_0 = input.LA(1);

                    	    if ( (LA102_0==19) ) {
                    	        int LA102_1 = input.LA(2);

                    	        if ( (LA102_1==STRING) ) {
                    	            int LA102_2 = input.LA(3);

                    	            if ( (LA102_2==32) ) {
                    	                alt102=2;
                    	            }
                    	            else if ( (synpred251_Kermeta()) ) {
                    	                alt102=1;
                    	            }
                    	            else if ( (synpred255_Kermeta()) ) {
                    	                alt102=3;
                    	            }
                    	            else if ( (true) ) {
                    	                alt102=4;
                    	            }
                    	            else {
                    	                if (state.backtracking>0) {state.failed=true; return element;}
                    	                NoViableAltException nvae =
                    	                    new NoViableAltException("", 102, 2, input);

                    	                throw nvae;
                    	            }
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 102, 1, input);

                    	            throw nvae;
                    	        }
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 102, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt102) {
                    	        case 1 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20565:4: a50= '.' (a51= STRING )
                    	            {
                    	            a50=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature16347); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a50, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_399, 547));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20577:4: (a51= STRING )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20578:5: a51= STRING
                    	            {
                    	            a51=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature16373); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a51 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a51.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a51).getLine(), ((org.antlr.runtime.CommonToken) a51).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a51).getStartIndex(), ((org.antlr.runtime.CommonToken) a51).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Property proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Property>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticPropertyReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a51, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a51, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_391, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_392, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_393, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_394, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_398, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 548));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 548));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20676:8: a52= '.' (a53= STRING ) a54= '(' ( ( (a55_0= parse_org_kermeta_language_behavior_Expression ) ( (a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a58= ')'
                    	            {
                    	            a52=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature16414); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a52, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_400, 549));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20688:4: (a53= STRING )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20689:5: a53= STRING
                    	            {
                    	            a53=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature16440); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a53 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a53.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a53).getLine(), ((org.antlr.runtime.CommonToken) a53).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a53).getStartIndex(), ((org.antlr.runtime.CommonToken) a53).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a53, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a53, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_401, 550));
                    	              			
                    	            }
                    	            a54=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature16473); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a54, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 551));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 551));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 551));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 551));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 551));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 551));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 551));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 551));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 551));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 551));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 551));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 551));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 551));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 551));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 551));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 551));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 551));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 551));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 551));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 551));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_402, 551));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20757:4: ( ( (a55_0= parse_org_kermeta_language_behavior_Expression ) ( (a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )?
                    	            int alt101=2;
                    	            int LA101_0 = input.LA(1);

                    	            if ( ((LA101_0>=STRING && LA101_0<=BOOLEAN)||LA101_0==32||LA101_0==71||(LA101_0>=74 && LA101_0<=75)||LA101_0==78||LA101_0==81||(LA101_0>=83 && LA101_0<=84)||LA101_0==87||LA101_0==93||(LA101_0>=97 && LA101_0<=98)||LA101_0==101||LA101_0==104) ) {
                    	                alt101=1;
                    	            }
                    	            switch (alt101) {
                    	                case 1 :
                    	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20758:5: ( (a55_0= parse_org_kermeta_language_behavior_Expression ) ( (a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    	                    {
                    	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20758:5: ( (a55_0= parse_org_kermeta_language_behavior_Expression ) ( (a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20759:6: (a55_0= parse_org_kermeta_language_behavior_Expression ) ( (a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    	                    {
                    	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20759:6: (a55_0= parse_org_kermeta_language_behavior_Expression )
                    	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20760:7: a55_0= parse_org_kermeta_language_behavior_Expression
                    	                    {
                    	                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature16514);
                    	                    a55_0=parse_org_kermeta_language_behavior_Expression();

                    	                    state._fsp--;
                    	                    if (state.failed) return element;
                    	                    if ( state.backtracking==0 ) {

                    	                      							if (terminateParsing) {
                    	                      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	                      							}
                    	                      							if (element == null) {
                    	                      								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                      							}
                    	                      							if (a55_0 != null) {
                    	                      								if (a55_0 != null) {
                    	                      									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a55_0);
                    	                      									completedElement(a55_0);
                    	                      								}
                    	                      								collectHiddenTokens(element);
                    	                      								copyLocalizationInfos(a55_0, element); 							}
                    	                      						
                    	                    }

                    	                    }

                    	                    if ( state.backtracking==0 ) {

                    	                      						// expected elements (follow set)
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_403, 552));
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_402, 552));
                    	                      					
                    	                    }
                    	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20782:6: ( (a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    	                    loop100:
                    	                    do {
                    	                        int alt100=2;
                    	                        int LA100_0 = input.LA(1);

                    	                        if ( (LA100_0==26) ) {
                    	                            alt100=1;
                    	                        }


                    	                        switch (alt100) {
                    	                    	case 1 :
                    	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20783:7: (a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression ) )
                    	                    	    {
                    	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20783:7: (a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression ) )
                    	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20784:8: a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression )
                    	                    	    {
                    	                    	    a56=(Token)match(input,26,FOLLOW_26_in_parse_org_kermeta_language_behavior_CallFeature16569); if (state.failed) return element;
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								if (element == null) {
                    	                    	      									element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                    	      								}
                    	                    	      								collectHiddenTokens(element);
                    	                    	      								copyLocalizationInfos((org.antlr.runtime.CommonToken)a56, element);
                    	                    	      							
                    	                    	    }
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								// expected elements (follow set)
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 553));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 553));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 553));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 553));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 553));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 553));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 553));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 553));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 553));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 553));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 553));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 553));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 553));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 553));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 553));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 553));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 553));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 553));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 553));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 553));
                    	                    	      							
                    	                    	    }
                    	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20815:8: (a57_0= parse_org_kermeta_language_behavior_Expression )
                    	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20816:9: a57_0= parse_org_kermeta_language_behavior_Expression
                    	                    	    {
                    	                    	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature16611);
                    	                    	    a57_0=parse_org_kermeta_language_behavior_Expression();

                    	                    	    state._fsp--;
                    	                    	    if (state.failed) return element;
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      									if (terminateParsing) {
                    	                    	      										throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	                    	      									}
                    	                    	      									if (element == null) {
                    	                    	      										element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                    	      									}
                    	                    	      									if (a57_0 != null) {
                    	                    	      										if (a57_0 != null) {
                    	                    	      											addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a57_0);
                    	                    	      											completedElement(a57_0);
                    	                    	      										}
                    	                    	      										collectHiddenTokens(element);
                    	                    	      										copyLocalizationInfos(a57_0, element); 									}
                    	                    	      								
                    	                    	    }

                    	                    	    }

                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								// expected elements (follow set)
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_403, 554));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_402, 554));
                    	                    	      							
                    	                    	    }

                    	                    	    }


                    	                    	    }
                    	                    	    break;

                    	                    	default :
                    	                    	    break loop100;
                    	                        }
                    	                    } while (true);

                    	                    if ( state.backtracking==0 ) {

                    	                      						// expected elements (follow set)
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_403, 555));
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_402, 555));
                    	                      					
                    	                    }

                    	                    }


                    	                    }
                    	                    break;

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_402, 556));
                    	              			
                    	            }
                    	            a58=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature16715); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a58, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_391, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_392, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_393, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_394, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_398, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 557));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 557));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20927:8: a59= '.' (a60= STRING )
                    	            {
                    	            a59=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature16743); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a59, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_404, 558));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20939:4: (a60= STRING )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20940:5: a60= STRING
                    	            {
                    	            a60=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature16769); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a60 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a60.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a60).getLine(), ((org.antlr.runtime.CommonToken) a60).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a60).getStartIndex(), ((org.antlr.runtime.CommonToken) a60).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.EnumerationLiteral proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumerationLiteral();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.EnumerationLiteral>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticEnumLiteralReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a60, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a60, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_391, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_392, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_393, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_394, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_398, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 559));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 559));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21038:8: a61= '.' (a62= STRING )
                    	            {
                    	            a61=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature16810); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a61, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_405, 560));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21050:4: (a62= STRING )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21051:5: a62= STRING
                    	            {
                    	            a62=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature16836); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a62 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a62.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a62).getLine(), ((org.antlr.runtime.CommonToken) a62).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a62).getStartIndex(), ((org.antlr.runtime.CommonToken) a62).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a62, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a62, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_391, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_392, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_393, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_394, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_398, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 561));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 561));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop103;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_391, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_392, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_393, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_394, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_398, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 562));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 562));
                      	
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21216:2: ( ( (a63= '+' | a64= '-' | a65= '/' | a66= '*' ) (a67_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    loop105:
                    do {
                        int alt105=2;
                        switch ( input.LA(1) ) {
                        case 89:
                            {
                            int LA105_2 = input.LA(2);

                            if ( (synpred260_Kermeta()) ) {
                                alt105=1;
                            }


                            }
                            break;
                        case 90:
                            {
                            int LA105_3 = input.LA(2);

                            if ( (synpred260_Kermeta()) ) {
                                alt105=1;
                            }


                            }
                            break;
                        case 91:
                            {
                            int LA105_4 = input.LA(2);

                            if ( (synpred260_Kermeta()) ) {
                                alt105=1;
                            }


                            }
                            break;
                        case 92:
                            {
                            int LA105_5 = input.LA(2);

                            if ( (synpred260_Kermeta()) ) {
                                alt105=1;
                            }


                            }
                            break;

                        }

                        switch (alt105) {
                    	case 1 :
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21217:3: ( (a63= '+' | a64= '-' | a65= '/' | a66= '*' ) (a67_0= parse_org_kermeta_language_behavior_Expression ) )
                    	    {
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21217:3: ( (a63= '+' | a64= '-' | a65= '/' | a66= '*' ) (a67_0= parse_org_kermeta_language_behavior_Expression ) )
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21218:4: (a63= '+' | a64= '-' | a65= '/' | a66= '*' ) (a67_0= parse_org_kermeta_language_behavior_Expression )
                    	    {
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21218:4: (a63= '+' | a64= '-' | a65= '/' | a66= '*' )
                    	    int alt104=4;
                    	    switch ( input.LA(1) ) {
                    	    case 89:
                    	        {
                    	        alt104=1;
                    	        }
                    	        break;
                    	    case 90:
                    	        {
                    	        alt104=2;
                    	        }
                    	        break;
                    	    case 91:
                    	        {
                    	        alt104=3;
                    	        }
                    	        break;
                    	    case 92:
                    	        {
                    	        alt104=4;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 104, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt104) {
                    	        case 1 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21219:5: a63= '+'
                    	            {
                    	            a63=(Token)match(input,89,FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature16897); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					collectHiddenTokens(element);
                    	              					copyLocalizationInfos((org.antlr.runtime.CommonToken)a63, element);
                    	              				
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              					// expected elements (follow set)
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 563));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 563));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 563));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 563));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 563));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 563));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 563));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 563));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 563));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 563));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 563));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 563));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 563));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 563));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 563));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 563));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 563));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 563));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 563));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 563));
                    	              				
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21251:10: a64= '-'
                    	            {
                    	            a64=(Token)match(input,90,FOLLOW_90_in_parse_org_kermeta_language_behavior_CallFeature16930); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					collectHiddenTokens(element);
                    	              					copyLocalizationInfos((org.antlr.runtime.CommonToken)a64, element);
                    	              				
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              					// expected elements (follow set)
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 564));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 564));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 564));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 564));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 564));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 564));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 564));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 564));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 564));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 564));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 564));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 564));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 564));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 564));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 564));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 564));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 564));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 564));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 564));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 564));
                    	              				
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21283:10: a65= '/'
                    	            {
                    	            a65=(Token)match(input,91,FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature16963); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					collectHiddenTokens(element);
                    	              					copyLocalizationInfos((org.antlr.runtime.CommonToken)a65, element);
                    	              				
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              					// expected elements (follow set)
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 565));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 565));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 565));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 565));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 565));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 565));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 565));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 565));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 565));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 565));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 565));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 565));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 565));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 565));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 565));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 565));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 565));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 565));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 565));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 565));
                    	              				
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21315:10: a66= '*'
                    	            {
                    	            a66=(Token)match(input,92,FOLLOW_92_in_parse_org_kermeta_language_behavior_CallFeature16996); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					collectHiddenTokens(element);
                    	              					copyLocalizationInfos((org.antlr.runtime.CommonToken)a66, element);
                    	              				
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              					// expected elements (follow set)
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 566));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 566));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 566));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 566));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 566));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 566));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 566));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 566));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 566));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 566));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 566));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 566));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 566));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 566));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 566));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 566));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 566));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 566));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 566));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 566));
                    	              				
                    	            }

                    	            }
                    	            break;

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      				// expected elements (follow set)
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 567));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 567));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 567));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 567));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 567));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 567));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 567));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 567));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 567));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 567));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 567));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 567));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 567));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 567));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 567));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 567));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 567));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 567));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 567));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 567));
                    	      			
                    	    }
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21371:4: (a67_0= parse_org_kermeta_language_behavior_Expression )
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21372:5: a67_0= parse_org_kermeta_language_behavior_Expression
                    	    {
                    	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature17038);
                    	    a67_0=parse_org_kermeta_language_behavior_Expression();

                    	    state._fsp--;
                    	    if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      					if (terminateParsing) {
                    	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      					}
                    	      					if (element == null) {
                    	      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	      					}
                    	      					if (a67_0 != null) {
                    	      						if (a67_0 != null) {
                    	      							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a67_0);
                    	      							completedElement(a67_0);
                    	      						}
                    	      						collectHiddenTokens(element);
                    	      						copyLocalizationInfos(a67_0, element); 					}
                    	      				
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      				// expected elements (follow set)
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_398, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 568));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 568));
                    	      			
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop105;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_398, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 569));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 569));
                      	
                    }

                    }
                    break;
                case 4 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21515:4: a68= '(' ( (a69_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a70_0= parse_org_kermeta_language_behavior_CallVariable ) | (a71_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a72_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a73_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a74_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a75= '.' (a76= STRING ) | a77= '.' (a78= STRING ) a79= '(' ( ( (a80_0= parse_org_kermeta_language_behavior_Expression ) ( (a81= ',' (a82_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a83= ')' | a84= '.' (a85= STRING ) | a86= '.' (a87= STRING ) ) )* ( ( (a88= '+' | a89= '-' | a90= '/' | a91= '*' ) (a92_0= parse_org_kermeta_language_behavior_Expression ) ) )* a93= ')' ( ( (a94= '+' | a95= '-' | a96= '/' | a97= '*' ) (a98_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    {
                    a68=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature17083); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a68, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 570));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 570));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 570));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 570));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 570));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 570));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 570));
                      	
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21533:2: ( (a69_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a70_0= parse_org_kermeta_language_behavior_CallVariable ) | (a71_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a72_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a73_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a74_0= parse_org_kermeta_language_behavior_IntegerLiteral ) )
                    int alt106=6;
                    switch ( input.LA(1) ) {
                    case BOOLEAN:
                        {
                        alt106=1;
                        }
                        break;
                    case STRING:
                    case 83:
                        {
                        alt106=2;
                        }
                        break;
                    case 98:
                        {
                        alt106=3;
                        }
                        break;
                    case 87:
                        {
                        alt106=4;
                        }
                        break;
                    case STRING_LITERAL:
                        {
                        alt106=5;
                        }
                        break;
                    case INTEGER:
                        {
                        alt106=6;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 106, 0, input);

                        throw nvae;
                    }

                    switch (alt106) {
                        case 1 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21534:3: (a69_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21534:3: (a69_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21535:4: a69_0= parse_org_kermeta_language_behavior_BooleanLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_CallFeature17106);
                            a69_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a69_0 != null) {
                              					if (a69_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a69_0);
                              						completedElement(a69_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a69_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_406, 571));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_407, 571));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_408, 571));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_409, 571));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_410, 571));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_411, 571));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_412, 571));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_413, 571));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_414, 571));
                              		
                            }

                            }
                            break;
                        case 2 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21565:6: (a70_0= parse_org_kermeta_language_behavior_CallVariable )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21565:6: (a70_0= parse_org_kermeta_language_behavior_CallVariable )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21566:4: a70_0= parse_org_kermeta_language_behavior_CallVariable
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_CallFeature17140);
                            a70_0=parse_org_kermeta_language_behavior_CallVariable();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a70_0 != null) {
                              					if (a70_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a70_0);
                              						completedElement(a70_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a70_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_406, 572));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_407, 572));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_408, 572));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_409, 572));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_410, 572));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_411, 572));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_412, 572));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_413, 572));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_414, 572));
                              		
                            }

                            }
                            break;
                        case 3 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21596:6: (a71_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21596:6: (a71_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21597:4: a71_0= parse_org_kermeta_language_behavior_JavaStaticCall
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_CallFeature17174);
                            a71_0=parse_org_kermeta_language_behavior_JavaStaticCall();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a71_0 != null) {
                              					if (a71_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a71_0);
                              						completedElement(a71_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a71_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_406, 573));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_407, 573));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_408, 573));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_409, 573));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_410, 573));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_411, 573));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_412, 573));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_413, 573));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_414, 573));
                              		
                            }

                            }
                            break;
                        case 4 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21627:6: (a72_0= parse_org_kermeta_language_behavior_SelfExpression )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21627:6: (a72_0= parse_org_kermeta_language_behavior_SelfExpression )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21628:4: a72_0= parse_org_kermeta_language_behavior_SelfExpression
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_CallFeature17208);
                            a72_0=parse_org_kermeta_language_behavior_SelfExpression();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a72_0 != null) {
                              					if (a72_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a72_0);
                              						completedElement(a72_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a72_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_406, 574));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_407, 574));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_408, 574));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_409, 574));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_410, 574));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_411, 574));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_412, 574));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_413, 574));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_414, 574));
                              		
                            }

                            }
                            break;
                        case 5 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21658:6: (a73_0= parse_org_kermeta_language_behavior_StringLiteral )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21658:6: (a73_0= parse_org_kermeta_language_behavior_StringLiteral )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21659:4: a73_0= parse_org_kermeta_language_behavior_StringLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_CallFeature17242);
                            a73_0=parse_org_kermeta_language_behavior_StringLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a73_0 != null) {
                              					if (a73_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a73_0);
                              						completedElement(a73_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a73_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_406, 575));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_407, 575));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_408, 575));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_409, 575));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_410, 575));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_411, 575));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_412, 575));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_413, 575));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_414, 575));
                              		
                            }

                            }
                            break;
                        case 6 :
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21689:6: (a74_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                            {
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21689:6: (a74_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21690:4: a74_0= parse_org_kermeta_language_behavior_IntegerLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_CallFeature17276);
                            a74_0=parse_org_kermeta_language_behavior_IntegerLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a74_0 != null) {
                              					if (a74_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a74_0);
                              						completedElement(a74_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a74_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_406, 576));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_407, 576));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_408, 576));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_409, 576));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_410, 576));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_411, 576));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_412, 576));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_413, 576));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_414, 576));
                              		
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_406, 577));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_407, 577));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_408, 577));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_409, 577));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_410, 577));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_411, 577));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_412, 577));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_413, 577));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_414, 577));
                      	
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21733:2: ( (a75= '.' (a76= STRING ) | a77= '.' (a78= STRING ) a79= '(' ( ( (a80_0= parse_org_kermeta_language_behavior_Expression ) ( (a81= ',' (a82_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a83= ')' | a84= '.' (a85= STRING ) | a86= '.' (a87= STRING ) ) )*
                    loop110:
                    do {
                        int alt110=2;
                        int LA110_0 = input.LA(1);

                        if ( (LA110_0==19) ) {
                            alt110=1;
                        }


                        switch (alt110) {
                    	case 1 :
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21734:3: (a75= '.' (a76= STRING ) | a77= '.' (a78= STRING ) a79= '(' ( ( (a80_0= parse_org_kermeta_language_behavior_Expression ) ( (a81= ',' (a82_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a83= ')' | a84= '.' (a85= STRING ) | a86= '.' (a87= STRING ) )
                    	    {
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21734:3: (a75= '.' (a76= STRING ) | a77= '.' (a78= STRING ) a79= '(' ( ( (a80_0= parse_org_kermeta_language_behavior_Expression ) ( (a81= ',' (a82_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a83= ')' | a84= '.' (a85= STRING ) | a86= '.' (a87= STRING ) )
                    	    int alt109=4;
                    	    int LA109_0 = input.LA(1);

                    	    if ( (LA109_0==19) ) {
                    	        int LA109_1 = input.LA(2);

                    	        if ( (LA109_1==STRING) ) {
                    	            int LA109_2 = input.LA(3);

                    	            if ( (LA109_2==32) ) {
                    	                alt109=2;
                    	            }
                    	            else if ( (synpred267_Kermeta()) ) {
                    	                alt109=1;
                    	            }
                    	            else if ( (synpred271_Kermeta()) ) {
                    	                alt109=3;
                    	            }
                    	            else if ( (true) ) {
                    	                alt109=4;
                    	            }
                    	            else {
                    	                if (state.backtracking>0) {state.failed=true; return element;}
                    	                NoViableAltException nvae =
                    	                    new NoViableAltException("", 109, 2, input);

                    	                throw nvae;
                    	            }
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 109, 1, input);

                    	            throw nvae;
                    	        }
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 109, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt109) {
                    	        case 1 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21735:4: a75= '.' (a76= STRING )
                    	            {
                    	            a75=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature17315); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a75, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_415, 578));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21747:4: (a76= STRING )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21748:5: a76= STRING
                    	            {
                    	            a76=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature17341); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a76 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a76.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a76).getLine(), ((org.antlr.runtime.CommonToken) a76).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a76).getStartIndex(), ((org.antlr.runtime.CommonToken) a76).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Property proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Property>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticPropertyReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a76, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a76, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_406, 579));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_407, 579));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_408, 579));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_409, 579));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_410, 579));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_411, 579));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_412, 579));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_413, 579));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_414, 579));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21793:8: a77= '.' (a78= STRING ) a79= '(' ( ( (a80_0= parse_org_kermeta_language_behavior_Expression ) ( (a81= ',' (a82_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a83= ')'
                    	            {
                    	            a77=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature17382); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a77, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_416, 580));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21805:4: (a78= STRING )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21806:5: a78= STRING
                    	            {
                    	            a78=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature17408); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a78 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a78.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a78).getLine(), ((org.antlr.runtime.CommonToken) a78).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a78).getStartIndex(), ((org.antlr.runtime.CommonToken) a78).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a78, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a78, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_417, 581));
                    	              			
                    	            }
                    	            a79=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature17441); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a79, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 582));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 582));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 582));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 582));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 582));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 582));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 582));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 582));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 582));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 582));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 582));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 582));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 582));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 582));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 582));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 582));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 582));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 582));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 582));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 582));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_418, 582));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21874:4: ( ( (a80_0= parse_org_kermeta_language_behavior_Expression ) ( (a81= ',' (a82_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )?
                    	            int alt108=2;
                    	            int LA108_0 = input.LA(1);

                    	            if ( ((LA108_0>=STRING && LA108_0<=BOOLEAN)||LA108_0==32||LA108_0==71||(LA108_0>=74 && LA108_0<=75)||LA108_0==78||LA108_0==81||(LA108_0>=83 && LA108_0<=84)||LA108_0==87||LA108_0==93||(LA108_0>=97 && LA108_0<=98)||LA108_0==101||LA108_0==104) ) {
                    	                alt108=1;
                    	            }
                    	            switch (alt108) {
                    	                case 1 :
                    	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21875:5: ( (a80_0= parse_org_kermeta_language_behavior_Expression ) ( (a81= ',' (a82_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    	                    {
                    	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21875:5: ( (a80_0= parse_org_kermeta_language_behavior_Expression ) ( (a81= ',' (a82_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21876:6: (a80_0= parse_org_kermeta_language_behavior_Expression ) ( (a81= ',' (a82_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    	                    {
                    	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21876:6: (a80_0= parse_org_kermeta_language_behavior_Expression )
                    	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21877:7: a80_0= parse_org_kermeta_language_behavior_Expression
                    	                    {
                    	                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature17482);
                    	                    a80_0=parse_org_kermeta_language_behavior_Expression();

                    	                    state._fsp--;
                    	                    if (state.failed) return element;
                    	                    if ( state.backtracking==0 ) {

                    	                      							if (terminateParsing) {
                    	                      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	                      							}
                    	                      							if (element == null) {
                    	                      								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                      							}
                    	                      							if (a80_0 != null) {
                    	                      								if (a80_0 != null) {
                    	                      									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a80_0);
                    	                      									completedElement(a80_0);
                    	                      								}
                    	                      								collectHiddenTokens(element);
                    	                      								copyLocalizationInfos(a80_0, element); 							}
                    	                      						
                    	                    }

                    	                    }

                    	                    if ( state.backtracking==0 ) {

                    	                      						// expected elements (follow set)
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_419, 583));
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_418, 583));
                    	                      					
                    	                    }
                    	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21899:6: ( (a81= ',' (a82_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    	                    loop107:
                    	                    do {
                    	                        int alt107=2;
                    	                        int LA107_0 = input.LA(1);

                    	                        if ( (LA107_0==26) ) {
                    	                            alt107=1;
                    	                        }


                    	                        switch (alt107) {
                    	                    	case 1 :
                    	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21900:7: (a81= ',' (a82_0= parse_org_kermeta_language_behavior_Expression ) )
                    	                    	    {
                    	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21900:7: (a81= ',' (a82_0= parse_org_kermeta_language_behavior_Expression ) )
                    	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21901:8: a81= ',' (a82_0= parse_org_kermeta_language_behavior_Expression )
                    	                    	    {
                    	                    	    a81=(Token)match(input,26,FOLLOW_26_in_parse_org_kermeta_language_behavior_CallFeature17537); if (state.failed) return element;
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								if (element == null) {
                    	                    	      									element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                    	      								}
                    	                    	      								collectHiddenTokens(element);
                    	                    	      								copyLocalizationInfos((org.antlr.runtime.CommonToken)a81, element);
                    	                    	      							
                    	                    	    }
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								// expected elements (follow set)
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 584));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 584));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 584));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 584));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 584));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 584));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 584));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 584));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 584));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 584));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 584));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 584));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 584));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 584));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 584));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 584));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 584));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 584));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 584));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 584));
                    	                    	      							
                    	                    	    }
                    	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21932:8: (a82_0= parse_org_kermeta_language_behavior_Expression )
                    	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21933:9: a82_0= parse_org_kermeta_language_behavior_Expression
                    	                    	    {
                    	                    	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature17579);
                    	                    	    a82_0=parse_org_kermeta_language_behavior_Expression();

                    	                    	    state._fsp--;
                    	                    	    if (state.failed) return element;
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      									if (terminateParsing) {
                    	                    	      										throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	                    	      									}
                    	                    	      									if (element == null) {
                    	                    	      										element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                    	      									}
                    	                    	      									if (a82_0 != null) {
                    	                    	      										if (a82_0 != null) {
                    	                    	      											addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a82_0);
                    	                    	      											completedElement(a82_0);
                    	                    	      										}
                    	                    	      										collectHiddenTokens(element);
                    	                    	      										copyLocalizationInfos(a82_0, element); 									}
                    	                    	      								
                    	                    	    }

                    	                    	    }

                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								// expected elements (follow set)
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_419, 585));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_418, 585));
                    	                    	      							
                    	                    	    }

                    	                    	    }


                    	                    	    }
                    	                    	    break;

                    	                    	default :
                    	                    	    break loop107;
                    	                        }
                    	                    } while (true);

                    	                    if ( state.backtracking==0 ) {

                    	                      						// expected elements (follow set)
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_419, 586));
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_418, 586));
                    	                      					
                    	                    }

                    	                    }


                    	                    }
                    	                    break;

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_418, 587));
                    	              			
                    	            }
                    	            a83=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature17683); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a83, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_406, 588));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_407, 588));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_408, 588));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_409, 588));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_410, 588));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_411, 588));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_412, 588));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_413, 588));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_414, 588));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21991:8: a84= '.' (a85= STRING )
                    	            {
                    	            a84=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature17711); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a84, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_420, 589));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22003:4: (a85= STRING )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22004:5: a85= STRING
                    	            {
                    	            a85=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature17737); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a85 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a85.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a85).getLine(), ((org.antlr.runtime.CommonToken) a85).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a85).getStartIndex(), ((org.antlr.runtime.CommonToken) a85).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.EnumerationLiteral proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumerationLiteral();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.EnumerationLiteral>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticEnumLiteralReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a85, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a85, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_406, 590));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_407, 590));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_408, 590));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_409, 590));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_410, 590));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_411, 590));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_412, 590));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_413, 590));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_414, 590));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22049:8: a86= '.' (a87= STRING )
                    	            {
                    	            a86=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature17778); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a86, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_421, 591));
                    	              			
                    	            }
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22061:4: (a87= STRING )
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22062:5: a87= STRING
                    	            {
                    	            a87=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature17804); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a87 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a87.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a87).getLine(), ((org.antlr.runtime.CommonToken) a87).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a87).getStartIndex(), ((org.antlr.runtime.CommonToken) a87).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a87, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a87, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_406, 592));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_407, 592));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_408, 592));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_409, 592));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_410, 592));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_411, 592));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_412, 592));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_413, 592));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_414, 592));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop110;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_406, 593));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_407, 593));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_408, 593));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_409, 593));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_410, 593));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_411, 593));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_412, 593));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_413, 593));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_414, 593));
                      	
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22121:2: ( ( (a88= '+' | a89= '-' | a90= '/' | a91= '*' ) (a92_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    loop112:
                    do {
                        int alt112=2;
                        int LA112_0 = input.LA(1);

                        if ( ((LA112_0>=89 && LA112_0<=92)) ) {
                            alt112=1;
                        }


                        switch (alt112) {
                    	case 1 :
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22122:3: ( (a88= '+' | a89= '-' | a90= '/' | a91= '*' ) (a92_0= parse_org_kermeta_language_behavior_Expression ) )
                    	    {
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22122:3: ( (a88= '+' | a89= '-' | a90= '/' | a91= '*' ) (a92_0= parse_org_kermeta_language_behavior_Expression ) )
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22123:4: (a88= '+' | a89= '-' | a90= '/' | a91= '*' ) (a92_0= parse_org_kermeta_language_behavior_Expression )
                    	    {
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22123:4: (a88= '+' | a89= '-' | a90= '/' | a91= '*' )
                    	    int alt111=4;
                    	    switch ( input.LA(1) ) {
                    	    case 89:
                    	        {
                    	        alt111=1;
                    	        }
                    	        break;
                    	    case 90:
                    	        {
                    	        alt111=2;
                    	        }
                    	        break;
                    	    case 91:
                    	        {
                    	        alt111=3;
                    	        }
                    	        break;
                    	    case 92:
                    	        {
                    	        alt111=4;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 111, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt111) {
                    	        case 1 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22124:5: a88= '+'
                    	            {
                    	            a88=(Token)match(input,89,FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature17865); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					collectHiddenTokens(element);
                    	              					copyLocalizationInfos((org.antlr.runtime.CommonToken)a88, element);
                    	              				
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              					// expected elements (follow set)
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 594));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 594));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 594));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 594));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 594));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 594));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 594));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 594));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 594));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 594));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 594));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 594));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 594));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 594));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 594));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 594));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 594));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 594));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 594));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 594));
                    	              				
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22156:10: a89= '-'
                    	            {
                    	            a89=(Token)match(input,90,FOLLOW_90_in_parse_org_kermeta_language_behavior_CallFeature17898); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					collectHiddenTokens(element);
                    	              					copyLocalizationInfos((org.antlr.runtime.CommonToken)a89, element);
                    	              				
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              					// expected elements (follow set)
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 595));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 595));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 595));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 595));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 595));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 595));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 595));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 595));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 595));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 595));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 595));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 595));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 595));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 595));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 595));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 595));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 595));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 595));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 595));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 595));
                    	              				
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22188:10: a90= '/'
                    	            {
                    	            a90=(Token)match(input,91,FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature17931); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					collectHiddenTokens(element);
                    	              					copyLocalizationInfos((org.antlr.runtime.CommonToken)a90, element);
                    	              				
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              					// expected elements (follow set)
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 596));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 596));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 596));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 596));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 596));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 596));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 596));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 596));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 596));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 596));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 596));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 596));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 596));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 596));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 596));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 596));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 596));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 596));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 596));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 596));
                    	              				
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22220:10: a91= '*'
                    	            {
                    	            a91=(Token)match(input,92,FOLLOW_92_in_parse_org_kermeta_language_behavior_CallFeature17964); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					collectHiddenTokens(element);
                    	              					copyLocalizationInfos((org.antlr.runtime.CommonToken)a91, element);
                    	              				
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              					// expected elements (follow set)
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 597));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 597));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 597));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 597));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 597));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 597));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 597));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 597));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 597));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 597));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 597));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 597));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 597));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 597));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 597));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 597));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 597));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 597));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 597));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 597));
                    	              				
                    	            }

                    	            }
                    	            break;

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      				// expected elements (follow set)
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 598));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 598));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 598));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 598));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 598));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 598));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 598));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 598));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 598));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 598));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 598));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 598));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 598));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 598));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 598));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 598));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 598));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 598));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 598));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 598));
                    	      			
                    	    }
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22276:4: (a92_0= parse_org_kermeta_language_behavior_Expression )
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22277:5: a92_0= parse_org_kermeta_language_behavior_Expression
                    	    {
                    	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature18006);
                    	    a92_0=parse_org_kermeta_language_behavior_Expression();

                    	    state._fsp--;
                    	    if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      					if (terminateParsing) {
                    	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      					}
                    	      					if (element == null) {
                    	      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	      					}
                    	      					if (a92_0 != null) {
                    	      						if (a92_0 != null) {
                    	      							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a92_0);
                    	      							completedElement(a92_0);
                    	      						}
                    	      						collectHiddenTokens(element);
                    	      						copyLocalizationInfos(a92_0, element); 					}
                    	      				
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      				// expected elements (follow set)
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_410, 599));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_411, 599));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_412, 599));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_413, 599));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_414, 599));
                    	      			
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop112;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_410, 600));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_411, 600));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_412, 600));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_413, 600));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_414, 600));
                      	
                    }
                    a93=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature18047); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a93, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_422, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_423, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_424, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_425, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 601));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 601));
                      	
                    }
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22382:2: ( ( (a94= '+' | a95= '-' | a96= '/' | a97= '*' ) (a98_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    loop114:
                    do {
                        int alt114=2;
                        switch ( input.LA(1) ) {
                        case 89:
                            {
                            int LA114_2 = input.LA(2);

                            if ( (synpred280_Kermeta()) ) {
                                alt114=1;
                            }


                            }
                            break;
                        case 90:
                            {
                            int LA114_3 = input.LA(2);

                            if ( (synpred280_Kermeta()) ) {
                                alt114=1;
                            }


                            }
                            break;
                        case 91:
                            {
                            int LA114_4 = input.LA(2);

                            if ( (synpred280_Kermeta()) ) {
                                alt114=1;
                            }


                            }
                            break;
                        case 92:
                            {
                            int LA114_5 = input.LA(2);

                            if ( (synpred280_Kermeta()) ) {
                                alt114=1;
                            }


                            }
                            break;

                        }

                        switch (alt114) {
                    	case 1 :
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22383:3: ( (a94= '+' | a95= '-' | a96= '/' | a97= '*' ) (a98_0= parse_org_kermeta_language_behavior_Expression ) )
                    	    {
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22383:3: ( (a94= '+' | a95= '-' | a96= '/' | a97= '*' ) (a98_0= parse_org_kermeta_language_behavior_Expression ) )
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22384:4: (a94= '+' | a95= '-' | a96= '/' | a97= '*' ) (a98_0= parse_org_kermeta_language_behavior_Expression )
                    	    {
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22384:4: (a94= '+' | a95= '-' | a96= '/' | a97= '*' )
                    	    int alt113=4;
                    	    switch ( input.LA(1) ) {
                    	    case 89:
                    	        {
                    	        alt113=1;
                    	        }
                    	        break;
                    	    case 90:
                    	        {
                    	        alt113=2;
                    	        }
                    	        break;
                    	    case 91:
                    	        {
                    	        alt113=3;
                    	        }
                    	        break;
                    	    case 92:
                    	        {
                    	        alt113=4;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 113, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt113) {
                    	        case 1 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22385:5: a94= '+'
                    	            {
                    	            a94=(Token)match(input,89,FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature18076); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					collectHiddenTokens(element);
                    	              					copyLocalizationInfos((org.antlr.runtime.CommonToken)a94, element);
                    	              				
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              					// expected elements (follow set)
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 602));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 602));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 602));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 602));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 602));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 602));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 602));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 602));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 602));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 602));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 602));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 602));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 602));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 602));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 602));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 602));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 602));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 602));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 602));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 602));
                    	              				
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22417:10: a95= '-'
                    	            {
                    	            a95=(Token)match(input,90,FOLLOW_90_in_parse_org_kermeta_language_behavior_CallFeature18109); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					collectHiddenTokens(element);
                    	              					copyLocalizationInfos((org.antlr.runtime.CommonToken)a95, element);
                    	              				
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              					// expected elements (follow set)
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 603));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 603));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 603));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 603));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 603));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 603));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 603));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 603));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 603));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 603));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 603));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 603));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 603));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 603));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 603));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 603));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 603));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 603));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 603));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 603));
                    	              				
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22449:10: a96= '/'
                    	            {
                    	            a96=(Token)match(input,91,FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature18142); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					collectHiddenTokens(element);
                    	              					copyLocalizationInfos((org.antlr.runtime.CommonToken)a96, element);
                    	              				
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              					// expected elements (follow set)
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 604));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 604));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 604));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 604));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 604));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 604));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 604));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 604));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 604));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 604));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 604));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 604));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 604));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 604));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 604));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 604));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 604));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 604));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 604));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 604));
                    	              				
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22481:10: a97= '*'
                    	            {
                    	            a97=(Token)match(input,92,FOLLOW_92_in_parse_org_kermeta_language_behavior_CallFeature18175); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					collectHiddenTokens(element);
                    	              					copyLocalizationInfos((org.antlr.runtime.CommonToken)a97, element);
                    	              				
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              					// expected elements (follow set)
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 605));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 605));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 605));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 605));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 605));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 605));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 605));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 605));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 605));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 605));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 605));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 605));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 605));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 605));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 605));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 605));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 605));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 605));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 605));
                    	              					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 605));
                    	              				
                    	            }

                    	            }
                    	            break;

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      				// expected elements (follow set)
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 606));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 606));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 606));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 606));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 606));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 606));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 606));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 606));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 606));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 606));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 606));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 606));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 606));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 606));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 606));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 606));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 606));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 606));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 606));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 606));
                    	      			
                    	    }
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22537:4: (a98_0= parse_org_kermeta_language_behavior_Expression )
                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22538:5: a98_0= parse_org_kermeta_language_behavior_Expression
                    	    {
                    	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature18217);
                    	    a98_0=parse_org_kermeta_language_behavior_Expression();

                    	    state._fsp--;
                    	    if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      					if (terminateParsing) {
                    	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      					}
                    	      					if (element == null) {
                    	      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	      					}
                    	      					if (a98_0 != null) {
                    	      						if (a98_0 != null) {
                    	      							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a98_0);
                    	      							completedElement(a98_0);
                    	      						}
                    	      						collectHiddenTokens(element);
                    	      						copyLocalizationInfos(a98_0, element); 					}
                    	      				
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      				// expected elements (follow set)
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_422, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_423, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_424, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_425, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 607));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 607));
                    	      			
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop114;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_422, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_423, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_424, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_425, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 608));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 608));
                      	
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 44, parse_org_kermeta_language_behavior_CallFeature_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_CallFeature"


    // $ANTLR start "parse_org_kermeta_language_behavior_CallValue"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22682:1: parse_org_kermeta_language_behavior_CallValue returns [org.kermeta.language.behavior.CallValue element = null] : a0= 'CallValue' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= STRING ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_Expression ) | a17= 'name' a18= ':' (a19= STRING ) | a20= 'staticTypeVariableBindings' a21= ':' (a22= STRING ) ) )* a23= '}' ;
    public final org.kermeta.language.behavior.CallValue parse_org_kermeta_language_behavior_CallValue() throws RecognitionException {
        org.kermeta.language.behavior.CallValue element =  null;
        int parse_org_kermeta_language_behavior_CallValue_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        Token a21=null;
        Token a22=null;
        Token a23=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;

        org.kermeta.language.behavior.Expression a16_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22685:1: (a0= 'CallValue' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= STRING ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_Expression ) | a17= 'name' a18= ':' (a19= STRING ) | a20= 'staticTypeVariableBindings' a21= ':' (a22= STRING ) ) )* a23= '}' )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22686:2: a0= 'CallValue' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= STRING ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_Expression ) | a17= 'name' a18= ':' (a19= STRING ) | a20= 'staticTypeVariableBindings' a21= ':' (a22= STRING ) ) )* a23= '}'
            {
            a0=(Token)match(input,93,FOLLOW_93_in_parse_org_kermeta_language_behavior_CallValue18273); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_426, 609));
              	
            }
            a1=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_behavior_CallValue18287); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 610));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 610));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 610));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 610));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 610));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 610));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 610));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 610));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22717:2: ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= STRING ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_Expression ) | a17= 'name' a18= ':' (a19= STRING ) | a20= 'staticTypeVariableBindings' a21= ':' (a22= STRING ) ) )*
            loop117:
            do {
                int alt117=2;
                int LA117_0 = input.LA(1);

                if ( ((LA117_0>=38 && LA117_0<=39)||LA117_0==43||LA117_0==46||(LA117_0>=94 && LA117_0<=96)) ) {
                    alt117=1;
                }


                switch (alt117) {
            	case 1 :
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22718:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= STRING ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_Expression ) | a17= 'name' a18= ':' (a19= STRING ) | a20= 'staticTypeVariableBindings' a21= ':' (a22= STRING ) )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22718:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= STRING ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_Expression ) | a17= 'name' a18= ':' (a19= STRING ) | a20= 'staticTypeVariableBindings' a21= ':' (a22= STRING ) )
            	    int alt116=7;
            	    switch ( input.LA(1) ) {
            	    case 38:
            	        {
            	        alt116=1;
            	        }
            	        break;
            	    case 39:
            	        {
            	        alt116=2;
            	        }
            	        break;
            	    case 46:
            	        {
            	        alt116=3;
            	        }
            	        break;
            	    case 94:
            	        {
            	        alt116=4;
            	        }
            	        break;
            	    case 95:
            	        {
            	        alt116=5;
            	        }
            	        break;
            	    case 43:
            	        {
            	        alt116=6;
            	        }
            	        break;
            	    case 96:
            	        {
            	        alt116=7;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 116, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt116) {
            	        case 1 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22719:4: a2= 'tag' a3= ':' (a4= STRING )
            	            {
            	            a2=(Token)match(input,38,FOLLOW_38_in_parse_org_kermeta_language_behavior_CallValue18310); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_427, 611));
            	              			
            	            }
            	            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_CallValue18330); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_428, 612));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22743:4: (a4= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22744:5: a4= STRING
            	            {
            	            a4=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallValue18356); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 613));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 613));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 613));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 613));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 613));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 613));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 613));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 613));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22788:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_behavior_CallValue18397); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_429, 614));
            	              			
            	            }
            	            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_CallValue18417); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 615));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22812:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22813:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_CallValue18443);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 616));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 616));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 616));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 616));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 616));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 616));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 616));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 616));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22842:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,46,FOLLOW_46_in_parse_org_kermeta_language_behavior_CallValue18479); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_430, 617));
            	              			
            	            }
            	            a9=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_CallValue18499); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 618));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 618));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 618));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 618));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 618));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 618));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 618));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 618));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 618));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 618));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 618));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 618));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22877:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22878:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_behavior_CallValue18525);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 619));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 619));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 619));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 619));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 619));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 619));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 619));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 619));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22907:8: a11= 'staticType' a12= ':' (a13= STRING )
            	            {
            	            a11=(Token)match(input,94,FOLLOW_94_in_parse_org_kermeta_language_behavior_CallValue18561); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_431, 620));
            	              			
            	            }
            	            a12=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_CallValue18581); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_432, 621));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22931:4: (a13= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22932:5: a13= STRING
            	            {
            	            a13=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallValue18607); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__STATIC_TYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.Expression, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getExpressionStaticTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__STATIC_TYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__STATIC_TYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 622));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 622));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 622));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 622));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 622));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 622));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 622));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 622));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22976:8: a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_Expression )
            	            {
            	            a14=(Token)match(input,95,FOLLOW_95_in_parse_org_kermeta_language_behavior_CallValue18648); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_433, 623));
            	              			
            	            }
            	            a15=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_CallValue18668); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 624));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 624));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 624));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 624));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 624));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 624));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 624));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 624));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 624));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 624));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 624));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 624));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 624));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 624));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 624));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 624));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 624));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 624));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 624));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 624));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23019:4: (a16_0= parse_org_kermeta_language_behavior_Expression )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23020:5: a16_0= parse_org_kermeta_language_behavior_Expression
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallValue18694);
            	            a16_0=parse_org_kermeta_language_behavior_Expression();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
            	              					}
            	              					if (a16_0 != null) {
            	              						if (a16_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__PARAMETERS, a16_0);
            	              							completedElement(a16_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a16_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 625));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 625));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 625));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 625));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 625));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 625));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 625));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 625));
            	              			
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23049:8: a17= 'name' a18= ':' (a19= STRING )
            	            {
            	            a17=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_behavior_CallValue18730); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_434, 626));
            	              			
            	            }
            	            a18=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_CallValue18750); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_435, 627));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23073:4: (a19= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23074:5: a19= STRING
            	            {
            	            a19=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallValue18776); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
            	              					}
            	              					if (a19 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__NAME), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__NAME), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 628));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 628));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 628));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 628));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 628));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 628));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 628));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 628));
            	              			
            	            }

            	            }
            	            break;
            	        case 7 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23114:8: a20= 'staticTypeVariableBindings' a21= ':' (a22= STRING )
            	            {
            	            a20=(Token)match(input,96,FOLLOW_96_in_parse_org_kermeta_language_behavior_CallValue18817); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_436, 629));
            	              			
            	            }
            	            a21=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_CallValue18837); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a21, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_437, 630));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23138:4: (a22= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23139:5: a22= STRING
            	            {
            	            a22=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallValue18863); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
            	              					}
            	              					if (a22 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a22.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__STATIC_TYPE_VARIABLE_BINDINGS), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a22).getLine(), ((org.antlr.runtime.CommonToken) a22).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a22).getStartIndex(), ((org.antlr.runtime.CommonToken) a22).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallExpression, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallExpressionStaticTypeVariableBindingsReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__STATIC_TYPE_VARIABLE_BINDINGS), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_VALUE__STATIC_TYPE_VARIABLE_BINDINGS, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a22, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a22, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 631));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 631));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 631));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 631));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 631));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 631));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 631));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 631));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop117;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 632));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 632));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 632));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 632));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 632));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 632));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 632));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 632));
              	
            }
            a23=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_behavior_CallValue18909); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 633));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 633));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 45, parse_org_kermeta_language_behavior_CallValue_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_CallValue"


    // $ANTLR start "parse_org_kermeta_language_behavior_EmptyExpression"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23261:1: parse_org_kermeta_language_behavior_EmptyExpression returns [org.kermeta.language.behavior.EmptyExpression element = null] : a0= 'EmptyExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= STRING ) ) )* a14= '}' ;
    public final org.kermeta.language.behavior.EmptyExpression parse_org_kermeta_language_behavior_EmptyExpression() throws RecognitionException {
        org.kermeta.language.behavior.EmptyExpression element =  null;
        int parse_org_kermeta_language_behavior_EmptyExpression_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23264:1: (a0= 'EmptyExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= STRING ) ) )* a14= '}' )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23265:2: a0= 'EmptyExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= STRING ) ) )* a14= '}'
            {
            a0=(Token)match(input,97,FOLLOW_97_in_parse_org_kermeta_language_behavior_EmptyExpression18938); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_438, 634));
              	
            }
            a1=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_behavior_EmptyExpression18952); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 635));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 635));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 635));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 635));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 635));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23293:2: ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= STRING ) ) )*
            loop119:
            do {
                int alt119=2;
                int LA119_0 = input.LA(1);

                if ( ((LA119_0>=38 && LA119_0<=39)||LA119_0==46||LA119_0==94) ) {
                    alt119=1;
                }


                switch (alt119) {
            	case 1 :
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23294:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= STRING ) )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23294:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= STRING ) )
            	    int alt118=4;
            	    switch ( input.LA(1) ) {
            	    case 38:
            	        {
            	        alt118=1;
            	        }
            	        break;
            	    case 39:
            	        {
            	        alt118=2;
            	        }
            	        break;
            	    case 46:
            	        {
            	        alt118=3;
            	        }
            	        break;
            	    case 94:
            	        {
            	        alt118=4;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 118, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt118) {
            	        case 1 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23295:4: a2= 'tag' a3= ':' (a4= STRING )
            	            {
            	            a2=(Token)match(input,38,FOLLOW_38_in_parse_org_kermeta_language_behavior_EmptyExpression18975); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_439, 636));
            	              			
            	            }
            	            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_EmptyExpression18995); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_440, 637));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23319:4: (a4= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23320:5: a4= STRING
            	            {
            	            a4=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_EmptyExpression19021); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 638));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 638));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 638));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 638));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 638));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23361:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_behavior_EmptyExpression19062); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_441, 639));
            	              			
            	            }
            	            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_EmptyExpression19082); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 640));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23385:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23386:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_EmptyExpression19108);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 641));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 641));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 641));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 641));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 641));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23412:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,46,FOLLOW_46_in_parse_org_kermeta_language_behavior_EmptyExpression19144); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_442, 642));
            	              			
            	            }
            	            a9=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_EmptyExpression19164); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 643));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 643));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 643));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 643));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 643));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 643));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 643));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 643));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 643));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 643));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 643));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 643));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23447:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23448:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_behavior_EmptyExpression19190);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 644));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 644));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 644));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 644));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 644));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23474:8: a11= 'staticType' a12= ':' (a13= STRING )
            	            {
            	            a11=(Token)match(input,94,FOLLOW_94_in_parse_org_kermeta_language_behavior_EmptyExpression19226); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_443, 645));
            	              			
            	            }
            	            a12=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_EmptyExpression19246); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_444, 646));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23498:4: (a13= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23499:5: a13= STRING
            	            {
            	            a13=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_EmptyExpression19272); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__STATIC_TYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.Expression, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getExpressionStaticTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__STATIC_TYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__STATIC_TYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 647));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 647));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 647));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 647));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 647));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop119;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 648));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 648));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 648));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 648));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 648));
              	
            }
            a14=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_behavior_EmptyExpression19318); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 649));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 649));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 46, parse_org_kermeta_language_behavior_EmptyExpression_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_EmptyExpression"


    // $ANTLR start "parse_org_kermeta_language_behavior_JavaStaticCall"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23615:1: parse_org_kermeta_language_behavior_JavaStaticCall returns [org.kermeta.language.behavior.JavaStaticCall element = null] : a0= 'JavaStaticCall' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= STRING ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_Expression ) | a17= 'jclass' a18= ':' (a19= STRING ) | a20= 'jmethod' a21= ':' (a22= STRING ) ) )* a23= '}' ;
    public final org.kermeta.language.behavior.JavaStaticCall parse_org_kermeta_language_behavior_JavaStaticCall() throws RecognitionException {
        org.kermeta.language.behavior.JavaStaticCall element =  null;
        int parse_org_kermeta_language_behavior_JavaStaticCall_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        Token a21=null;
        Token a22=null;
        Token a23=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;

        org.kermeta.language.behavior.Expression a16_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23618:1: (a0= 'JavaStaticCall' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= STRING ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_Expression ) | a17= 'jclass' a18= ':' (a19= STRING ) | a20= 'jmethod' a21= ':' (a22= STRING ) ) )* a23= '}' )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23619:2: a0= 'JavaStaticCall' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= STRING ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_Expression ) | a17= 'jclass' a18= ':' (a19= STRING ) | a20= 'jmethod' a21= ':' (a22= STRING ) ) )* a23= '}'
            {
            a0=(Token)match(input,98,FOLLOW_98_in_parse_org_kermeta_language_behavior_JavaStaticCall19347); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_445, 650));
              	
            }
            a1=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_behavior_JavaStaticCall19361); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 651));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 651));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 651));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 651));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 651));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 651));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 651));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 651));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23650:2: ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= STRING ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_Expression ) | a17= 'jclass' a18= ':' (a19= STRING ) | a20= 'jmethod' a21= ':' (a22= STRING ) ) )*
            loop121:
            do {
                int alt121=2;
                int LA121_0 = input.LA(1);

                if ( ((LA121_0>=38 && LA121_0<=39)||LA121_0==46||(LA121_0>=94 && LA121_0<=95)||(LA121_0>=99 && LA121_0<=100)) ) {
                    alt121=1;
                }


                switch (alt121) {
            	case 1 :
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23651:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= STRING ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_Expression ) | a17= 'jclass' a18= ':' (a19= STRING ) | a20= 'jmethod' a21= ':' (a22= STRING ) )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23651:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= STRING ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_Expression ) | a17= 'jclass' a18= ':' (a19= STRING ) | a20= 'jmethod' a21= ':' (a22= STRING ) )
            	    int alt120=7;
            	    switch ( input.LA(1) ) {
            	    case 38:
            	        {
            	        alt120=1;
            	        }
            	        break;
            	    case 39:
            	        {
            	        alt120=2;
            	        }
            	        break;
            	    case 46:
            	        {
            	        alt120=3;
            	        }
            	        break;
            	    case 94:
            	        {
            	        alt120=4;
            	        }
            	        break;
            	    case 95:
            	        {
            	        alt120=5;
            	        }
            	        break;
            	    case 99:
            	        {
            	        alt120=6;
            	        }
            	        break;
            	    case 100:
            	        {
            	        alt120=7;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 120, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt120) {
            	        case 1 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23652:4: a2= 'tag' a3= ':' (a4= STRING )
            	            {
            	            a2=(Token)match(input,38,FOLLOW_38_in_parse_org_kermeta_language_behavior_JavaStaticCall19384); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_446, 652));
            	              			
            	            }
            	            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_JavaStaticCall19404); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_447, 653));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23676:4: (a4= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23677:5: a4= STRING
            	            {
            	            a4=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_JavaStaticCall19430); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 654));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 654));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 654));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 654));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 654));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 654));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 654));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 654));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23721:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_behavior_JavaStaticCall19471); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_448, 655));
            	              			
            	            }
            	            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_JavaStaticCall19491); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 656));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23745:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23746:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_JavaStaticCall19517);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 657));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 657));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 657));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 657));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 657));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 657));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 657));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 657));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23775:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,46,FOLLOW_46_in_parse_org_kermeta_language_behavior_JavaStaticCall19553); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_449, 658));
            	              			
            	            }
            	            a9=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_JavaStaticCall19573); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 659));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 659));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 659));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 659));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 659));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 659));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 659));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 659));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 659));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 659));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 659));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 659));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23810:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23811:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_behavior_JavaStaticCall19599);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 660));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 660));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 660));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 660));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 660));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 660));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 660));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 660));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23840:8: a11= 'staticType' a12= ':' (a13= STRING )
            	            {
            	            a11=(Token)match(input,94,FOLLOW_94_in_parse_org_kermeta_language_behavior_JavaStaticCall19635); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_450, 661));
            	              			
            	            }
            	            a12=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_JavaStaticCall19655); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_451, 662));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23864:4: (a13= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23865:5: a13= STRING
            	            {
            	            a13=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_JavaStaticCall19681); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__STATIC_TYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.Expression, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getExpressionStaticTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__STATIC_TYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__STATIC_TYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 663));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 663));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 663));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 663));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 663));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 663));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 663));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 663));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23909:8: a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_Expression )
            	            {
            	            a14=(Token)match(input,95,FOLLOW_95_in_parse_org_kermeta_language_behavior_JavaStaticCall19722); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_452, 664));
            	              			
            	            }
            	            a15=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_JavaStaticCall19742); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 665));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 665));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 665));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 665));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 665));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 665));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 665));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 665));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 665));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 665));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 665));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 665));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 665));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 665));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 665));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 665));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 665));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 665));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 665));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 665));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23952:4: (a16_0= parse_org_kermeta_language_behavior_Expression )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23953:5: a16_0= parse_org_kermeta_language_behavior_Expression
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_JavaStaticCall19768);
            	            a16_0=parse_org_kermeta_language_behavior_Expression();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
            	              					}
            	              					if (a16_0 != null) {
            	              						if (a16_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__PARAMETERS, a16_0);
            	              							completedElement(a16_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a16_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 666));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 666));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 666));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 666));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 666));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 666));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 666));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 666));
            	              			
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:23982:8: a17= 'jclass' a18= ':' (a19= STRING )
            	            {
            	            a17=(Token)match(input,99,FOLLOW_99_in_parse_org_kermeta_language_behavior_JavaStaticCall19804); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_453, 667));
            	              			
            	            }
            	            a18=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_JavaStaticCall19824); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_454, 668));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24006:4: (a19= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24007:5: a19= STRING
            	            {
            	            a19=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_JavaStaticCall19850); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
            	              					}
            	              					if (a19 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JCLASS), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JCLASS), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 669));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 669));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 669));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 669));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 669));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 669));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 669));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 669));
            	              			
            	            }

            	            }
            	            break;
            	        case 7 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24047:8: a20= 'jmethod' a21= ':' (a22= STRING )
            	            {
            	            a20=(Token)match(input,100,FOLLOW_100_in_parse_org_kermeta_language_behavior_JavaStaticCall19891); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_455, 670));
            	              			
            	            }
            	            a21=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_JavaStaticCall19911); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a21, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_456, 671));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24071:4: (a22= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24072:5: a22= STRING
            	            {
            	            a22=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_JavaStaticCall19937); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
            	              					}
            	              					if (a22 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a22.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JMETHOD), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a22).getLine(), ((org.antlr.runtime.CommonToken) a22).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a22).getStartIndex(), ((org.antlr.runtime.CommonToken) a22).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JMETHOD), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a22, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 672));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 672));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 672));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 672));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 672));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 672));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 672));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 672));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop121;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 673));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 673));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 673));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 673));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 673));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 673));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 673));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 673));
              	
            }
            a23=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_behavior_JavaStaticCall19983); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 674));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 674));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 47, parse_org_kermeta_language_behavior_JavaStaticCall_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_JavaStaticCall"


    // $ANTLR start "parse_org_kermeta_language_behavior_LambdaExpression"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24190:1: parse_org_kermeta_language_behavior_LambdaExpression returns [org.kermeta.language.behavior.LambdaExpression element = null] : a0= 'LambdaExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= STRING ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) ) )* a20= '}' ;
    public final org.kermeta.language.behavior.LambdaExpression parse_org_kermeta_language_behavior_LambdaExpression() throws RecognitionException {
        org.kermeta.language.behavior.LambdaExpression element =  null;
        int parse_org_kermeta_language_behavior_LambdaExpression_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a17=null;
        Token a18=null;
        Token a20=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;

        org.kermeta.language.behavior.LambdaParameter a16_0 = null;

        org.kermeta.language.behavior.Expression a19_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24193:1: (a0= 'LambdaExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= STRING ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) ) )* a20= '}' )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24194:2: a0= 'LambdaExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= STRING ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) ) )* a20= '}'
            {
            a0=(Token)match(input,101,FOLLOW_101_in_parse_org_kermeta_language_behavior_LambdaExpression20012); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_457, 675));
              	
            }
            a1=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_behavior_LambdaExpression20026); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 676));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 676));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 676));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 676));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 676));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 676));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 676));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24224:2: ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= STRING ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) ) )*
            loop123:
            do {
                int alt123=2;
                int LA123_0 = input.LA(1);

                if ( ((LA123_0>=38 && LA123_0<=39)||LA123_0==46||(LA123_0>=94 && LA123_0<=95)||LA123_0==102) ) {
                    alt123=1;
                }


                switch (alt123) {
            	case 1 :
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24225:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= STRING ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24225:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= STRING ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) )
            	    int alt122=6;
            	    switch ( input.LA(1) ) {
            	    case 38:
            	        {
            	        alt122=1;
            	        }
            	        break;
            	    case 39:
            	        {
            	        alt122=2;
            	        }
            	        break;
            	    case 46:
            	        {
            	        alt122=3;
            	        }
            	        break;
            	    case 94:
            	        {
            	        alt122=4;
            	        }
            	        break;
            	    case 95:
            	        {
            	        alt122=5;
            	        }
            	        break;
            	    case 102:
            	        {
            	        alt122=6;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 122, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt122) {
            	        case 1 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24226:4: a2= 'tag' a3= ':' (a4= STRING )
            	            {
            	            a2=(Token)match(input,38,FOLLOW_38_in_parse_org_kermeta_language_behavior_LambdaExpression20049); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_458, 677));
            	              			
            	            }
            	            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaExpression20069); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_459, 678));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24250:4: (a4= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24251:5: a4= STRING
            	            {
            	            a4=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_LambdaExpression20095); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 679));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 679));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 679));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 679));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 679));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 679));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 679));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24294:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_behavior_LambdaExpression20136); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_460, 680));
            	              			
            	            }
            	            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaExpression20156); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 681));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24318:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24319:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_LambdaExpression20182);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 682));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 682));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 682));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 682));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 682));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 682));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 682));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24347:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,46,FOLLOW_46_in_parse_org_kermeta_language_behavior_LambdaExpression20218); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_461, 683));
            	              			
            	            }
            	            a9=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaExpression20238); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 684));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 684));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 684));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 684));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 684));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 684));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 684));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 684));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 684));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 684));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 684));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 684));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24382:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24383:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_behavior_LambdaExpression20264);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 685));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 685));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 685));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 685));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 685));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 685));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 685));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24411:8: a11= 'staticType' a12= ':' (a13= STRING )
            	            {
            	            a11=(Token)match(input,94,FOLLOW_94_in_parse_org_kermeta_language_behavior_LambdaExpression20300); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_462, 686));
            	              			
            	            }
            	            a12=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaExpression20320); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_463, 687));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24435:4: (a13= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24436:5: a13= STRING
            	            {
            	            a13=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_LambdaExpression20346); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__STATIC_TYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.TypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariable();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.Expression, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getExpressionStaticTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__STATIC_TYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__STATIC_TYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 688));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 688));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 688));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 688));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 688));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 688));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 688));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24479:8: a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter )
            	            {
            	            a14=(Token)match(input,95,FOLLOW_95_in_parse_org_kermeta_language_behavior_LambdaExpression20387); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_464, 689));
            	              			
            	            }
            	            a15=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaExpression20407); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_465, 690));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24503:4: (a16_0= parse_org_kermeta_language_behavior_LambdaParameter )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24504:5: a16_0= parse_org_kermeta_language_behavior_LambdaParameter
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_LambdaParameter_in_parse_org_kermeta_language_behavior_LambdaExpression20433);
            	            a16_0=parse_org_kermeta_language_behavior_LambdaParameter();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a16_0 != null) {
            	              						if (a16_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__PARAMETERS, a16_0);
            	              							completedElement(a16_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a16_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 691));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 691));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 691));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 691));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 691));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 691));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 691));
            	              			
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24532:8: a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression )
            	            {
            	            a17=(Token)match(input,102,FOLLOW_102_in_parse_org_kermeta_language_behavior_LambdaExpression20469); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_466, 692));
            	              			
            	            }
            	            a18=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaExpression20489); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 693));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 693));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 693));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 693));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 693));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 693));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 693));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 693));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 693));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 693));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 693));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 693));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 693));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 693));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 693));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 693));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 693));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 693));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 693));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 693));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24575:4: (a19_0= parse_org_kermeta_language_behavior_Expression )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24576:5: a19_0= parse_org_kermeta_language_behavior_Expression
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_LambdaExpression20515);
            	            a19_0=parse_org_kermeta_language_behavior_Expression();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a19_0 != null) {
            	              						if (a19_0 != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__BODY), a19_0);
            	              							completedElement(a19_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a19_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 694));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 694));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 694));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 694));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 694));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 694));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 694));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop123;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 695));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 695));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 695));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 695));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 695));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 695));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 695));
              	
            }
            a20=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_behavior_LambdaExpression20556); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 696));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 696));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 48, parse_org_kermeta_language_behavior_LambdaExpression_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_LambdaExpression"


    // $ANTLR start "parse_org_kermeta_language_behavior_LambdaParameter"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24681:1: parse_org_kermeta_language_behavior_LambdaParameter returns [org.kermeta.language.behavior.LambdaParameter element = null] : a0= 'LambdaParameter' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= STRING ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) ) )* a14= '}' ;
    public final org.kermeta.language.behavior.LambdaParameter parse_org_kermeta_language_behavior_LambdaParameter() throws RecognitionException {
        org.kermeta.language.behavior.LambdaParameter element =  null;
        int parse_org_kermeta_language_behavior_LambdaParameter_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        Token a12=null;
        Token a14=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.behavior.TypeReference a13_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24684:1: (a0= 'LambdaParameter' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= STRING ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) ) )* a14= '}' )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24685:2: a0= 'LambdaParameter' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= STRING ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) ) )* a14= '}'
            {
            a0=(Token)match(input,103,FOLLOW_103_in_parse_org_kermeta_language_behavior_LambdaParameter20585); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_467, 697));
              	
            }
            a1=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_behavior_LambdaParameter20599); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_277, 698));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_278, 698));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_279, 698));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_280, 698));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_281, 698));
              	
            }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24713:2: ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= STRING ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) ) )*
            loop125:
            do {
                int alt125=2;
                int LA125_0 = input.LA(1);

                if ( ((LA125_0>=38 && LA125_0<=39)||LA125_0==43||LA125_0==48) ) {
                    alt125=1;
                }


                switch (alt125) {
            	case 1 :
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24714:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= STRING ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) )
            	    {
            	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24714:3: (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= STRING ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) )
            	    int alt124=4;
            	    switch ( input.LA(1) ) {
            	    case 38:
            	        {
            	        alt124=1;
            	        }
            	        break;
            	    case 39:
            	        {
            	        alt124=2;
            	        }
            	        break;
            	    case 43:
            	        {
            	        alt124=3;
            	        }
            	        break;
            	    case 48:
            	        {
            	        alt124=4;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 124, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt124) {
            	        case 1 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24715:4: a2= 'tag' a3= ':' (a4= STRING )
            	            {
            	            a2=(Token)match(input,38,FOLLOW_38_in_parse_org_kermeta_language_behavior_LambdaParameter20622); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_468, 699));
            	              			
            	            }
            	            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaParameter20642); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_469, 700));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24739:4: (a4= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24740:5: a4= STRING
            	            {
            	            a4=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_LambdaParameter20668); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_277, 701));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_278, 701));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_279, 701));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_280, 701));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_281, 701));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24781:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_behavior_LambdaParameter20709); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_470, 702));
            	              			
            	            }
            	            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaParameter20729); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 703));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24805:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24806:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_LambdaParameter20755);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_277, 704));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_278, 704));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_279, 704));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_280, 704));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_281, 704));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24832:8: a8= 'name' a9= ':' (a10= STRING )
            	            {
            	            a8=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_behavior_LambdaParameter20791); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_471, 705));
            	              			
            	            }
            	            a9=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaParameter20811); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_472, 706));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24856:4: (a10= STRING )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24857:5: a10= STRING
            	            {
            	            a10=(Token)match(input,STRING,FOLLOW_STRING_in_parse_org_kermeta_language_behavior_LambdaParameter20837); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              					}
            	              					if (a10 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a10.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__NAME), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a10).getLine(), ((org.antlr.runtime.CommonToken) a10).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a10).getStartIndex(), ((org.antlr.runtime.CommonToken) a10).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__NAME), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_277, 707));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_278, 707));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_279, 707));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_280, 707));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_281, 707));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24894:8: a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference )
            	            {
            	            a11=(Token)match(input,48,FOLLOW_48_in_parse_org_kermeta_language_behavior_LambdaParameter20878); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_473, 708));
            	              			
            	            }
            	            a12=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaParameter20898); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 709));
            	              			
            	            }
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24918:4: (a13_0= parse_org_kermeta_language_behavior_TypeReference )
            	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24919:5: a13_0= parse_org_kermeta_language_behavior_TypeReference
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_LambdaParameter20924);
            	            a13_0=parse_org_kermeta_language_behavior_TypeReference();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              					}
            	              					if (a13_0 != null) {
            	              						if (a13_0 != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TYPE), a13_0);
            	              							completedElement(a13_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a13_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_277, 710));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_278, 710));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_279, 710));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_280, 710));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_281, 710));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop125;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_277, 711));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_278, 711));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_279, 711));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_280, 711));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_281, 711));
              	
            }
            a14=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_behavior_LambdaParameter20965); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 712));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 712));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 712));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 712));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 712));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 712));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 712));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 49, parse_org_kermeta_language_behavior_LambdaParameter_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_LambdaParameter"


    // $ANTLR start "parse_org_kermeta_language_behavior_VoidLiteral"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24975:1: parse_org_kermeta_language_behavior_VoidLiteral returns [org.kermeta.language.behavior.VoidLiteral element = null] : a0= 'Void' ;
    public final org.kermeta.language.behavior.VoidLiteral parse_org_kermeta_language_behavior_VoidLiteral() throws RecognitionException {
        org.kermeta.language.behavior.VoidLiteral element =  null;
        int parse_org_kermeta_language_behavior_VoidLiteral_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24978:1: (a0= 'Void' )
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:24979:2: a0= 'Void'
            {
            a0=(Token)match(input,104,FOLLOW_104_in_parse_org_kermeta_language_behavior_VoidLiteral20994); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVoidLiteral();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 713));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 713));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 50, parse_org_kermeta_language_behavior_VoidLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_VoidLiteral"


    // $ANTLR start "parse_org_kermeta_language_behavior_Expression"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25044:1: parse_org_kermeta_language_behavior_Expression returns [org.kermeta.language.behavior.Expression element = null] : (c0= parse_org_kermeta_language_behavior_Block | c1= parse_org_kermeta_language_behavior_Raise | c2= parse_org_kermeta_language_behavior_BooleanLiteral | c3= parse_org_kermeta_language_behavior_IntegerLiteral | c4= parse_org_kermeta_language_behavior_StringLiteral | c5= parse_org_kermeta_language_behavior_Conditional | c6= parse_org_kermeta_language_behavior_Loop | c7= parse_org_kermeta_language_behavior_VariableDecl | c8= parse_org_kermeta_language_behavior_TypeLiteral | c9= parse_org_kermeta_language_behavior_CallResult | c10= parse_org_kermeta_language_behavior_CallSuperOperation | c11= parse_org_kermeta_language_behavior_Assignment | c12= parse_org_kermeta_language_behavior_CallVariable | c13= parse_org_kermeta_language_behavior_SelfExpression | c14= parse_org_kermeta_language_behavior_CallFeature | c15= parse_org_kermeta_language_behavior_CallValue | c16= parse_org_kermeta_language_behavior_EmptyExpression | c17= parse_org_kermeta_language_behavior_JavaStaticCall | c18= parse_org_kermeta_language_behavior_LambdaExpression | c19= parse_org_kermeta_language_behavior_VoidLiteral );
    public final org.kermeta.language.behavior.Expression parse_org_kermeta_language_behavior_Expression() throws RecognitionException {
        org.kermeta.language.behavior.Expression element =  null;
        int parse_org_kermeta_language_behavior_Expression_StartIndex = input.index();
        org.kermeta.language.behavior.Block c0 = null;

        org.kermeta.language.behavior.Raise c1 = null;

        org.kermeta.language.behavior.BooleanLiteral c2 = null;

        org.kermeta.language.behavior.IntegerLiteral c3 = null;

        org.kermeta.language.behavior.StringLiteral c4 = null;

        org.kermeta.language.behavior.Conditional c5 = null;

        org.kermeta.language.behavior.Loop c6 = null;

        org.kermeta.language.behavior.VariableDecl c7 = null;

        org.kermeta.language.behavior.TypeLiteral c8 = null;

        org.kermeta.language.behavior.CallResult c9 = null;

        org.kermeta.language.behavior.CallSuperOperation c10 = null;

        org.kermeta.language.behavior.Assignment c11 = null;

        org.kermeta.language.behavior.CallVariable c12 = null;

        org.kermeta.language.behavior.SelfExpression c13 = null;

        org.kermeta.language.behavior.CallFeature c14 = null;

        org.kermeta.language.behavior.CallValue c15 = null;

        org.kermeta.language.behavior.EmptyExpression c16 = null;

        org.kermeta.language.behavior.JavaStaticCall c17 = null;

        org.kermeta.language.behavior.LambdaExpression c18 = null;

        org.kermeta.language.behavior.VoidLiteral c19 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 51) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25045:1: (c0= parse_org_kermeta_language_behavior_Block | c1= parse_org_kermeta_language_behavior_Raise | c2= parse_org_kermeta_language_behavior_BooleanLiteral | c3= parse_org_kermeta_language_behavior_IntegerLiteral | c4= parse_org_kermeta_language_behavior_StringLiteral | c5= parse_org_kermeta_language_behavior_Conditional | c6= parse_org_kermeta_language_behavior_Loop | c7= parse_org_kermeta_language_behavior_VariableDecl | c8= parse_org_kermeta_language_behavior_TypeLiteral | c9= parse_org_kermeta_language_behavior_CallResult | c10= parse_org_kermeta_language_behavior_CallSuperOperation | c11= parse_org_kermeta_language_behavior_Assignment | c12= parse_org_kermeta_language_behavior_CallVariable | c13= parse_org_kermeta_language_behavior_SelfExpression | c14= parse_org_kermeta_language_behavior_CallFeature | c15= parse_org_kermeta_language_behavior_CallValue | c16= parse_org_kermeta_language_behavior_EmptyExpression | c17= parse_org_kermeta_language_behavior_JavaStaticCall | c18= parse_org_kermeta_language_behavior_LambdaExpression | c19= parse_org_kermeta_language_behavior_VoidLiteral )
            int alt126=20;
            alt126 = dfa126.predict(input);
            switch (alt126) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25046:2: c0= parse_org_kermeta_language_behavior_Block
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Expression21019);
                    c0=parse_org_kermeta_language_behavior_Block();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 2 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25047:4: c1= parse_org_kermeta_language_behavior_Raise
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Raise_in_parse_org_kermeta_language_behavior_Expression21029);
                    c1=parse_org_kermeta_language_behavior_Raise();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25048:4: c2= parse_org_kermeta_language_behavior_BooleanLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Expression21039);
                    c2=parse_org_kermeta_language_behavior_BooleanLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25049:4: c3= parse_org_kermeta_language_behavior_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_Expression21049);
                    c3=parse_org_kermeta_language_behavior_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 5 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25050:4: c4= parse_org_kermeta_language_behavior_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_Expression21059);
                    c4=parse_org_kermeta_language_behavior_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c4; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 6 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25051:4: c5= parse_org_kermeta_language_behavior_Conditional
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Expression21069);
                    c5=parse_org_kermeta_language_behavior_Conditional();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c5; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 7 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25052:4: c6= parse_org_kermeta_language_behavior_Loop
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_behavior_Expression21079);
                    c6=parse_org_kermeta_language_behavior_Loop();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c6; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 8 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25053:4: c7= parse_org_kermeta_language_behavior_VariableDecl
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Expression21089);
                    c7=parse_org_kermeta_language_behavior_VariableDecl();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c7; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 9 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25054:4: c8= parse_org_kermeta_language_behavior_TypeLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_parse_org_kermeta_language_behavior_Expression21099);
                    c8=parse_org_kermeta_language_behavior_TypeLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c8; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 10 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25055:4: c9= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Expression21109);
                    c9=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c9; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 11 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25056:4: c10= parse_org_kermeta_language_behavior_CallSuperOperation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Expression21119);
                    c10=parse_org_kermeta_language_behavior_CallSuperOperation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c10; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 12 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25057:4: c11= parse_org_kermeta_language_behavior_Assignment
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Expression21129);
                    c11=parse_org_kermeta_language_behavior_Assignment();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c11; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 13 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25058:4: c12= parse_org_kermeta_language_behavior_CallVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Expression21139);
                    c12=parse_org_kermeta_language_behavior_CallVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c12; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 14 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25059:4: c13= parse_org_kermeta_language_behavior_SelfExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_Expression21149);
                    c13=parse_org_kermeta_language_behavior_SelfExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c13; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 15 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25060:4: c14= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Expression21159);
                    c14=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c14; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 16 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25061:4: c15= parse_org_kermeta_language_behavior_CallValue
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Expression21169);
                    c15=parse_org_kermeta_language_behavior_CallValue();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c15; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 17 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25062:4: c16= parse_org_kermeta_language_behavior_EmptyExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_behavior_Expression21179);
                    c16=parse_org_kermeta_language_behavior_EmptyExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c16; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 18 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25063:4: c17= parse_org_kermeta_language_behavior_JavaStaticCall
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_Expression21189);
                    c17=parse_org_kermeta_language_behavior_JavaStaticCall();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c17; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 19 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25064:4: c18= parse_org_kermeta_language_behavior_LambdaExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_LambdaExpression_in_parse_org_kermeta_language_behavior_Expression21199);
                    c18=parse_org_kermeta_language_behavior_LambdaExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c18; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 20 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25065:4: c19= parse_org_kermeta_language_behavior_VoidLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_behavior_Expression21209);
                    c19=parse_org_kermeta_language_behavior_VoidLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c19; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 51, parse_org_kermeta_language_behavior_Expression_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Expression"


    // $ANTLR start "parse_org_kermeta_language_structure_Type"
    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25069:1: parse_org_kermeta_language_structure_Type returns [org.kermeta.language.structure.Type element = null] : (c0= parse_org_kermeta_language_structure_Class | c1= parse_org_kermeta_language_structure_Enumeration | c2= parse_org_kermeta_language_structure_ModelType | c3= parse_org_kermeta_language_structure_PrimitiveType | c4= parse_org_kermeta_language_structure_ObjectTypeVariable | c5= parse_org_kermeta_language_structure_ModelTypeVariable | c6= parse_org_kermeta_language_structure_VirtualType | c7= parse_org_kermeta_language_structure_ProductType | c8= parse_org_kermeta_language_structure_FunctionType | c9= parse_org_kermeta_language_structure_VoidType );
    public final org.kermeta.language.structure.Type parse_org_kermeta_language_structure_Type() throws RecognitionException {
        org.kermeta.language.structure.Type element =  null;
        int parse_org_kermeta_language_structure_Type_StartIndex = input.index();
        org.kermeta.language.structure.Class c0 = null;

        org.kermeta.language.structure.Enumeration c1 = null;

        org.kermeta.language.structure.ModelType c2 = null;

        org.kermeta.language.structure.PrimitiveType c3 = null;

        org.kermeta.language.structure.ObjectTypeVariable c4 = null;

        org.kermeta.language.structure.ModelTypeVariable c5 = null;

        org.kermeta.language.structure.VirtualType c6 = null;

        org.kermeta.language.structure.ProductType c7 = null;

        org.kermeta.language.structure.FunctionType c8 = null;

        org.kermeta.language.structure.VoidType c9 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 52) ) { return element; }
            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25070:1: (c0= parse_org_kermeta_language_structure_Class | c1= parse_org_kermeta_language_structure_Enumeration | c2= parse_org_kermeta_language_structure_ModelType | c3= parse_org_kermeta_language_structure_PrimitiveType | c4= parse_org_kermeta_language_structure_ObjectTypeVariable | c5= parse_org_kermeta_language_structure_ModelTypeVariable | c6= parse_org_kermeta_language_structure_VirtualType | c7= parse_org_kermeta_language_structure_ProductType | c8= parse_org_kermeta_language_structure_FunctionType | c9= parse_org_kermeta_language_structure_VoidType )
            int alt127=10;
            alt127 = dfa127.predict(input);
            switch (alt127) {
                case 1 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25071:2: c0= parse_org_kermeta_language_structure_Class
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Class_in_parse_org_kermeta_language_structure_Type21230);
                    c0=parse_org_kermeta_language_structure_Class();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 2 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25072:4: c1= parse_org_kermeta_language_structure_Enumeration
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_Type21240);
                    c1=parse_org_kermeta_language_structure_Enumeration();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25073:4: c2= parse_org_kermeta_language_structure_ModelType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_Type21250);
                    c2=parse_org_kermeta_language_structure_ModelType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25074:4: c3= parse_org_kermeta_language_structure_PrimitiveType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_Type21260);
                    c3=parse_org_kermeta_language_structure_PrimitiveType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 5 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25075:4: c4= parse_org_kermeta_language_structure_ObjectTypeVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_parse_org_kermeta_language_structure_Type21270);
                    c4=parse_org_kermeta_language_structure_ObjectTypeVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c4; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 6 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25076:4: c5= parse_org_kermeta_language_structure_ModelTypeVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelTypeVariable_in_parse_org_kermeta_language_structure_Type21280);
                    c5=parse_org_kermeta_language_structure_ModelTypeVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c5; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 7 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25077:4: c6= parse_org_kermeta_language_structure_VirtualType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_Type21290);
                    c6=parse_org_kermeta_language_structure_VirtualType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c6; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 8 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25078:4: c7= parse_org_kermeta_language_structure_ProductType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ProductType_in_parse_org_kermeta_language_structure_Type21300);
                    c7=parse_org_kermeta_language_structure_ProductType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c7; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 9 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25079:4: c8= parse_org_kermeta_language_structure_FunctionType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_FunctionType_in_parse_org_kermeta_language_structure_Type21310);
                    c8=parse_org_kermeta_language_structure_FunctionType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c8; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 10 :
                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25080:4: c9= parse_org_kermeta_language_structure_VoidType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_VoidType_in_parse_org_kermeta_language_structure_Type21320);
                    c9=parse_org_kermeta_language_structure_VoidType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c9; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 52, parse_org_kermeta_language_structure_Type_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Type"

    // $ANTLR start synpred1_Kermeta
    public final void synpred1_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ModelingUnit c0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5314:3: (c0= parse_org_kermeta_language_structure_ModelingUnit )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5314:3: c0= parse_org_kermeta_language_structure_ModelingUnit
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_synpred1_Kermeta82);
        c0=parse_org_kermeta_language_structure_ModelingUnit();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred1_Kermeta

    // $ANTLR start synpred3_Kermeta
    public final void synpred3_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Property c2 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5316:8: (c2= parse_org_kermeta_language_structure_Property )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5316:8: c2= parse_org_kermeta_language_structure_Property
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_synpred3_Kermeta110);
        c2=parse_org_kermeta_language_structure_Property();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred3_Kermeta

    // $ANTLR start synpred4_Kermeta
    public final void synpred4_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Operation c3 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5317:8: (c3= parse_org_kermeta_language_structure_Operation )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5317:8: c3= parse_org_kermeta_language_structure_Operation
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_synpred4_Kermeta124);
        c3=parse_org_kermeta_language_structure_Operation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred4_Kermeta

    // $ANTLR start synpred5_Kermeta
    public final void synpred5_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Parameter c4 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5318:8: (c4= parse_org_kermeta_language_structure_Parameter )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5318:8: c4= parse_org_kermeta_language_structure_Parameter
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_synpred5_Kermeta138);
        c4=parse_org_kermeta_language_structure_Parameter();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred5_Kermeta

    // $ANTLR start synpred6_Kermeta
    public final void synpred6_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.MultiplicityElement c5 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5319:8: (c5= parse_org_kermeta_language_structure_MultiplicityElement )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5319:8: c5= parse_org_kermeta_language_structure_MultiplicityElement
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_synpred6_Kermeta152);
        c5=parse_org_kermeta_language_structure_MultiplicityElement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred6_Kermeta

    // $ANTLR start synpred12_Kermeta
    public final void synpred12_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.TypeDefinition a4_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5806:6: ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5806:6: ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5806:6: ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5807:7: (a4_0= parse_org_kermeta_language_structure_TypeDefinition )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5807:7: (a4_0= parse_org_kermeta_language_structure_TypeDefinition )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5808:8: a4_0= parse_org_kermeta_language_structure_TypeDefinition
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred12_Kermeta729);
        a4_0=parse_org_kermeta_language_structure_TypeDefinition();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred12_Kermeta

    // $ANTLR start synpred15_Kermeta
    public final void synpred15_Kermeta_fragment() throws RecognitionException {   
        Token a5=null;
        Token a7=null;
        org.kermeta.language.structure.Package a6_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5859:10: (a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_Package ) ) )* a7= '}' )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5859:10: a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_Package ) ) )* a7= '}'
        {
        a5=(Token)match(input,20,FOLLOW_20_in_synpred15_Kermeta810); if (state.failed) return ;
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5882:5: ( ( (a6_0= parse_org_kermeta_language_structure_Package ) ) )*
        loop129:
        do {
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==STRING||LA129_0==18||(LA129_0>=22 && LA129_0<=24)||LA129_0==35||LA129_0==41||(LA129_0>=52 && LA129_0<=53)) ) {
                alt129=1;
            }


            switch (alt129) {
        	case 1 :
        	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5883:6: ( (a6_0= parse_org_kermeta_language_structure_Package ) )
        	    {
        	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5883:6: ( (a6_0= parse_org_kermeta_language_structure_Package ) )
        	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5884:7: (a6_0= parse_org_kermeta_language_structure_Package )
        	    {
        	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5884:7: (a6_0= parse_org_kermeta_language_structure_Package )
        	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5885:8: a6_0= parse_org_kermeta_language_structure_Package
        	    {
        	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred15_Kermeta857);
        	    a6_0=parse_org_kermeta_language_structure_Package();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop129;
            }
        } while (true);

        a7=(Token)match(input,21,FOLLOW_21_in_synpred15_Kermeta928); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred15_Kermeta

    // $ANTLR start synpred17_Kermeta
    public final void synpred17_Kermeta_fragment() throws RecognitionException {   
        Token a5=null;
        Token a7=null;
        Token a8=null;
        Token a10=null;
        org.kermeta.language.structure.TypeDefinition a4_0 = null;

        org.kermeta.language.structure.Package a6_0 = null;

        org.kermeta.language.structure.TypeDefinition a9_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5804:4: ( ( ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_Package ) ) )* a7= '}' | a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a10= '}' ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5804:4: ( ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_Package ) ) )* a7= '}' | a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a10= '}' )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5804:4: ( ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_Package ) ) )* a7= '}' | a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a10= '}' )
        int alt133=3;
        alt133 = dfa133.predict(input);
        switch (alt133) {
            case 1 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5805:5: ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                {
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5805:5: ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                int cnt130=0;
                loop130:
                do {
                    int alt130=2;
                    int LA130_0 = input.LA(1);

                    if ( (LA130_0==STRING||(LA130_0>=22 && LA130_0<=24)||LA130_0==35||LA130_0==41||(LA130_0>=52 && LA130_0<=53)) ) {
                        alt130=1;
                    }


                    switch (alt130) {
                	case 1 :
                	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5806:6: ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                	    {
                	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5806:6: ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5807:7: (a4_0= parse_org_kermeta_language_structure_TypeDefinition )
                	    {
                	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5807:7: (a4_0= parse_org_kermeta_language_structure_TypeDefinition )
                	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5808:8: a4_0= parse_org_kermeta_language_structure_TypeDefinition
                	    {
                	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred17_Kermeta729);
                	    a4_0=parse_org_kermeta_language_structure_TypeDefinition();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    if ( cnt130 >= 1 ) break loop130;
                	    if (state.backtracking>0) {state.failed=true; return ;}
                            EarlyExitException eee =
                                new EarlyExitException(130, input);
                            throw eee;
                    }
                    cnt130++;
                } while (true);


                }
                break;
            case 2 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5859:10: a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_Package ) ) )* a7= '}'
                {
                a5=(Token)match(input,20,FOLLOW_20_in_synpred17_Kermeta810); if (state.failed) return ;
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5882:5: ( ( (a6_0= parse_org_kermeta_language_structure_Package ) ) )*
                loop131:
                do {
                    int alt131=2;
                    int LA131_0 = input.LA(1);

                    if ( (LA131_0==STRING||LA131_0==18||(LA131_0>=22 && LA131_0<=24)||LA131_0==35||LA131_0==41||(LA131_0>=52 && LA131_0<=53)) ) {
                        alt131=1;
                    }


                    switch (alt131) {
                	case 1 :
                	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5883:6: ( (a6_0= parse_org_kermeta_language_structure_Package ) )
                	    {
                	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5883:6: ( (a6_0= parse_org_kermeta_language_structure_Package ) )
                	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5884:7: (a6_0= parse_org_kermeta_language_structure_Package )
                	    {
                	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5884:7: (a6_0= parse_org_kermeta_language_structure_Package )
                	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5885:8: a6_0= parse_org_kermeta_language_structure_Package
                	    {
                	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred17_Kermeta857);
                	    a6_0=parse_org_kermeta_language_structure_Package();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop131;
                    }
                } while (true);

                a7=(Token)match(input,21,FOLLOW_21_in_synpred17_Kermeta928); if (state.failed) return ;

                }
                break;
            case 3 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5959:10: a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a10= '}'
                {
                a8=(Token)match(input,20,FOLLOW_20_in_synpred17_Kermeta961); if (state.failed) return ;
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5980:5: ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                int cnt132=0;
                loop132:
                do {
                    int alt132=2;
                    int LA132_0 = input.LA(1);

                    if ( (LA132_0==STRING||(LA132_0>=22 && LA132_0<=24)||LA132_0==35||LA132_0==41||(LA132_0>=52 && LA132_0<=53)) ) {
                        alt132=1;
                    }


                    switch (alt132) {
                	case 1 :
                	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5981:6: ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                	    {
                	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5981:6: ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5982:7: (a9_0= parse_org_kermeta_language_structure_TypeDefinition )
                	    {
                	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5982:7: (a9_0= parse_org_kermeta_language_structure_TypeDefinition )
                	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5983:8: a9_0= parse_org_kermeta_language_structure_TypeDefinition
                	    {
                	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred17_Kermeta1008);
                	    a9_0=parse_org_kermeta_language_structure_TypeDefinition();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    if ( cnt132 >= 1 ) break loop132;
                	    if (state.backtracking>0) {state.failed=true; return ;}
                            EarlyExitException eee =
                                new EarlyExitException(132, input);
                            throw eee;
                    }
                    cnt132++;
                } while (true);

                a10=(Token)match(input,21,FOLLOW_21_in_synpred17_Kermeta1079); if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred17_Kermeta

    // $ANTLR start synpred19_Kermeta
    public final void synpred19_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.TypeDefinition a11_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6092:4: ( ( (a11_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6092:4: ( (a11_0= parse_org_kermeta_language_structure_TypeDefinition ) )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6092:4: ( (a11_0= parse_org_kermeta_language_structure_TypeDefinition ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6093:5: (a11_0= parse_org_kermeta_language_structure_TypeDefinition )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6093:5: (a11_0= parse_org_kermeta_language_structure_TypeDefinition )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6094:6: a11_0= parse_org_kermeta_language_structure_TypeDefinition
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred19_Kermeta1153);
        a11_0=parse_org_kermeta_language_structure_TypeDefinition();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred19_Kermeta

    // $ANTLR start synpred24_Kermeta
    public final void synpred24_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Constraint a9_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6394:3: ( ( (a9_0= parse_org_kermeta_language_structure_Constraint ) ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6394:3: ( (a9_0= parse_org_kermeta_language_structure_Constraint ) )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6394:3: ( (a9_0= parse_org_kermeta_language_structure_Constraint ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6395:4: (a9_0= parse_org_kermeta_language_structure_Constraint )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6395:4: (a9_0= parse_org_kermeta_language_structure_Constraint )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6396:5: a9_0= parse_org_kermeta_language_structure_Constraint
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred24_Kermeta1574);
        a9_0=parse_org_kermeta_language_structure_Constraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred24_Kermeta

    // $ANTLR start synpred31_Kermeta
    public final void synpred31_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Constraint a0_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6926:3: ( (a0_0= parse_org_kermeta_language_structure_Constraint ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6926:3: (a0_0= parse_org_kermeta_language_structure_Constraint )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6926:3: (a0_0= parse_org_kermeta_language_structure_Constraint )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6927:4: a0_0= parse_org_kermeta_language_structure_Constraint
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred31_Kermeta2193);
        a0_0=parse_org_kermeta_language_structure_Constraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred31_Kermeta

    // $ANTLR start synpred43_Kermeta
    public final void synpred43_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ModelingUnit c0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8126:2: (c0= parse_org_kermeta_language_structure_ModelingUnit )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8126:2: c0= parse_org_kermeta_language_structure_ModelingUnit
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_synpred43_Kermeta3605);
        c0=parse_org_kermeta_language_structure_ModelingUnit();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred43_Kermeta

    // $ANTLR start synpred44_Kermeta
    public final void synpred44_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Using c1 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8127:4: (c1= parse_org_kermeta_language_structure_Using )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8127:4: c1= parse_org_kermeta_language_structure_Using
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Using_in_synpred44_Kermeta3615);
        c1=parse_org_kermeta_language_structure_Using();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred44_Kermeta

    // $ANTLR start synpred45_Kermeta
    public final void synpred45_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Require c2 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8128:4: (c2= parse_org_kermeta_language_structure_Require )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8128:4: c2= parse_org_kermeta_language_structure_Require
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Require_in_synpred45_Kermeta3625);
        c2=parse_org_kermeta_language_structure_Require();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred45_Kermeta

    // $ANTLR start synpred46_Kermeta
    public final void synpred46_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Package c3 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8129:4: (c3= parse_org_kermeta_language_structure_Package )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8129:4: c3= parse_org_kermeta_language_structure_Package
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred46_Kermeta3635);
        c3=parse_org_kermeta_language_structure_Package();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred46_Kermeta

    // $ANTLR start synpred47_Kermeta
    public final void synpred47_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ClassDefinition c4 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8130:4: (c4= parse_org_kermeta_language_structure_ClassDefinition )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8130:4: c4= parse_org_kermeta_language_structure_ClassDefinition
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_synpred47_Kermeta3645);
        c4=parse_org_kermeta_language_structure_ClassDefinition();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred47_Kermeta

    // $ANTLR start synpred48_Kermeta
    public final void synpred48_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Property c5 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8131:4: (c5= parse_org_kermeta_language_structure_Property )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8131:4: c5= parse_org_kermeta_language_structure_Property
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_synpred48_Kermeta3655);
        c5=parse_org_kermeta_language_structure_Property();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred48_Kermeta

    // $ANTLR start synpred49_Kermeta
    public final void synpred49_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Operation c6 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8132:4: (c6= parse_org_kermeta_language_structure_Operation )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8132:4: c6= parse_org_kermeta_language_structure_Operation
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_synpred49_Kermeta3665);
        c6=parse_org_kermeta_language_structure_Operation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred49_Kermeta

    // $ANTLR start synpred50_Kermeta
    public final void synpred50_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Parameter c7 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8133:4: (c7= parse_org_kermeta_language_structure_Parameter )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8133:4: c7= parse_org_kermeta_language_structure_Parameter
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_synpred50_Kermeta3675);
        c7=parse_org_kermeta_language_structure_Parameter();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred50_Kermeta

    // $ANTLR start synpred51_Kermeta
    public final void synpred51_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Class c8 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8134:4: (c8= parse_org_kermeta_language_structure_Class )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8134:4: c8= parse_org_kermeta_language_structure_Class
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Class_in_synpred51_Kermeta3685);
        c8=parse_org_kermeta_language_structure_Class();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred51_Kermeta

    // $ANTLR start synpred52_Kermeta
    public final void synpred52_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Enumeration c9 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8135:4: (c9= parse_org_kermeta_language_structure_Enumeration )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8135:4: c9= parse_org_kermeta_language_structure_Enumeration
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_synpred52_Kermeta3695);
        c9=parse_org_kermeta_language_structure_Enumeration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred52_Kermeta

    // $ANTLR start synpred53_Kermeta
    public final void synpred53_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.EnumerationLiteral c10 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8136:4: (c10= parse_org_kermeta_language_structure_EnumerationLiteral )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8136:4: c10= parse_org_kermeta_language_structure_EnumerationLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_synpred53_Kermeta3705);
        c10=parse_org_kermeta_language_structure_EnumerationLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred53_Kermeta

    // $ANTLR start synpred54_Kermeta
    public final void synpred54_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Constraint c11 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8137:4: (c11= parse_org_kermeta_language_structure_Constraint )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8137:4: c11= parse_org_kermeta_language_structure_Constraint
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred54_Kermeta3715);
        c11=parse_org_kermeta_language_structure_Constraint();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred54_Kermeta

    // $ANTLR start synpred56_Kermeta
    public final void synpred56_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ModelType c13 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8139:4: (c13= parse_org_kermeta_language_structure_ModelType )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8139:4: c13= parse_org_kermeta_language_structure_ModelType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelType_in_synpred56_Kermeta3735);
        c13=parse_org_kermeta_language_structure_ModelType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred56_Kermeta

    // $ANTLR start synpred58_Kermeta
    public final void synpred58_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.MultiplicityElement c15 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8141:4: (c15= parse_org_kermeta_language_structure_MultiplicityElement )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8141:4: c15= parse_org_kermeta_language_structure_MultiplicityElement
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_synpred58_Kermeta3755);
        c15=parse_org_kermeta_language_structure_MultiplicityElement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred58_Kermeta

    // $ANTLR start synpred59_Kermeta
    public final void synpred59_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.TypeDefinition c16 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8142:4: (c16= parse_org_kermeta_language_structure_TypeDefinition )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8142:4: c16= parse_org_kermeta_language_structure_TypeDefinition
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred59_Kermeta3765);
        c16=parse_org_kermeta_language_structure_TypeDefinition();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred59_Kermeta

    // $ANTLR start synpred60_Kermeta
    public final void synpred60_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.PrimitiveType c17 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8143:4: (c17= parse_org_kermeta_language_structure_PrimitiveType )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8143:4: c17= parse_org_kermeta_language_structure_PrimitiveType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_synpred60_Kermeta3775);
        c17=parse_org_kermeta_language_structure_PrimitiveType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred60_Kermeta

    // $ANTLR start synpred62_Kermeta
    public final void synpred62_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ObjectTypeVariable c19 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8145:4: (c19= parse_org_kermeta_language_structure_ObjectTypeVariable )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8145:4: c19= parse_org_kermeta_language_structure_ObjectTypeVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_synpred62_Kermeta3795);
        c19=parse_org_kermeta_language_structure_ObjectTypeVariable();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred62_Kermeta

    // $ANTLR start synpred64_Kermeta
    public final void synpred64_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.VirtualType c21 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8147:4: (c21= parse_org_kermeta_language_structure_VirtualType )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8147:4: c21= parse_org_kermeta_language_structure_VirtualType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_synpred64_Kermeta3815);
        c21=parse_org_kermeta_language_structure_VirtualType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred64_Kermeta

    // $ANTLR start synpred70_Kermeta
    public final void synpred70_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.TypeReference c27 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8153:4: (c27= parse_org_kermeta_language_behavior_TypeReference )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8153:4: c27= parse_org_kermeta_language_behavior_TypeReference
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_synpred70_Kermeta3875);
        c27=parse_org_kermeta_language_behavior_TypeReference();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred70_Kermeta

    // $ANTLR start synpred72_Kermeta
    public final void synpred72_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.BooleanLiteral c29 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8155:4: (c29= parse_org_kermeta_language_behavior_BooleanLiteral )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8155:4: c29= parse_org_kermeta_language_behavior_BooleanLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred72_Kermeta3895);
        c29=parse_org_kermeta_language_behavior_BooleanLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred72_Kermeta

    // $ANTLR start synpred73_Kermeta
    public final void synpred73_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.IntegerLiteral c30 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8156:4: (c30= parse_org_kermeta_language_behavior_IntegerLiteral )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8156:4: c30= parse_org_kermeta_language_behavior_IntegerLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred73_Kermeta3905);
        c30=parse_org_kermeta_language_behavior_IntegerLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred73_Kermeta

    // $ANTLR start synpred74_Kermeta
    public final void synpred74_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.StringLiteral c31 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8157:4: (c31= parse_org_kermeta_language_behavior_StringLiteral )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8157:4: c31= parse_org_kermeta_language_behavior_StringLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred74_Kermeta3915);
        c31=parse_org_kermeta_language_behavior_StringLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred74_Kermeta

    // $ANTLR start synpred78_Kermeta
    public final void synpred78_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.TypeLiteral c35 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8161:4: (c35= parse_org_kermeta_language_behavior_TypeLiteral )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8161:4: c35= parse_org_kermeta_language_behavior_TypeLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_synpred78_Kermeta3955);
        c35=parse_org_kermeta_language_behavior_TypeLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred78_Kermeta

    // $ANTLR start synpred79_Kermeta
    public final void synpred79_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult c36 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8162:4: (c36= parse_org_kermeta_language_behavior_CallResult )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8162:4: c36= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred79_Kermeta3965);
        c36=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred79_Kermeta

    // $ANTLR start synpred81_Kermeta
    public final void synpred81_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.Assignment c38 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8164:4: (c38= parse_org_kermeta_language_behavior_Assignment )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8164:4: c38= parse_org_kermeta_language_behavior_Assignment
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred81_Kermeta3985);
        c38=parse_org_kermeta_language_behavior_Assignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred81_Kermeta

    // $ANTLR start synpred82_Kermeta
    public final void synpred82_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable c39 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8165:4: (c39= parse_org_kermeta_language_behavior_CallVariable )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8165:4: c39= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred82_Kermeta3995);
        c39=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred82_Kermeta

    // $ANTLR start synpred83_Kermeta
    public final void synpred83_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.SelfExpression c40 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8166:4: (c40= parse_org_kermeta_language_behavior_SelfExpression )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8166:4: c40= parse_org_kermeta_language_behavior_SelfExpression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred83_Kermeta4005);
        c40=parse_org_kermeta_language_behavior_SelfExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred83_Kermeta

    // $ANTLR start synpred84_Kermeta
    public final void synpred84_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature c41 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8167:4: (c41= parse_org_kermeta_language_behavior_CallFeature )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8167:4: c41= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred84_Kermeta4015);
        c41=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred84_Kermeta

    // $ANTLR start synpred87_Kermeta
    public final void synpred87_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.JavaStaticCall c44 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8170:4: (c44= parse_org_kermeta_language_behavior_JavaStaticCall )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8170:4: c44= parse_org_kermeta_language_behavior_JavaStaticCall
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred87_Kermeta4045);
        c44=parse_org_kermeta_language_behavior_JavaStaticCall();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred87_Kermeta

    // $ANTLR start synpred103_Kermeta
    public final void synpred103_Kermeta_fragment() throws RecognitionException {   
        Token a0=null;

        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9241:3: ( (a0= STRING ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9241:3: (a0= STRING )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9241:3: (a0= STRING )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9242:4: a0= STRING
        {
        a0=(Token)match(input,STRING,FOLLOW_STRING_in_synpred103_Kermeta5385); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred103_Kermeta

    // $ANTLR start synpred176_Kermeta
    public final void synpred176_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.Assignment a4_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14540:8: ( (a4_0= parse_org_kermeta_language_behavior_Assignment ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14540:8: (a4_0= parse_org_kermeta_language_behavior_Assignment )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14540:8: (a4_0= parse_org_kermeta_language_behavior_Assignment )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14541:5: a4_0= parse_org_kermeta_language_behavior_Assignment
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred176_Kermeta11366);
        a4_0=parse_org_kermeta_language_behavior_Assignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred176_Kermeta

    // $ANTLR start synpred177_Kermeta
    public final void synpred177_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature a5_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14579:8: ( (a5_0= parse_org_kermeta_language_behavior_CallFeature ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14579:8: (a5_0= parse_org_kermeta_language_behavior_CallFeature )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14579:8: (a5_0= parse_org_kermeta_language_behavior_CallFeature )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14580:5: a5_0= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred177_Kermeta11408);
        a5_0=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred177_Kermeta

    // $ANTLR start synpred178_Kermeta
    public final void synpred178_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable a6_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14618:8: ( (a6_0= parse_org_kermeta_language_behavior_CallVariable ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14618:8: (a6_0= parse_org_kermeta_language_behavior_CallVariable )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14618:8: (a6_0= parse_org_kermeta_language_behavior_CallVariable )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14619:5: a6_0= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred178_Kermeta11450);
        a6_0=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred178_Kermeta

    // $ANTLR start synpred180_Kermeta
    public final void synpred180_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult a8_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14696:8: ( (a8_0= parse_org_kermeta_language_behavior_CallResult ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14696:8: (a8_0= parse_org_kermeta_language_behavior_CallResult )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14696:8: (a8_0= parse_org_kermeta_language_behavior_CallResult )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14697:5: a8_0= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred180_Kermeta11534);
        a8_0=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred180_Kermeta

    // $ANTLR start synpred181_Kermeta
    public final void synpred181_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.JavaStaticCall a9_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14735:8: ( (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14735:8: (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14735:8: (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14736:5: a9_0= parse_org_kermeta_language_behavior_JavaStaticCall
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred181_Kermeta11576);
        a9_0=parse_org_kermeta_language_behavior_JavaStaticCall();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred181_Kermeta

    // $ANTLR start synpred188_Kermeta
    public final void synpred188_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.BooleanLiteral a4_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15773:3: ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15773:3: (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15773:3: (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15774:4: a4_0= parse_org_kermeta_language_behavior_BooleanLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred188_Kermeta12347);
        a4_0=parse_org_kermeta_language_behavior_BooleanLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred188_Kermeta

    // $ANTLR start synpred190_Kermeta
    public final void synpred190_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.Assignment a6_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15847:6: ( (a6_0= parse_org_kermeta_language_behavior_Assignment ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15847:6: (a6_0= parse_org_kermeta_language_behavior_Assignment )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15847:6: (a6_0= parse_org_kermeta_language_behavior_Assignment )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15848:4: a6_0= parse_org_kermeta_language_behavior_Assignment
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred190_Kermeta12415);
        a6_0=parse_org_kermeta_language_behavior_Assignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred190_Kermeta

    // $ANTLR start synpred191_Kermeta
    public final void synpred191_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature a7_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15884:6: ( (a7_0= parse_org_kermeta_language_behavior_CallFeature ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15884:6: (a7_0= parse_org_kermeta_language_behavior_CallFeature )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15884:6: (a7_0= parse_org_kermeta_language_behavior_CallFeature )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15885:4: a7_0= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred191_Kermeta12449);
        a7_0=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred191_Kermeta

    // $ANTLR start synpred193_Kermeta
    public final void synpred193_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult a9_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15958:6: ( (a9_0= parse_org_kermeta_language_behavior_CallResult ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15958:6: (a9_0= parse_org_kermeta_language_behavior_CallResult )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15958:6: (a9_0= parse_org_kermeta_language_behavior_CallResult )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15959:4: a9_0= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred193_Kermeta12517);
        a9_0=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred193_Kermeta

    // $ANTLR start synpred194_Kermeta
    public final void synpred194_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable a10_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15995:6: ( (a10_0= parse_org_kermeta_language_behavior_CallVariable ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15995:6: (a10_0= parse_org_kermeta_language_behavior_CallVariable )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15995:6: (a10_0= parse_org_kermeta_language_behavior_CallVariable )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15996:4: a10_0= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred194_Kermeta12551);
        a10_0=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred194_Kermeta

    // $ANTLR start synpred198_Kermeta
    public final void synpred198_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.Assignment a16_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16185:8: ( (a16_0= parse_org_kermeta_language_behavior_Assignment ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16185:8: (a16_0= parse_org_kermeta_language_behavior_Assignment )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16185:8: (a16_0= parse_org_kermeta_language_behavior_Assignment )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16186:5: a16_0= parse_org_kermeta_language_behavior_Assignment
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred198_Kermeta12768);
        a16_0=parse_org_kermeta_language_behavior_Assignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred198_Kermeta

    // $ANTLR start synpred199_Kermeta
    public final void synpred199_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature a17_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16208:8: ( (a17_0= parse_org_kermeta_language_behavior_CallFeature ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16208:8: (a17_0= parse_org_kermeta_language_behavior_CallFeature )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16208:8: (a17_0= parse_org_kermeta_language_behavior_CallFeature )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16209:5: a17_0= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred199_Kermeta12810);
        a17_0=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred199_Kermeta

    // $ANTLR start synpred201_Kermeta
    public final void synpred201_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult a19_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16254:8: ( (a19_0= parse_org_kermeta_language_behavior_CallResult ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16254:8: (a19_0= parse_org_kermeta_language_behavior_CallResult )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16254:8: (a19_0= parse_org_kermeta_language_behavior_CallResult )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16255:5: a19_0= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred201_Kermeta12894);
        a19_0=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred201_Kermeta

    // $ANTLR start synpred205_Kermeta
    public final void synpred205_Kermeta_fragment() throws RecognitionException {   
        Token a4=null;
        org.kermeta.language.behavior.Expression a5_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16590:3: ( (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16590:3: (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16590:3: (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16591:4: a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) )
        {
        a4=(Token)match(input,80,FOLLOW_80_in_synpred205_Kermeta13197); if (state.failed) return ;
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16622:4: ( (a5_0= parse_org_kermeta_language_behavior_Expression ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16623:5: (a5_0= parse_org_kermeta_language_behavior_Expression )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16623:5: (a5_0= parse_org_kermeta_language_behavior_Expression )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16624:6: a5_0= parse_org_kermeta_language_behavior_Expression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred205_Kermeta13230);
        a5_0=parse_org_kermeta_language_behavior_Expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred205_Kermeta

    // $ANTLR start synpred209_Kermeta
    public final void synpred209_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature a0_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17467:4: ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17467:4: (a0_0= parse_org_kermeta_language_behavior_CallFeature )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17467:4: (a0_0= parse_org_kermeta_language_behavior_CallFeature )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17468:5: a0_0= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred209_Kermeta13758);
        a0_0=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred209_Kermeta

    // $ANTLR start synpred210_Kermeta
    public final void synpred210_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable a1_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17491:8: ( (a1_0= parse_org_kermeta_language_behavior_CallVariable ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17491:8: (a1_0= parse_org_kermeta_language_behavior_CallVariable )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17491:8: (a1_0= parse_org_kermeta_language_behavior_CallVariable )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17492:5: a1_0= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred210_Kermeta13800);
        a1_0=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred210_Kermeta

    // $ANTLR start synpred212_Kermeta
    public final void synpred212_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature a6_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17644:4: ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17644:4: (a6_0= parse_org_kermeta_language_behavior_CallFeature )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17644:4: (a6_0= parse_org_kermeta_language_behavior_CallFeature )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17645:5: a6_0= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred212_Kermeta13993);
        a6_0=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred212_Kermeta

    // $ANTLR start synpred213_Kermeta
    public final void synpred213_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.SelfExpression a7_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17718:8: ( (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17718:8: (a7_0= parse_org_kermeta_language_behavior_SelfExpression )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17718:8: (a7_0= parse_org_kermeta_language_behavior_SelfExpression )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17719:5: a7_0= parse_org_kermeta_language_behavior_SelfExpression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred213_Kermeta14035);
        a7_0=parse_org_kermeta_language_behavior_SelfExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred213_Kermeta

    // $ANTLR start synpred215_Kermeta
    public final void synpred215_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult a9_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17866:8: ( (a9_0= parse_org_kermeta_language_behavior_CallResult ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17866:8: (a9_0= parse_org_kermeta_language_behavior_CallResult )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17866:8: (a9_0= parse_org_kermeta_language_behavior_CallResult )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17867:5: a9_0= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred215_Kermeta14119);
        a9_0=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred215_Kermeta

    // $ANTLR start synpred217_Kermeta
    public final void synpred217_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable a11_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18014:8: ( (a11_0= parse_org_kermeta_language_behavior_CallVariable ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18014:8: (a11_0= parse_org_kermeta_language_behavior_CallVariable )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18014:8: (a11_0= parse_org_kermeta_language_behavior_CallVariable )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18015:5: a11_0= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred217_Kermeta14203);
        a11_0=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred217_Kermeta

    // $ANTLR start synpred219_Kermeta
    public final void synpred219_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.IntegerLiteral a13_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18162:8: ( (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18162:8: (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18162:8: (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18163:5: a13_0= parse_org_kermeta_language_behavior_IntegerLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred219_Kermeta14287);
        a13_0=parse_org_kermeta_language_behavior_IntegerLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred219_Kermeta

    // $ANTLR start synpred220_Kermeta
    public final void synpred220_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.BooleanLiteral a14_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18236:8: ( (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18236:8: (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18236:8: (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18237:5: a14_0= parse_org_kermeta_language_behavior_BooleanLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred220_Kermeta14329);
        a14_0=parse_org_kermeta_language_behavior_BooleanLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred220_Kermeta

    // $ANTLR start synpred227_Kermeta
    public final void synpred227_Kermeta_fragment() throws RecognitionException {   
        Token a7=null;
        Token a8=null;

        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18860:4: (a7= '.' (a8= STRING ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18860:4: a7= '.' (a8= STRING )
        {
        a7=(Token)match(input,19,FOLLOW_19_in_synpred227_Kermeta14747); if (state.failed) return ;
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18872:4: (a8= STRING )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18873:5: a8= STRING
        {
        a8=(Token)match(input,STRING,FOLLOW_STRING_in_synpred227_Kermeta14773); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred227_Kermeta

    // $ANTLR start synpred231_Kermeta
    public final void synpred231_Kermeta_fragment() throws RecognitionException {   
        Token a16=null;
        Token a17=null;

        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19108:8: (a16= '.' (a17= STRING ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19108:8: a16= '.' (a17= STRING )
        {
        a16=(Token)match(input,19,FOLLOW_19_in_synpred231_Kermeta15143); if (state.failed) return ;
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19120:4: (a17= STRING )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19121:5: a17= STRING
        {
        a17=(Token)match(input,STRING,FOLLOW_STRING_in_synpred231_Kermeta15169); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred231_Kermeta

    // $ANTLR start synpred233_Kermeta
    public final void synpred233_Kermeta_fragment() throws RecognitionException {   
        Token a0=null;
        Token a7=null;
        Token a8=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        Token a13=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        Token a22=null;
        org.kermeta.language.behavior.BooleanLiteral a1_0 = null;

        org.kermeta.language.behavior.CallVariable a2_0 = null;

        org.kermeta.language.behavior.JavaStaticCall a3_0 = null;

        org.kermeta.language.behavior.SelfExpression a4_0 = null;

        org.kermeta.language.behavior.StringLiteral a5_0 = null;

        org.kermeta.language.behavior.IntegerLiteral a6_0 = null;

        org.kermeta.language.behavior.Expression a12_0 = null;

        org.kermeta.language.behavior.Expression a14_0 = null;

        org.kermeta.language.behavior.Expression a21_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18668:2: (a0= '(' ( (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a2_0= parse_org_kermeta_language_behavior_CallVariable ) | (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a4_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a5_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a7= '.' (a8= STRING ) | a9= '.' (a10= STRING ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= STRING ) | a18= '.' (a19= STRING ) ) )* a20= '==' (a21_0= parse_org_kermeta_language_behavior_Expression ) a22= ')' )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18668:2: a0= '(' ( (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a2_0= parse_org_kermeta_language_behavior_CallVariable ) | (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a4_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a5_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a7= '.' (a8= STRING ) | a9= '.' (a10= STRING ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= STRING ) | a18= '.' (a19= STRING ) ) )* a20= '==' (a21_0= parse_org_kermeta_language_behavior_Expression ) a22= ')'
        {
        a0=(Token)match(input,32,FOLLOW_32_in_synpred233_Kermeta14515); if (state.failed) return ;
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18686:2: ( (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a2_0= parse_org_kermeta_language_behavior_CallVariable ) | (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a4_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a5_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral ) )
        int alt181=6;
        switch ( input.LA(1) ) {
        case BOOLEAN:
            {
            alt181=1;
            }
            break;
        case STRING:
        case 83:
            {
            alt181=2;
            }
            break;
        case 98:
            {
            alt181=3;
            }
            break;
        case 87:
            {
            alt181=4;
            }
            break;
        case STRING_LITERAL:
            {
            alt181=5;
            }
            break;
        case INTEGER:
            {
            alt181=6;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 181, 0, input);

            throw nvae;
        }

        switch (alt181) {
            case 1 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18687:3: (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                {
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18687:3: (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18688:4: a1_0= parse_org_kermeta_language_behavior_BooleanLiteral
                {
                pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred233_Kermeta14538);
                a1_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;
            case 2 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18714:6: (a2_0= parse_org_kermeta_language_behavior_CallVariable )
                {
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18714:6: (a2_0= parse_org_kermeta_language_behavior_CallVariable )
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18715:4: a2_0= parse_org_kermeta_language_behavior_CallVariable
                {
                pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred233_Kermeta14572);
                a2_0=parse_org_kermeta_language_behavior_CallVariable();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;
            case 3 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18741:6: (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                {
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18741:6: (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18742:4: a3_0= parse_org_kermeta_language_behavior_JavaStaticCall
                {
                pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred233_Kermeta14606);
                a3_0=parse_org_kermeta_language_behavior_JavaStaticCall();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;
            case 4 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18768:6: (a4_0= parse_org_kermeta_language_behavior_SelfExpression )
                {
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18768:6: (a4_0= parse_org_kermeta_language_behavior_SelfExpression )
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18769:4: a4_0= parse_org_kermeta_language_behavior_SelfExpression
                {
                pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred233_Kermeta14640);
                a4_0=parse_org_kermeta_language_behavior_SelfExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;
            case 5 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18795:6: (a5_0= parse_org_kermeta_language_behavior_StringLiteral )
                {
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18795:6: (a5_0= parse_org_kermeta_language_behavior_StringLiteral )
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18796:4: a5_0= parse_org_kermeta_language_behavior_StringLiteral
                {
                pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred233_Kermeta14674);
                a5_0=parse_org_kermeta_language_behavior_StringLiteral();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;
            case 6 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18822:6: (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                {
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18822:6: (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18823:4: a6_0= parse_org_kermeta_language_behavior_IntegerLiteral
                {
                pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred233_Kermeta14708);
                a6_0=parse_org_kermeta_language_behavior_IntegerLiteral();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }

        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18858:2: ( (a7= '.' (a8= STRING ) | a9= '.' (a10= STRING ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= STRING ) | a18= '.' (a19= STRING ) ) )*
        loop185:
        do {
            int alt185=2;
            int LA185_0 = input.LA(1);

            if ( (LA185_0==19) ) {
                alt185=1;
            }


            switch (alt185) {
        	case 1 :
        	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18859:3: (a7= '.' (a8= STRING ) | a9= '.' (a10= STRING ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= STRING ) | a18= '.' (a19= STRING ) )
        	    {
        	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18859:3: (a7= '.' (a8= STRING ) | a9= '.' (a10= STRING ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= STRING ) | a18= '.' (a19= STRING ) )
        	    int alt184=4;
        	    int LA184_0 = input.LA(1);

        	    if ( (LA184_0==19) ) {
        	        int LA184_1 = input.LA(2);

        	        if ( (LA184_1==STRING) ) {
        	            int LA184_2 = input.LA(3);

        	            if ( (LA184_2==32) ) {
        	                alt184=2;
        	            }
        	            else if ( (synpred227_Kermeta()) ) {
        	                alt184=1;
        	            }
        	            else if ( (synpred231_Kermeta()) ) {
        	                alt184=3;
        	            }
        	            else if ( (true) ) {
        	                alt184=4;
        	            }
        	            else {
        	                if (state.backtracking>0) {state.failed=true; return ;}
        	                NoViableAltException nvae =
        	                    new NoViableAltException("", 184, 2, input);

        	                throw nvae;
        	            }
        	        }
        	        else {
        	            if (state.backtracking>0) {state.failed=true; return ;}
        	            NoViableAltException nvae =
        	                new NoViableAltException("", 184, 1, input);

        	            throw nvae;
        	        }
        	    }
        	    else {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        NoViableAltException nvae =
        	            new NoViableAltException("", 184, 0, input);

        	        throw nvae;
        	    }
        	    switch (alt184) {
        	        case 1 :
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18860:4: a7= '.' (a8= STRING )
        	            {
        	            a7=(Token)match(input,19,FOLLOW_19_in_synpred233_Kermeta14747); if (state.failed) return ;
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18872:4: (a8= STRING )
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18873:5: a8= STRING
        	            {
        	            a8=(Token)match(input,STRING,FOLLOW_STRING_in_synpred233_Kermeta14773); if (state.failed) return ;

        	            }


        	            }
        	            break;
        	        case 2 :
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18914:8: a9= '.' (a10= STRING ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')'
        	            {
        	            a9=(Token)match(input,19,FOLLOW_19_in_synpred233_Kermeta14814); if (state.failed) return ;
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18926:4: (a10= STRING )
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18927:5: a10= STRING
        	            {
        	            a10=(Token)match(input,STRING,FOLLOW_STRING_in_synpred233_Kermeta14840); if (state.failed) return ;

        	            }

        	            a11=(Token)match(input,32,FOLLOW_32_in_synpred233_Kermeta14873); if (state.failed) return ;
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18995:4: ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )?
        	            int alt183=2;
        	            int LA183_0 = input.LA(1);

        	            if ( ((LA183_0>=STRING && LA183_0<=BOOLEAN)||LA183_0==32||LA183_0==71||(LA183_0>=74 && LA183_0<=75)||LA183_0==78||LA183_0==81||(LA183_0>=83 && LA183_0<=84)||LA183_0==87||LA183_0==93||(LA183_0>=97 && LA183_0<=98)||LA183_0==101||LA183_0==104) ) {
        	                alt183=1;
        	            }
        	            switch (alt183) {
        	                case 1 :
        	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18996:5: ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
        	                    {
        	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18996:5: ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
        	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18997:6: (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )*
        	                    {
        	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18997:6: (a12_0= parse_org_kermeta_language_behavior_Expression )
        	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18998:7: a12_0= parse_org_kermeta_language_behavior_Expression
        	                    {
        	                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred233_Kermeta14914);
        	                    a12_0=parse_org_kermeta_language_behavior_Expression();

        	                    state._fsp--;
        	                    if (state.failed) return ;

        	                    }

        	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19020:6: ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )*
        	                    loop182:
        	                    do {
        	                        int alt182=2;
        	                        int LA182_0 = input.LA(1);

        	                        if ( (LA182_0==26) ) {
        	                            alt182=1;
        	                        }


        	                        switch (alt182) {
        	                    	case 1 :
        	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19021:7: (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) )
        	                    	    {
        	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19021:7: (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) )
        	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19022:8: a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression )
        	                    	    {
        	                    	    a13=(Token)match(input,26,FOLLOW_26_in_synpred233_Kermeta14969); if (state.failed) return ;
        	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19053:8: (a14_0= parse_org_kermeta_language_behavior_Expression )
        	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19054:9: a14_0= parse_org_kermeta_language_behavior_Expression
        	                    	    {
        	                    	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred233_Kermeta15011);
        	                    	    a14_0=parse_org_kermeta_language_behavior_Expression();

        	                    	    state._fsp--;
        	                    	    if (state.failed) return ;

        	                    	    }


        	                    	    }


        	                    	    }
        	                    	    break;

        	                    	default :
        	                    	    break loop182;
        	                        }
        	                    } while (true);


        	                    }


        	                    }
        	                    break;

        	            }

        	            a15=(Token)match(input,33,FOLLOW_33_in_synpred233_Kermeta15115); if (state.failed) return ;

        	            }
        	            break;
        	        case 3 :
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19108:8: a16= '.' (a17= STRING )
        	            {
        	            a16=(Token)match(input,19,FOLLOW_19_in_synpred233_Kermeta15143); if (state.failed) return ;
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19120:4: (a17= STRING )
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19121:5: a17= STRING
        	            {
        	            a17=(Token)match(input,STRING,FOLLOW_STRING_in_synpred233_Kermeta15169); if (state.failed) return ;

        	            }


        	            }
        	            break;
        	        case 4 :
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19162:8: a18= '.' (a19= STRING )
        	            {
        	            a18=(Token)match(input,19,FOLLOW_19_in_synpred233_Kermeta15210); if (state.failed) return ;
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19174:4: (a19= STRING )
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19175:5: a19= STRING
        	            {
        	            a19=(Token)match(input,STRING,FOLLOW_STRING_in_synpred233_Kermeta15236); if (state.failed) return ;

        	            }


        	            }
        	            break;

        	    }


        	    }
        	    break;

        	default :
        	    break loop185;
            }
        } while (true);

        a20=(Token)match(input,88,FOLLOW_88_in_synpred233_Kermeta15282); if (state.failed) return ;
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19257:2: (a21_0= parse_org_kermeta_language_behavior_Expression )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19258:3: a21_0= parse_org_kermeta_language_behavior_Expression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred233_Kermeta15300);
        a21_0=parse_org_kermeta_language_behavior_Expression();

        state._fsp--;
        if (state.failed) return ;

        }

        a22=(Token)match(input,33,FOLLOW_33_in_synpred233_Kermeta15318); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred233_Kermeta

    // $ANTLR start synpred239_Kermeta
    public final void synpred239_Kermeta_fragment() throws RecognitionException {   
        Token a29=null;
        Token a30=null;

        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19519:4: (a29= '.' (a30= STRING ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19519:4: a29= '.' (a30= STRING )
        {
        a29=(Token)match(input,19,FOLLOW_19_in_synpred239_Kermeta15554); if (state.failed) return ;
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19531:4: (a30= STRING )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19532:5: a30= STRING
        {
        a30=(Token)match(input,STRING,FOLLOW_STRING_in_synpred239_Kermeta15580); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred239_Kermeta

    // $ANTLR start synpred243_Kermeta
    public final void synpred243_Kermeta_fragment() throws RecognitionException {   
        Token a38=null;
        Token a39=null;

        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19767:8: (a38= '.' (a39= STRING ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19767:8: a38= '.' (a39= STRING )
        {
        a38=(Token)match(input,19,FOLLOW_19_in_synpred243_Kermeta15950); if (state.failed) return ;
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19779:4: (a39= STRING )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19780:5: a39= STRING
        {
        a39=(Token)match(input,STRING,FOLLOW_STRING_in_synpred243_Kermeta15976); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred243_Kermeta

    // $ANTLR start synpred245_Kermeta
    public final void synpred245_Kermeta_fragment() throws RecognitionException {   
        Token a29=null;
        Token a30=null;
        Token a31=null;
        Token a32=null;
        Token a33=null;
        Token a35=null;
        Token a37=null;
        Token a38=null;
        Token a39=null;
        Token a40=null;
        Token a41=null;
        Token a42=null;
        org.kermeta.language.behavior.BooleanLiteral a23_0 = null;

        org.kermeta.language.behavior.CallVariable a24_0 = null;

        org.kermeta.language.behavior.JavaStaticCall a25_0 = null;

        org.kermeta.language.behavior.SelfExpression a26_0 = null;

        org.kermeta.language.behavior.StringLiteral a27_0 = null;

        org.kermeta.language.behavior.IntegerLiteral a28_0 = null;

        org.kermeta.language.behavior.Expression a34_0 = null;

        org.kermeta.language.behavior.Expression a36_0 = null;

        org.kermeta.language.behavior.Expression a43_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19345:4: ( ( (a23_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a24_0= parse_org_kermeta_language_behavior_CallVariable ) | (a25_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a26_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a27_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a28_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a29= '.' (a30= STRING ) | a31= '.' (a32= STRING ) a33= '(' ( ( (a34_0= parse_org_kermeta_language_behavior_Expression ) ( (a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a37= ')' | a38= '.' (a39= STRING ) | a40= '.' (a41= STRING ) ) )* a42= '==' (a43_0= parse_org_kermeta_language_behavior_Expression ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19345:4: ( (a23_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a24_0= parse_org_kermeta_language_behavior_CallVariable ) | (a25_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a26_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a27_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a28_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a29= '.' (a30= STRING ) | a31= '.' (a32= STRING ) a33= '(' ( ( (a34_0= parse_org_kermeta_language_behavior_Expression ) ( (a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a37= ')' | a38= '.' (a39= STRING ) | a40= '.' (a41= STRING ) ) )* a42= '==' (a43_0= parse_org_kermeta_language_behavior_Expression )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19345:4: ( (a23_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a24_0= parse_org_kermeta_language_behavior_CallVariable ) | (a25_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a26_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a27_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a28_0= parse_org_kermeta_language_behavior_IntegerLiteral ) )
        int alt192=6;
        switch ( input.LA(1) ) {
        case BOOLEAN:
            {
            alt192=1;
            }
            break;
        case STRING:
        case 83:
            {
            alt192=2;
            }
            break;
        case 98:
            {
            alt192=3;
            }
            break;
        case 87:
            {
            alt192=4;
            }
            break;
        case STRING_LITERAL:
            {
            alt192=5;
            }
            break;
        case INTEGER:
            {
            alt192=6;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 192, 0, input);

            throw nvae;
        }

        switch (alt192) {
            case 1 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19346:3: (a23_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                {
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19346:3: (a23_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19347:4: a23_0= parse_org_kermeta_language_behavior_BooleanLiteral
                {
                pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred245_Kermeta15345);
                a23_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;
            case 2 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19373:6: (a24_0= parse_org_kermeta_language_behavior_CallVariable )
                {
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19373:6: (a24_0= parse_org_kermeta_language_behavior_CallVariable )
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19374:4: a24_0= parse_org_kermeta_language_behavior_CallVariable
                {
                pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred245_Kermeta15379);
                a24_0=parse_org_kermeta_language_behavior_CallVariable();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;
            case 3 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19400:6: (a25_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                {
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19400:6: (a25_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19401:4: a25_0= parse_org_kermeta_language_behavior_JavaStaticCall
                {
                pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred245_Kermeta15413);
                a25_0=parse_org_kermeta_language_behavior_JavaStaticCall();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;
            case 4 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19427:6: (a26_0= parse_org_kermeta_language_behavior_SelfExpression )
                {
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19427:6: (a26_0= parse_org_kermeta_language_behavior_SelfExpression )
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19428:4: a26_0= parse_org_kermeta_language_behavior_SelfExpression
                {
                pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred245_Kermeta15447);
                a26_0=parse_org_kermeta_language_behavior_SelfExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;
            case 5 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19454:6: (a27_0= parse_org_kermeta_language_behavior_StringLiteral )
                {
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19454:6: (a27_0= parse_org_kermeta_language_behavior_StringLiteral )
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19455:4: a27_0= parse_org_kermeta_language_behavior_StringLiteral
                {
                pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred245_Kermeta15481);
                a27_0=parse_org_kermeta_language_behavior_StringLiteral();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;
            case 6 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19481:6: (a28_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                {
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19481:6: (a28_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19482:4: a28_0= parse_org_kermeta_language_behavior_IntegerLiteral
                {
                pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred245_Kermeta15515);
                a28_0=parse_org_kermeta_language_behavior_IntegerLiteral();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }

        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19517:2: ( (a29= '.' (a30= STRING ) | a31= '.' (a32= STRING ) a33= '(' ( ( (a34_0= parse_org_kermeta_language_behavior_Expression ) ( (a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a37= ')' | a38= '.' (a39= STRING ) | a40= '.' (a41= STRING ) ) )*
        loop196:
        do {
            int alt196=2;
            int LA196_0 = input.LA(1);

            if ( (LA196_0==19) ) {
                alt196=1;
            }


            switch (alt196) {
        	case 1 :
        	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19518:3: (a29= '.' (a30= STRING ) | a31= '.' (a32= STRING ) a33= '(' ( ( (a34_0= parse_org_kermeta_language_behavior_Expression ) ( (a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a37= ')' | a38= '.' (a39= STRING ) | a40= '.' (a41= STRING ) )
        	    {
        	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19518:3: (a29= '.' (a30= STRING ) | a31= '.' (a32= STRING ) a33= '(' ( ( (a34_0= parse_org_kermeta_language_behavior_Expression ) ( (a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a37= ')' | a38= '.' (a39= STRING ) | a40= '.' (a41= STRING ) )
        	    int alt195=4;
        	    int LA195_0 = input.LA(1);

        	    if ( (LA195_0==19) ) {
        	        int LA195_1 = input.LA(2);

        	        if ( (LA195_1==STRING) ) {
        	            int LA195_2 = input.LA(3);

        	            if ( (LA195_2==32) ) {
        	                alt195=2;
        	            }
        	            else if ( (synpred239_Kermeta()) ) {
        	                alt195=1;
        	            }
        	            else if ( (synpred243_Kermeta()) ) {
        	                alt195=3;
        	            }
        	            else if ( (true) ) {
        	                alt195=4;
        	            }
        	            else {
        	                if (state.backtracking>0) {state.failed=true; return ;}
        	                NoViableAltException nvae =
        	                    new NoViableAltException("", 195, 2, input);

        	                throw nvae;
        	            }
        	        }
        	        else {
        	            if (state.backtracking>0) {state.failed=true; return ;}
        	            NoViableAltException nvae =
        	                new NoViableAltException("", 195, 1, input);

        	            throw nvae;
        	        }
        	    }
        	    else {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        NoViableAltException nvae =
        	            new NoViableAltException("", 195, 0, input);

        	        throw nvae;
        	    }
        	    switch (alt195) {
        	        case 1 :
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19519:4: a29= '.' (a30= STRING )
        	            {
        	            a29=(Token)match(input,19,FOLLOW_19_in_synpred245_Kermeta15554); if (state.failed) return ;
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19531:4: (a30= STRING )
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19532:5: a30= STRING
        	            {
        	            a30=(Token)match(input,STRING,FOLLOW_STRING_in_synpred245_Kermeta15580); if (state.failed) return ;

        	            }


        	            }
        	            break;
        	        case 2 :
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19573:8: a31= '.' (a32= STRING ) a33= '(' ( ( (a34_0= parse_org_kermeta_language_behavior_Expression ) ( (a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a37= ')'
        	            {
        	            a31=(Token)match(input,19,FOLLOW_19_in_synpred245_Kermeta15621); if (state.failed) return ;
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19585:4: (a32= STRING )
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19586:5: a32= STRING
        	            {
        	            a32=(Token)match(input,STRING,FOLLOW_STRING_in_synpred245_Kermeta15647); if (state.failed) return ;

        	            }

        	            a33=(Token)match(input,32,FOLLOW_32_in_synpred245_Kermeta15680); if (state.failed) return ;
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19654:4: ( ( (a34_0= parse_org_kermeta_language_behavior_Expression ) ( (a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )?
        	            int alt194=2;
        	            int LA194_0 = input.LA(1);

        	            if ( ((LA194_0>=STRING && LA194_0<=BOOLEAN)||LA194_0==32||LA194_0==71||(LA194_0>=74 && LA194_0<=75)||LA194_0==78||LA194_0==81||(LA194_0>=83 && LA194_0<=84)||LA194_0==87||LA194_0==93||(LA194_0>=97 && LA194_0<=98)||LA194_0==101||LA194_0==104) ) {
        	                alt194=1;
        	            }
        	            switch (alt194) {
        	                case 1 :
        	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19655:5: ( (a34_0= parse_org_kermeta_language_behavior_Expression ) ( (a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
        	                    {
        	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19655:5: ( (a34_0= parse_org_kermeta_language_behavior_Expression ) ( (a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
        	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19656:6: (a34_0= parse_org_kermeta_language_behavior_Expression ) ( (a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression ) ) )*
        	                    {
        	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19656:6: (a34_0= parse_org_kermeta_language_behavior_Expression )
        	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19657:7: a34_0= parse_org_kermeta_language_behavior_Expression
        	                    {
        	                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred245_Kermeta15721);
        	                    a34_0=parse_org_kermeta_language_behavior_Expression();

        	                    state._fsp--;
        	                    if (state.failed) return ;

        	                    }

        	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19679:6: ( (a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression ) ) )*
        	                    loop193:
        	                    do {
        	                        int alt193=2;
        	                        int LA193_0 = input.LA(1);

        	                        if ( (LA193_0==26) ) {
        	                            alt193=1;
        	                        }


        	                        switch (alt193) {
        	                    	case 1 :
        	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19680:7: (a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression ) )
        	                    	    {
        	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19680:7: (a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression ) )
        	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19681:8: a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression )
        	                    	    {
        	                    	    a35=(Token)match(input,26,FOLLOW_26_in_synpred245_Kermeta15776); if (state.failed) return ;
        	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19712:8: (a36_0= parse_org_kermeta_language_behavior_Expression )
        	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19713:9: a36_0= parse_org_kermeta_language_behavior_Expression
        	                    	    {
        	                    	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred245_Kermeta15818);
        	                    	    a36_0=parse_org_kermeta_language_behavior_Expression();

        	                    	    state._fsp--;
        	                    	    if (state.failed) return ;

        	                    	    }


        	                    	    }


        	                    	    }
        	                    	    break;

        	                    	default :
        	                    	    break loop193;
        	                        }
        	                    } while (true);


        	                    }


        	                    }
        	                    break;

        	            }

        	            a37=(Token)match(input,33,FOLLOW_33_in_synpred245_Kermeta15922); if (state.failed) return ;

        	            }
        	            break;
        	        case 3 :
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19767:8: a38= '.' (a39= STRING )
        	            {
        	            a38=(Token)match(input,19,FOLLOW_19_in_synpred245_Kermeta15950); if (state.failed) return ;
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19779:4: (a39= STRING )
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19780:5: a39= STRING
        	            {
        	            a39=(Token)match(input,STRING,FOLLOW_STRING_in_synpred245_Kermeta15976); if (state.failed) return ;

        	            }


        	            }
        	            break;
        	        case 4 :
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19821:8: a40= '.' (a41= STRING )
        	            {
        	            a40=(Token)match(input,19,FOLLOW_19_in_synpred245_Kermeta16017); if (state.failed) return ;
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19833:4: (a41= STRING )
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19834:5: a41= STRING
        	            {
        	            a41=(Token)match(input,STRING,FOLLOW_STRING_in_synpred245_Kermeta16043); if (state.failed) return ;

        	            }


        	            }
        	            break;

        	    }


        	    }
        	    break;

        	default :
        	    break loop196;
            }
        } while (true);

        a42=(Token)match(input,88,FOLLOW_88_in_synpred245_Kermeta16089); if (state.failed) return ;
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19916:2: (a43_0= parse_org_kermeta_language_behavior_Expression )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19917:3: a43_0= parse_org_kermeta_language_behavior_Expression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred245_Kermeta16107);
        a43_0=parse_org_kermeta_language_behavior_Expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred245_Kermeta

    // $ANTLR start synpred251_Kermeta
    public final void synpred251_Kermeta_fragment() throws RecognitionException {   
        Token a50=null;
        Token a51=null;

        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20565:4: (a50= '.' (a51= STRING ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20565:4: a50= '.' (a51= STRING )
        {
        a50=(Token)match(input,19,FOLLOW_19_in_synpred251_Kermeta16347); if (state.failed) return ;
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20577:4: (a51= STRING )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20578:5: a51= STRING
        {
        a51=(Token)match(input,STRING,FOLLOW_STRING_in_synpred251_Kermeta16373); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred251_Kermeta

    // $ANTLR start synpred255_Kermeta
    public final void synpred255_Kermeta_fragment() throws RecognitionException {   
        Token a59=null;
        Token a60=null;

        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20927:8: (a59= '.' (a60= STRING ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20927:8: a59= '.' (a60= STRING )
        {
        a59=(Token)match(input,19,FOLLOW_19_in_synpred255_Kermeta16743); if (state.failed) return ;
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20939:4: (a60= STRING )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20940:5: a60= STRING
        {
        a60=(Token)match(input,STRING,FOLLOW_STRING_in_synpred255_Kermeta16769); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred255_Kermeta

    // $ANTLR start synpred260_Kermeta
    public final void synpred260_Kermeta_fragment() throws RecognitionException {   
        Token a63=null;
        Token a64=null;
        Token a65=null;
        Token a66=null;
        org.kermeta.language.behavior.Expression a67_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21217:3: ( ( (a63= '+' | a64= '-' | a65= '/' | a66= '*' ) (a67_0= parse_org_kermeta_language_behavior_Expression ) ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21217:3: ( (a63= '+' | a64= '-' | a65= '/' | a66= '*' ) (a67_0= parse_org_kermeta_language_behavior_Expression ) )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21217:3: ( (a63= '+' | a64= '-' | a65= '/' | a66= '*' ) (a67_0= parse_org_kermeta_language_behavior_Expression ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21218:4: (a63= '+' | a64= '-' | a65= '/' | a66= '*' ) (a67_0= parse_org_kermeta_language_behavior_Expression )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21218:4: (a63= '+' | a64= '-' | a65= '/' | a66= '*' )
        int alt203=4;
        switch ( input.LA(1) ) {
        case 89:
            {
            alt203=1;
            }
            break;
        case 90:
            {
            alt203=2;
            }
            break;
        case 91:
            {
            alt203=3;
            }
            break;
        case 92:
            {
            alt203=4;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 203, 0, input);

            throw nvae;
        }

        switch (alt203) {
            case 1 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21219:5: a63= '+'
                {
                a63=(Token)match(input,89,FOLLOW_89_in_synpred260_Kermeta16897); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21251:10: a64= '-'
                {
                a64=(Token)match(input,90,FOLLOW_90_in_synpred260_Kermeta16930); if (state.failed) return ;

                }
                break;
            case 3 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21283:10: a65= '/'
                {
                a65=(Token)match(input,91,FOLLOW_91_in_synpred260_Kermeta16963); if (state.failed) return ;

                }
                break;
            case 4 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21315:10: a66= '*'
                {
                a66=(Token)match(input,92,FOLLOW_92_in_synpred260_Kermeta16996); if (state.failed) return ;

                }
                break;

        }

        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21371:4: (a67_0= parse_org_kermeta_language_behavior_Expression )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21372:5: a67_0= parse_org_kermeta_language_behavior_Expression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred260_Kermeta17038);
        a67_0=parse_org_kermeta_language_behavior_Expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred260_Kermeta

    // $ANTLR start synpred261_Kermeta
    public final void synpred261_Kermeta_fragment() throws RecognitionException {   
        Token a50=null;
        Token a51=null;
        Token a52=null;
        Token a53=null;
        Token a54=null;
        Token a56=null;
        Token a58=null;
        Token a59=null;
        Token a60=null;
        Token a61=null;
        Token a62=null;
        Token a63=null;
        Token a64=null;
        Token a65=null;
        Token a66=null;
        org.kermeta.language.behavior.BooleanLiteral a44_0 = null;

        org.kermeta.language.behavior.CallVariable a45_0 = null;

        org.kermeta.language.behavior.JavaStaticCall a46_0 = null;

        org.kermeta.language.behavior.SelfExpression a47_0 = null;

        org.kermeta.language.behavior.StringLiteral a48_0 = null;

        org.kermeta.language.behavior.IntegerLiteral a49_0 = null;

        org.kermeta.language.behavior.Expression a55_0 = null;

        org.kermeta.language.behavior.Expression a57_0 = null;

        org.kermeta.language.behavior.Expression a67_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19992:4: ( ( (a44_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a45_0= parse_org_kermeta_language_behavior_CallVariable ) | (a46_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a47_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a48_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a49_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a50= '.' (a51= STRING ) | a52= '.' (a53= STRING ) a54= '(' ( ( (a55_0= parse_org_kermeta_language_behavior_Expression ) ( (a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a58= ')' | a59= '.' (a60= STRING ) | a61= '.' (a62= STRING ) ) )* ( ( (a63= '+' | a64= '-' | a65= '/' | a66= '*' ) (a67_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19992:4: ( (a44_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a45_0= parse_org_kermeta_language_behavior_CallVariable ) | (a46_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a47_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a48_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a49_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a50= '.' (a51= STRING ) | a52= '.' (a53= STRING ) a54= '(' ( ( (a55_0= parse_org_kermeta_language_behavior_Expression ) ( (a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a58= ')' | a59= '.' (a60= STRING ) | a61= '.' (a62= STRING ) ) )* ( ( (a63= '+' | a64= '-' | a65= '/' | a66= '*' ) (a67_0= parse_org_kermeta_language_behavior_Expression ) ) )*
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19992:4: ( (a44_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a45_0= parse_org_kermeta_language_behavior_CallVariable ) | (a46_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a47_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a48_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a49_0= parse_org_kermeta_language_behavior_IntegerLiteral ) )
        int alt204=6;
        switch ( input.LA(1) ) {
        case BOOLEAN:
            {
            alt204=1;
            }
            break;
        case STRING:
        case 83:
            {
            alt204=2;
            }
            break;
        case 98:
            {
            alt204=3;
            }
            break;
        case 87:
            {
            alt204=4;
            }
            break;
        case STRING_LITERAL:
            {
            alt204=5;
            }
            break;
        case INTEGER:
            {
            alt204=6;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 204, 0, input);

            throw nvae;
        }

        switch (alt204) {
            case 1 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19993:3: (a44_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                {
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19993:3: (a44_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19994:4: a44_0= parse_org_kermeta_language_behavior_BooleanLiteral
                {
                pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred261_Kermeta16138);
                a44_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;
            case 2 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20077:6: (a45_0= parse_org_kermeta_language_behavior_CallVariable )
                {
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20077:6: (a45_0= parse_org_kermeta_language_behavior_CallVariable )
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20078:4: a45_0= parse_org_kermeta_language_behavior_CallVariable
                {
                pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred261_Kermeta16172);
                a45_0=parse_org_kermeta_language_behavior_CallVariable();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;
            case 3 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20161:6: (a46_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                {
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20161:6: (a46_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20162:4: a46_0= parse_org_kermeta_language_behavior_JavaStaticCall
                {
                pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred261_Kermeta16206);
                a46_0=parse_org_kermeta_language_behavior_JavaStaticCall();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;
            case 4 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20245:6: (a47_0= parse_org_kermeta_language_behavior_SelfExpression )
                {
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20245:6: (a47_0= parse_org_kermeta_language_behavior_SelfExpression )
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20246:4: a47_0= parse_org_kermeta_language_behavior_SelfExpression
                {
                pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred261_Kermeta16240);
                a47_0=parse_org_kermeta_language_behavior_SelfExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;
            case 5 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20329:6: (a48_0= parse_org_kermeta_language_behavior_StringLiteral )
                {
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20329:6: (a48_0= parse_org_kermeta_language_behavior_StringLiteral )
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20330:4: a48_0= parse_org_kermeta_language_behavior_StringLiteral
                {
                pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred261_Kermeta16274);
                a48_0=parse_org_kermeta_language_behavior_StringLiteral();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;
            case 6 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20413:6: (a49_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                {
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20413:6: (a49_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20414:4: a49_0= parse_org_kermeta_language_behavior_IntegerLiteral
                {
                pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred261_Kermeta16308);
                a49_0=parse_org_kermeta_language_behavior_IntegerLiteral();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }

        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20563:2: ( (a50= '.' (a51= STRING ) | a52= '.' (a53= STRING ) a54= '(' ( ( (a55_0= parse_org_kermeta_language_behavior_Expression ) ( (a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a58= ')' | a59= '.' (a60= STRING ) | a61= '.' (a62= STRING ) ) )*
        loop208:
        do {
            int alt208=2;
            int LA208_0 = input.LA(1);

            if ( (LA208_0==19) ) {
                alt208=1;
            }


            switch (alt208) {
        	case 1 :
        	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20564:3: (a50= '.' (a51= STRING ) | a52= '.' (a53= STRING ) a54= '(' ( ( (a55_0= parse_org_kermeta_language_behavior_Expression ) ( (a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a58= ')' | a59= '.' (a60= STRING ) | a61= '.' (a62= STRING ) )
        	    {
        	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20564:3: (a50= '.' (a51= STRING ) | a52= '.' (a53= STRING ) a54= '(' ( ( (a55_0= parse_org_kermeta_language_behavior_Expression ) ( (a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a58= ')' | a59= '.' (a60= STRING ) | a61= '.' (a62= STRING ) )
        	    int alt207=4;
        	    int LA207_0 = input.LA(1);

        	    if ( (LA207_0==19) ) {
        	        int LA207_1 = input.LA(2);

        	        if ( (LA207_1==STRING) ) {
        	            int LA207_2 = input.LA(3);

        	            if ( (LA207_2==32) ) {
        	                alt207=2;
        	            }
        	            else if ( (synpred251_Kermeta()) ) {
        	                alt207=1;
        	            }
        	            else if ( (synpred255_Kermeta()) ) {
        	                alt207=3;
        	            }
        	            else if ( (true) ) {
        	                alt207=4;
        	            }
        	            else {
        	                if (state.backtracking>0) {state.failed=true; return ;}
        	                NoViableAltException nvae =
        	                    new NoViableAltException("", 207, 2, input);

        	                throw nvae;
        	            }
        	        }
        	        else {
        	            if (state.backtracking>0) {state.failed=true; return ;}
        	            NoViableAltException nvae =
        	                new NoViableAltException("", 207, 1, input);

        	            throw nvae;
        	        }
        	    }
        	    else {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        NoViableAltException nvae =
        	            new NoViableAltException("", 207, 0, input);

        	        throw nvae;
        	    }
        	    switch (alt207) {
        	        case 1 :
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20565:4: a50= '.' (a51= STRING )
        	            {
        	            a50=(Token)match(input,19,FOLLOW_19_in_synpred261_Kermeta16347); if (state.failed) return ;
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20577:4: (a51= STRING )
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20578:5: a51= STRING
        	            {
        	            a51=(Token)match(input,STRING,FOLLOW_STRING_in_synpred261_Kermeta16373); if (state.failed) return ;

        	            }


        	            }
        	            break;
        	        case 2 :
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20676:8: a52= '.' (a53= STRING ) a54= '(' ( ( (a55_0= parse_org_kermeta_language_behavior_Expression ) ( (a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a58= ')'
        	            {
        	            a52=(Token)match(input,19,FOLLOW_19_in_synpred261_Kermeta16414); if (state.failed) return ;
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20688:4: (a53= STRING )
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20689:5: a53= STRING
        	            {
        	            a53=(Token)match(input,STRING,FOLLOW_STRING_in_synpred261_Kermeta16440); if (state.failed) return ;

        	            }

        	            a54=(Token)match(input,32,FOLLOW_32_in_synpred261_Kermeta16473); if (state.failed) return ;
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20757:4: ( ( (a55_0= parse_org_kermeta_language_behavior_Expression ) ( (a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )?
        	            int alt206=2;
        	            int LA206_0 = input.LA(1);

        	            if ( ((LA206_0>=STRING && LA206_0<=BOOLEAN)||LA206_0==32||LA206_0==71||(LA206_0>=74 && LA206_0<=75)||LA206_0==78||LA206_0==81||(LA206_0>=83 && LA206_0<=84)||LA206_0==87||LA206_0==93||(LA206_0>=97 && LA206_0<=98)||LA206_0==101||LA206_0==104) ) {
        	                alt206=1;
        	            }
        	            switch (alt206) {
        	                case 1 :
        	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20758:5: ( (a55_0= parse_org_kermeta_language_behavior_Expression ) ( (a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
        	                    {
        	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20758:5: ( (a55_0= parse_org_kermeta_language_behavior_Expression ) ( (a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
        	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20759:6: (a55_0= parse_org_kermeta_language_behavior_Expression ) ( (a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression ) ) )*
        	                    {
        	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20759:6: (a55_0= parse_org_kermeta_language_behavior_Expression )
        	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20760:7: a55_0= parse_org_kermeta_language_behavior_Expression
        	                    {
        	                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred261_Kermeta16514);
        	                    a55_0=parse_org_kermeta_language_behavior_Expression();

        	                    state._fsp--;
        	                    if (state.failed) return ;

        	                    }

        	                    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20782:6: ( (a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression ) ) )*
        	                    loop205:
        	                    do {
        	                        int alt205=2;
        	                        int LA205_0 = input.LA(1);

        	                        if ( (LA205_0==26) ) {
        	                            alt205=1;
        	                        }


        	                        switch (alt205) {
        	                    	case 1 :
        	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20783:7: (a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression ) )
        	                    	    {
        	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20783:7: (a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression ) )
        	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20784:8: a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression )
        	                    	    {
        	                    	    a56=(Token)match(input,26,FOLLOW_26_in_synpred261_Kermeta16569); if (state.failed) return ;
        	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20815:8: (a57_0= parse_org_kermeta_language_behavior_Expression )
        	                    	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20816:9: a57_0= parse_org_kermeta_language_behavior_Expression
        	                    	    {
        	                    	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred261_Kermeta16611);
        	                    	    a57_0=parse_org_kermeta_language_behavior_Expression();

        	                    	    state._fsp--;
        	                    	    if (state.failed) return ;

        	                    	    }


        	                    	    }


        	                    	    }
        	                    	    break;

        	                    	default :
        	                    	    break loop205;
        	                        }
        	                    } while (true);


        	                    }


        	                    }
        	                    break;

        	            }

        	            a58=(Token)match(input,33,FOLLOW_33_in_synpred261_Kermeta16715); if (state.failed) return ;

        	            }
        	            break;
        	        case 3 :
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20927:8: a59= '.' (a60= STRING )
        	            {
        	            a59=(Token)match(input,19,FOLLOW_19_in_synpred261_Kermeta16743); if (state.failed) return ;
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20939:4: (a60= STRING )
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20940:5: a60= STRING
        	            {
        	            a60=(Token)match(input,STRING,FOLLOW_STRING_in_synpred261_Kermeta16769); if (state.failed) return ;

        	            }


        	            }
        	            break;
        	        case 4 :
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21038:8: a61= '.' (a62= STRING )
        	            {
        	            a61=(Token)match(input,19,FOLLOW_19_in_synpred261_Kermeta16810); if (state.failed) return ;
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21050:4: (a62= STRING )
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21051:5: a62= STRING
        	            {
        	            a62=(Token)match(input,STRING,FOLLOW_STRING_in_synpred261_Kermeta16836); if (state.failed) return ;

        	            }


        	            }
        	            break;

        	    }


        	    }
        	    break;

        	default :
        	    break loop208;
            }
        } while (true);

        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21216:2: ( ( (a63= '+' | a64= '-' | a65= '/' | a66= '*' ) (a67_0= parse_org_kermeta_language_behavior_Expression ) ) )*
        loop210:
        do {
            int alt210=2;
            int LA210_0 = input.LA(1);

            if ( ((LA210_0>=89 && LA210_0<=92)) ) {
                alt210=1;
            }


            switch (alt210) {
        	case 1 :
        	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21217:3: ( (a63= '+' | a64= '-' | a65= '/' | a66= '*' ) (a67_0= parse_org_kermeta_language_behavior_Expression ) )
        	    {
        	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21217:3: ( (a63= '+' | a64= '-' | a65= '/' | a66= '*' ) (a67_0= parse_org_kermeta_language_behavior_Expression ) )
        	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21218:4: (a63= '+' | a64= '-' | a65= '/' | a66= '*' ) (a67_0= parse_org_kermeta_language_behavior_Expression )
        	    {
        	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21218:4: (a63= '+' | a64= '-' | a65= '/' | a66= '*' )
        	    int alt209=4;
        	    switch ( input.LA(1) ) {
        	    case 89:
        	        {
        	        alt209=1;
        	        }
        	        break;
        	    case 90:
        	        {
        	        alt209=2;
        	        }
        	        break;
        	    case 91:
        	        {
        	        alt209=3;
        	        }
        	        break;
        	    case 92:
        	        {
        	        alt209=4;
        	        }
        	        break;
        	    default:
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        NoViableAltException nvae =
        	            new NoViableAltException("", 209, 0, input);

        	        throw nvae;
        	    }

        	    switch (alt209) {
        	        case 1 :
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21219:5: a63= '+'
        	            {
        	            a63=(Token)match(input,89,FOLLOW_89_in_synpred261_Kermeta16897); if (state.failed) return ;

        	            }
        	            break;
        	        case 2 :
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21251:10: a64= '-'
        	            {
        	            a64=(Token)match(input,90,FOLLOW_90_in_synpred261_Kermeta16930); if (state.failed) return ;

        	            }
        	            break;
        	        case 3 :
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21283:10: a65= '/'
        	            {
        	            a65=(Token)match(input,91,FOLLOW_91_in_synpred261_Kermeta16963); if (state.failed) return ;

        	            }
        	            break;
        	        case 4 :
        	            // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21315:10: a66= '*'
        	            {
        	            a66=(Token)match(input,92,FOLLOW_92_in_synpred261_Kermeta16996); if (state.failed) return ;

        	            }
        	            break;

        	    }

        	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21371:4: (a67_0= parse_org_kermeta_language_behavior_Expression )
        	    // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21372:5: a67_0= parse_org_kermeta_language_behavior_Expression
        	    {
        	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred261_Kermeta17038);
        	    a67_0=parse_org_kermeta_language_behavior_Expression();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop210;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred261_Kermeta

    // $ANTLR start synpred267_Kermeta
    public final void synpred267_Kermeta_fragment() throws RecognitionException {   
        Token a75=null;
        Token a76=null;

        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21735:4: (a75= '.' (a76= STRING ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21735:4: a75= '.' (a76= STRING )
        {
        a75=(Token)match(input,19,FOLLOW_19_in_synpred267_Kermeta17315); if (state.failed) return ;
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21747:4: (a76= STRING )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21748:5: a76= STRING
        {
        a76=(Token)match(input,STRING,FOLLOW_STRING_in_synpred267_Kermeta17341); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred267_Kermeta

    // $ANTLR start synpred271_Kermeta
    public final void synpred271_Kermeta_fragment() throws RecognitionException {   
        Token a84=null;
        Token a85=null;

        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21991:8: (a84= '.' (a85= STRING ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21991:8: a84= '.' (a85= STRING )
        {
        a84=(Token)match(input,19,FOLLOW_19_in_synpred271_Kermeta17711); if (state.failed) return ;
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22003:4: (a85= STRING )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22004:5: a85= STRING
        {
        a85=(Token)match(input,STRING,FOLLOW_STRING_in_synpred271_Kermeta17737); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred271_Kermeta

    // $ANTLR start synpred280_Kermeta
    public final void synpred280_Kermeta_fragment() throws RecognitionException {   
        Token a94=null;
        Token a95=null;
        Token a96=null;
        Token a97=null;
        org.kermeta.language.behavior.Expression a98_0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22383:3: ( ( (a94= '+' | a95= '-' | a96= '/' | a97= '*' ) (a98_0= parse_org_kermeta_language_behavior_Expression ) ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22383:3: ( (a94= '+' | a95= '-' | a96= '/' | a97= '*' ) (a98_0= parse_org_kermeta_language_behavior_Expression ) )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22383:3: ( (a94= '+' | a95= '-' | a96= '/' | a97= '*' ) (a98_0= parse_org_kermeta_language_behavior_Expression ) )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22384:4: (a94= '+' | a95= '-' | a96= '/' | a97= '*' ) (a98_0= parse_org_kermeta_language_behavior_Expression )
        {
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22384:4: (a94= '+' | a95= '-' | a96= '/' | a97= '*' )
        int alt218=4;
        switch ( input.LA(1) ) {
        case 89:
            {
            alt218=1;
            }
            break;
        case 90:
            {
            alt218=2;
            }
            break;
        case 91:
            {
            alt218=3;
            }
            break;
        case 92:
            {
            alt218=4;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 218, 0, input);

            throw nvae;
        }

        switch (alt218) {
            case 1 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22385:5: a94= '+'
                {
                a94=(Token)match(input,89,FOLLOW_89_in_synpred280_Kermeta18076); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22417:10: a95= '-'
                {
                a95=(Token)match(input,90,FOLLOW_90_in_synpred280_Kermeta18109); if (state.failed) return ;

                }
                break;
            case 3 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22449:10: a96= '/'
                {
                a96=(Token)match(input,91,FOLLOW_91_in_synpred280_Kermeta18142); if (state.failed) return ;

                }
                break;
            case 4 :
                // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22481:10: a97= '*'
                {
                a97=(Token)match(input,92,FOLLOW_92_in_synpred280_Kermeta18175); if (state.failed) return ;

                }
                break;

        }

        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22537:4: (a98_0= parse_org_kermeta_language_behavior_Expression )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:22538:5: a98_0= parse_org_kermeta_language_behavior_Expression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred280_Kermeta18217);
        a98_0=parse_org_kermeta_language_behavior_Expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred280_Kermeta

    // $ANTLR start synpred311_Kermeta
    public final void synpred311_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.BooleanLiteral c2 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25048:4: (c2= parse_org_kermeta_language_behavior_BooleanLiteral )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25048:4: c2= parse_org_kermeta_language_behavior_BooleanLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred311_Kermeta21039);
        c2=parse_org_kermeta_language_behavior_BooleanLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred311_Kermeta

    // $ANTLR start synpred312_Kermeta
    public final void synpred312_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.IntegerLiteral c3 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25049:4: (c3= parse_org_kermeta_language_behavior_IntegerLiteral )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25049:4: c3= parse_org_kermeta_language_behavior_IntegerLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred312_Kermeta21049);
        c3=parse_org_kermeta_language_behavior_IntegerLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred312_Kermeta

    // $ANTLR start synpred313_Kermeta
    public final void synpred313_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.StringLiteral c4 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25050:4: (c4= parse_org_kermeta_language_behavior_StringLiteral )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25050:4: c4= parse_org_kermeta_language_behavior_StringLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred313_Kermeta21059);
        c4=parse_org_kermeta_language_behavior_StringLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred313_Kermeta

    // $ANTLR start synpred317_Kermeta
    public final void synpred317_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.TypeLiteral c8 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25054:4: (c8= parse_org_kermeta_language_behavior_TypeLiteral )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25054:4: c8= parse_org_kermeta_language_behavior_TypeLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_synpred317_Kermeta21099);
        c8=parse_org_kermeta_language_behavior_TypeLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred317_Kermeta

    // $ANTLR start synpred318_Kermeta
    public final void synpred318_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult c9 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25055:4: (c9= parse_org_kermeta_language_behavior_CallResult )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25055:4: c9= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred318_Kermeta21109);
        c9=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred318_Kermeta

    // $ANTLR start synpred320_Kermeta
    public final void synpred320_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.Assignment c11 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25057:4: (c11= parse_org_kermeta_language_behavior_Assignment )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25057:4: c11= parse_org_kermeta_language_behavior_Assignment
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred320_Kermeta21129);
        c11=parse_org_kermeta_language_behavior_Assignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred320_Kermeta

    // $ANTLR start synpred321_Kermeta
    public final void synpred321_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable c12 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25058:4: (c12= parse_org_kermeta_language_behavior_CallVariable )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25058:4: c12= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred321_Kermeta21139);
        c12=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred321_Kermeta

    // $ANTLR start synpred322_Kermeta
    public final void synpred322_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.SelfExpression c13 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25059:4: (c13= parse_org_kermeta_language_behavior_SelfExpression )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25059:4: c13= parse_org_kermeta_language_behavior_SelfExpression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred322_Kermeta21149);
        c13=parse_org_kermeta_language_behavior_SelfExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred322_Kermeta

    // $ANTLR start synpred323_Kermeta
    public final void synpred323_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature c14 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25060:4: (c14= parse_org_kermeta_language_behavior_CallFeature )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25060:4: c14= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred323_Kermeta21159);
        c14=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred323_Kermeta

    // $ANTLR start synpred326_Kermeta
    public final void synpred326_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.JavaStaticCall c17 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25063:4: (c17= parse_org_kermeta_language_behavior_JavaStaticCall )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25063:4: c17= parse_org_kermeta_language_behavior_JavaStaticCall
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred326_Kermeta21189);
        c17=parse_org_kermeta_language_behavior_JavaStaticCall();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred326_Kermeta

    // $ANTLR start synpred328_Kermeta
    public final void synpred328_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Class c0 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25071:2: (c0= parse_org_kermeta_language_structure_Class )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25071:2: c0= parse_org_kermeta_language_structure_Class
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Class_in_synpred328_Kermeta21230);
        c0=parse_org_kermeta_language_structure_Class();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred328_Kermeta

    // $ANTLR start synpred330_Kermeta
    public final void synpred330_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ModelType c2 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25073:4: (c2= parse_org_kermeta_language_structure_ModelType )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25073:4: c2= parse_org_kermeta_language_structure_ModelType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelType_in_synpred330_Kermeta21250);
        c2=parse_org_kermeta_language_structure_ModelType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred330_Kermeta

    // $ANTLR start synpred331_Kermeta
    public final void synpred331_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.PrimitiveType c3 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25074:4: (c3= parse_org_kermeta_language_structure_PrimitiveType )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25074:4: c3= parse_org_kermeta_language_structure_PrimitiveType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_synpred331_Kermeta21260);
        c3=parse_org_kermeta_language_structure_PrimitiveType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred331_Kermeta

    // $ANTLR start synpred332_Kermeta
    public final void synpred332_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ObjectTypeVariable c4 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25075:4: (c4= parse_org_kermeta_language_structure_ObjectTypeVariable )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25075:4: c4= parse_org_kermeta_language_structure_ObjectTypeVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_synpred332_Kermeta21270);
        c4=parse_org_kermeta_language_structure_ObjectTypeVariable();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred332_Kermeta

    // $ANTLR start synpred334_Kermeta
    public final void synpred334_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.VirtualType c6 = null;


        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25077:4: (c6= parse_org_kermeta_language_structure_VirtualType )
        // /Users/Surfin/Documents/Work/Irisa/dev/64/EEMFtext/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:25077:4: c6= parse_org_kermeta_language_structure_VirtualType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_synpred334_Kermeta21290);
        c6=parse_org_kermeta_language_structure_VirtualType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred334_Kermeta

    // Delegated rules

    public final boolean synpred1_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred313_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred313_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred227_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred227_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred260_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred260_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred271_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred271_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred87_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred255_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred255_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred190_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred190_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred233_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred233_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred328_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred328_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred312_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred312_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred209_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred209_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred56_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred56_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred331_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred331_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred311_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred311_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred50_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred212_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred212_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred78_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred78_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred181_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred181_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred330_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred330_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred251_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred251_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred198_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred198_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred74_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred74_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred177_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred177_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred280_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred280_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred81_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred59_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred59_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred334_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred334_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred323_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred323_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred217_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred217_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred215_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred215_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred317_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred317_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred261_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred261_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred199_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred199_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred64_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred64_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred191_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred191_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred194_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred194_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred243_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred243_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred239_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred239_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred318_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred318_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred84_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred84_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred213_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred213_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred73_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred73_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred83_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred83_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred267_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred267_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred231_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred231_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred220_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred220_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred219_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred219_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred48_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred326_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred326_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred193_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred193_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred103_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred103_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred332_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred332_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred322_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred322_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred320_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred320_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred180_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred180_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred188_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred188_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred201_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred201_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred82_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred82_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred210_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred210_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred205_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred205_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred79_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred79_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred178_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred178_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred176_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred176_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred245_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred245_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred321_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred321_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA11 dfa11 = new DFA11(this);
    protected DFA10 dfa10 = new DFA10(this);
    protected DFA7 dfa7 = new DFA7(this);
    protected DFA12 dfa12 = new DFA12(this);
    protected DFA36 dfa36 = new DFA36(this);
    protected DFA71 dfa71 = new DFA71(this);
    protected DFA77 dfa77 = new DFA77(this);
    protected DFA78 dfa78 = new DFA78(this);
    protected DFA87 dfa87 = new DFA87(this);
    protected DFA115 dfa115 = new DFA115(this);
    protected DFA126 dfa126 = new DFA126(this);
    protected DFA127 dfa127 = new DFA127(this);
    protected DFA133 dfa133 = new DFA133(this);
    static final String DFA1_eotS =
        "\27\uffff";
    static final String DFA1_eofS =
        "\1\1\26\uffff";
    static final String DFA1_minS =
        "\1\5\3\uffff\1\0\11\uffff\4\0\5\uffff";
    static final String DFA1_maxS =
        "\1\65\3\uffff\1\0\11\uffff\4\0\5\uffff";
    static final String DFA1_acceptS =
        "\1\uffff\1\1\13\uffff\1\2\4\uffff\1\6\1\4\1\5\1\7\1\3";
    static final String DFA1_specialS =
        "\4\uffff\1\0\11\uffff\1\1\1\2\1\3\1\4\5\uffff}>";
    static final String[] DFA1_transitionS = {
            "\1\4\12\uffff\3\1\3\uffff\3\1\2\uffff\1\16\1\17\1\uffff\1\20"+
            "\1\21\3\uffff\1\1\4\uffff\1\15\1\1\7\uffff\1\22\2\uffff\2\1",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA1_eot = DFA.unpackEncodedString(DFA1_eotS);
    static final short[] DFA1_eof = DFA.unpackEncodedString(DFA1_eofS);
    static final char[] DFA1_min = DFA.unpackEncodedStringToUnsignedChars(DFA1_minS);
    static final char[] DFA1_max = DFA.unpackEncodedStringToUnsignedChars(DFA1_maxS);
    static final short[] DFA1_accept = DFA.unpackEncodedString(DFA1_acceptS);
    static final short[] DFA1_special = DFA.unpackEncodedString(DFA1_specialS);
    static final short[][] DFA1_transition;

    static {
        int numStates = DFA1_transitionS.length;
        DFA1_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA1_transition[i] = DFA.unpackEncodedString(DFA1_transitionS[i]);
        }
    }

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = DFA1_eot;
            this.eof = DFA1_eof;
            this.min = DFA1_min;
            this.max = DFA1_max;
            this.accept = DFA1_accept;
            this.special = DFA1_special;
            this.transition = DFA1_transition;
        }
        public String getDescription() {
            return "5313:2: (c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Model | c2= parse_org_kermeta_language_structure_Property | c3= parse_org_kermeta_language_structure_Operation | c4= parse_org_kermeta_language_structure_Parameter | c5= parse_org_kermeta_language_structure_MultiplicityElement | c6= parse_org_kermeta_language_behavior_TypeReference )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA1_4 = input.LA(1);

                         
                        int index1_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_Kermeta()) ) {s = 1;}

                        else if ( (synpred4_Kermeta()) ) {s = 19;}

                        else if ( (synpred5_Kermeta()) ) {s = 20;}

                        else if ( (synpred6_Kermeta()) ) {s = 18;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index1_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA1_14 = input.LA(1);

                         
                        int index1_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_Kermeta()) ) {s = 22;}

                        else if ( (synpred6_Kermeta()) ) {s = 18;}

                         
                        input.seek(index1_14);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA1_15 = input.LA(1);

                         
                        int index1_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_Kermeta()) ) {s = 22;}

                        else if ( (synpred6_Kermeta()) ) {s = 18;}

                         
                        input.seek(index1_15);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA1_16 = input.LA(1);

                         
                        int index1_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_Kermeta()) ) {s = 22;}

                        else if ( (synpred6_Kermeta()) ) {s = 18;}

                         
                        input.seek(index1_16);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA1_17 = input.LA(1);

                         
                        int index1_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_Kermeta()) ) {s = 19;}

                        else if ( (synpred6_Kermeta()) ) {s = 18;}

                         
                        input.seek(index1_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 1, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA11_eotS =
        "\15\uffff";
    static final String DFA11_eofS =
        "\1\12\14\uffff";
    static final String DFA11_minS =
        "\1\5\10\0\4\uffff";
    static final String DFA11_maxS =
        "\1\65\10\0\4\uffff";
    static final String DFA11_acceptS =
        "\11\uffff\1\1\1\2\2\uffff";
    static final String DFA11_specialS =
        "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\4\uffff}>";
    static final String[] DFA11_transitionS = {
            "\1\1\14\uffff\1\12\1\uffff\1\11\1\12\1\3\1\4\1\5\12\uffff\1"+
            "\6\5\uffff\1\7\12\uffff\1\2\1\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA11_eot = DFA.unpackEncodedString(DFA11_eotS);
    static final short[] DFA11_eof = DFA.unpackEncodedString(DFA11_eofS);
    static final char[] DFA11_min = DFA.unpackEncodedStringToUnsignedChars(DFA11_minS);
    static final char[] DFA11_max = DFA.unpackEncodedStringToUnsignedChars(DFA11_maxS);
    static final short[] DFA11_accept = DFA.unpackEncodedString(DFA11_acceptS);
    static final short[] DFA11_special = DFA.unpackEncodedString(DFA11_specialS);
    static final short[][] DFA11_transition;

    static {
        int numStates = DFA11_transitionS.length;
        DFA11_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA11_transition[i] = DFA.unpackEncodedString(DFA11_transitionS[i]);
        }
    }

    class DFA11 extends DFA {

        public DFA11(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 11;
            this.eot = DFA11_eot;
            this.eof = DFA11_eof;
            this.min = DFA11_min;
            this.max = DFA11_max;
            this.accept = DFA11_accept;
            this.special = DFA11_special;
            this.transition = DFA11_transition;
        }
        public String getDescription() {
            return "5803:3: ( ( ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_Package ) ) )* a7= '}' | a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a10= '}' ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA11_1 = input.LA(1);

                         
                        int index11_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_Kermeta()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index11_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA11_2 = input.LA(1);

                         
                        int index11_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_Kermeta()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index11_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA11_3 = input.LA(1);

                         
                        int index11_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_Kermeta()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index11_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA11_4 = input.LA(1);

                         
                        int index11_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_Kermeta()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index11_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA11_5 = input.LA(1);

                         
                        int index11_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_Kermeta()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index11_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA11_6 = input.LA(1);

                         
                        int index11_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_Kermeta()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index11_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA11_7 = input.LA(1);

                         
                        int index11_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_Kermeta()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index11_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA11_8 = input.LA(1);

                         
                        int index11_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_Kermeta()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index11_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 11, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA10_eotS =
        "\14\uffff";
    static final String DFA10_eofS =
        "\14\uffff";
    static final String DFA10_minS =
        "\1\5\10\uffff\1\0\2\uffff";
    static final String DFA10_maxS =
        "\1\65\10\uffff\1\0\2\uffff";
    static final String DFA10_acceptS =
        "\1\uffff\1\1\10\uffff\1\2\1\3";
    static final String DFA10_specialS =
        "\11\uffff\1\0\2\uffff}>";
    static final String[] DFA10_transitionS = {
            "\1\1\16\uffff\1\11\1\uffff\3\1\12\uffff\1\1\5\uffff\1\1\12\uffff"+
            "\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA10_eot = DFA.unpackEncodedString(DFA10_eotS);
    static final short[] DFA10_eof = DFA.unpackEncodedString(DFA10_eofS);
    static final char[] DFA10_min = DFA.unpackEncodedStringToUnsignedChars(DFA10_minS);
    static final char[] DFA10_max = DFA.unpackEncodedStringToUnsignedChars(DFA10_maxS);
    static final short[] DFA10_accept = DFA.unpackEncodedString(DFA10_acceptS);
    static final short[] DFA10_special = DFA.unpackEncodedString(DFA10_specialS);
    static final short[][] DFA10_transition;

    static {
        int numStates = DFA10_transitionS.length;
        DFA10_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA10_transition[i] = DFA.unpackEncodedString(DFA10_transitionS[i]);
        }
    }

    class DFA10 extends DFA {

        public DFA10(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 10;
            this.eot = DFA10_eot;
            this.eof = DFA10_eof;
            this.min = DFA10_min;
            this.max = DFA10_max;
            this.accept = DFA10_accept;
            this.special = DFA10_special;
            this.transition = DFA10_transition;
        }
        public String getDescription() {
            return "5804:4: ( ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_Package ) ) )* a7= '}' | a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a10= '}' )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA10_9 = input.LA(1);

                         
                        int index10_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index10_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 10, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA7_eotS =
        "\15\uffff";
    static final String DFA7_eofS =
        "\1\1\14\uffff";
    static final String DFA7_minS =
        "\1\5\2\uffff\10\0\2\uffff";
    static final String DFA7_maxS =
        "\1\65\2\uffff\10\0\2\uffff";
    static final String DFA7_acceptS =
        "\1\uffff\1\2\12\uffff\1\1";
    static final String DFA7_specialS =
        "\3\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\2\uffff}>";
    static final String[] DFA7_transitionS = {
            "\1\3\14\uffff\1\1\2\uffff\1\1\1\5\1\6\1\7\12\uffff\1\10\5\uffff"+
            "\1\11\12\uffff\1\4\1\12",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA7_eot = DFA.unpackEncodedString(DFA7_eotS);
    static final short[] DFA7_eof = DFA.unpackEncodedString(DFA7_eofS);
    static final char[] DFA7_min = DFA.unpackEncodedStringToUnsignedChars(DFA7_minS);
    static final char[] DFA7_max = DFA.unpackEncodedStringToUnsignedChars(DFA7_maxS);
    static final short[] DFA7_accept = DFA.unpackEncodedString(DFA7_acceptS);
    static final short[] DFA7_special = DFA.unpackEncodedString(DFA7_specialS);
    static final short[][] DFA7_transition;

    static {
        int numStates = DFA7_transitionS.length;
        DFA7_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA7_transition[i] = DFA.unpackEncodedString(DFA7_transitionS[i]);
        }
    }

    class DFA7 extends DFA {

        public DFA7(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 7;
            this.eot = DFA7_eot;
            this.eof = DFA7_eof;
            this.min = DFA7_min;
            this.max = DFA7_max;
            this.accept = DFA7_accept;
            this.special = DFA7_special;
            this.transition = DFA7_transition;
        }
        public String getDescription() {
            return "()+ loopback of 5805:5: ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA7_3 = input.LA(1);

                         
                        int index7_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_Kermeta()) ) {s = 12;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index7_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA7_4 = input.LA(1);

                         
                        int index7_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_Kermeta()) ) {s = 12;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index7_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA7_5 = input.LA(1);

                         
                        int index7_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_Kermeta()) ) {s = 12;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index7_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA7_6 = input.LA(1);

                         
                        int index7_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_Kermeta()) ) {s = 12;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index7_6);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA7_7 = input.LA(1);

                         
                        int index7_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_Kermeta()) ) {s = 12;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index7_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA7_8 = input.LA(1);

                         
                        int index7_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_Kermeta()) ) {s = 12;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index7_8);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA7_9 = input.LA(1);

                         
                        int index7_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_Kermeta()) ) {s = 12;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index7_9);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA7_10 = input.LA(1);

                         
                        int index7_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_Kermeta()) ) {s = 12;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index7_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 7, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA12_eotS =
        "\13\uffff";
    static final String DFA12_eofS =
        "\1\1\12\uffff";
    static final String DFA12_minS =
        "\1\5\1\uffff\10\0\1\uffff";
    static final String DFA12_maxS =
        "\1\65\1\uffff\10\0\1\uffff";
    static final String DFA12_acceptS =
        "\1\uffff\1\2\10\uffff\1\1";
    static final String DFA12_specialS =
        "\2\uffff\1\6\1\5\1\0\1\2\1\1\1\4\1\3\1\7\1\uffff}>";
    static final String[] DFA12_transitionS = {
            "\1\2\14\uffff\1\1\2\uffff\1\1\1\4\1\5\1\6\12\uffff\1\7\5\uffff"+
            "\1\10\12\uffff\1\3\1\11",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] DFA12_eot = DFA.unpackEncodedString(DFA12_eotS);
    static final short[] DFA12_eof = DFA.unpackEncodedString(DFA12_eofS);
    static final char[] DFA12_min = DFA.unpackEncodedStringToUnsignedChars(DFA12_minS);
    static final char[] DFA12_max = DFA.unpackEncodedStringToUnsignedChars(DFA12_maxS);
    static final short[] DFA12_accept = DFA.unpackEncodedString(DFA12_acceptS);
    static final short[] DFA12_special = DFA.unpackEncodedString(DFA12_specialS);
    static final short[][] DFA12_transition;

    static {
        int numStates = DFA12_transitionS.length;
        DFA12_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA12_transition[i] = DFA.unpackEncodedString(DFA12_transitionS[i]);
        }
    }

    class DFA12 extends DFA {

        public DFA12(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 12;
            this.eot = DFA12_eot;
            this.eof = DFA12_eof;
            this.min = DFA12_min;
            this.max = DFA12_max;
            this.accept = DFA12_accept;
            this.special = DFA12_special;
            this.transition = DFA12_transition;
        }
        public String getDescription() {
            return "()+ loopback of 6091:3: ( ( (a11_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA12_4 = input.LA(1);

                         
                        int index12_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index12_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA12_6 = input.LA(1);

                         
                        int index12_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index12_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA12_5 = input.LA(1);

                         
                        int index12_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index12_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA12_8 = input.LA(1);

                         
                        int index12_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index12_8);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA12_7 = input.LA(1);

                         
                        int index12_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index12_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA12_3 = input.LA(1);

                         
                        int index12_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index12_3);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA12_2 = input.LA(1);

                         
                        int index12_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index12_2);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA12_9 = input.LA(1);

                         
                        int index12_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index12_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 12, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA36_eotS =
        "\111\uffff";
    static final String DFA36_eofS =
        "\1\15\110\uffff";
    static final String DFA36_minS =
        "\1\5\1\uffff\13\0\1\uffff\4\0\5\uffff\1\0\7\uffff\3\0\3\uffff\1"+
        "\0\1\uffff\3\0\37\uffff";
    static final String DFA36_maxS =
        "\1\150\1\uffff\13\0\1\uffff\4\0\5\uffff\1\0\7\uffff\3\0\3\uffff"+
        "\1\0\1\uffff\3\0\37\uffff";
    static final String DFA36_acceptS =
        "\1\uffff\1\1\13\uffff\1\2\4\uffff\1\16\1\20\1\21\1\24\1\25\1\uffff"+
        "\1\26\1\30\1\31\1\32\1\33\1\34\1\36\3\uffff\1\42\1\43\1\44\1\uffff"+
        "\1\47\3\uffff\1\54\1\55\1\57\1\60\1\61\1\4\1\3\1\5\1\10\1\11\1\12"+
        "\1\14\1\15\1\17\1\22\1\23\1\35\1\45\1\50\1\51\1\53\1\6\1\13\1\7"+
        "\1\27\1\37\1\40\1\41\1\46\1\56\1\52";
    static final String DFA36_specialS =
        "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\uffff"+
        "\1\13\1\14\1\15\1\16\5\uffff\1\17\7\uffff\1\20\1\21\1\22\3\uffff"+
        "\1\23\1\uffff\1\24\1\25\1\26\37\uffff}>";
    static final String[] DFA36_transitionS = {
            "\1\5\1\41\1\40\1\37\7\uffff\1\3\1\2\1\4\3\uffff\1\7\1\10\1\11"+
            "\2\uffff\1\16\1\17\1\uffff\1\20\1\21\1\47\2\uffff\1\12\1\uffff"+
            "\1\1\2\uffff\1\22\1\13\3\uffff\1\23\3\uffff\1\24\2\uffff\1\6"+
            "\1\14\1\uffff\1\25\2\uffff\1\26\1\uffff\1\30\1\uffff\1\27\3"+
            "\uffff\1\31\1\32\2\uffff\1\33\1\34\1\uffff\1\35\1\36\1\42\2"+
            "\uffff\1\43\2\uffff\1\44\1\uffff\1\45\1\46\2\uffff\1\51\5\uffff"+
            "\1\52\3\uffff\1\53\1\50\2\uffff\1\54\1\uffff\1\55\1\56",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA36_eot = DFA.unpackEncodedString(DFA36_eotS);
    static final short[] DFA36_eof = DFA.unpackEncodedString(DFA36_eofS);
    static final char[] DFA36_min = DFA.unpackEncodedStringToUnsignedChars(DFA36_minS);
    static final char[] DFA36_max = DFA.unpackEncodedStringToUnsignedChars(DFA36_maxS);
    static final short[] DFA36_accept = DFA.unpackEncodedString(DFA36_acceptS);
    static final short[] DFA36_special = DFA.unpackEncodedString(DFA36_specialS);
    static final short[][] DFA36_transition;

    static {
        int numStates = DFA36_transitionS.length;
        DFA36_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA36_transition[i] = DFA.unpackEncodedString(DFA36_transitionS[i]);
        }
    }

    class DFA36 extends DFA {

        public DFA36(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 36;
            this.eot = DFA36_eot;
            this.eof = DFA36_eof;
            this.min = DFA36_min;
            this.max = DFA36_max;
            this.accept = DFA36_accept;
            this.special = DFA36_special;
            this.transition = DFA36_transition;
        }
        public String getDescription() {
            return "7960:1: parse_org_kermeta_language_structure_Object returns [org.kermeta.language.structure.Object element = null] : (a0= 'Object' a1= '{' ( (a2= 'tag' a3= ':' (a4= STRING ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}' | c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Using | c2= parse_org_kermeta_language_structure_Require | c3= parse_org_kermeta_language_structure_Package | c4= parse_org_kermeta_language_structure_ClassDefinition | c5= parse_org_kermeta_language_structure_Property | c6= parse_org_kermeta_language_structure_Operation | c7= parse_org_kermeta_language_structure_Parameter | c8= parse_org_kermeta_language_structure_Class | c9= parse_org_kermeta_language_structure_Enumeration | c10= parse_org_kermeta_language_structure_EnumerationLiteral | c11= parse_org_kermeta_language_structure_Constraint | c12= parse_org_kermeta_language_structure_Model | c13= parse_org_kermeta_language_structure_ModelType | c14= parse_org_kermeta_language_structure_TypeVariableBinding | c15= parse_org_kermeta_language_structure_MultiplicityElement | c16= parse_org_kermeta_language_structure_TypeDefinition | c17= parse_org_kermeta_language_structure_PrimitiveType | c18= parse_org_kermeta_language_structure_Tag | c19= parse_org_kermeta_language_structure_ObjectTypeVariable | c20= parse_org_kermeta_language_structure_ModelTypeVariable | c21= parse_org_kermeta_language_structure_VirtualType | c22= parse_org_kermeta_language_structure_ProductType | c23= parse_org_kermeta_language_structure_FunctionType | c24= parse_org_kermeta_language_structure_VoidType | c25= parse_org_kermeta_language_behavior_Block | c26= parse_org_kermeta_language_behavior_Rescue | c27= parse_org_kermeta_language_behavior_TypeReference | c28= parse_org_kermeta_language_behavior_Raise | c29= parse_org_kermeta_language_behavior_BooleanLiteral | c30= parse_org_kermeta_language_behavior_IntegerLiteral | c31= parse_org_kermeta_language_behavior_StringLiteral | c32= parse_org_kermeta_language_behavior_Conditional | c33= parse_org_kermeta_language_behavior_Loop | c34= parse_org_kermeta_language_behavior_VariableDecl | c35= parse_org_kermeta_language_behavior_TypeLiteral | c36= parse_org_kermeta_language_behavior_CallResult | c37= parse_org_kermeta_language_behavior_CallSuperOperation | c38= parse_org_kermeta_language_behavior_Assignment | c39= parse_org_kermeta_language_behavior_CallVariable | c40= parse_org_kermeta_language_behavior_SelfExpression | c41= parse_org_kermeta_language_behavior_CallFeature | c42= parse_org_kermeta_language_behavior_CallValue | c43= parse_org_kermeta_language_behavior_EmptyExpression | c44= parse_org_kermeta_language_behavior_JavaStaticCall | c45= parse_org_kermeta_language_behavior_LambdaExpression | c46= parse_org_kermeta_language_behavior_LambdaParameter | c47= parse_org_kermeta_language_behavior_VoidLiteral );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA36_2 = input.LA(1);

                         
                        int index36_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_Kermeta()) ) {s = 13;}

                        else if ( (synpred45_Kermeta()) ) {s = 47;}

                         
                        input.seek(index36_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA36_3 = input.LA(1);

                         
                        int index36_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_Kermeta()) ) {s = 13;}

                        else if ( (synpred44_Kermeta()) ) {s = 48;}

                         
                        input.seek(index36_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA36_4 = input.LA(1);

                         
                        int index36_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_Kermeta()) ) {s = 13;}

                        else if ( (synpred46_Kermeta()) ) {s = 49;}

                         
                        input.seek(index36_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA36_5 = input.LA(1);

                         
                        int index36_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_Kermeta()) ) {s = 13;}

                        else if ( (synpred46_Kermeta()) ) {s = 49;}

                        else if ( (synpred49_Kermeta()) ) {s = 50;}

                        else if ( (synpred50_Kermeta()) ) {s = 51;}

                        else if ( (synpred51_Kermeta()) ) {s = 52;}

                        else if ( (synpred53_Kermeta()) ) {s = 53;}

                        else if ( (synpred54_Kermeta()) ) {s = 54;}

                        else if ( (synpred56_Kermeta()) ) {s = 55;}

                        else if ( (synpred58_Kermeta()) ) {s = 20;}

                        else if ( (synpred59_Kermeta()) ) {s = 56;}

                        else if ( (synpred60_Kermeta()) ) {s = 57;}

                        else if ( (synpred70_Kermeta()) ) {s = 58;}

                        else if ( (synpred78_Kermeta()) ) {s = 59;}

                        else if ( (synpred81_Kermeta()) ) {s = 60;}

                        else if ( (synpred82_Kermeta()) ) {s = 61;}

                        else if ( (synpred84_Kermeta()) ) {s = 62;}

                         
                        input.seek(index36_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA36_6 = input.LA(1);

                         
                        int index36_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_Kermeta()) ) {s = 13;}

                        else if ( (synpred46_Kermeta()) ) {s = 49;}

                        else if ( (synpred59_Kermeta()) ) {s = 56;}

                         
                        input.seek(index36_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA36_7 = input.LA(1);

                         
                        int index36_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_Kermeta()) ) {s = 13;}

                        else if ( (synpred46_Kermeta()) ) {s = 49;}

                        else if ( (synpred47_Kermeta()) ) {s = 63;}

                        else if ( (synpred59_Kermeta()) ) {s = 56;}

                         
                        input.seek(index36_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA36_8 = input.LA(1);

                         
                        int index36_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_Kermeta()) ) {s = 13;}

                        else if ( (synpred46_Kermeta()) ) {s = 49;}

                        else if ( (synpred47_Kermeta()) ) {s = 63;}

                        else if ( (synpred59_Kermeta()) ) {s = 56;}

                         
                        input.seek(index36_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA36_9 = input.LA(1);

                         
                        int index36_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_Kermeta()) ) {s = 13;}

                        else if ( (synpred46_Kermeta()) ) {s = 49;}

                        else if ( (synpred47_Kermeta()) ) {s = 63;}

                        else if ( (synpred59_Kermeta()) ) {s = 56;}

                         
                        input.seek(index36_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA36_10 = input.LA(1);

                         
                        int index36_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_Kermeta()) ) {s = 13;}

                        else if ( (synpred46_Kermeta()) ) {s = 49;}

                        else if ( (synpred52_Kermeta()) ) {s = 64;}

                        else if ( (synpred59_Kermeta()) ) {s = 56;}

                         
                        input.seek(index36_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA36_11 = input.LA(1);

                         
                        int index36_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_Kermeta()) ) {s = 13;}

                        else if ( (synpred46_Kermeta()) ) {s = 49;}

                        else if ( (synpred56_Kermeta()) ) {s = 55;}

                        else if ( (synpred59_Kermeta()) ) {s = 56;}

                         
                        input.seek(index36_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA36_12 = input.LA(1);

                         
                        int index36_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_Kermeta()) ) {s = 13;}

                        else if ( (synpred46_Kermeta()) ) {s = 49;}

                        else if ( (synpred59_Kermeta()) ) {s = 56;}

                        else if ( (synpred60_Kermeta()) ) {s = 57;}

                         
                        input.seek(index36_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA36_14 = input.LA(1);

                         
                        int index36_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred48_Kermeta()) ) {s = 65;}

                        else if ( (synpred58_Kermeta()) ) {s = 20;}

                         
                        input.seek(index36_14);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA36_15 = input.LA(1);

                         
                        int index36_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred48_Kermeta()) ) {s = 65;}

                        else if ( (synpred58_Kermeta()) ) {s = 20;}

                         
                        input.seek(index36_15);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA36_16 = input.LA(1);

                         
                        int index36_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred48_Kermeta()) ) {s = 65;}

                        else if ( (synpred58_Kermeta()) ) {s = 20;}

                         
                        input.seek(index36_16);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA36_17 = input.LA(1);

                         
                        int index36_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_Kermeta()) ) {s = 50;}

                        else if ( (synpred58_Kermeta()) ) {s = 20;}

                         
                        input.seek(index36_17);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA36_23 = input.LA(1);

                         
                        int index36_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_Kermeta()) ) {s = 22;}

                        else if ( (synpred64_Kermeta()) ) {s = 66;}

                         
                        input.seek(index36_23);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA36_31 = input.LA(1);

                         
                        int index36_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_Kermeta()) ) {s = 67;}

                        else if ( (synpred81_Kermeta()) ) {s = 60;}

                        else if ( (synpred84_Kermeta()) ) {s = 62;}

                         
                        input.seek(index36_31);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA36_32 = input.LA(1);

                         
                        int index36_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred73_Kermeta()) ) {s = 68;}

                        else if ( (synpred81_Kermeta()) ) {s = 60;}

                        else if ( (synpred84_Kermeta()) ) {s = 62;}

                         
                        input.seek(index36_32);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA36_33 = input.LA(1);

                         
                        int index36_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_Kermeta()) ) {s = 69;}

                        else if ( (synpred81_Kermeta()) ) {s = 60;}

                        else if ( (synpred84_Kermeta()) ) {s = 62;}

                         
                        input.seek(index36_33);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA36_37 = input.LA(1);

                         
                        int index36_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_Kermeta()) ) {s = 70;}

                        else if ( (synpred81_Kermeta()) ) {s = 60;}

                        else if ( (synpred82_Kermeta()) ) {s = 61;}

                        else if ( (synpred84_Kermeta()) ) {s = 62;}

                         
                        input.seek(index36_37);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA36_39 = input.LA(1);

                         
                        int index36_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_Kermeta()) ) {s = 60;}

                        else if ( (synpred84_Kermeta()) ) {s = 62;}

                         
                        input.seek(index36_39);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA36_40 = input.LA(1);

                         
                        int index36_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_Kermeta()) ) {s = 60;}

                        else if ( (synpred84_Kermeta()) ) {s = 62;}

                        else if ( (synpred87_Kermeta()) ) {s = 71;}

                         
                        input.seek(index36_40);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA36_41 = input.LA(1);

                         
                        int index36_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_Kermeta()) ) {s = 60;}

                        else if ( (synpred83_Kermeta()) ) {s = 72;}

                        else if ( (synpred84_Kermeta()) ) {s = 62;}

                         
                        input.seek(index36_41);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 36, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA71_eotS =
        "\24\uffff";
    static final String DFA71_eofS =
        "\24\uffff";
    static final String DFA71_minS =
        "\1\5\3\uffff\10\0\10\uffff";
    static final String DFA71_maxS =
        "\1\142\3\uffff\10\0\10\uffff";
    static final String DFA71_acceptS =
        "\1\uffff\1\1\1\2\1\3\10\uffff\1\7\1\12\1\13\1\4\1\5\1\6\1\10\1\11";
    static final String DFA71_specialS =
        "\4\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\10\uffff}>";
    static final String[] DFA71_transitionS = {
            "\1\6\1\12\1\13\1\5\27\uffff\1\4\46\uffff\1\16\3\uffff\1\3\2"+
            "\uffff\1\2\2\uffff\1\1\1\uffff\1\7\1\14\2\uffff\1\11\11\uffff"+
            "\1\15\1\10",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA71_eot = DFA.unpackEncodedString(DFA71_eotS);
    static final short[] DFA71_eof = DFA.unpackEncodedString(DFA71_eofS);
    static final char[] DFA71_min = DFA.unpackEncodedStringToUnsignedChars(DFA71_minS);
    static final char[] DFA71_max = DFA.unpackEncodedStringToUnsignedChars(DFA71_maxS);
    static final short[] DFA71_accept = DFA.unpackEncodedString(DFA71_acceptS);
    static final short[] DFA71_special = DFA.unpackEncodedString(DFA71_specialS);
    static final short[][] DFA71_transition;

    static {
        int numStates = DFA71_transitionS.length;
        DFA71_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA71_transition[i] = DFA.unpackEncodedString(DFA71_transitionS[i]);
        }
    }

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = DFA71_eot;
            this.eof = DFA71_eof;
            this.min = DFA71_min;
            this.max = DFA71_max;
            this.accept = DFA71_accept;
            this.special = DFA71_special;
            this.transition = DFA71_transition;
        }
        public String getDescription() {
            return "14422:3: ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_Block ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA71_4 = input.LA(1);

                         
                        int index71_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred176_Kermeta()) ) {s = 15;}

                        else if ( (synpred177_Kermeta()) ) {s = 16;}

                         
                        input.seek(index71_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA71_5 = input.LA(1);

                         
                        int index71_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred176_Kermeta()) ) {s = 15;}

                        else if ( (synpred177_Kermeta()) ) {s = 16;}

                         
                        input.seek(index71_5);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA71_6 = input.LA(1);

                         
                        int index71_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred176_Kermeta()) ) {s = 15;}

                        else if ( (synpred177_Kermeta()) ) {s = 16;}

                        else if ( (synpred178_Kermeta()) ) {s = 17;}

                         
                        input.seek(index71_6);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA71_7 = input.LA(1);

                         
                        int index71_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred176_Kermeta()) ) {s = 15;}

                        else if ( (synpred177_Kermeta()) ) {s = 16;}

                        else if ( (synpred178_Kermeta()) ) {s = 17;}

                        else if ( (synpred180_Kermeta()) ) {s = 18;}

                         
                        input.seek(index71_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA71_8 = input.LA(1);

                         
                        int index71_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred176_Kermeta()) ) {s = 15;}

                        else if ( (synpred177_Kermeta()) ) {s = 16;}

                        else if ( (synpred181_Kermeta()) ) {s = 19;}

                         
                        input.seek(index71_8);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA71_9 = input.LA(1);

                         
                        int index71_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred176_Kermeta()) ) {s = 15;}

                        else if ( (synpred177_Kermeta()) ) {s = 16;}

                         
                        input.seek(index71_9);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA71_10 = input.LA(1);

                         
                        int index71_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred176_Kermeta()) ) {s = 15;}

                        else if ( (synpred177_Kermeta()) ) {s = 16;}

                         
                        input.seek(index71_10);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA71_11 = input.LA(1);

                         
                        int index71_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred176_Kermeta()) ) {s = 15;}

                        else if ( (synpred177_Kermeta()) ) {s = 16;}

                         
                        input.seek(index71_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 71, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA77_eotS =
        "\22\uffff";
    static final String DFA77_eofS =
        "\22\uffff";
    static final String DFA77_minS =
        "\1\5\1\0\1\uffff\7\0\10\uffff";
    static final String DFA77_maxS =
        "\1\142\1\0\1\uffff\7\0\10\uffff";
    static final String DFA77_acceptS =
        "\2\uffff\1\2\7\uffff\1\5\1\10\1\11\1\1\1\3\1\4\1\7\1\6";
    static final String DFA77_specialS =
        "\1\uffff\1\0\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\10\uffff}>";
    static final String[] DFA77_transitionS = {
            "\1\4\1\10\1\11\1\1\27\uffff\1\3\46\uffff\1\2\11\uffff\1\14\1"+
            "\uffff\1\5\1\12\2\uffff\1\7\5\uffff\1\13\4\uffff\1\6",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA77_eot = DFA.unpackEncodedString(DFA77_eotS);
    static final short[] DFA77_eof = DFA.unpackEncodedString(DFA77_eofS);
    static final char[] DFA77_min = DFA.unpackEncodedStringToUnsignedChars(DFA77_minS);
    static final char[] DFA77_max = DFA.unpackEncodedStringToUnsignedChars(DFA77_maxS);
    static final short[] DFA77_accept = DFA.unpackEncodedString(DFA77_acceptS);
    static final short[] DFA77_special = DFA.unpackEncodedString(DFA77_specialS);
    static final short[][] DFA77_transition;

    static {
        int numStates = DFA77_transitionS.length;
        DFA77_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA77_transition[i] = DFA.unpackEncodedString(DFA77_transitionS[i]);
        }
    }

    class DFA77 extends DFA {

        public DFA77(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 77;
            this.eot = DFA77_eot;
            this.eof = DFA77_eof;
            this.min = DFA77_min;
            this.max = DFA77_max;
            this.accept = DFA77_accept;
            this.special = DFA77_special;
            this.transition = DFA77_transition;
        }
        public String getDescription() {
            return "15772:2: ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a5_0= parse_org_kermeta_language_behavior_Block ) | (a6_0= parse_org_kermeta_language_behavior_Assignment ) | (a7_0= parse_org_kermeta_language_behavior_CallFeature ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallVariable ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_VariableDecl ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA77_1 = input.LA(1);

                         
                        int index77_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred188_Kermeta()) ) {s = 13;}

                        else if ( (synpred190_Kermeta()) ) {s = 14;}

                        else if ( (synpred191_Kermeta()) ) {s = 15;}

                         
                        input.seek(index77_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA77_3 = input.LA(1);

                         
                        int index77_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred190_Kermeta()) ) {s = 14;}

                        else if ( (synpred191_Kermeta()) ) {s = 15;}

                         
                        input.seek(index77_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA77_4 = input.LA(1);

                         
                        int index77_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred190_Kermeta()) ) {s = 14;}

                        else if ( (synpred191_Kermeta()) ) {s = 15;}

                        else if ( (synpred194_Kermeta()) ) {s = 16;}

                         
                        input.seek(index77_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA77_5 = input.LA(1);

                         
                        int index77_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred190_Kermeta()) ) {s = 14;}

                        else if ( (synpred191_Kermeta()) ) {s = 15;}

                        else if ( (synpred193_Kermeta()) ) {s = 17;}

                        else if ( (synpred194_Kermeta()) ) {s = 16;}

                         
                        input.seek(index77_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA77_6 = input.LA(1);

                         
                        int index77_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred190_Kermeta()) ) {s = 14;}

                        else if ( (synpred191_Kermeta()) ) {s = 15;}

                         
                        input.seek(index77_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA77_7 = input.LA(1);

                         
                        int index77_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred190_Kermeta()) ) {s = 14;}

                        else if ( (synpred191_Kermeta()) ) {s = 15;}

                         
                        input.seek(index77_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA77_8 = input.LA(1);

                         
                        int index77_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred190_Kermeta()) ) {s = 14;}

                        else if ( (synpred191_Kermeta()) ) {s = 15;}

                         
                        input.seek(index77_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA77_9 = input.LA(1);

                         
                        int index77_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred190_Kermeta()) ) {s = 14;}

                        else if ( (synpred191_Kermeta()) ) {s = 15;}

                         
                        input.seek(index77_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 77, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA78_eotS =
        "\21\uffff";
    static final String DFA78_eofS =
        "\21\uffff";
    static final String DFA78_minS =
        "\1\5\2\uffff\10\0\6\uffff";
    static final String DFA78_maxS =
        "\1\142\2\uffff\10\0\6\uffff";
    static final String DFA78_acceptS =
        "\1\uffff\1\1\1\2\10\uffff\1\5\1\7\1\10\1\3\1\4\1\6";
    static final String DFA78_specialS =
        "\3\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\6\uffff}>";
    static final String[] DFA78_transitionS = {
            "\1\5\1\11\1\12\1\4\27\uffff\1\3\46\uffff\1\2\5\uffff\1\1\3\uffff"+
            "\1\14\1\uffff\1\6\1\13\2\uffff\1\10\5\uffff\1\15\4\uffff\1\7",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA78_eot = DFA.unpackEncodedString(DFA78_eotS);
    static final short[] DFA78_eof = DFA.unpackEncodedString(DFA78_eofS);
    static final char[] DFA78_min = DFA.unpackEncodedStringToUnsignedChars(DFA78_minS);
    static final char[] DFA78_max = DFA.unpackEncodedStringToUnsignedChars(DFA78_maxS);
    static final short[] DFA78_accept = DFA.unpackEncodedString(DFA78_acceptS);
    static final short[] DFA78_special = DFA.unpackEncodedString(DFA78_specialS);
    static final short[][] DFA78_transition;

    static {
        int numStates = DFA78_transitionS.length;
        DFA78_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA78_transition[i] = DFA.unpackEncodedString(DFA78_transitionS[i]);
        }
    }

    class DFA78 extends DFA {

        public DFA78(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 78;
            this.eot = DFA78_eot;
            this.eof = DFA78_eof;
            this.min = DFA78_min;
            this.max = DFA78_max;
            this.accept = DFA78_accept;
            this.special = DFA78_special;
            this.transition = DFA78_transition;
        }
        public String getDescription() {
            return "16126:3: (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA78_3 = input.LA(1);

                         
                        int index78_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred198_Kermeta()) ) {s = 14;}

                        else if ( (synpred199_Kermeta()) ) {s = 15;}

                         
                        input.seek(index78_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA78_4 = input.LA(1);

                         
                        int index78_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred198_Kermeta()) ) {s = 14;}

                        else if ( (synpred199_Kermeta()) ) {s = 15;}

                         
                        input.seek(index78_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA78_5 = input.LA(1);

                         
                        int index78_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred198_Kermeta()) ) {s = 14;}

                        else if ( (synpred199_Kermeta()) ) {s = 15;}

                         
                        input.seek(index78_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA78_6 = input.LA(1);

                         
                        int index78_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred198_Kermeta()) ) {s = 14;}

                        else if ( (synpred199_Kermeta()) ) {s = 15;}

                        else if ( (synpred201_Kermeta()) ) {s = 16;}

                         
                        input.seek(index78_6);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA78_7 = input.LA(1);

                         
                        int index78_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred198_Kermeta()) ) {s = 14;}

                        else if ( (synpred199_Kermeta()) ) {s = 15;}

                         
                        input.seek(index78_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA78_8 = input.LA(1);

                         
                        int index78_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred198_Kermeta()) ) {s = 14;}

                        else if ( (synpred199_Kermeta()) ) {s = 15;}

                         
                        input.seek(index78_8);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA78_9 = input.LA(1);

                         
                        int index78_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred198_Kermeta()) ) {s = 14;}

                        else if ( (synpred199_Kermeta()) ) {s = 15;}

                         
                        input.seek(index78_9);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA78_10 = input.LA(1);

                         
                        int index78_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred198_Kermeta()) ) {s = 14;}

                        else if ( (synpred199_Kermeta()) ) {s = 15;}

                         
                        input.seek(index78_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 78, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA87_eotS =
        "\21\uffff";
    static final String DFA87_eofS =
        "\21\uffff";
    static final String DFA87_minS =
        "\1\5\1\uffff\6\0\11\uffff";
    static final String DFA87_maxS =
        "\1\150\1\uffff\6\0\11\uffff";
    static final String DFA87_acceptS =
        "\1\uffff\1\1\6\uffff\1\3\1\5\1\7\1\11\1\6\1\4\1\2\1\12\1\10";
    static final String DFA87_specialS =
        "\2\uffff\1\0\1\2\1\4\1\5\1\1\1\3\11\uffff}>";
    static final String[] DFA87_transitionS = {
            "\1\3\1\6\1\7\1\2\27\uffff\1\1\62\uffff\1\4\1\10\2\uffff\1\5"+
            "\5\uffff\1\11\4\uffff\1\1\5\uffff\1\12",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA87_eot = DFA.unpackEncodedString(DFA87_eotS);
    static final short[] DFA87_eof = DFA.unpackEncodedString(DFA87_eofS);
    static final char[] DFA87_min = DFA.unpackEncodedStringToUnsignedChars(DFA87_minS);
    static final char[] DFA87_max = DFA.unpackEncodedStringToUnsignedChars(DFA87_maxS);
    static final short[] DFA87_accept = DFA.unpackEncodedString(DFA87_acceptS);
    static final short[] DFA87_special = DFA.unpackEncodedString(DFA87_specialS);
    static final short[][] DFA87_transition;

    static {
        int numStates = DFA87_transitionS.length;
        DFA87_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA87_transition[i] = DFA.unpackEncodedString(DFA87_transitionS[i]);
        }
    }

    class DFA87 extends DFA {

        public DFA87(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 87;
            this.eot = DFA87_eot;
            this.eof = DFA87_eof;
            this.min = DFA87_min;
            this.max = DFA87_max;
            this.accept = DFA87_accept;
            this.special = DFA87_special;
            this.transition = DFA87_transition;
        }
        public String getDescription() {
            return "17643:3: ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA87_2 = input.LA(1);

                         
                        int index87_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred212_Kermeta()) ) {s = 1;}

                        else if ( (synpred220_Kermeta()) ) {s = 11;}

                         
                        input.seek(index87_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA87_6 = input.LA(1);

                         
                        int index87_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred212_Kermeta()) ) {s = 1;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index87_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA87_3 = input.LA(1);

                         
                        int index87_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred212_Kermeta()) ) {s = 1;}

                        else if ( (synpred217_Kermeta()) ) {s = 12;}

                         
                        input.seek(index87_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA87_7 = input.LA(1);

                         
                        int index87_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred212_Kermeta()) ) {s = 1;}

                        else if ( (synpred219_Kermeta()) ) {s = 16;}

                         
                        input.seek(index87_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA87_4 = input.LA(1);

                         
                        int index87_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred212_Kermeta()) ) {s = 1;}

                        else if ( (synpred215_Kermeta()) ) {s = 13;}

                        else if ( (synpred217_Kermeta()) ) {s = 12;}

                         
                        input.seek(index87_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA87_5 = input.LA(1);

                         
                        int index87_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred212_Kermeta()) ) {s = 1;}

                        else if ( (synpred213_Kermeta()) ) {s = 14;}

                         
                        input.seek(index87_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 87, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA115_eotS =
        "\15\uffff";
    static final String DFA115_eofS =
        "\15\uffff";
    static final String DFA115_minS =
        "\1\5\10\0\4\uffff";
    static final String DFA115_maxS =
        "\1\142\10\0\4\uffff";
    static final String DFA115_acceptS =
        "\11\uffff\1\1\1\4\1\2\1\3";
    static final String DFA115_specialS =
        "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\4\uffff}>";
    static final String[] DFA115_transitionS = {
            "\1\3\1\7\1\10\1\2\27\uffff\1\1\62\uffff\1\4\3\uffff\1\6\12\uffff"+
            "\1\5",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA115_eot = DFA.unpackEncodedString(DFA115_eotS);
    static final short[] DFA115_eof = DFA.unpackEncodedString(DFA115_eofS);
    static final char[] DFA115_min = DFA.unpackEncodedStringToUnsignedChars(DFA115_minS);
    static final char[] DFA115_max = DFA.unpackEncodedStringToUnsignedChars(DFA115_maxS);
    static final short[] DFA115_accept = DFA.unpackEncodedString(DFA115_acceptS);
    static final short[] DFA115_special = DFA.unpackEncodedString(DFA115_specialS);
    static final short[][] DFA115_transition;

    static {
        int numStates = DFA115_transitionS.length;
        DFA115_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA115_transition[i] = DFA.unpackEncodedString(DFA115_transitionS[i]);
        }
    }

    class DFA115 extends DFA {

        public DFA115(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 115;
            this.eot = DFA115_eot;
            this.eof = DFA115_eof;
            this.min = DFA115_min;
            this.max = DFA115_max;
            this.accept = DFA115_accept;
            this.special = DFA115_special;
            this.transition = DFA115_transition;
        }
        public String getDescription() {
            return "18664:1: parse_org_kermeta_language_behavior_CallFeature returns [org.kermeta.language.behavior.CallFeature element = null] : (a0= '(' ( (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a2_0= parse_org_kermeta_language_behavior_CallVariable ) | (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a4_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a5_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a7= '.' (a8= STRING ) | a9= '.' (a10= STRING ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= STRING ) | a18= '.' (a19= STRING ) ) )* a20= '==' (a21_0= parse_org_kermeta_language_behavior_Expression ) a22= ')' | ( (a23_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a24_0= parse_org_kermeta_language_behavior_CallVariable ) | (a25_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a26_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a27_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a28_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a29= '.' (a30= STRING ) | a31= '.' (a32= STRING ) a33= '(' ( ( (a34_0= parse_org_kermeta_language_behavior_Expression ) ( (a35= ',' (a36_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a37= ')' | a38= '.' (a39= STRING ) | a40= '.' (a41= STRING ) ) )* a42= '==' (a43_0= parse_org_kermeta_language_behavior_Expression ) | ( (a44_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a45_0= parse_org_kermeta_language_behavior_CallVariable ) | (a46_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a47_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a48_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a49_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a50= '.' (a51= STRING ) | a52= '.' (a53= STRING ) a54= '(' ( ( (a55_0= parse_org_kermeta_language_behavior_Expression ) ( (a56= ',' (a57_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a58= ')' | a59= '.' (a60= STRING ) | a61= '.' (a62= STRING ) ) )* ( ( (a63= '+' | a64= '-' | a65= '/' | a66= '*' ) (a67_0= parse_org_kermeta_language_behavior_Expression ) ) )* | a68= '(' ( (a69_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a70_0= parse_org_kermeta_language_behavior_CallVariable ) | (a71_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a72_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a73_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a74_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a75= '.' (a76= STRING ) | a77= '.' (a78= STRING ) a79= '(' ( ( (a80_0= parse_org_kermeta_language_behavior_Expression ) ( (a81= ',' (a82_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a83= ')' | a84= '.' (a85= STRING ) | a86= '.' (a87= STRING ) ) )* ( ( (a88= '+' | a89= '-' | a90= '/' | a91= '*' ) (a92_0= parse_org_kermeta_language_behavior_Expression ) ) )* a93= ')' ( ( (a94= '+' | a95= '-' | a96= '/' | a97= '*' ) (a98_0= parse_org_kermeta_language_behavior_Expression ) ) )* );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA115_1 = input.LA(1);

                         
                        int index115_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred233_Kermeta()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index115_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA115_2 = input.LA(1);

                         
                        int index115_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_Kermeta()) ) {s = 11;}

                        else if ( (synpred261_Kermeta()) ) {s = 12;}

                         
                        input.seek(index115_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA115_3 = input.LA(1);

                         
                        int index115_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_Kermeta()) ) {s = 11;}

                        else if ( (synpred261_Kermeta()) ) {s = 12;}

                         
                        input.seek(index115_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA115_4 = input.LA(1);

                         
                        int index115_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_Kermeta()) ) {s = 11;}

                        else if ( (synpred261_Kermeta()) ) {s = 12;}

                         
                        input.seek(index115_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA115_5 = input.LA(1);

                         
                        int index115_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_Kermeta()) ) {s = 11;}

                        else if ( (synpred261_Kermeta()) ) {s = 12;}

                         
                        input.seek(index115_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA115_6 = input.LA(1);

                         
                        int index115_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_Kermeta()) ) {s = 11;}

                        else if ( (synpred261_Kermeta()) ) {s = 12;}

                         
                        input.seek(index115_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA115_7 = input.LA(1);

                         
                        int index115_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_Kermeta()) ) {s = 11;}

                        else if ( (synpred261_Kermeta()) ) {s = 12;}

                         
                        input.seek(index115_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA115_8 = input.LA(1);

                         
                        int index115_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_Kermeta()) ) {s = 11;}

                        else if ( (synpred261_Kermeta()) ) {s = 12;}

                         
                        input.seek(index115_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 115, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA126_eotS =
        "\35\uffff";
    static final String DFA126_eofS =
        "\35\uffff";
    static final String DFA126_minS =
        "\1\5\2\uffff\3\0\3\uffff\2\0\1\uffff\3\0\16\uffff";
    static final String DFA126_maxS =
        "\1\150\2\uffff\3\0\3\uffff\2\0\1\uffff\3\0\16\uffff";
    static final String DFA126_acceptS =
        "\1\uffff\1\1\1\2\3\uffff\1\6\1\7\1\10\2\uffff\1\13\3\uffff\1\20"+
        "\1\21\1\23\1\24\1\3\1\14\1\17\1\4\1\5\1\11\1\15\1\12\1\22\1\16";
    static final String DFA126_specialS =
        "\3\uffff\1\0\1\1\1\2\3\uffff\1\3\1\4\1\uffff\1\5\1\6\1\7\16\uffff}>";
    static final String[] DFA126_transitionS = {
            "\1\11\1\5\1\4\1\3\27\uffff\1\14\46\uffff\1\1\2\uffff\1\2\1\6"+
            "\2\uffff\1\7\2\uffff\1\10\1\uffff\1\12\1\13\2\uffff\1\16\5\uffff"+
            "\1\17\3\uffff\1\20\1\15\2\uffff\1\21\2\uffff\1\22",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA126_eot = DFA.unpackEncodedString(DFA126_eotS);
    static final short[] DFA126_eof = DFA.unpackEncodedString(DFA126_eofS);
    static final char[] DFA126_min = DFA.unpackEncodedStringToUnsignedChars(DFA126_minS);
    static final char[] DFA126_max = DFA.unpackEncodedStringToUnsignedChars(DFA126_maxS);
    static final short[] DFA126_accept = DFA.unpackEncodedString(DFA126_acceptS);
    static final short[] DFA126_special = DFA.unpackEncodedString(DFA126_specialS);
    static final short[][] DFA126_transition;

    static {
        int numStates = DFA126_transitionS.length;
        DFA126_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA126_transition[i] = DFA.unpackEncodedString(DFA126_transitionS[i]);
        }
    }

    class DFA126 extends DFA {

        public DFA126(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 126;
            this.eot = DFA126_eot;
            this.eof = DFA126_eof;
            this.min = DFA126_min;
            this.max = DFA126_max;
            this.accept = DFA126_accept;
            this.special = DFA126_special;
            this.transition = DFA126_transition;
        }
        public String getDescription() {
            return "25044:1: parse_org_kermeta_language_behavior_Expression returns [org.kermeta.language.behavior.Expression element = null] : (c0= parse_org_kermeta_language_behavior_Block | c1= parse_org_kermeta_language_behavior_Raise | c2= parse_org_kermeta_language_behavior_BooleanLiteral | c3= parse_org_kermeta_language_behavior_IntegerLiteral | c4= parse_org_kermeta_language_behavior_StringLiteral | c5= parse_org_kermeta_language_behavior_Conditional | c6= parse_org_kermeta_language_behavior_Loop | c7= parse_org_kermeta_language_behavior_VariableDecl | c8= parse_org_kermeta_language_behavior_TypeLiteral | c9= parse_org_kermeta_language_behavior_CallResult | c10= parse_org_kermeta_language_behavior_CallSuperOperation | c11= parse_org_kermeta_language_behavior_Assignment | c12= parse_org_kermeta_language_behavior_CallVariable | c13= parse_org_kermeta_language_behavior_SelfExpression | c14= parse_org_kermeta_language_behavior_CallFeature | c15= parse_org_kermeta_language_behavior_CallValue | c16= parse_org_kermeta_language_behavior_EmptyExpression | c17= parse_org_kermeta_language_behavior_JavaStaticCall | c18= parse_org_kermeta_language_behavior_LambdaExpression | c19= parse_org_kermeta_language_behavior_VoidLiteral );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA126_3 = input.LA(1);

                         
                        int index126_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred311_Kermeta()) ) {s = 19;}

                        else if ( (synpred320_Kermeta()) ) {s = 20;}

                        else if ( (synpred323_Kermeta()) ) {s = 21;}

                         
                        input.seek(index126_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA126_4 = input.LA(1);

                         
                        int index126_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred312_Kermeta()) ) {s = 22;}

                        else if ( (synpred320_Kermeta()) ) {s = 20;}

                        else if ( (synpred323_Kermeta()) ) {s = 21;}

                         
                        input.seek(index126_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA126_5 = input.LA(1);

                         
                        int index126_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred313_Kermeta()) ) {s = 23;}

                        else if ( (synpred320_Kermeta()) ) {s = 20;}

                        else if ( (synpred323_Kermeta()) ) {s = 21;}

                         
                        input.seek(index126_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA126_9 = input.LA(1);

                         
                        int index126_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred317_Kermeta()) ) {s = 24;}

                        else if ( (synpred320_Kermeta()) ) {s = 20;}

                        else if ( (synpred321_Kermeta()) ) {s = 25;}

                        else if ( (synpred323_Kermeta()) ) {s = 21;}

                         
                        input.seek(index126_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA126_10 = input.LA(1);

                         
                        int index126_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_Kermeta()) ) {s = 26;}

                        else if ( (synpred320_Kermeta()) ) {s = 20;}

                        else if ( (synpred321_Kermeta()) ) {s = 25;}

                        else if ( (synpred323_Kermeta()) ) {s = 21;}

                         
                        input.seek(index126_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA126_12 = input.LA(1);

                         
                        int index126_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_Kermeta()) ) {s = 20;}

                        else if ( (synpred323_Kermeta()) ) {s = 21;}

                         
                        input.seek(index126_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA126_13 = input.LA(1);

                         
                        int index126_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_Kermeta()) ) {s = 20;}

                        else if ( (synpred323_Kermeta()) ) {s = 21;}

                        else if ( (synpred326_Kermeta()) ) {s = 27;}

                         
                        input.seek(index126_13);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA126_14 = input.LA(1);

                         
                        int index126_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_Kermeta()) ) {s = 20;}

                        else if ( (synpred322_Kermeta()) ) {s = 28;}

                        else if ( (synpred323_Kermeta()) ) {s = 21;}

                         
                        input.seek(index126_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 126, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA127_eotS =
        "\15\uffff";
    static final String DFA127_eofS =
        "\15\uffff";
    static final String DFA127_minS =
        "\1\5\1\0\4\uffff\1\0\6\uffff";
    static final String DFA127_maxS =
        "\1\106\1\0\4\uffff\1\0\6\uffff";
    static final String DFA127_acceptS =
        "\2\uffff\1\2\1\3\1\4\1\5\1\uffff\1\6\1\10\1\11\1\12\1\1\1\7";
    static final String DFA127_specialS =
        "\1\uffff\1\0\4\uffff\1\1\6\uffff}>";
    static final String[] DFA127_transitionS = {
            "\1\1\35\uffff\1\2\5\uffff\1\3\13\uffff\1\4\4\uffff\1\5\1\uffff"+
            "\1\7\1\uffff\1\6\3\uffff\1\10\1\11\2\uffff\1\12",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA127_eot = DFA.unpackEncodedString(DFA127_eotS);
    static final short[] DFA127_eof = DFA.unpackEncodedString(DFA127_eofS);
    static final char[] DFA127_min = DFA.unpackEncodedStringToUnsignedChars(DFA127_minS);
    static final char[] DFA127_max = DFA.unpackEncodedStringToUnsignedChars(DFA127_maxS);
    static final short[] DFA127_accept = DFA.unpackEncodedString(DFA127_acceptS);
    static final short[] DFA127_special = DFA.unpackEncodedString(DFA127_specialS);
    static final short[][] DFA127_transition;

    static {
        int numStates = DFA127_transitionS.length;
        DFA127_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA127_transition[i] = DFA.unpackEncodedString(DFA127_transitionS[i]);
        }
    }

    class DFA127 extends DFA {

        public DFA127(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 127;
            this.eot = DFA127_eot;
            this.eof = DFA127_eof;
            this.min = DFA127_min;
            this.max = DFA127_max;
            this.accept = DFA127_accept;
            this.special = DFA127_special;
            this.transition = DFA127_transition;
        }
        public String getDescription() {
            return "25069:1: parse_org_kermeta_language_structure_Type returns [org.kermeta.language.structure.Type element = null] : (c0= parse_org_kermeta_language_structure_Class | c1= parse_org_kermeta_language_structure_Enumeration | c2= parse_org_kermeta_language_structure_ModelType | c3= parse_org_kermeta_language_structure_PrimitiveType | c4= parse_org_kermeta_language_structure_ObjectTypeVariable | c5= parse_org_kermeta_language_structure_ModelTypeVariable | c6= parse_org_kermeta_language_structure_VirtualType | c7= parse_org_kermeta_language_structure_ProductType | c8= parse_org_kermeta_language_structure_FunctionType | c9= parse_org_kermeta_language_structure_VoidType );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA127_1 = input.LA(1);

                         
                        int index127_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred328_Kermeta()) ) {s = 11;}

                        else if ( (synpred330_Kermeta()) ) {s = 3;}

                        else if ( (synpred331_Kermeta()) ) {s = 4;}

                         
                        input.seek(index127_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA127_6 = input.LA(1);

                         
                        int index127_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred332_Kermeta()) ) {s = 5;}

                        else if ( (synpred334_Kermeta()) ) {s = 12;}

                         
                        input.seek(index127_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 127, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA133_eotS =
        "\14\uffff";
    static final String DFA133_eofS =
        "\14\uffff";
    static final String DFA133_minS =
        "\1\5\10\uffff\1\0\2\uffff";
    static final String DFA133_maxS =
        "\1\65\10\uffff\1\0\2\uffff";
    static final String DFA133_acceptS =
        "\1\uffff\1\1\10\uffff\1\2\1\3";
    static final String DFA133_specialS =
        "\11\uffff\1\0\2\uffff}>";
    static final String[] DFA133_transitionS = {
            "\1\1\16\uffff\1\11\1\uffff\3\1\12\uffff\1\1\5\uffff\1\1\12\uffff"+
            "\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA133_eot = DFA.unpackEncodedString(DFA133_eotS);
    static final short[] DFA133_eof = DFA.unpackEncodedString(DFA133_eofS);
    static final char[] DFA133_min = DFA.unpackEncodedStringToUnsignedChars(DFA133_minS);
    static final char[] DFA133_max = DFA.unpackEncodedStringToUnsignedChars(DFA133_maxS);
    static final short[] DFA133_accept = DFA.unpackEncodedString(DFA133_acceptS);
    static final short[] DFA133_special = DFA.unpackEncodedString(DFA133_specialS);
    static final short[][] DFA133_transition;

    static {
        int numStates = DFA133_transitionS.length;
        DFA133_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA133_transition[i] = DFA.unpackEncodedString(DFA133_transitionS[i]);
        }
    }

    class DFA133 extends DFA {

        public DFA133(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 133;
            this.eot = DFA133_eot;
            this.eof = DFA133_eof;
            this.min = DFA133_min;
            this.max = DFA133_max;
            this.accept = DFA133_accept;
            this.special = DFA133_special;
            this.transition = DFA133_transition;
        }
        public String getDescription() {
            return "5804:4: ( ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_Package ) ) )* a7= '}' | a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a10= '}' )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA133_9 = input.LA(1);

                         
                        int index133_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index133_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 133, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_start82 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Model_in_start96 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_start110 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_start124 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_start138 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_start152 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_start166 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_start173 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Require_in_parse_org_kermeta_language_structure_ModelingUnit211 = new BitSet(new long[]{0x0030020801C70022L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Using_in_parse_org_kermeta_language_structure_ModelingUnit267 = new BitSet(new long[]{0x0030020801C50022L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_ModelingUnit323 = new BitSet(new long[]{0x0030020801C40022L});
    public static final BitSet FOLLOW_16_in_parse_org_kermeta_language_structure_Using379 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_QUALIFIEDNAME_in_parse_org_kermeta_language_structure_Using402 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_Using440 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_parse_org_kermeta_language_structure_Require489 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_parse_org_kermeta_language_structure_Require507 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_Package547 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_Package582 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_Package621 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_Package667 = new BitSet(new long[]{0x0030020801D40022L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Package729 = new BitSet(new long[]{0x0030020801C40022L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_Package810 = new BitSet(new long[]{0x0030020801E40020L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Package857 = new BitSet(new long[]{0x0030020801E40020L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_structure_Package928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_Package961 = new BitSet(new long[]{0x0030020801C40020L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Package1008 = new BitSet(new long[]{0x0030020801E40020L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_structure_Package1079 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Package1153 = new BitSet(new long[]{0x0030020801C40022L});
    public static final BitSet FOLLOW_22_in_parse_org_kermeta_language_structure_ClassDefinition1235 = new BitSet(new long[]{0x0000000001800000L});
    public static final BitSet FOLLOW_23_in_parse_org_kermeta_language_structure_ClassDefinition1277 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_parse_org_kermeta_language_structure_ClassDefinition1310 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_ClassDefinition1328 = new BitSet(new long[]{0x0000000002100000L});
    public static final BitSet FOLLOW_25_in_parse_org_kermeta_language_structure_ClassDefinition1358 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_ClassDefinition1384 = new BitSet(new long[]{0x0000000004100000L});
    public static final BitSet FOLLOW_26_in_parse_org_kermeta_language_structure_ClassDefinition1430 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_ClassDefinition1464 = new BitSet(new long[]{0x0000000004100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_ClassDefinition1545 = new BitSet(new long[]{0x00000000D8200020L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_ClassDefinition1574 = new BitSet(new long[]{0x00000000D8200020L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_ClassDefinition1630 = new BitSet(new long[]{0x00000000D8200020L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_ClassDefinition1686 = new BitSet(new long[]{0x0000000080200020L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_structure_ClassDefinition1727 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Property1765 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_28_in_parse_org_kermeta_language_structure_Property1793 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_Property1828 = new BitSet(new long[]{0x0000000020000002L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Property1866 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_Property1896 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_30_in_parse_org_kermeta_language_structure_Property1959 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_Property1981 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Property2019 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_Property2049 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_structure_Property2111 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_structure_Property2139 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Operation2193 = new BitSet(new long[]{0x0000000080000020L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Operation2228 = new BitSet(new long[]{0x0000000080000020L});
    public static final BitSet FOLLOW_31_in_parse_org_kermeta_language_structure_Operation2254 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_Operation2272 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_structure_Operation2293 = new BitSet(new long[]{0x0000000200000020L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Operation2322 = new BitSet(new long[]{0x0000000224000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Operation2363 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_Operation2397 = new BitSet(new long[]{0x0000000204000000L});
    public static final BitSet FOLLOW_26_in_parse_org_kermeta_language_structure_Operation2478 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Operation2512 = new BitSet(new long[]{0x0000000224000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Operation2567 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_Operation2609 = new BitSet(new long[]{0x0000000204000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_structure_Operation2735 = new BitSet(new long[]{0x0000000420000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Operation2758 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_Operation2784 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_parse_org_kermeta_language_structure_Operation2830 = new BitSet(new long[]{0x0000000000800000L,0x0000000000000080L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_structure_Operation2853 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_23_in_parse_org_kermeta_language_structure_Operation2882 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_Parameter2925 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Parameter2946 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_Parameter2964 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_Class3004 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_parse_org_kermeta_language_structure_Enumeration3040 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_Enumeration3058 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_Enumeration3079 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Enumeration3102 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_parse_org_kermeta_language_structure_Enumeration3125 = new BitSet(new long[]{0x0000000000200020L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Enumeration3160 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_parse_org_kermeta_language_structure_Enumeration3193 = new BitSet(new long[]{0x0000000000200020L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_structure_Enumeration3241 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_EnumerationLiteral3274 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_Constraint3314 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_Constraint3339 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_parse_org_kermeta_language_structure_Object3375 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_Object3389 = new BitSet(new long[]{0x000000C000200000L});
    public static final BitSet FOLLOW_38_in_parse_org_kermeta_language_structure_Object3412 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Object3432 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_Object3458 = new BitSet(new long[]{0x000000C000200000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_Object3499 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Object3519 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Object3545 = new BitSet(new long[]{0x000000C000200000L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_structure_Object3586 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_parse_org_kermeta_language_structure_Object3605 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Using_in_parse_org_kermeta_language_structure_Object3615 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Require_in_parse_org_kermeta_language_structure_Object3625 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Object3635 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_parse_org_kermeta_language_structure_Object3645 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_Object3655 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_Object3665 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Object3675 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Class_in_parse_org_kermeta_language_structure_Object3685 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_Object3695 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Object3705 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Object3715 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Model_in_parse_org_kermeta_language_structure_Object3725 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_Object3735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeVariableBinding_in_parse_org_kermeta_language_structure_Object3745 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_parse_org_kermeta_language_structure_Object3755 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Object3765 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_Object3775 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Object3785 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_parse_org_kermeta_language_structure_Object3795 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelTypeVariable_in_parse_org_kermeta_language_structure_Object3805 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_Object3815 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ProductType_in_parse_org_kermeta_language_structure_Object3825 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_FunctionType_in_parse_org_kermeta_language_structure_Object3835 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VoidType_in_parse_org_kermeta_language_structure_Object3845 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_structure_Object3855 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Rescue_in_parse_org_kermeta_language_structure_Object3865 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_structure_Object3875 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Raise_in_parse_org_kermeta_language_structure_Object3885 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_structure_Object3895 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_structure_Object3905 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_structure_Object3915 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_structure_Object3925 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_structure_Object3935 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_structure_Object3945 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_parse_org_kermeta_language_structure_Object3955 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_structure_Object3965 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_structure_Object3975 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_structure_Object3985 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_structure_Object3995 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_structure_Object4005 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_structure_Object4015 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_structure_Object4025 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_structure_Object4035 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_structure_Object4045 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_LambdaExpression_in_parse_org_kermeta_language_structure_Object4055 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_LambdaParameter_in_parse_org_kermeta_language_structure_Object4065 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_structure_Object4075 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_Model4100 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_Model4114 = new BitSet(new long[]{0x000000C000200000L});
    public static final BitSet FOLLOW_38_in_parse_org_kermeta_language_structure_Model4137 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Model4157 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_Model4183 = new BitSet(new long[]{0x000000C000200000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_Model4224 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Model4244 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Model4270 = new BitSet(new long[]{0x000000C000200000L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_structure_Model4311 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_ModelType4349 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_41_in_parse_org_kermeta_language_structure_ModelType4379 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_ModelType4393 = new BitSet(new long[]{0x00001CC000200000L});
    public static final BitSet FOLLOW_38_in_parse_org_kermeta_language_structure_ModelType4416 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ModelType4436 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_ModelType4462 = new BitSet(new long[]{0x00001CC000200000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_ModelType4503 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ModelType4523 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ModelType4549 = new BitSet(new long[]{0x00001CC000200000L});
    public static final BitSet FOLLOW_42_in_parse_org_kermeta_language_structure_ModelType4585 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ModelType4605 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_ModelType4631 = new BitSet(new long[]{0x00001CC000200000L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_structure_ModelType4672 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ModelType4692 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_ModelType4718 = new BitSet(new long[]{0x00001CC000200000L});
    public static final BitSet FOLLOW_44_in_parse_org_kermeta_language_structure_ModelType4759 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ModelType4779 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_ModelType4805 = new BitSet(new long[]{0x00001CC000200000L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_structure_ModelType4851 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_45_in_parse_org_kermeta_language_structure_TypeVariableBinding4880 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_TypeVariableBinding4894 = new BitSet(new long[]{0x0001C0C000200000L});
    public static final BitSet FOLLOW_38_in_parse_org_kermeta_language_structure_TypeVariableBinding4917 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_TypeVariableBinding4937 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_TypeVariableBinding4963 = new BitSet(new long[]{0x0001C0C000200000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_TypeVariableBinding5004 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_TypeVariableBinding5024 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_TypeVariableBinding5050 = new BitSet(new long[]{0x0001C0C000200000L});
    public static final BitSet FOLLOW_46_in_parse_org_kermeta_language_structure_TypeVariableBinding5086 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_TypeVariableBinding5106 = new BitSet(new long[]{0x5430020801C40020L,0x000000000000004CL});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_TypeVariableBinding5132 = new BitSet(new long[]{0x0001C0C000200000L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_structure_TypeVariableBinding5168 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_TypeVariableBinding5188 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_TypeVariableBinding5214 = new BitSet(new long[]{0x0001C0C000200000L});
    public static final BitSet FOLLOW_48_in_parse_org_kermeta_language_structure_TypeVariableBinding5255 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_TypeVariableBinding5275 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_TypeVariableBinding5301 = new BitSet(new long[]{0x0001C0C000200000L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_structure_TypeVariableBinding5347 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_MultiplicityElement5385 = new BitSet(new long[]{0x0002000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_MultiplicityElement5424 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_49_in_parse_org_kermeta_language_structure_MultiplicityElement5454 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_MultiplicityElement5468 = new BitSet(new long[]{0x000D48C000200000L});
    public static final BitSet FOLLOW_38_in_parse_org_kermeta_language_structure_MultiplicityElement5491 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_MultiplicityElement5511 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_MultiplicityElement5537 = new BitSet(new long[]{0x000D48C000200000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_MultiplicityElement5578 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_MultiplicityElement5598 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_MultiplicityElement5624 = new BitSet(new long[]{0x000D48C000200000L});
    public static final BitSet FOLLOW_46_in_parse_org_kermeta_language_structure_MultiplicityElement5660 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_MultiplicityElement5680 = new BitSet(new long[]{0x5430020801C40020L,0x000000000000004CL});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_MultiplicityElement5706 = new BitSet(new long[]{0x000D48C000200000L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_structure_MultiplicityElement5742 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_MultiplicityElement5762 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_MultiplicityElement5788 = new BitSet(new long[]{0x000D48C000200000L});
    public static final BitSet FOLLOW_48_in_parse_org_kermeta_language_structure_MultiplicityElement5829 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_MultiplicityElement5849 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_MultiplicityElement5875 = new BitSet(new long[]{0x000D48C000200000L});
    public static final BitSet FOLLOW_50_in_parse_org_kermeta_language_structure_MultiplicityElement5916 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_MultiplicityElement5936 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_INTEGER_in_parse_org_kermeta_language_structure_MultiplicityElement5962 = new BitSet(new long[]{0x000D48C000200000L});
    public static final BitSet FOLLOW_51_in_parse_org_kermeta_language_structure_MultiplicityElement6003 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_MultiplicityElement6023 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_INTEGER_in_parse_org_kermeta_language_structure_MultiplicityElement6049 = new BitSet(new long[]{0x000D48C000200000L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_structure_MultiplicityElement6095 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_MultiplicityElement6114 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_MultiplicityElement6124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_MultiplicityElement6134 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_structure_MultiplicityElement6144 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_TypeDefinition6178 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_52_in_parse_org_kermeta_language_structure_TypeDefinition6208 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_TypeDefinition6222 = new BitSet(new long[]{0x000008C000200000L});
    public static final BitSet FOLLOW_38_in_parse_org_kermeta_language_structure_TypeDefinition6245 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_TypeDefinition6265 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_TypeDefinition6291 = new BitSet(new long[]{0x000008C000200000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_TypeDefinition6332 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_TypeDefinition6352 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_TypeDefinition6378 = new BitSet(new long[]{0x000008C000200000L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_structure_TypeDefinition6414 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_TypeDefinition6434 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_TypeDefinition6460 = new BitSet(new long[]{0x000008C000200000L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_structure_TypeDefinition6506 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_parse_org_kermeta_language_structure_TypeDefinition6525 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_TypeDefinition6535 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_TypeDefinition6545 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_TypeDefinition6555 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_PrimitiveType6589 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_53_in_parse_org_kermeta_language_structure_PrimitiveType6619 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_PrimitiveType6633 = new BitSet(new long[]{0x00404CC000200000L});
    public static final BitSet FOLLOW_38_in_parse_org_kermeta_language_structure_PrimitiveType6656 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_PrimitiveType6676 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_PrimitiveType6702 = new BitSet(new long[]{0x00404CC000200000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_PrimitiveType6743 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_PrimitiveType6763 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_PrimitiveType6789 = new BitSet(new long[]{0x00404CC000200000L});
    public static final BitSet FOLLOW_42_in_parse_org_kermeta_language_structure_PrimitiveType6825 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_PrimitiveType6845 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_PrimitiveType6871 = new BitSet(new long[]{0x00404CC000200000L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_structure_PrimitiveType6912 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_PrimitiveType6932 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_PrimitiveType6958 = new BitSet(new long[]{0x00404CC000200000L});
    public static final BitSet FOLLOW_46_in_parse_org_kermeta_language_structure_PrimitiveType6999 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_PrimitiveType7019 = new BitSet(new long[]{0x5430020801C40020L,0x000000000000004CL});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_PrimitiveType7045 = new BitSet(new long[]{0x00404CC000200000L});
    public static final BitSet FOLLOW_54_in_parse_org_kermeta_language_structure_PrimitiveType7081 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_PrimitiveType7101 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_PrimitiveType7127 = new BitSet(new long[]{0x00404CC000200000L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_structure_PrimitiveType7173 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_55_in_parse_org_kermeta_language_structure_Tag7202 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_Tag7216 = new BitSet(new long[]{0x030008C000200000L});
    public static final BitSet FOLLOW_38_in_parse_org_kermeta_language_structure_Tag7239 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Tag7259 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_Tag7285 = new BitSet(new long[]{0x030008C000200000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_Tag7326 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Tag7346 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Tag7372 = new BitSet(new long[]{0x030008C000200000L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_structure_Tag7408 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Tag7428 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_Tag7454 = new BitSet(new long[]{0x030008C000200000L});
    public static final BitSet FOLLOW_56_in_parse_org_kermeta_language_structure_Tag7495 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Tag7515 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_Tag7541 = new BitSet(new long[]{0x030008C000200000L});
    public static final BitSet FOLLOW_57_in_parse_org_kermeta_language_structure_Tag7582 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Tag7602 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_Tag7628 = new BitSet(new long[]{0x030008C000200000L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_structure_Tag7674 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_58_in_parse_org_kermeta_language_structure_ObjectTypeVariable7703 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_ObjectTypeVariable7717 = new BitSet(new long[]{0x08004CC000200000L});
    public static final BitSet FOLLOW_38_in_parse_org_kermeta_language_structure_ObjectTypeVariable7740 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ObjectTypeVariable7760 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_ObjectTypeVariable7786 = new BitSet(new long[]{0x08004CC000200000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_ObjectTypeVariable7827 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ObjectTypeVariable7847 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ObjectTypeVariable7873 = new BitSet(new long[]{0x08004CC000200000L});
    public static final BitSet FOLLOW_46_in_parse_org_kermeta_language_structure_ObjectTypeVariable7909 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ObjectTypeVariable7929 = new BitSet(new long[]{0x5430020801C40020L,0x000000000000004CL});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ObjectTypeVariable7955 = new BitSet(new long[]{0x08004CC000200000L});
    public static final BitSet FOLLOW_42_in_parse_org_kermeta_language_structure_ObjectTypeVariable7991 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ObjectTypeVariable8011 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_ObjectTypeVariable8037 = new BitSet(new long[]{0x08004CC000200000L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_structure_ObjectTypeVariable8078 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ObjectTypeVariable8098 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_ObjectTypeVariable8124 = new BitSet(new long[]{0x08004CC000200000L});
    public static final BitSet FOLLOW_59_in_parse_org_kermeta_language_structure_ObjectTypeVariable8165 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ObjectTypeVariable8185 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_ObjectTypeVariable8211 = new BitSet(new long[]{0x08004CC000200000L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_structure_ObjectTypeVariable8257 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_ObjectTypeVariable8276 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_60_in_parse_org_kermeta_language_structure_ModelTypeVariable8301 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_ModelTypeVariable8315 = new BitSet(new long[]{0x28004CC000200000L});
    public static final BitSet FOLLOW_38_in_parse_org_kermeta_language_structure_ModelTypeVariable8338 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ModelTypeVariable8358 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_ModelTypeVariable8384 = new BitSet(new long[]{0x28004CC000200000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_ModelTypeVariable8425 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ModelTypeVariable8445 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ModelTypeVariable8471 = new BitSet(new long[]{0x28004CC000200000L});
    public static final BitSet FOLLOW_46_in_parse_org_kermeta_language_structure_ModelTypeVariable8507 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ModelTypeVariable8527 = new BitSet(new long[]{0x5430020801C40020L,0x000000000000004CL});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ModelTypeVariable8553 = new BitSet(new long[]{0x28004CC000200000L});
    public static final BitSet FOLLOW_42_in_parse_org_kermeta_language_structure_ModelTypeVariable8589 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ModelTypeVariable8609 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_ModelTypeVariable8635 = new BitSet(new long[]{0x28004CC000200000L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_structure_ModelTypeVariable8676 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ModelTypeVariable8696 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_ModelTypeVariable8722 = new BitSet(new long[]{0x28004CC000200000L});
    public static final BitSet FOLLOW_59_in_parse_org_kermeta_language_structure_ModelTypeVariable8763 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ModelTypeVariable8783 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_ModelTypeVariable8809 = new BitSet(new long[]{0x28004CC000200000L});
    public static final BitSet FOLLOW_61_in_parse_org_kermeta_language_structure_ModelTypeVariable8850 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ModelTypeVariable8870 = new BitSet(new long[]{0x4400000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_ModelTypeVariable8896 = new BitSet(new long[]{0x28004CC000200000L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_structure_ModelTypeVariable8937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_parse_org_kermeta_language_structure_VirtualType8966 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_VirtualType8980 = new BitSet(new long[]{0x88004CC000200000L,0x0000000000000003L});
    public static final BitSet FOLLOW_38_in_parse_org_kermeta_language_structure_VirtualType9003 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9023 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_VirtualType9049 = new BitSet(new long[]{0x88004CC000200000L,0x0000000000000003L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_VirtualType9090 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9110 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_VirtualType9136 = new BitSet(new long[]{0x88004CC000200000L,0x0000000000000003L});
    public static final BitSet FOLLOW_46_in_parse_org_kermeta_language_structure_VirtualType9172 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9192 = new BitSet(new long[]{0x5430020801C40020L,0x000000000000004CL});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_VirtualType9218 = new BitSet(new long[]{0x88004CC000200000L,0x0000000000000003L});
    public static final BitSet FOLLOW_42_in_parse_org_kermeta_language_structure_VirtualType9254 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9274 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_VirtualType9300 = new BitSet(new long[]{0x88004CC000200000L,0x0000000000000003L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_structure_VirtualType9341 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9361 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_VirtualType9387 = new BitSet(new long[]{0x88004CC000200000L,0x0000000000000003L});
    public static final BitSet FOLLOW_59_in_parse_org_kermeta_language_structure_VirtualType9428 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9448 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_VirtualType9474 = new BitSet(new long[]{0x88004CC000200000L,0x0000000000000003L});
    public static final BitSet FOLLOW_63_in_parse_org_kermeta_language_structure_VirtualType9515 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9535 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_VirtualType9561 = new BitSet(new long[]{0x88004CC000200000L,0x0000000000000003L});
    public static final BitSet FOLLOW_64_in_parse_org_kermeta_language_structure_VirtualType9602 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9622 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_VirtualType9648 = new BitSet(new long[]{0x88004CC000200000L,0x0000000000000003L});
    public static final BitSet FOLLOW_65_in_parse_org_kermeta_language_structure_VirtualType9689 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9709 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeVariableBinding_in_parse_org_kermeta_language_structure_VirtualType9735 = new BitSet(new long[]{0x88004CC000200000L,0x0000000000000003L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_structure_VirtualType9776 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_66_in_parse_org_kermeta_language_structure_ProductType9805 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_ProductType9819 = new BitSet(new long[]{0x000144C000200000L});
    public static final BitSet FOLLOW_38_in_parse_org_kermeta_language_structure_ProductType9842 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ProductType9862 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_ProductType9888 = new BitSet(new long[]{0x000144C000200000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_ProductType9929 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ProductType9949 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ProductType9975 = new BitSet(new long[]{0x000144C000200000L});
    public static final BitSet FOLLOW_46_in_parse_org_kermeta_language_structure_ProductType10011 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ProductType10031 = new BitSet(new long[]{0x5430020801C40020L,0x000000000000004CL});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ProductType10057 = new BitSet(new long[]{0x000144C000200000L});
    public static final BitSet FOLLOW_42_in_parse_org_kermeta_language_structure_ProductType10093 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ProductType10113 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_ProductType10139 = new BitSet(new long[]{0x000144C000200000L});
    public static final BitSet FOLLOW_48_in_parse_org_kermeta_language_structure_ProductType10180 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ProductType10200 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_ProductType10226 = new BitSet(new long[]{0x000144C000200000L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_structure_ProductType10272 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_67_in_parse_org_kermeta_language_structure_FunctionType10301 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_FunctionType10315 = new BitSet(new long[]{0x000044C000200000L,0x0000000000000030L});
    public static final BitSet FOLLOW_38_in_parse_org_kermeta_language_structure_FunctionType10338 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_FunctionType10358 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_FunctionType10384 = new BitSet(new long[]{0x000044C000200000L,0x0000000000000030L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_FunctionType10425 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_FunctionType10445 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_FunctionType10471 = new BitSet(new long[]{0x000044C000200000L,0x0000000000000030L});
    public static final BitSet FOLLOW_46_in_parse_org_kermeta_language_structure_FunctionType10507 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_FunctionType10527 = new BitSet(new long[]{0x5430020801C40020L,0x000000000000004CL});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_FunctionType10553 = new BitSet(new long[]{0x000044C000200000L,0x0000000000000030L});
    public static final BitSet FOLLOW_42_in_parse_org_kermeta_language_structure_FunctionType10589 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_FunctionType10609 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_FunctionType10635 = new BitSet(new long[]{0x000044C000200000L,0x0000000000000030L});
    public static final BitSet FOLLOW_68_in_parse_org_kermeta_language_structure_FunctionType10676 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_FunctionType10696 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_FunctionType10722 = new BitSet(new long[]{0x000044C000200000L,0x0000000000000030L});
    public static final BitSet FOLLOW_69_in_parse_org_kermeta_language_structure_FunctionType10763 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_FunctionType10783 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_FunctionType10809 = new BitSet(new long[]{0x000044C000200000L,0x0000000000000030L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_structure_FunctionType10855 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_70_in_parse_org_kermeta_language_structure_VoidType10884 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_VoidType10898 = new BitSet(new long[]{0x000004C000200000L});
    public static final BitSet FOLLOW_38_in_parse_org_kermeta_language_structure_VoidType10921 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_VoidType10941 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_VoidType10967 = new BitSet(new long[]{0x000004C000200000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_VoidType11008 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_VoidType11028 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_VoidType11054 = new BitSet(new long[]{0x000004C000200000L});
    public static final BitSet FOLLOW_42_in_parse_org_kermeta_language_structure_VoidType11090 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_VoidType11110 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_structure_VoidType11136 = new BitSet(new long[]{0x000004C000200000L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_structure_VoidType11182 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_71_in_parse_org_kermeta_language_behavior_Block11211 = new BitSet(new long[]{0x00000001000001E0L,0x00000006009A4B80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Block11240 = new BitSet(new long[]{0x00000001000001E0L,0x00000006009A4B80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_behavior_Block11282 = new BitSet(new long[]{0x00000001000001E0L,0x00000006009A4B80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Block11324 = new BitSet(new long[]{0x00000001000001E0L,0x00000006009A4B80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Block11366 = new BitSet(new long[]{0x00000001000001E0L,0x00000006009A4B80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Block11408 = new BitSet(new long[]{0x00000001000001E0L,0x00000006009A4B80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Block11450 = new BitSet(new long[]{0x00000001000001E0L,0x00000006009A4B80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Block11492 = new BitSet(new long[]{0x00000001000001E0L,0x00000006009A4B80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Block11534 = new BitSet(new long[]{0x00000001000001E0L,0x00000006009A4B80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_Block11576 = new BitSet(new long[]{0x00000001000001E0L,0x00000006009A4B80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_behavior_Block11618 = new BitSet(new long[]{0x00000001000001E0L,0x00000006009A4B80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Block11660 = new BitSet(new long[]{0x00000001000001E0L,0x00000006009A4B80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Rescue_in_parse_org_kermeta_language_behavior_Block11716 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000300L});
    public static final BitSet FOLLOW_72_in_parse_org_kermeta_language_behavior_Block11757 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_73_in_parse_org_kermeta_language_behavior_Rescue11786 = new BitSet(new long[]{0x00000001200001E2L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_behavior_Rescue11809 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_Rescue11835 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_Rescue11868 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_Rescue11894 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_Rescue11922 = new BitSet(new long[]{0x00000001200001E2L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Rescue11970 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_TypeReference12030 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_74_in_parse_org_kermeta_language_behavior_Raise12066 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Raise12084 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BOOLEAN_in_parse_org_kermeta_language_behavior_BooleanLiteral12121 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTEGER_in_parse_org_kermeta_language_behavior_IntegerLiteral12161 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_parse_org_kermeta_language_behavior_StringLiteral12201 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_75_in_parse_org_kermeta_language_behavior_Conditional12237 = new BitSet(new long[]{0x00000001000001E0L,0x0000000400880800L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional12260 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Conditional12294 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_76_in_parse_org_kermeta_language_behavior_Conditional12324 = new BitSet(new long[]{0x00000001000001E0L,0x00000004209A0080L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Conditional12347 = new BitSet(new long[]{0x00000001000001E0L,0x00000004209A2180L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Conditional12381 = new BitSet(new long[]{0x00000001000001E0L,0x00000004209A2180L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Conditional12415 = new BitSet(new long[]{0x00000001000001E0L,0x00000004209A2180L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional12449 = new BitSet(new long[]{0x00000001000001E0L,0x00000004209A2180L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Conditional12483 = new BitSet(new long[]{0x00000001000001E0L,0x00000004209A2180L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Conditional12517 = new BitSet(new long[]{0x00000001000001E0L,0x00000004209A2180L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Conditional12551 = new BitSet(new long[]{0x00000001000001E0L,0x00000004209A2180L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Conditional12585 = new BitSet(new long[]{0x00000001000001E0L,0x00000004209A2180L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Conditional12619 = new BitSet(new long[]{0x00000001000001E0L,0x00000004209A2180L});
    public static final BitSet FOLLOW_77_in_parse_org_kermeta_language_behavior_Conditional12658 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Conditional12684 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Conditional12726 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Conditional12768 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional12810 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Conditional12852 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Conditional12894 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Conditional12936 = new BitSet(new long[]{0x0000000000000020L,0x0000000000080000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Conditional12970 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Conditional13012 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_72_in_parse_org_kermeta_language_behavior_Conditional13053 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_78_in_parse_org_kermeta_language_behavior_Loop13082 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209ACC80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop13111 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_parse_org_kermeta_language_behavior_Loop13152 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop13170 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
    public static final BitSet FOLLOW_80_in_parse_org_kermeta_language_behavior_Loop13197 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop13230 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_81_in_parse_org_kermeta_language_behavior_VariableDecl13304 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_VariableDecl13322 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_VariableDecl13343 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_VariableDecl13361 = new BitSet(new long[]{0x0000000000000002L,0x0000000000040000L});
    public static final BitSet FOLLOW_82_in_parse_org_kermeta_language_behavior_VariableDecl13388 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_VariableDecl13414 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_TypeLiteral13474 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_83_in_parse_org_kermeta_language_behavior_CallResult13507 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_84_in_parse_org_kermeta_language_behavior_CallSuperOperation13536 = new BitSet(new long[]{0x00000003200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallSuperOperation13565 = new BitSet(new long[]{0x0000000204000000L});
    public static final BitSet FOLLOW_26_in_parse_org_kermeta_language_behavior_CallSuperOperation13606 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallSuperOperation13640 = new BitSet(new long[]{0x0000000204000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_CallSuperOperation13714 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Assignment13758 = new BitSet(new long[]{0x0000000000000200L,0x0000000000200000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Assignment13800 = new BitSet(new long[]{0x0000000000000200L,0x0000000000200000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Assignment13842 = new BitSet(new long[]{0x0000000000000200L,0x0000000000200000L});
    public static final BitSet FOLLOW_85_in_parse_org_kermeta_language_behavior_Assignment13885 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_CASTED_in_parse_org_kermeta_language_behavior_Assignment13919 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_Assignment13952 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Assignment13993 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_Assignment14035 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Assignment14077 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Assignment14119 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Assignment14161 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Assignment14203 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_behavior_Assignment14245 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_Assignment14287 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Assignment14329 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_Assignment14371 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallVariable14435 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_CallVariable14461 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_87_in_parse_org_kermeta_language_behavior_SelfExpression14486 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature14515 = new BitSet(new long[]{0x00000000000001E0L,0x0000000400880000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_CallFeature14538 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_CallFeature14572 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_CallFeature14606 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_CallFeature14640 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_CallFeature14674 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_CallFeature14708 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature14747 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature14773 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature14814 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature14840 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature14873 = new BitSet(new long[]{0x00000003200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14914 = new BitSet(new long[]{0x0000000204000000L});
    public static final BitSet FOLLOW_26_in_parse_org_kermeta_language_behavior_CallFeature14969 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15011 = new BitSet(new long[]{0x0000000204000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature15115 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature15143 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature15169 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature15210 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature15236 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_parse_org_kermeta_language_behavior_CallFeature15282 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15300 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature15318 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_CallFeature15345 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_CallFeature15379 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_CallFeature15413 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_CallFeature15447 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_CallFeature15481 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_CallFeature15515 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature15554 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature15580 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature15621 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature15647 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature15680 = new BitSet(new long[]{0x00000003200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15721 = new BitSet(new long[]{0x0000000204000000L});
    public static final BitSet FOLLOW_26_in_parse_org_kermeta_language_behavior_CallFeature15776 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15818 = new BitSet(new long[]{0x0000000204000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature15922 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature15950 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature15976 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature16017 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature16043 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_parse_org_kermeta_language_behavior_CallFeature16089 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature16107 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_CallFeature16138 = new BitSet(new long[]{0x0000000000080002L,0x000000001E000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_CallFeature16172 = new BitSet(new long[]{0x0000000000080002L,0x000000001E000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_CallFeature16206 = new BitSet(new long[]{0x0000000000080002L,0x000000001E000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_CallFeature16240 = new BitSet(new long[]{0x0000000000080002L,0x000000001E000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_CallFeature16274 = new BitSet(new long[]{0x0000000000080002L,0x000000001E000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_CallFeature16308 = new BitSet(new long[]{0x0000000000080002L,0x000000001E000000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature16347 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature16373 = new BitSet(new long[]{0x0000000000080002L,0x000000001E000000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature16414 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature16440 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature16473 = new BitSet(new long[]{0x00000003200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature16514 = new BitSet(new long[]{0x0000000204000000L});
    public static final BitSet FOLLOW_26_in_parse_org_kermeta_language_behavior_CallFeature16569 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature16611 = new BitSet(new long[]{0x0000000204000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature16715 = new BitSet(new long[]{0x0000000000080002L,0x000000001E000000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature16743 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature16769 = new BitSet(new long[]{0x0000000000080002L,0x000000001E000000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature16810 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature16836 = new BitSet(new long[]{0x0000000000080002L,0x000000001E000000L});
    public static final BitSet FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature16897 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_90_in_parse_org_kermeta_language_behavior_CallFeature16930 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature16963 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_92_in_parse_org_kermeta_language_behavior_CallFeature16996 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature17038 = new BitSet(new long[]{0x0000000000000002L,0x000000001E000000L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature17083 = new BitSet(new long[]{0x00000000000001E0L,0x0000000400880000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_CallFeature17106 = new BitSet(new long[]{0x0000000200080000L,0x000000001E000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_CallFeature17140 = new BitSet(new long[]{0x0000000200080000L,0x000000001E000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_CallFeature17174 = new BitSet(new long[]{0x0000000200080000L,0x000000001E000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_CallFeature17208 = new BitSet(new long[]{0x0000000200080000L,0x000000001E000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_CallFeature17242 = new BitSet(new long[]{0x0000000200080000L,0x000000001E000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_CallFeature17276 = new BitSet(new long[]{0x0000000200080000L,0x000000001E000000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature17315 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature17341 = new BitSet(new long[]{0x0000000200080000L,0x000000001E000000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature17382 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature17408 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature17441 = new BitSet(new long[]{0x00000003200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature17482 = new BitSet(new long[]{0x0000000204000000L});
    public static final BitSet FOLLOW_26_in_parse_org_kermeta_language_behavior_CallFeature17537 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature17579 = new BitSet(new long[]{0x0000000204000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature17683 = new BitSet(new long[]{0x0000000200080000L,0x000000001E000000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature17711 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature17737 = new BitSet(new long[]{0x0000000200080000L,0x000000001E000000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_behavior_CallFeature17778 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallFeature17804 = new BitSet(new long[]{0x0000000200080000L,0x000000001E000000L});
    public static final BitSet FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature17865 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_90_in_parse_org_kermeta_language_behavior_CallFeature17898 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature17931 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_92_in_parse_org_kermeta_language_behavior_CallFeature17964 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature18006 = new BitSet(new long[]{0x0000000200000000L,0x000000001E000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature18047 = new BitSet(new long[]{0x0000000000000002L,0x000000001E000000L});
    public static final BitSet FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature18076 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_90_in_parse_org_kermeta_language_behavior_CallFeature18109 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature18142 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_92_in_parse_org_kermeta_language_behavior_CallFeature18175 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature18217 = new BitSet(new long[]{0x0000000000000002L,0x000000001E000000L});
    public static final BitSet FOLLOW_93_in_parse_org_kermeta_language_behavior_CallValue18273 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_behavior_CallValue18287 = new BitSet(new long[]{0x000048C000200000L,0x00000001C0000000L});
    public static final BitSet FOLLOW_38_in_parse_org_kermeta_language_behavior_CallValue18310 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_CallValue18330 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallValue18356 = new BitSet(new long[]{0x000048C000200000L,0x00000001C0000000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_behavior_CallValue18397 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_CallValue18417 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_CallValue18443 = new BitSet(new long[]{0x000048C000200000L,0x00000001C0000000L});
    public static final BitSet FOLLOW_46_in_parse_org_kermeta_language_behavior_CallValue18479 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_CallValue18499 = new BitSet(new long[]{0x5430020801C40020L,0x000000000000004CL});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_behavior_CallValue18525 = new BitSet(new long[]{0x000048C000200000L,0x00000001C0000000L});
    public static final BitSet FOLLOW_94_in_parse_org_kermeta_language_behavior_CallValue18561 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_CallValue18581 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallValue18607 = new BitSet(new long[]{0x000048C000200000L,0x00000001C0000000L});
    public static final BitSet FOLLOW_95_in_parse_org_kermeta_language_behavior_CallValue18648 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_CallValue18668 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallValue18694 = new BitSet(new long[]{0x000048C000200000L,0x00000001C0000000L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_behavior_CallValue18730 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_CallValue18750 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallValue18776 = new BitSet(new long[]{0x000048C000200000L,0x00000001C0000000L});
    public static final BitSet FOLLOW_96_in_parse_org_kermeta_language_behavior_CallValue18817 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_CallValue18837 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_CallValue18863 = new BitSet(new long[]{0x000048C000200000L,0x00000001C0000000L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_behavior_CallValue18909 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_97_in_parse_org_kermeta_language_behavior_EmptyExpression18938 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_behavior_EmptyExpression18952 = new BitSet(new long[]{0x000040C000200000L,0x0000000040000000L});
    public static final BitSet FOLLOW_38_in_parse_org_kermeta_language_behavior_EmptyExpression18975 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_EmptyExpression18995 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_EmptyExpression19021 = new BitSet(new long[]{0x000040C000200000L,0x0000000040000000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_behavior_EmptyExpression19062 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_EmptyExpression19082 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_EmptyExpression19108 = new BitSet(new long[]{0x000040C000200000L,0x0000000040000000L});
    public static final BitSet FOLLOW_46_in_parse_org_kermeta_language_behavior_EmptyExpression19144 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_EmptyExpression19164 = new BitSet(new long[]{0x5430020801C40020L,0x000000000000004CL});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_behavior_EmptyExpression19190 = new BitSet(new long[]{0x000040C000200000L,0x0000000040000000L});
    public static final BitSet FOLLOW_94_in_parse_org_kermeta_language_behavior_EmptyExpression19226 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_EmptyExpression19246 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_EmptyExpression19272 = new BitSet(new long[]{0x000040C000200000L,0x0000000040000000L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_behavior_EmptyExpression19318 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_98_in_parse_org_kermeta_language_behavior_JavaStaticCall19347 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_behavior_JavaStaticCall19361 = new BitSet(new long[]{0x000040C000200000L,0x00000018C0000000L});
    public static final BitSet FOLLOW_38_in_parse_org_kermeta_language_behavior_JavaStaticCall19384 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_JavaStaticCall19404 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_JavaStaticCall19430 = new BitSet(new long[]{0x000040C000200000L,0x00000018C0000000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_behavior_JavaStaticCall19471 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_JavaStaticCall19491 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_JavaStaticCall19517 = new BitSet(new long[]{0x000040C000200000L,0x00000018C0000000L});
    public static final BitSet FOLLOW_46_in_parse_org_kermeta_language_behavior_JavaStaticCall19553 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_JavaStaticCall19573 = new BitSet(new long[]{0x5430020801C40020L,0x000000000000004CL});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_behavior_JavaStaticCall19599 = new BitSet(new long[]{0x000040C000200000L,0x00000018C0000000L});
    public static final BitSet FOLLOW_94_in_parse_org_kermeta_language_behavior_JavaStaticCall19635 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_JavaStaticCall19655 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_JavaStaticCall19681 = new BitSet(new long[]{0x000040C000200000L,0x00000018C0000000L});
    public static final BitSet FOLLOW_95_in_parse_org_kermeta_language_behavior_JavaStaticCall19722 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_JavaStaticCall19742 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_JavaStaticCall19768 = new BitSet(new long[]{0x000040C000200000L,0x00000018C0000000L});
    public static final BitSet FOLLOW_99_in_parse_org_kermeta_language_behavior_JavaStaticCall19804 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_JavaStaticCall19824 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_JavaStaticCall19850 = new BitSet(new long[]{0x000040C000200000L,0x00000018C0000000L});
    public static final BitSet FOLLOW_100_in_parse_org_kermeta_language_behavior_JavaStaticCall19891 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_JavaStaticCall19911 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_JavaStaticCall19937 = new BitSet(new long[]{0x000040C000200000L,0x00000018C0000000L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_behavior_JavaStaticCall19983 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_101_in_parse_org_kermeta_language_behavior_LambdaExpression20012 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_behavior_LambdaExpression20026 = new BitSet(new long[]{0x000040C000200000L,0x00000040C0000000L});
    public static final BitSet FOLLOW_38_in_parse_org_kermeta_language_behavior_LambdaExpression20049 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaExpression20069 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_LambdaExpression20095 = new BitSet(new long[]{0x000040C000200000L,0x00000040C0000000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_behavior_LambdaExpression20136 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaExpression20156 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_LambdaExpression20182 = new BitSet(new long[]{0x000040C000200000L,0x00000040C0000000L});
    public static final BitSet FOLLOW_46_in_parse_org_kermeta_language_behavior_LambdaExpression20218 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaExpression20238 = new BitSet(new long[]{0x5430020801C40020L,0x000000000000004CL});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_behavior_LambdaExpression20264 = new BitSet(new long[]{0x000040C000200000L,0x00000040C0000000L});
    public static final BitSet FOLLOW_94_in_parse_org_kermeta_language_behavior_LambdaExpression20300 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaExpression20320 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_LambdaExpression20346 = new BitSet(new long[]{0x000040C000200000L,0x00000040C0000000L});
    public static final BitSet FOLLOW_95_in_parse_org_kermeta_language_behavior_LambdaExpression20387 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaExpression20407 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_LambdaParameter_in_parse_org_kermeta_language_behavior_LambdaExpression20433 = new BitSet(new long[]{0x000040C000200000L,0x00000040C0000000L});
    public static final BitSet FOLLOW_102_in_parse_org_kermeta_language_behavior_LambdaExpression20469 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaExpression20489 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_LambdaExpression20515 = new BitSet(new long[]{0x000040C000200000L,0x00000040C0000000L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_behavior_LambdaExpression20556 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_103_in_parse_org_kermeta_language_behavior_LambdaParameter20585 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_behavior_LambdaParameter20599 = new BitSet(new long[]{0x000108C000200000L});
    public static final BitSet FOLLOW_38_in_parse_org_kermeta_language_behavior_LambdaParameter20622 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaParameter20642 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_LambdaParameter20668 = new BitSet(new long[]{0x000108C000200000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_behavior_LambdaParameter20709 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaParameter20729 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_LambdaParameter20755 = new BitSet(new long[]{0x000108C000200000L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_behavior_LambdaParameter20791 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaParameter20811 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_parse_org_kermeta_language_behavior_LambdaParameter20837 = new BitSet(new long[]{0x000108C000200000L});
    public static final BitSet FOLLOW_48_in_parse_org_kermeta_language_behavior_LambdaParameter20878 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaParameter20898 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_LambdaParameter20924 = new BitSet(new long[]{0x000108C000200000L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_behavior_LambdaParameter20965 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_104_in_parse_org_kermeta_language_behavior_VoidLiteral20994 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Expression21019 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Raise_in_parse_org_kermeta_language_behavior_Expression21029 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Expression21039 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_Expression21049 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_Expression21059 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Expression21069 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_behavior_Expression21079 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Expression21089 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_parse_org_kermeta_language_behavior_Expression21099 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Expression21109 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Expression21119 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Expression21129 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Expression21139 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_Expression21149 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Expression21159 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Expression21169 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_behavior_Expression21179 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_Expression21189 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_LambdaExpression_in_parse_org_kermeta_language_behavior_Expression21199 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_behavior_Expression21209 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Class_in_parse_org_kermeta_language_structure_Type21230 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_Type21240 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_Type21250 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_Type21260 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_parse_org_kermeta_language_structure_Type21270 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelTypeVariable_in_parse_org_kermeta_language_structure_Type21280 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_Type21290 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ProductType_in_parse_org_kermeta_language_structure_Type21300 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_FunctionType_in_parse_org_kermeta_language_structure_Type21310 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VoidType_in_parse_org_kermeta_language_structure_Type21320 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_synpred1_Kermeta82 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_synpred3_Kermeta110 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_synpred4_Kermeta124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_synpred5_Kermeta138 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_synpred6_Kermeta152 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred12_Kermeta729 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_20_in_synpred15_Kermeta810 = new BitSet(new long[]{0x0030020801E40020L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred15_Kermeta857 = new BitSet(new long[]{0x0030020801E40020L});
    public static final BitSet FOLLOW_21_in_synpred15_Kermeta928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred17_Kermeta729 = new BitSet(new long[]{0x0030020801C40022L});
    public static final BitSet FOLLOW_20_in_synpred17_Kermeta810 = new BitSet(new long[]{0x0030020801E40020L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred17_Kermeta857 = new BitSet(new long[]{0x0030020801E40020L});
    public static final BitSet FOLLOW_21_in_synpred17_Kermeta928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_20_in_synpred17_Kermeta961 = new BitSet(new long[]{0x0030020801C40020L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred17_Kermeta1008 = new BitSet(new long[]{0x0030020801E40020L});
    public static final BitSet FOLLOW_21_in_synpred17_Kermeta1079 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred19_Kermeta1153 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred24_Kermeta1574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred31_Kermeta2193 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_synpred43_Kermeta3605 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Using_in_synpred44_Kermeta3615 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Require_in_synpred45_Kermeta3625 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred46_Kermeta3635 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_synpred47_Kermeta3645 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_synpred48_Kermeta3655 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_synpred49_Kermeta3665 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_synpred50_Kermeta3675 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Class_in_synpred51_Kermeta3685 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_synpred52_Kermeta3695 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_synpred53_Kermeta3705 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred54_Kermeta3715 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelType_in_synpred56_Kermeta3735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_synpred58_Kermeta3755 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred59_Kermeta3765 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_synpred60_Kermeta3775 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_synpred62_Kermeta3795 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_synpred64_Kermeta3815 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_synpred70_Kermeta3875 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred72_Kermeta3895 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred73_Kermeta3905 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred74_Kermeta3915 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_synpred78_Kermeta3955 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred79_Kermeta3965 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred81_Kermeta3985 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred82_Kermeta3995 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred83_Kermeta4005 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred84_Kermeta4015 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred87_Kermeta4045 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_in_synpred103_Kermeta5385 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred176_Kermeta11366 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred177_Kermeta11408 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred178_Kermeta11450 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred180_Kermeta11534 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred181_Kermeta11576 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred188_Kermeta12347 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred190_Kermeta12415 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred191_Kermeta12449 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred193_Kermeta12517 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred194_Kermeta12551 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred198_Kermeta12768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred199_Kermeta12810 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred201_Kermeta12894 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_80_in_synpred205_Kermeta13197 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred205_Kermeta13230 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred209_Kermeta13758 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred210_Kermeta13800 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred212_Kermeta13993 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred213_Kermeta14035 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred215_Kermeta14119 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred217_Kermeta14203 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred219_Kermeta14287 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred220_Kermeta14329 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_synpred227_Kermeta14747 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_synpred227_Kermeta14773 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_synpred231_Kermeta15143 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_synpred231_Kermeta15169 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_synpred233_Kermeta14515 = new BitSet(new long[]{0x00000000000001E0L,0x0000000400880000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred233_Kermeta14538 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred233_Kermeta14572 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred233_Kermeta14606 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred233_Kermeta14640 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred233_Kermeta14674 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred233_Kermeta14708 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_19_in_synpred233_Kermeta14747 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_synpred233_Kermeta14773 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_19_in_synpred233_Kermeta14814 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_synpred233_Kermeta14840 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_synpred233_Kermeta14873 = new BitSet(new long[]{0x00000003200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred233_Kermeta14914 = new BitSet(new long[]{0x0000000204000000L});
    public static final BitSet FOLLOW_26_in_synpred233_Kermeta14969 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred233_Kermeta15011 = new BitSet(new long[]{0x0000000204000000L});
    public static final BitSet FOLLOW_33_in_synpred233_Kermeta15115 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_19_in_synpred233_Kermeta15143 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_synpred233_Kermeta15169 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_19_in_synpred233_Kermeta15210 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_synpred233_Kermeta15236 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_synpred233_Kermeta15282 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred233_Kermeta15300 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_synpred233_Kermeta15318 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_synpred239_Kermeta15554 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_synpred239_Kermeta15580 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_synpred243_Kermeta15950 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_synpred243_Kermeta15976 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred245_Kermeta15345 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred245_Kermeta15379 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred245_Kermeta15413 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred245_Kermeta15447 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred245_Kermeta15481 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred245_Kermeta15515 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_19_in_synpred245_Kermeta15554 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_synpred245_Kermeta15580 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_19_in_synpred245_Kermeta15621 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_synpred245_Kermeta15647 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_synpred245_Kermeta15680 = new BitSet(new long[]{0x00000003200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred245_Kermeta15721 = new BitSet(new long[]{0x0000000204000000L});
    public static final BitSet FOLLOW_26_in_synpred245_Kermeta15776 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred245_Kermeta15818 = new BitSet(new long[]{0x0000000204000000L});
    public static final BitSet FOLLOW_33_in_synpred245_Kermeta15922 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_19_in_synpred245_Kermeta15950 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_synpred245_Kermeta15976 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_19_in_synpred245_Kermeta16017 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_synpred245_Kermeta16043 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_synpred245_Kermeta16089 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred245_Kermeta16107 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_synpred251_Kermeta16347 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_synpred251_Kermeta16373 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_synpred255_Kermeta16743 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_synpred255_Kermeta16769 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_89_in_synpred260_Kermeta16897 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_90_in_synpred260_Kermeta16930 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_91_in_synpred260_Kermeta16963 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_92_in_synpred260_Kermeta16996 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred260_Kermeta17038 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred261_Kermeta16138 = new BitSet(new long[]{0x0000000000080002L,0x000000001E000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred261_Kermeta16172 = new BitSet(new long[]{0x0000000000080002L,0x000000001E000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred261_Kermeta16206 = new BitSet(new long[]{0x0000000000080002L,0x000000001E000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred261_Kermeta16240 = new BitSet(new long[]{0x0000000000080002L,0x000000001E000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred261_Kermeta16274 = new BitSet(new long[]{0x0000000000080002L,0x000000001E000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred261_Kermeta16308 = new BitSet(new long[]{0x0000000000080002L,0x000000001E000000L});
    public static final BitSet FOLLOW_19_in_synpred261_Kermeta16347 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_synpred261_Kermeta16373 = new BitSet(new long[]{0x0000000000080002L,0x000000001E000000L});
    public static final BitSet FOLLOW_19_in_synpred261_Kermeta16414 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_synpred261_Kermeta16440 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_synpred261_Kermeta16473 = new BitSet(new long[]{0x00000003200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred261_Kermeta16514 = new BitSet(new long[]{0x0000000204000000L});
    public static final BitSet FOLLOW_26_in_synpred261_Kermeta16569 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred261_Kermeta16611 = new BitSet(new long[]{0x0000000204000000L});
    public static final BitSet FOLLOW_33_in_synpred261_Kermeta16715 = new BitSet(new long[]{0x0000000000080002L,0x000000001E000000L});
    public static final BitSet FOLLOW_19_in_synpred261_Kermeta16743 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_synpred261_Kermeta16769 = new BitSet(new long[]{0x0000000000080002L,0x000000001E000000L});
    public static final BitSet FOLLOW_19_in_synpred261_Kermeta16810 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_synpred261_Kermeta16836 = new BitSet(new long[]{0x0000000000080002L,0x000000001E000000L});
    public static final BitSet FOLLOW_89_in_synpred261_Kermeta16897 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_90_in_synpred261_Kermeta16930 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_91_in_synpred261_Kermeta16963 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_92_in_synpred261_Kermeta16996 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred261_Kermeta17038 = new BitSet(new long[]{0x0000000000000002L,0x000000001E000000L});
    public static final BitSet FOLLOW_19_in_synpred267_Kermeta17315 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_synpred267_Kermeta17341 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_synpred271_Kermeta17711 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_synpred271_Kermeta17737 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_89_in_synpred280_Kermeta18076 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_90_in_synpred280_Kermeta18109 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_91_in_synpred280_Kermeta18142 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_92_in_synpred280_Kermeta18175 = new BitSet(new long[]{0x00000001200001E0L,0x00000126209A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred280_Kermeta18217 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred311_Kermeta21039 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred312_Kermeta21049 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred313_Kermeta21059 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_synpred317_Kermeta21099 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred318_Kermeta21109 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred320_Kermeta21129 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred321_Kermeta21139 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred322_Kermeta21149 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred323_Kermeta21159 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred326_Kermeta21189 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Class_in_synpred328_Kermeta21230 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelType_in_synpred330_Kermeta21250 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_synpred331_Kermeta21260 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_synpred332_Kermeta21270 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_synpred334_Kermeta21290 = new BitSet(new long[]{0x0000000000000002L});

}