// $ANTLR 3.1.1

	package org.kermeta.language.emftexteditor.mopp;


import org.antlr.runtime.*;
import java.util.HashMap;
public class KermetaParser extends KermetaANTLRParserBase {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "IDENTIFIER", "PRIMITIVE_TYPE", "INTEGER", "BOOLEAN", "CASTED", "SL_COMMENT", "ML_COMMENT", "FLOAT", "WHITESPACE", "LINEBREAKS", "'using'", "'require'", "'package'", "'::'", "'{'", "'}'", "'aspect'", "'abstract'", "'class'", "'inherits'", "','", "'attribute'", "'reference'", "':'", "'property'", "'getter'", "'setter'", "'operation'", "'('", "')'", "'is'", "'enumeration'", "';'", "'Void'", "'Object'", "'tag'", "'ownedTags'", "'Model'", "'ModelType'", "'typeContainer'", "'name'", "'includedTypeDefinition'", "'TypeVariableBinding'", "'containedType'", "'variable'", "'type'", "'MultiplicityElement'", "'lower'", "'upper'", "'TypeDefinition'", "'Tag'", "'value'", "'object'", "'ObjectTypeVariable'", "'supertype'", "'ModelTypeVariable'", "'virtualType'", "'VirtualType'", "'classDefinition'", "'modelType'", "'typeParamBinding'", "'ProductType'", "'FunctionType'", "'left'", "'right'", "'do'", "'end'", "'rescue'", "'raise'", "'if'", "'then'", "'else'", "'from'", "'until'", "'loop'", "'var'", "'init'", "'result'", "'super'", "':='", "'='", "'self'", "'.'", "'=='", "'+'", "'-'", "'/'", "'*'", "'extern'", "'EmptyExpression'", "'staticType'", "'LambdaExpression'", "'parameters'", "'body'", "'LambdaParameter'"
    };
    public static final int T__29=29;
    public static final int T__28=28;
    public static final int T__27=27;
    public static final int T__26=26;
    public static final int T__25=25;
    public static final int T__24=24;
    public static final int T__23=23;
    public static final int T__22=22;
    public static final int T__21=21;
    public static final int T__20=20;
    public static final int EOF=-1;
    public static final int T__93=93;
    public static final int T__19=19;
    public static final int T__94=94;
    public static final int T__91=91;
    public static final int T__92=92;
    public static final int T__16=16;
    public static final int T__15=15;
    public static final int T__90=90;
    public static final int T__18=18;
    public static final int T__17=17;
    public static final int T__14=14;
    public static final int PRIMITIVE_TYPE=5;
    public static final int T__98=98;
    public static final int T__97=97;
    public static final int T__96=96;
    public static final int T__95=95;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int WHITESPACE=12;
    public static final int T__85=85;
    public static final int T__84=84;
    public static final int T__87=87;
    public static final int T__86=86;
    public static final int T__89=89;
    public static final int T__88=88;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int T__70=70;
    public static final int SL_COMMENT=9;
    public static final int T__76=76;
    public static final int T__75=75;
    public static final int T__74=74;
    public static final int T__73=73;
    public static final int T__79=79;
    public static final int T__78=78;
    public static final int T__77=77;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int FLOAT=11;
    public static final int T__61=61;
    public static final int LINEBREAKS=13;
    public static final int T__60=60;
    public static final int T__55=55;
    public static final int ML_COMMENT=10;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int BOOLEAN=7;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int IDENTIFIER=4;
    public static final int T__59=59;
    public static final int T__50=50;
    public static final int T__42=42;
    public static final int INTEGER=6;
    public static final int T__43=43;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int CASTED=8;
    public static final int T__32=32;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;

    // delegates
    // delegators


        public KermetaParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public KermetaParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
            this.state.ruleMemo = new HashMap[348+1];
             
             
        }
        

    public String[] getTokenNames() { return KermetaParser.tokenNames; }
    public String getGrammarFileName() { return "/home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g"; }


    	private org.kermeta.language.emftexteditor.IKermetaTokenResolverFactory tokenResolverFactory = new org.kermeta.language.emftexteditor.mopp.KermetaTokenResolverFactory();
    	@SuppressWarnings("unused")
    	
    	private int lastPosition;
    	private org.kermeta.language.emftexteditor.mopp.KermetaTokenResolveResult tokenResolveResult = new org.kermeta.language.emftexteditor.mopp.KermetaTokenResolveResult();
    	private boolean rememberExpectedElements = false;
    	private java.lang.Object parseToIndexTypeObject;
    	private int lastTokenIndex = 0;
    	private java.util.List<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal> expectedElements = new java.util.ArrayList<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal>();
    	private int mismatchedTokenRecoveryTries = 0;
    	private java.util.Map<?, ?> options;
    	//helper lists to allow a lexer to pass errors to its parser
    	protected java.util.List<org.antlr.runtime.RecognitionException> lexerExceptions = java.util.Collections.synchronizedList(new java.util.ArrayList<org.antlr.runtime.RecognitionException>());
    	protected java.util.List<java.lang.Integer> lexerExceptionsPosition = java.util.Collections.synchronizedList(new java.util.ArrayList<java.lang.Integer>());
    	private int stopIncludingHiddenTokens;
    	private int stopExcludingHiddenTokens;
    	private java.util.Collection<org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>> postParseCommands;
    	private boolean terminateParsing;
    	private int tokenIndexOfLastCompleteElement;
    	private int expectedElementsIndexOfLastCompleteElement;
    	
    	protected void addErrorToResource(final java.lang.String errorMessage, final int line, final int charPositionInLine, final int startIndex, final int stopIndex) {
    		postParseCommands.add(new org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>() {
    			public boolean execute(org.kermeta.language.emftexteditor.IKermetaTextResource resource) {
    				if (resource == null) {
    					// the resource can be null if the parser is used for
    					// code completion
    					return true;
    				}
    				resource.addProblem(new org.kermeta.language.emftexteditor.IKermetaProblem() {
    					public org.kermeta.language.emftexteditor.KermetaEProblemType getType() {
    						return org.kermeta.language.emftexteditor.KermetaEProblemType.ERROR;
    					}
    					public java.lang.String getMessage() {
    						return errorMessage;
    					}
    				}, line, charPositionInLine, startIndex, stopIndex);
    				return true;
    			}
    		});
    	}
    	
    	public void addExpectedElement(org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal expectedElement) {
    		if (!this.rememberExpectedElements) {
    			return;
    		}
    		setPosition(expectedElement, input.index());
    		this.expectedElements.add(expectedElement);
    	}
    	
    	protected void addMapEntry(org.eclipse.emf.ecore.EObject element, org.eclipse.emf.ecore.EStructuralFeature structuralFeature, org.kermeta.language.emftexteditor.mopp.KermetaDummyEObject dummy) {
    		java.lang.Object value = element.eGet(structuralFeature);
    		java.lang.Object mapKey = dummy.getValueByName("key");
    		java.lang.Object mapValue = dummy.getValueByName("value");
    		if (value instanceof org.eclipse.emf.common.util.EMap<?, ?>) {
    			org.eclipse.emf.common.util.EMap<java.lang.Object, java.lang.Object> valueMap = org.kermeta.language.emftexteditor.util.KermetaMapUtil.castToEMap(value);
    			if (mapKey != null && mapValue != null) {
    				valueMap.put(mapKey, mapValue);
    			}
    		}
    	}
    	
    	@SuppressWarnings("unchecked")
    	
    	private boolean addObjectToList(org.eclipse.emf.ecore.EObject element, int featureID, java.lang.Object proxy) {
    		return ((java.util.List<java.lang.Object>) element.eGet(element.eClass().getEStructuralFeature(featureID))).add(proxy);
    	}
    	
    	protected org.eclipse.emf.ecore.EObject apply(org.eclipse.emf.ecore.EObject target, java.util.List<org.eclipse.emf.ecore.EObject> dummyEObjects) {
    		org.eclipse.emf.ecore.EObject currentTarget = target;
    		for (org.eclipse.emf.ecore.EObject object : dummyEObjects) {
    			assert(object instanceof org.kermeta.language.emftexteditor.mopp.KermetaDummyEObject);
    			org.kermeta.language.emftexteditor.mopp.KermetaDummyEObject dummy = (org.kermeta.language.emftexteditor.mopp.KermetaDummyEObject) object;
    			org.eclipse.emf.ecore.EObject newEObject = dummy.applyTo(currentTarget);
    			currentTarget = newEObject;
    		}
    		return currentTarget;
    	}
    	
    	protected void collectHiddenTokens(org.eclipse.emf.ecore.EObject element) {
    		int currentPos = getTokenStream().index();
    		if (currentPos == 0) {
    			return;
    		}
    		int endPos = currentPos - 1;
    		for (; endPos >= this.lastPosition; endPos--) {
    			org.antlr.runtime.Token token = getTokenStream().get(endPos);
    			int _channel = token.getChannel();
    			if (_channel != 99) {
    				break;
    			}
    		}
    		for (int pos = this.lastPosition; pos < endPos; pos++) {
    			org.antlr.runtime.Token token = getTokenStream().get(pos);
    			int _channel = token.getChannel();
    			if (_channel == 99) {
    				if (token.getType() == KermetaLexer.SL_COMMENT) {
    					org.eclipse.emf.ecore.EStructuralFeature feature = element.eClass().getEStructuralFeature("comments");
    					if (feature != null) {
    						// call token resolver
    						org.kermeta.language.emftexteditor.IKermetaTokenResolver resolvedResolver = tokenResolverFactory.createCollectInTokenResolver("comments");
    						resolvedResolver.setOptions(getOptions());
    						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult resolvedResult = getFreshTokenResolveResult();
    						resolvedResolver.resolve(token.getText(), feature, resolvedResult);
    						java.lang.Object resolvedObject = resolvedResult.getResolvedToken();
    						if (resolvedObject == null) {
    							addErrorToResource(resolvedResult.getErrorMessage(), ((org.antlr.runtime.CommonToken) token).getLine(), ((org.antlr.runtime.CommonToken) token).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) token).getStartIndex(), ((org.antlr.runtime.CommonToken) token).getStopIndex());
    						}
    						if (java.lang.String.class.isInstance(resolvedObject)) {
    							((java.util.List) element.eGet(feature)).add((java.lang.String) resolvedObject);
    						} else {
    							System.out.println("WARNING: Attribute comments for token " + token + " has wrong type in element " + element + " (expected java.lang.String).");
    						}
    					} else {
    						System.out.println("WARNING: Attribute comments for token " + token + " was not found in element " + element + ".");
    					}
    				}
    				if (token.getType() == KermetaLexer.ML_COMMENT) {
    					org.eclipse.emf.ecore.EStructuralFeature feature = element.eClass().getEStructuralFeature("comments");
    					if (feature != null) {
    						// call token resolver
    						org.kermeta.language.emftexteditor.IKermetaTokenResolver resolvedResolver = tokenResolverFactory.createCollectInTokenResolver("comments");
    						resolvedResolver.setOptions(getOptions());
    						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult resolvedResult = getFreshTokenResolveResult();
    						resolvedResolver.resolve(token.getText(), feature, resolvedResult);
    						java.lang.Object resolvedObject = resolvedResult.getResolvedToken();
    						if (resolvedObject == null) {
    							addErrorToResource(resolvedResult.getErrorMessage(), ((org.antlr.runtime.CommonToken) token).getLine(), ((org.antlr.runtime.CommonToken) token).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) token).getStartIndex(), ((org.antlr.runtime.CommonToken) token).getStopIndex());
    						}
    						if (java.lang.String.class.isInstance(resolvedObject)) {
    							((java.util.List) element.eGet(feature)).add((java.lang.String) resolvedObject);
    						} else {
    							System.out.println("WARNING: Attribute comments for token " + token + " has wrong type in element " + element + " (expected java.lang.String).");
    						}
    					} else {
    						System.out.println("WARNING: Attribute comments for token " + token + " was not found in element " + element + ".");
    					}
    				}
    			}
    		}
    		this.lastPosition = (endPos < 0 ? 0 : endPos);
    	}
    	
    	protected void copyLocalizationInfos(final org.eclipse.emf.ecore.EObject source, final org.eclipse.emf.ecore.EObject target) {
    		postParseCommands.add(new org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>() {
    			public boolean execute(org.kermeta.language.emftexteditor.IKermetaTextResource resource) {
    				org.kermeta.language.emftexteditor.IKermetaLocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for
    					// code completion
    					return true;
    				}
    				locationMap.setCharStart(target, locationMap.getCharStart(source));
    				locationMap.setCharEnd(target, locationMap.getCharEnd(source));
    				locationMap.setColumn(target, locationMap.getColumn(source));
    				locationMap.setLine(target, locationMap.getLine(source));
    				return true;
    			}
    		});
    	}
    	
    	protected void copyLocalizationInfos(final org.antlr.runtime.CommonToken source, final org.eclipse.emf.ecore.EObject target) {
    		postParseCommands.add(new org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>() {
    			public boolean execute(org.kermeta.language.emftexteditor.IKermetaTextResource resource) {
    				org.kermeta.language.emftexteditor.IKermetaLocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for
    					// code completion
    					return true;
    				}
    				if (source == null) {
    					return true;
    				}
    				locationMap.setCharStart(target, source.getStartIndex());
    				locationMap.setCharEnd(target, source.getStopIndex());
    				locationMap.setColumn(target, source.getCharPositionInLine());
    				locationMap.setLine(target, source.getLine());
    				return true;
    			}
    		});
    	}
    	
    	public org.kermeta.language.emftexteditor.IKermetaTextParser createInstance(java.io.InputStream actualInputStream, java.lang.String encoding) {
    		try {
    			if (encoding == null) {
    				return new KermetaParser(new org.antlr.runtime.CommonTokenStream(new KermetaLexer(new org.antlr.runtime.ANTLRInputStream(actualInputStream))));
    			} else {
    				return new KermetaParser(new org.antlr.runtime.CommonTokenStream(new KermetaLexer(new org.antlr.runtime.ANTLRInputStream(actualInputStream, encoding))));
    			}
    		} catch (java.io.IOException e) {
    			org.kermeta.language.emftexteditor.mopp.KermetaPlugin.logError("Error while creating parser.", e);
    			return null;
    		}
    	}
    	
    	// This default constructor is only used to call createInstance() on it
    	public KermetaParser() {
    		super(null);
    	}
    	
    	protected org.eclipse.emf.ecore.EObject doParse() throws org.antlr.runtime.RecognitionException {
    		this.lastPosition = 0;
    		// required because the lexer class can not be subclassed
    		((KermetaLexer) getTokenStream().getTokenSource()).lexerExceptions = lexerExceptions;
    		((KermetaLexer) getTokenStream().getTokenSource()).lexerExceptionsPosition = lexerExceptionsPosition;
    		java.lang.Object typeObject = getTypeObject();
    		if (typeObject == null) {
    			return start();
    		} else if (typeObject instanceof org.eclipse.emf.ecore.EClass) {
    			org.eclipse.emf.ecore.EClass type = (org.eclipse.emf.ecore.EClass) typeObject;
    			if (type.getInstanceClass() == org.kermeta.language.structure.ModelingUnit.class) {
    				return parse_org_kermeta_language_structure_ModelingUnit();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Using.class) {
    				return parse_org_kermeta_language_structure_Using();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Require.class) {
    				return parse_org_kermeta_language_structure_Require();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Package.class) {
    				return parse_org_kermeta_language_structure_Package();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.ClassDefinition.class) {
    				return parse_org_kermeta_language_structure_ClassDefinition();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Property.class) {
    				return parse_org_kermeta_language_structure_Property();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Operation.class) {
    				return parse_org_kermeta_language_structure_Operation();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Parameter.class) {
    				return parse_org_kermeta_language_structure_Parameter();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Class.class) {
    				return parse_org_kermeta_language_structure_Class();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Enumeration.class) {
    				return parse_org_kermeta_language_structure_Enumeration();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.EnumerationLiteral.class) {
    				return parse_org_kermeta_language_structure_EnumerationLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Constraint.class) {
    				return parse_org_kermeta_language_structure_Constraint();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.PrimitiveType.class) {
    				return parse_org_kermeta_language_structure_PrimitiveType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.UnresolvedType.class) {
    				return parse_org_kermeta_language_structure_UnresolvedType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.VoidType.class) {
    				return parse_org_kermeta_language_structure_VoidType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Object.class) {
    				return parse_org_kermeta_language_structure_Object();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Model.class) {
    				return parse_org_kermeta_language_structure_Model();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.ModelType.class) {
    				return parse_org_kermeta_language_structure_ModelType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.TypeVariableBinding.class) {
    				return parse_org_kermeta_language_structure_TypeVariableBinding();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.MultiplicityElement.class) {
    				return parse_org_kermeta_language_structure_MultiplicityElement();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.TypeDefinition.class) {
    				return parse_org_kermeta_language_structure_TypeDefinition();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Tag.class) {
    				return parse_org_kermeta_language_structure_Tag();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.ObjectTypeVariable.class) {
    				return parse_org_kermeta_language_structure_ObjectTypeVariable();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.ModelTypeVariable.class) {
    				return parse_org_kermeta_language_structure_ModelTypeVariable();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.VirtualType.class) {
    				return parse_org_kermeta_language_structure_VirtualType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.ProductType.class) {
    				return parse_org_kermeta_language_structure_ProductType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.FunctionType.class) {
    				return parse_org_kermeta_language_structure_FunctionType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Block.class) {
    				return parse_org_kermeta_language_behavior_Block();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Rescue.class) {
    				return parse_org_kermeta_language_behavior_Rescue();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.TypeReference.class) {
    				return parse_org_kermeta_language_behavior_TypeReference();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Raise.class) {
    				return parse_org_kermeta_language_behavior_Raise();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.BooleanLiteral.class) {
    				return parse_org_kermeta_language_behavior_BooleanLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.IntegerLiteral.class) {
    				return parse_org_kermeta_language_behavior_IntegerLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.StringLiteral.class) {
    				return parse_org_kermeta_language_behavior_StringLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Conditional.class) {
    				return parse_org_kermeta_language_behavior_Conditional();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Loop.class) {
    				return parse_org_kermeta_language_behavior_Loop();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.VariableDecl.class) {
    				return parse_org_kermeta_language_behavior_VariableDecl();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.TypeLiteral.class) {
    				return parse_org_kermeta_language_behavior_TypeLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.CallResult.class) {
    				return parse_org_kermeta_language_behavior_CallResult();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.CallSuperOperation.class) {
    				return parse_org_kermeta_language_behavior_CallSuperOperation();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Assignment.class) {
    				return parse_org_kermeta_language_behavior_Assignment();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.CallVariable.class) {
    				return parse_org_kermeta_language_behavior_CallVariable();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.SelfExpression.class) {
    				return parse_org_kermeta_language_behavior_SelfExpression();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.CallFeature.class) {
    				return parse_org_kermeta_language_behavior_CallFeature();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.JavaStaticCall.class) {
    				return parse_org_kermeta_language_behavior_JavaStaticCall();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.VoidLiteral.class) {
    				return parse_org_kermeta_language_behavior_VoidLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.CallValue.class) {
    				return parse_org_kermeta_language_behavior_CallValue();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.EmptyExpression.class) {
    				return parse_org_kermeta_language_behavior_EmptyExpression();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.LambdaExpression.class) {
    				return parse_org_kermeta_language_behavior_LambdaExpression();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.LambdaParameter.class) {
    				return parse_org_kermeta_language_behavior_LambdaParameter();
    			}
    		}
    		throw new org.kermeta.language.emftexteditor.mopp.KermetaUnexpectedContentTypeException(typeObject);
    	}
    	
    	private org.kermeta.language.emftexteditor.mopp.KermetaTokenResolveResult getFreshTokenResolveResult() {
    		tokenResolveResult.clear();
    		return tokenResolveResult;
    	}
    	
    	public int getMismatchedTokenRecoveryTries() {
    		return mismatchedTokenRecoveryTries;
    	}
    	
    	public java.lang.Object getMissingSymbol(org.antlr.runtime.IntStream arg0, org.antlr.runtime.RecognitionException arg1, int arg2, org.antlr.runtime.BitSet arg3) {
    		mismatchedTokenRecoveryTries++;
    		return super.getMissingSymbol(arg0, arg1, arg2, arg3);
    	}
    	
    	protected java.util.Map<?,?> getOptions() {
    		return options;
    	}
    	
    	public org.kermeta.language.emftexteditor.mopp.KermetaMetaInformation getMetaInformation() {
    		return new org.kermeta.language.emftexteditor.mopp.KermetaMetaInformation();
    	}
    	
    	public java.lang.Object getParseToIndexTypeObject() {
    		return parseToIndexTypeObject;
    	}
    	
    	protected org.kermeta.language.emftexteditor.mopp.KermetaReferenceResolverSwitch getReferenceResolverSwitch() {
    		return (org.kermeta.language.emftexteditor.mopp.KermetaReferenceResolverSwitch) getMetaInformation().getReferenceResolverSwitch();
    	}
    	
    	protected java.lang.Object getTypeObject() {
    		java.lang.Object typeObject = getParseToIndexTypeObject();
    		if (typeObject != null) {
    			return typeObject;
    		}
    		java.util.Map<?,?> options = getOptions();
    		if (options != null) {
    			typeObject = options.get(org.kermeta.language.emftexteditor.IKermetaOptions.RESOURCE_CONTENT_TYPE);
    		}
    		return typeObject;
    	}
    	
    	// Implementation that calls {@link #doParse()}  and handles the thrown
    	// RecognitionExceptions.
    	public org.kermeta.language.emftexteditor.IKermetaParseResult parse() {
    		terminateParsing = false;
    		postParseCommands = new java.util.ArrayList<org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>>();
    		org.kermeta.language.emftexteditor.mopp.KermetaParseResult parseResult = new org.kermeta.language.emftexteditor.mopp.KermetaParseResult();
    		try {
    			org.eclipse.emf.ecore.EObject result =  doParse();
    			if (lexerExceptions.isEmpty()) {
    				parseResult.setRoot(result);
    			}
    		} catch (org.antlr.runtime.RecognitionException re) {
    			reportError(re);
    		} catch (java.lang.IllegalArgumentException iae) {
    			if ("The 'no null' constraint is violated".equals(iae.getMessage())) {
    				//? can be caused if a null is set on EMF models where not allowed;
    				//? this will just happen if other errors occurred before
    			} else {
    				iae.printStackTrace();
    			}
    		}
    		for (org.antlr.runtime.RecognitionException re : lexerExceptions) {
    			reportLexicalError(re);
    		}
    		parseResult.getPostParseCommands().addAll(postParseCommands);
    		return parseResult;
    	}
    	
    	public java.util.List<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal> parseToExpectedElements(org.eclipse.emf.ecore.EClass type, org.kermeta.language.emftexteditor.IKermetaTextResource dummyResource) {
    		rememberExpectedElements = true;
    		parseToIndexTypeObject = type;
    		final org.antlr.runtime.CommonTokenStream tokenStream = (org.antlr.runtime.CommonTokenStream) getTokenStream();
    		org.kermeta.language.emftexteditor.IKermetaParseResult result = parse();
    		if (result != null) {
    			org.eclipse.emf.ecore.EObject root = result.getRoot();
    			if (root != null) {
    				dummyResource.getContents().add(root);
    			}
    			for (org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource> command : result.getPostParseCommands()) {
    				command.execute(dummyResource);
    			}
    		}
    		// remove all expected elements that were added after the last complete element
    		expectedElements = expectedElements.subList(0, expectedElementsIndexOfLastCompleteElement + 1);
    		int lastFollowSetID = expectedElements.get(expectedElementsIndexOfLastCompleteElement).getFollowSetID();
    		java.util.Set<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal> currentFollowSet = new java.util.LinkedHashSet<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal>();
    		java.util.List<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal> newFollowSet = new java.util.ArrayList<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal>();
    		for (int i = expectedElementsIndexOfLastCompleteElement; i >= 0; i--) {
    			org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal expectedElementI = expectedElements.get(i);
    			if (expectedElementI.getFollowSetID() == lastFollowSetID) {
    				currentFollowSet.add(expectedElementI);
    			} else {
    				break;
    			}
    		}
    		int followSetID = 596;
    		int i;
    		for (i = tokenIndexOfLastCompleteElement; i < tokenStream.size(); i++) {
    			org.antlr.runtime.CommonToken nextToken = (org.antlr.runtime.CommonToken) tokenStream.get(i);
    			if (nextToken.getChannel() == 99) {
    				// hidden tokens do not reduce the follow set
    			} else {
    				// now that we have found the next visible token the position for that expected terminals
    				// can be set
    				for (org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal nextFollow : newFollowSet) {
    					lastTokenIndex = 0;
    					setPosition(nextFollow, i);
    				}
    				newFollowSet.clear();
    				// normal tokens do reduce the follow set - only elements that match the token are kept
    				for (org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal nextFollow : currentFollowSet) {
    					if (nextFollow.getTerminal().getTokenName().equals(getTokenNames()[nextToken.getType()])) {
    						// keep this one - it matches
    						java.util.Collection<org.kermeta.language.emftexteditor.IKermetaExpectedElement> newFollowers = nextFollow.getTerminal().getFollowers();
    						for (org.kermeta.language.emftexteditor.IKermetaExpectedElement newFollower : newFollowers) {
    							org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal newFollowTerminal = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(newFollower, followSetID);
    							newFollowSet.add(newFollowTerminal);
    							expectedElements.add(newFollowTerminal);
    						}
    					}
    				}
    				currentFollowSet.clear();
    				currentFollowSet.addAll(newFollowSet);
    			}
    			followSetID++;
    		}
    		// after the last token in the stream we must set the position for the elements that were
    		// added during the last iteration of the loop
    		for (org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal nextFollow : newFollowSet) {
    			lastTokenIndex = 0;
    			setPosition(nextFollow, i);
    		}
    		return this.expectedElements;
    	}
    	
    	public void setPosition(org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal expectedElement, int tokenIndex) {
    		int currentIndex = java.lang.Math.max(0, tokenIndex);
    		for (int index = lastTokenIndex; index < currentIndex; index++) {
    			if (index >= input.size()) {
    				break;
    			}
    			org.antlr.runtime.CommonToken tokenAtIndex = (org.antlr.runtime.CommonToken) input.get(index);
    			stopIncludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			if (tokenAtIndex.getChannel() != 99) {
    				stopExcludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			}
    		}
    		lastTokenIndex = java.lang.Math.max(0, currentIndex);
    		expectedElement.setPosition(stopExcludingHiddenTokens, stopIncludingHiddenTokens);
    	}
    	
    	public java.lang.Object recoverFromMismatchedToken(org.antlr.runtime.IntStream input, int ttype, org.antlr.runtime.BitSet follow) throws org.antlr.runtime.RecognitionException {
    		if (!rememberExpectedElements) {
    			return super.recoverFromMismatchedToken(input, ttype, follow);
    		} else {
    			return null;
    		}
    	}
    	protected <ContainerType extends org.eclipse.emf.ecore.EObject, ReferenceType extends org.eclipse.emf.ecore.EObject> void registerContextDependentProxy(final org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<ContainerType, ReferenceType> factory, final ContainerType element, final org.eclipse.emf.ecore.EReference reference, final String id, final org.eclipse.emf.ecore.EObject proxy) {
    		postParseCommands.add(new org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>() {
    			public boolean execute(org.kermeta.language.emftexteditor.IKermetaTextResource resource) {
    				if (resource == null) {
    					// the resource can be null if the parser is used for
    					// code completion
    					return true;
    				}
    				resource.registerContextDependentProxy(factory, element, reference, id, proxy);
    				return true;
    			}
    		});
    	}
    	
    	// Translates errors thrown by the parser into human readable messages.
    	public void reportError(final org.antlr.runtime.RecognitionException e)  {
    		java.lang.String message = e.getMessage();
    		if (e instanceof org.antlr.runtime.MismatchedTokenException) {
    			org.antlr.runtime.MismatchedTokenException mte = (org.antlr.runtime.MismatchedTokenException) e;
    			java.lang.String tokenName = "<unknown>";
    			if (mte.expecting == Token.EOF) {
    				tokenName = "EOF";
    			} else {
    				tokenName = getTokenNames()[mte.expecting];
    				tokenName = org.kermeta.language.emftexteditor.util.KermetaStringUtil.formatTokenName(tokenName);
    			}
    			message = "Syntax error on token \"" + e.token.getText() + "\", \"" + tokenName + "\" expected";
    		} else if (e instanceof org.antlr.runtime.MismatchedTreeNodeException) {
    			org.antlr.runtime.MismatchedTreeNodeException mtne = (org.antlr.runtime.MismatchedTreeNodeException) e;
    			java.lang.String tokenName = "<unknown>";
    			if (mtne.expecting == Token.EOF) {
    				tokenName = "EOF";
    			} else {
    				tokenName = getTokenNames()[mtne.expecting];
    			}
    			message = "mismatched tree node: "+"xxx" +"; expecting " + tokenName;
    		} else if (e instanceof org.antlr.runtime.NoViableAltException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", check following tokens";
    		} else if (e instanceof org.antlr.runtime.EarlyExitException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime.MismatchedSetException) {
    			org.antlr.runtime.MismatchedSetException mse = (org.antlr.runtime.MismatchedSetException) e;
    			message = "mismatched token: " + e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime.MismatchedNotSetException) {
    			org.antlr.runtime.MismatchedNotSetException mse = (org.antlr.runtime.MismatchedNotSetException) e;
    			message = "mismatched token: " +  e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime.FailedPredicateException) {
    			org.antlr.runtime.FailedPredicateException fpe = (org.antlr.runtime.FailedPredicateException) e;
    			message = "rule " + fpe.ruleName + " failed predicate: {" +  fpe.predicateText+"}?";
    		}
    		// the resource may be null if the parse is used for code completion
    		final java.lang.String finalMessage = message;
    		if (e.token instanceof org.antlr.runtime.CommonToken) {
    			final org.antlr.runtime.CommonToken ct = (org.antlr.runtime.CommonToken) e.token;
    			addErrorToResource(finalMessage, ct.getCharPositionInLine(), ct.getLine(), ct.getStartIndex(), ct.getStopIndex());
    		} else {
    			addErrorToResource(finalMessage, e.token.getCharPositionInLine(), e.token.getLine(), 1, 5);
    		}
    	}
    	
    	// Translates errors thrown by the lexer into human readable messages.
    	public void reportLexicalError(final org.antlr.runtime.RecognitionException e)  {
    		java.lang.String message = "";
    		if (e instanceof org.antlr.runtime.MismatchedTokenException) {
    			org.antlr.runtime.MismatchedTokenException mte = (org.antlr.runtime.MismatchedTokenException) e;
    			message = "Syntax error on token \"" + ((char) e.c) + "\", \"" + (char) mte.expecting + "\" expected";
    		} else if (e instanceof org.antlr.runtime.NoViableAltException) {
    			message = "Syntax error on token \"" + ((char) e.c) + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime.EarlyExitException) {
    			org.antlr.runtime.EarlyExitException eee = (org.antlr.runtime.EarlyExitException) e;
    			message ="required (...)+ loop (decision=" + eee.decisionNumber + ") did not match anything; on line " + e.line + ":" + e.charPositionInLine + " char=" + ((char) e.c) + "'";
    		} else if (e instanceof org.antlr.runtime.MismatchedSetException) {
    			org.antlr.runtime.MismatchedSetException mse = (org.antlr.runtime.MismatchedSetException) e;
    			message ="mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime.MismatchedNotSetException) {
    			org.antlr.runtime.MismatchedNotSetException mse = (org.antlr.runtime.MismatchedNotSetException) e;
    			message ="mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime.MismatchedRangeException) {
    			org.antlr.runtime.MismatchedRangeException mre = (org.antlr.runtime.MismatchedRangeException) e;
    			message ="mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set '" + (char) mre.a + "'..'" + (char) mre.b + "'";
    		} else if (e instanceof org.antlr.runtime.FailedPredicateException) {
    			org.antlr.runtime.FailedPredicateException fpe = (org.antlr.runtime.FailedPredicateException) e;
    			message ="rule " + fpe.ruleName + " failed predicate: {" + fpe.predicateText + "}?";
    		}
    		addErrorToResource(message, e.index, e.line, lexerExceptionsPosition.get(lexerExceptions.indexOf(e)), lexerExceptionsPosition.get(lexerExceptions.indexOf(e)));
    	}
    	
    	public void setOptions(java.util.Map<?,?> options) {
    		this.options = options;
    	}
    	
    	public void terminate() {
    		terminateParsing = true;
    	}
    	
    	protected void completedElement(Object element) {
    		if (element instanceof org.eclipse.emf.ecore.EObject) {
    			this.tokenIndexOfLastCompleteElement = getTokenStream().index();
    			this.expectedElementsIndexOfLastCompleteElement = expectedElements.size() - 1;
    		}
    	}
    	
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_0 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("require");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_1 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("using");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_2 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("package");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_3 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("aspect");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_4 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("abstract");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_5 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("class");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_6 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("enumeration");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_7 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPrimitiveType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__NAME), "PRIMITIVE_TYPE");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_8 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__IS_ASPECT), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_9 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ModelType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_10 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__IS_ASPECT), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_11 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("TypeDefinition");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_12 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Model");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_13 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("attribute");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_14 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("reference");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_15 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("property");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_16 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getConstraint().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__STEREOTYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_17 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("operation");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_18 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getParameter().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_19 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_ORDERED), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_20 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_UNIQUE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_21 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("MultiplicityElement");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_22 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getTypeReference().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_REFERENCE__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_23 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPackage().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NESTING_PACKAGE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_24 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPackage().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_25 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("::");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_26 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_27 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_28 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_29 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_30 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_31 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("inherits");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_32 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_33 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_34 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_35 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_36 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_37 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProperty().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_38 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_39 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProperty().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_40 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProperty().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_41 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_42 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("getter");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_43 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("setter");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_44 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProperty().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_45 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("do");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_46 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("raise");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_47 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getBooleanLiteral().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.BOOLEAN_LITERAL__VALUE), "BOOLEAN");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_48 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getIntegerLiteral().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.INTEGER_LITERAL__VALUE), "INTEGER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_49 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getStringLiteral().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.STRING_LITERAL__VALUE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_50 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("if");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_51 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("from");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_52 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("var");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_53 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("result");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_54 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("super");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_55 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_56 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallVariable().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VARIABLE__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_57 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("extern");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_58 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("self");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_59 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Void");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_60 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("value");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_61 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("EmptyExpression");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_62 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("LambdaExpression");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_63 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getOperation().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_64 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_65 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_66 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_67 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_68 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getOperation().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_69 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_70 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getOperation().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_71 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_72 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("is");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_73 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getOperation().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_74 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("abstract");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_75 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_76 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getParameter().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_77 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getClass_().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS__TYPE_DEFINITION), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_78 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_79 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_80 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_81 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("variable");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_82 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("type");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_83 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_84 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_85 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_86 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_87 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_88 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("type");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_89 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("lower");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_90 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("upper");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_91 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_92 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_93 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_94 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_95 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_96 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_97 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("supertype");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_98 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_99 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_100 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_101 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_102 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_103 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_104 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("supertype");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_105 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("virtualType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_106 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_107 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_108 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_109 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_110 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_111 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_112 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("supertype");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_113 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("classDefinition");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_114 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("modelType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_115 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeParamBinding");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_116 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_117 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_118 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_119 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_120 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_121 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("type");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_122 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_123 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_124 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_125 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_126 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_127 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("left");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_128 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("right");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_129 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_130 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_131 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_132 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_133 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("staticType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_134 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_135 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_136 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_137 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_138 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("staticType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_139 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("parameters");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_140 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("body");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_141 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_142 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getEnumeration().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_143 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_144 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getEnumerationLiteral().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION_LITERAL__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_145 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(";");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_146 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_147 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(";");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_148 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getConstraint().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__LANGUAGE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_149 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getUnresolvedType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.UNRESOLVED_TYPE__TYPE_IDENTIFIER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_150 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Void");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_151 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Object");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_152 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_153 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_154 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_155 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_156 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_157 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObject().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_158 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_159 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_160 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_161 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_162 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_163 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_164 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_165 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModel().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_166 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_167 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_168 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_169 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_170 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_171 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_172 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("includedTypeDefinition");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_173 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_174 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_175 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_176 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_177 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_178 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TYPE_CONTAINER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_179 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_180 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_181 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_182 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__INCLUDED_TYPE_DEFINITION), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_183 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("TypeVariableBinding");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_184 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_185 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_186 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeVariableBinding().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_187 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_188 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_189 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ObjectTypeVariable");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_190 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ModelTypeVariable");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_191 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("VirtualType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_192 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ProductType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_193 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("FunctionType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_194 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_195 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeVariableBinding().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__VARIABLE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_196 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_197 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeVariableBinding().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_198 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_199 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_200 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_201 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_202 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_203 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_204 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_205 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_206 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_207 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_208 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__LOWER), "INTEGER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_209 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_210 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__UPPER), "INTEGER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_211 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_212 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_213 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_214 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_215 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_216 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_217 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_218 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_219 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_220 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_221 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_222 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_223 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_224 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_225 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("value");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_226 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("object");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_227 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_228 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_229 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTag().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_230 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_231 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_232 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTag().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_233 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_234 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTag().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__VALUE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_235 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_236 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTag().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__OBJECT), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_237 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_238 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_239 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_240 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("type");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_241 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_242 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_243 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_244 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObjectTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_245 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_246 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_247 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_248 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObjectTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TYPE_CONTAINER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_249 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_250 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObjectTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_251 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_252 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObjectTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__SUPERTYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_253 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_254 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_255 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_256 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_257 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_258 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_259 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TYPE_CONTAINER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_260 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_261 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_262 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_263 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__SUPERTYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_264 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_265 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_266 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_267 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_268 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_269 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_270 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_271 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_CONTAINER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_272 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_273 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_274 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_275 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__SUPERTYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_276 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_277 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CLASS_DEFINITION), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_278 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_279 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__MODEL_TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_280 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_281 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_282 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_283 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProductType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_284 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_285 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_286 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_287 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProductType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE_CONTAINER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_288 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_289 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProductType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_290 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_291 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_292 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getFunctionType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_293 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_294 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_295 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_296 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getFunctionType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TYPE_CONTAINER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_297 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_298 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getFunctionType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__LEFT), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_299 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_300 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getFunctionType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__RIGHT), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_301 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("rescue");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_302 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("end");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_303 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("until");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_304 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("else");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_305 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("end");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_306 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_307 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_308 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_309 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_310 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_311 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_312 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_313 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getRescue().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RESCUE__EXCEPTION_NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_314 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_315 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_316 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("init");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_317 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("then");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_318 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("loop");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_319 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getVariableDecl().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__IDENTIFIER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_320 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_321 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":=");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_322 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getAssignment().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__IS_CAST), "CASTED");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_323 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_324 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("=");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_325 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_326 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_327 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_328 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_329 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("==");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_330 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("+");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_331 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("-");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_332 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("/");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_333 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("*");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_334 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_335 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_336 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_337 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_338 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_339 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_340 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_341 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("+");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_342 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("-");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_343 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("/");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_344 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("*");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_345 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_346 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_347 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_348 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_349 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("==");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_350 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("+");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_351 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("-");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_352 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("/");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_353 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("*");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_354 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_355 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_356 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_357 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_358 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_359 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_360 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_361 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getJavaStaticCall().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JCLASS), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_362 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_363 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getJavaStaticCall().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JMETHOD), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_364 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_365 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_366 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_367 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getEmptyExpression().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_368 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_369 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_370 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_371 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getEmptyExpression().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__STATIC_TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_372 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_373 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_374 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getLambdaExpression().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_375 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_376 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_377 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_378 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getLambdaExpression().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__STATIC_TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_379 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_380 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("LambdaParameter");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_381 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_382 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_383 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_384 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getLambdaParameter().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_385 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_386 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_387 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getLambdaParameter().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_388 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	
    	public static void wire0() {
    		TERMINAL_1.addFollower(TERMINAL_1);
    		TERMINAL_1.addFollower(TERMINAL_2);
    		TERMINAL_1.addFollower(TERMINAL_3);
    		TERMINAL_1.addFollower(TERMINAL_4);
    		TERMINAL_1.addFollower(TERMINAL_5);
    		TERMINAL_1.addFollower(TERMINAL_6);
    		TERMINAL_1.addFollower(TERMINAL_7);
    		TERMINAL_1.addFollower(TERMINAL_8);
    		TERMINAL_1.addFollower(TERMINAL_9);
    		TERMINAL_1.addFollower(TERMINAL_10);
    		TERMINAL_1.addFollower(TERMINAL_11);
    		TERMINAL_0.addFollower(TERMINAL_0);
    		TERMINAL_0.addFollower(TERMINAL_1);
    		TERMINAL_0.addFollower(TERMINAL_2);
    		TERMINAL_0.addFollower(TERMINAL_3);
    		TERMINAL_0.addFollower(TERMINAL_4);
    		TERMINAL_0.addFollower(TERMINAL_5);
    		TERMINAL_0.addFollower(TERMINAL_6);
    		TERMINAL_0.addFollower(TERMINAL_7);
    		TERMINAL_0.addFollower(TERMINAL_8);
    		TERMINAL_0.addFollower(TERMINAL_9);
    		TERMINAL_0.addFollower(TERMINAL_10);
    		TERMINAL_0.addFollower(TERMINAL_11);
    		TERMINAL_2.addFollower(TERMINAL_23);
    		TERMINAL_2.addFollower(TERMINAL_24);
    		TERMINAL_23.addFollower(TERMINAL_25);
    		TERMINAL_25.addFollower(TERMINAL_23);
    		TERMINAL_25.addFollower(TERMINAL_24);
    		TERMINAL_24.addFollower(TERMINAL_3);
    		TERMINAL_24.addFollower(TERMINAL_4);
    		TERMINAL_24.addFollower(TERMINAL_5);
    		TERMINAL_24.addFollower(TERMINAL_6);
    		TERMINAL_24.addFollower(TERMINAL_7);
    		TERMINAL_24.addFollower(TERMINAL_8);
    		TERMINAL_24.addFollower(TERMINAL_9);
    		TERMINAL_24.addFollower(TERMINAL_10);
    		TERMINAL_24.addFollower(TERMINAL_11);
    		TERMINAL_24.addFollower(TERMINAL_26);
    		TERMINAL_24.addFollower(TERMINAL_27);
    		TERMINAL_24.addFollower(TERMINAL_2);
    		TERMINAL_24.addFollower(TERMINAL_28);
    		TERMINAL_26.addFollower(TERMINAL_3);
    		TERMINAL_26.addFollower(TERMINAL_4);
    		TERMINAL_26.addFollower(TERMINAL_5);
    		TERMINAL_26.addFollower(TERMINAL_6);
    		TERMINAL_26.addFollower(TERMINAL_7);
    		TERMINAL_26.addFollower(TERMINAL_8);
    		TERMINAL_26.addFollower(TERMINAL_9);
    		TERMINAL_26.addFollower(TERMINAL_10);
    		TERMINAL_26.addFollower(TERMINAL_11);
    		TERMINAL_29.addFollower(TERMINAL_2);
    		TERMINAL_29.addFollower(TERMINAL_3);
    		TERMINAL_29.addFollower(TERMINAL_4);
    		TERMINAL_29.addFollower(TERMINAL_5);
    		TERMINAL_29.addFollower(TERMINAL_6);
    		TERMINAL_29.addFollower(TERMINAL_7);
    		TERMINAL_29.addFollower(TERMINAL_8);
    		TERMINAL_29.addFollower(TERMINAL_9);
    		TERMINAL_29.addFollower(TERMINAL_10);
    		TERMINAL_29.addFollower(TERMINAL_11);
    		TERMINAL_29.addFollower(TERMINAL_28);
    		TERMINAL_27.addFollower(TERMINAL_2);
    		TERMINAL_27.addFollower(TERMINAL_3);
    		TERMINAL_27.addFollower(TERMINAL_4);
    		TERMINAL_27.addFollower(TERMINAL_5);
    		TERMINAL_27.addFollower(TERMINAL_6);
    		TERMINAL_27.addFollower(TERMINAL_7);
    		TERMINAL_27.addFollower(TERMINAL_8);
    		TERMINAL_27.addFollower(TERMINAL_9);
    		TERMINAL_27.addFollower(TERMINAL_10);
    		TERMINAL_27.addFollower(TERMINAL_11);
    		TERMINAL_27.addFollower(TERMINAL_28);
    		TERMINAL_28.addFollower(TERMINAL_2);
    		TERMINAL_28.addFollower(TERMINAL_3);
    		TERMINAL_28.addFollower(TERMINAL_4);
    		TERMINAL_28.addFollower(TERMINAL_5);
    		TERMINAL_28.addFollower(TERMINAL_6);
    		TERMINAL_28.addFollower(TERMINAL_7);
    		TERMINAL_28.addFollower(TERMINAL_8);
    		TERMINAL_28.addFollower(TERMINAL_9);
    		TERMINAL_28.addFollower(TERMINAL_10);
    		TERMINAL_28.addFollower(TERMINAL_11);
    		TERMINAL_28.addFollower(TERMINAL_28);
    		TERMINAL_3.addFollower(TERMINAL_4);
    		TERMINAL_3.addFollower(TERMINAL_5);
    		TERMINAL_4.addFollower(TERMINAL_5);
    		TERMINAL_5.addFollower(TERMINAL_30);
    		TERMINAL_30.addFollower(TERMINAL_31);
    		TERMINAL_30.addFollower(TERMINAL_32);
    		TERMINAL_31.addFollower(TERMINAL_33);
    		TERMINAL_33.addFollower(TERMINAL_34);
    		TERMINAL_33.addFollower(TERMINAL_32);
    		TERMINAL_34.addFollower(TERMINAL_35);
    		TERMINAL_35.addFollower(TERMINAL_34);
    		TERMINAL_35.addFollower(TERMINAL_32);
    		TERMINAL_32.addFollower(TERMINAL_16);
    		TERMINAL_32.addFollower(TERMINAL_13);
    		TERMINAL_32.addFollower(TERMINAL_14);
    		TERMINAL_32.addFollower(TERMINAL_15);
    		TERMINAL_32.addFollower(TERMINAL_17);
    		TERMINAL_32.addFollower(TERMINAL_36);
    		TERMINAL_36.addFollower(TERMINAL_3);
    		TERMINAL_36.addFollower(TERMINAL_4);
    		TERMINAL_36.addFollower(TERMINAL_5);
    		TERMINAL_36.addFollower(TERMINAL_6);
    		TERMINAL_36.addFollower(TERMINAL_7);
    		TERMINAL_36.addFollower(TERMINAL_8);
    		TERMINAL_36.addFollower(TERMINAL_9);
    		TERMINAL_36.addFollower(TERMINAL_10);
    		TERMINAL_36.addFollower(TERMINAL_11);
    		TERMINAL_36.addFollower(TERMINAL_2);
    		TERMINAL_13.addFollower(TERMINAL_37);
    		TERMINAL_14.addFollower(TERMINAL_37);
    		TERMINAL_37.addFollower(TERMINAL_38);
    		TERMINAL_37.addFollower(TERMINAL_13);
    		TERMINAL_37.addFollower(TERMINAL_14);
    		TERMINAL_37.addFollower(TERMINAL_15);
    		TERMINAL_37.addFollower(TERMINAL_16);
    		TERMINAL_37.addFollower(TERMINAL_17);
    		TERMINAL_37.addFollower(TERMINAL_36);
    		TERMINAL_38.addFollower(TERMINAL_39);
    		TERMINAL_39.addFollower(TERMINAL_13);
    		TERMINAL_39.addFollower(TERMINAL_14);
    		TERMINAL_39.addFollower(TERMINAL_15);
    		TERMINAL_39.addFollower(TERMINAL_16);
    		TERMINAL_39.addFollower(TERMINAL_17);
    		TERMINAL_39.addFollower(TERMINAL_36);
    		TERMINAL_15.addFollower(TERMINAL_40);
    		TERMINAL_40.addFollower(TERMINAL_41);
    		TERMINAL_40.addFollower(TERMINAL_42);
    		TERMINAL_40.addFollower(TERMINAL_43);
    		TERMINAL_40.addFollower(TERMINAL_13);
    		TERMINAL_40.addFollower(TERMINAL_14);
    		TERMINAL_40.addFollower(TERMINAL_15);
    		TERMINAL_40.addFollower(TERMINAL_16);
    		TERMINAL_40.addFollower(TERMINAL_17);
    		TERMINAL_40.addFollower(TERMINAL_36);
    		TERMINAL_41.addFollower(TERMINAL_44);
    		TERMINAL_44.addFollower(TERMINAL_42);
    		TERMINAL_44.addFollower(TERMINAL_43);
    		TERMINAL_44.addFollower(TERMINAL_13);
    		TERMINAL_44.addFollower(TERMINAL_14);
    		TERMINAL_44.addFollower(TERMINAL_15);
    		TERMINAL_44.addFollower(TERMINAL_16);
    		TERMINAL_44.addFollower(TERMINAL_17);
    		TERMINAL_44.addFollower(TERMINAL_36);
    		TERMINAL_42.addFollower(TERMINAL_45);
    		TERMINAL_42.addFollower(TERMINAL_46);
    		TERMINAL_42.addFollower(TERMINAL_47);
    		TERMINAL_42.addFollower(TERMINAL_48);
    		TERMINAL_42.addFollower(TERMINAL_49);
    		TERMINAL_42.addFollower(TERMINAL_50);
    		TERMINAL_42.addFollower(TERMINAL_51);
    		TERMINAL_42.addFollower(TERMINAL_52);
    		TERMINAL_42.addFollower(TERMINAL_22);
    		TERMINAL_42.addFollower(TERMINAL_53);
    		TERMINAL_42.addFollower(TERMINAL_54);
    		TERMINAL_42.addFollower(TERMINAL_55);
    		TERMINAL_42.addFollower(TERMINAL_56);
    		TERMINAL_42.addFollower(TERMINAL_57);
    		TERMINAL_42.addFollower(TERMINAL_58);
    		TERMINAL_42.addFollower(TERMINAL_59);
    		TERMINAL_42.addFollower(TERMINAL_60);
    		TERMINAL_42.addFollower(TERMINAL_61);
    		TERMINAL_42.addFollower(TERMINAL_62);
    		TERMINAL_43.addFollower(TERMINAL_45);
    		TERMINAL_43.addFollower(TERMINAL_46);
    		TERMINAL_43.addFollower(TERMINAL_47);
    		TERMINAL_43.addFollower(TERMINAL_48);
    		TERMINAL_43.addFollower(TERMINAL_49);
    		TERMINAL_43.addFollower(TERMINAL_50);
    		TERMINAL_43.addFollower(TERMINAL_51);
    		TERMINAL_43.addFollower(TERMINAL_52);
    		TERMINAL_43.addFollower(TERMINAL_22);
    		TERMINAL_43.addFollower(TERMINAL_53);
    		TERMINAL_43.addFollower(TERMINAL_54);
    		TERMINAL_43.addFollower(TERMINAL_55);
    		TERMINAL_43.addFollower(TERMINAL_56);
    		TERMINAL_43.addFollower(TERMINAL_57);
    		TERMINAL_43.addFollower(TERMINAL_58);
    		TERMINAL_43.addFollower(TERMINAL_59);
    		TERMINAL_43.addFollower(TERMINAL_60);
    		TERMINAL_43.addFollower(TERMINAL_61);
    		TERMINAL_43.addFollower(TERMINAL_62);
    		TERMINAL_17.addFollower(TERMINAL_63);
    		TERMINAL_63.addFollower(TERMINAL_64);
    		TERMINAL_64.addFollower(TERMINAL_18);
    		TERMINAL_64.addFollower(TERMINAL_65);
    		TERMINAL_66.addFollower(TERMINAL_68);
    		TERMINAL_68.addFollower(TERMINAL_67);
    		TERMINAL_68.addFollower(TERMINAL_65);
    		TERMINAL_67.addFollower(TERMINAL_18);
    		TERMINAL_69.addFollower(TERMINAL_70);
    		TERMINAL_70.addFollower(TERMINAL_67);
    		TERMINAL_70.addFollower(TERMINAL_65);
    		TERMINAL_65.addFollower(TERMINAL_71);
    		TERMINAL_65.addFollower(TERMINAL_72);
    		TERMINAL_71.addFollower(TERMINAL_73);
    		TERMINAL_73.addFollower(TERMINAL_72);
    		TERMINAL_72.addFollower(TERMINAL_45);
    		TERMINAL_72.addFollower(TERMINAL_74);
    		TERMINAL_74.addFollower(TERMINAL_16);
    		TERMINAL_74.addFollower(TERMINAL_17);
    		TERMINAL_74.addFollower(TERMINAL_36);
    		TERMINAL_18.addFollower(TERMINAL_75);
    		TERMINAL_75.addFollower(TERMINAL_76);
    		TERMINAL_76.addFollower(TERMINAL_66);
    		TERMINAL_76.addFollower(TERMINAL_67);
    		TERMINAL_76.addFollower(TERMINAL_65);
    		TERMINAL_77.addFollower(TERMINAL_78);
    		TERMINAL_77.addFollower(TERMINAL_79);
    		TERMINAL_77.addFollower(TERMINAL_80);
    		TERMINAL_77.addFollower(TERMINAL_81);
    		TERMINAL_77.addFollower(TERMINAL_82);
    		TERMINAL_77.addFollower(TERMINAL_83);
    		TERMINAL_77.addFollower(TERMINAL_84);
    		TERMINAL_77.addFollower(TERMINAL_85);
    		TERMINAL_77.addFollower(TERMINAL_86);
    		TERMINAL_77.addFollower(TERMINAL_87);
    		TERMINAL_77.addFollower(TERMINAL_88);
    		TERMINAL_77.addFollower(TERMINAL_89);
    		TERMINAL_77.addFollower(TERMINAL_90);
    		TERMINAL_77.addFollower(TERMINAL_91);
    		TERMINAL_77.addFollower(TERMINAL_92);
    		TERMINAL_77.addFollower(TERMINAL_93);
    		TERMINAL_77.addFollower(TERMINAL_94);
    		TERMINAL_77.addFollower(TERMINAL_95);
    		TERMINAL_77.addFollower(TERMINAL_96);
    		TERMINAL_77.addFollower(TERMINAL_97);
    		TERMINAL_77.addFollower(TERMINAL_98);
    		TERMINAL_77.addFollower(TERMINAL_99);
    		TERMINAL_77.addFollower(TERMINAL_100);
    		TERMINAL_77.addFollower(TERMINAL_101);
    		TERMINAL_77.addFollower(TERMINAL_102);
    		TERMINAL_77.addFollower(TERMINAL_103);
    		TERMINAL_77.addFollower(TERMINAL_104);
    		TERMINAL_77.addFollower(TERMINAL_105);
    		TERMINAL_77.addFollower(TERMINAL_106);
    		TERMINAL_77.addFollower(TERMINAL_107);
    		TERMINAL_77.addFollower(TERMINAL_108);
    		TERMINAL_77.addFollower(TERMINAL_109);
    		TERMINAL_77.addFollower(TERMINAL_110);
    		TERMINAL_77.addFollower(TERMINAL_111);
    		TERMINAL_77.addFollower(TERMINAL_112);
    		TERMINAL_77.addFollower(TERMINAL_113);
    		TERMINAL_77.addFollower(TERMINAL_114);
    		TERMINAL_77.addFollower(TERMINAL_115);
    		TERMINAL_77.addFollower(TERMINAL_116);
    		TERMINAL_77.addFollower(TERMINAL_117);
    		TERMINAL_77.addFollower(TERMINAL_118);
    		TERMINAL_77.addFollower(TERMINAL_119);
    		TERMINAL_77.addFollower(TERMINAL_120);
    		TERMINAL_77.addFollower(TERMINAL_121);
    		TERMINAL_77.addFollower(TERMINAL_122);
    		TERMINAL_77.addFollower(TERMINAL_123);
    		TERMINAL_77.addFollower(TERMINAL_124);
    		TERMINAL_77.addFollower(TERMINAL_125);
    		TERMINAL_77.addFollower(TERMINAL_126);
    		TERMINAL_77.addFollower(TERMINAL_127);
    		TERMINAL_77.addFollower(TERMINAL_128);
    		TERMINAL_77.addFollower(TERMINAL_129);
    		TERMINAL_77.addFollower(TERMINAL_130);
    		TERMINAL_77.addFollower(TERMINAL_131);
    		TERMINAL_77.addFollower(TERMINAL_132);
    		TERMINAL_77.addFollower(TERMINAL_133);
    		TERMINAL_77.addFollower(TERMINAL_134);
    		TERMINAL_77.addFollower(TERMINAL_135);
    		TERMINAL_77.addFollower(TERMINAL_136);
    		TERMINAL_77.addFollower(TERMINAL_137);
    		TERMINAL_77.addFollower(TERMINAL_138);
    		TERMINAL_77.addFollower(TERMINAL_139);
    		TERMINAL_77.addFollower(TERMINAL_140);
    		TERMINAL_77.addFollower(TERMINAL_141);
    		TERMINAL_6.addFollower(TERMINAL_142);
    		TERMINAL_142.addFollower(TERMINAL_143);
    		TERMINAL_143.addFollower(TERMINAL_144);
    		TERMINAL_145.addFollower(TERMINAL_144);
    		TERMINAL_145.addFollower(TERMINAL_146);
    		TERMINAL_147.addFollower(TERMINAL_144);
    		TERMINAL_147.addFollower(TERMINAL_146);
    		TERMINAL_146.addFollower(TERMINAL_3);
    		TERMINAL_146.addFollower(TERMINAL_4);
    		TERMINAL_146.addFollower(TERMINAL_5);
    		TERMINAL_146.addFollower(TERMINAL_6);
    		TERMINAL_146.addFollower(TERMINAL_7);
    		TERMINAL_146.addFollower(TERMINAL_8);
    		TERMINAL_146.addFollower(TERMINAL_9);
    		TERMINAL_146.addFollower(TERMINAL_10);
    		TERMINAL_146.addFollower(TERMINAL_11);
    		TERMINAL_146.addFollower(TERMINAL_2);
    		TERMINAL_146.addFollower(TERMINAL_78);
    		TERMINAL_146.addFollower(TERMINAL_79);
    		TERMINAL_146.addFollower(TERMINAL_80);
    		TERMINAL_146.addFollower(TERMINAL_81);
    		TERMINAL_146.addFollower(TERMINAL_82);
    		TERMINAL_146.addFollower(TERMINAL_83);
    		TERMINAL_146.addFollower(TERMINAL_84);
    		TERMINAL_146.addFollower(TERMINAL_85);
    		TERMINAL_146.addFollower(TERMINAL_86);
    		TERMINAL_146.addFollower(TERMINAL_87);
    		TERMINAL_146.addFollower(TERMINAL_88);
    		TERMINAL_146.addFollower(TERMINAL_89);
    		TERMINAL_146.addFollower(TERMINAL_90);
    		TERMINAL_146.addFollower(TERMINAL_91);
    		TERMINAL_146.addFollower(TERMINAL_92);
    		TERMINAL_146.addFollower(TERMINAL_93);
    		TERMINAL_146.addFollower(TERMINAL_94);
    		TERMINAL_146.addFollower(TERMINAL_95);
    		TERMINAL_146.addFollower(TERMINAL_96);
    		TERMINAL_146.addFollower(TERMINAL_97);
    		TERMINAL_146.addFollower(TERMINAL_98);
    		TERMINAL_146.addFollower(TERMINAL_99);
    		TERMINAL_146.addFollower(TERMINAL_100);
    		TERMINAL_146.addFollower(TERMINAL_101);
    		TERMINAL_146.addFollower(TERMINAL_102);
    		TERMINAL_146.addFollower(TERMINAL_103);
    		TERMINAL_146.addFollower(TERMINAL_104);
    		TERMINAL_146.addFollower(TERMINAL_105);
    		TERMINAL_146.addFollower(TERMINAL_106);
    		TERMINAL_146.addFollower(TERMINAL_107);
    		TERMINAL_146.addFollower(TERMINAL_108);
    		TERMINAL_146.addFollower(TERMINAL_109);
    		TERMINAL_146.addFollower(TERMINAL_110);
    		TERMINAL_146.addFollower(TERMINAL_111);
    		TERMINAL_146.addFollower(TERMINAL_112);
    		TERMINAL_146.addFollower(TERMINAL_113);
    		TERMINAL_146.addFollower(TERMINAL_114);
    		TERMINAL_146.addFollower(TERMINAL_115);
    		TERMINAL_146.addFollower(TERMINAL_116);
    		TERMINAL_146.addFollower(TERMINAL_117);
    		TERMINAL_146.addFollower(TERMINAL_118);
    		TERMINAL_146.addFollower(TERMINAL_119);
    		TERMINAL_146.addFollower(TERMINAL_120);
    		TERMINAL_146.addFollower(TERMINAL_121);
    		TERMINAL_146.addFollower(TERMINAL_122);
    		TERMINAL_146.addFollower(TERMINAL_123);
    		TERMINAL_146.addFollower(TERMINAL_124);
    		TERMINAL_146.addFollower(TERMINAL_125);
    		TERMINAL_146.addFollower(TERMINAL_126);
    		TERMINAL_146.addFollower(TERMINAL_127);
    		TERMINAL_146.addFollower(TERMINAL_128);
    		TERMINAL_146.addFollower(TERMINAL_129);
    		TERMINAL_146.addFollower(TERMINAL_130);
    		TERMINAL_146.addFollower(TERMINAL_131);
    		TERMINAL_146.addFollower(TERMINAL_132);
    		TERMINAL_146.addFollower(TERMINAL_133);
    		TERMINAL_146.addFollower(TERMINAL_134);
    		TERMINAL_146.addFollower(TERMINAL_135);
    		TERMINAL_146.addFollower(TERMINAL_136);
    		TERMINAL_146.addFollower(TERMINAL_137);
    		TERMINAL_146.addFollower(TERMINAL_138);
    		TERMINAL_146.addFollower(TERMINAL_139);
    		TERMINAL_146.addFollower(TERMINAL_140);
    		TERMINAL_146.addFollower(TERMINAL_141);
    		TERMINAL_144.addFollower(TERMINAL_145);
    		TERMINAL_16.addFollower(TERMINAL_148);
    		TERMINAL_148.addFollower(TERMINAL_16);
    		TERMINAL_148.addFollower(TERMINAL_13);
    		TERMINAL_148.addFollower(TERMINAL_14);
    		TERMINAL_148.addFollower(TERMINAL_15);
    		TERMINAL_148.addFollower(TERMINAL_17);
    		TERMINAL_148.addFollower(TERMINAL_36);
    		TERMINAL_7.addFollower(TERMINAL_3);
    		TERMINAL_7.addFollower(TERMINAL_4);
    		TERMINAL_7.addFollower(TERMINAL_5);
    		TERMINAL_7.addFollower(TERMINAL_6);
    		TERMINAL_7.addFollower(TERMINAL_7);
    		TERMINAL_7.addFollower(TERMINAL_8);
    		TERMINAL_7.addFollower(TERMINAL_9);
    		TERMINAL_7.addFollower(TERMINAL_10);
    		TERMINAL_7.addFollower(TERMINAL_11);
    		TERMINAL_7.addFollower(TERMINAL_2);
    		TERMINAL_7.addFollower(TERMINAL_78);
    		TERMINAL_7.addFollower(TERMINAL_79);
    		TERMINAL_7.addFollower(TERMINAL_80);
    		TERMINAL_7.addFollower(TERMINAL_81);
    		TERMINAL_7.addFollower(TERMINAL_82);
    		TERMINAL_7.addFollower(TERMINAL_83);
    		TERMINAL_7.addFollower(TERMINAL_84);
    		TERMINAL_7.addFollower(TERMINAL_85);
    		TERMINAL_7.addFollower(TERMINAL_86);
    		TERMINAL_7.addFollower(TERMINAL_87);
    		TERMINAL_7.addFollower(TERMINAL_88);
    		TERMINAL_7.addFollower(TERMINAL_89);
    		TERMINAL_7.addFollower(TERMINAL_90);
    		TERMINAL_7.addFollower(TERMINAL_91);
    		TERMINAL_7.addFollower(TERMINAL_92);
    		TERMINAL_7.addFollower(TERMINAL_93);
    		TERMINAL_7.addFollower(TERMINAL_94);
    		TERMINAL_7.addFollower(TERMINAL_95);
    		TERMINAL_7.addFollower(TERMINAL_96);
    		TERMINAL_7.addFollower(TERMINAL_97);
    		TERMINAL_7.addFollower(TERMINAL_98);
    		TERMINAL_7.addFollower(TERMINAL_99);
    		TERMINAL_7.addFollower(TERMINAL_100);
    		TERMINAL_7.addFollower(TERMINAL_101);
    		TERMINAL_7.addFollower(TERMINAL_102);
    		TERMINAL_7.addFollower(TERMINAL_103);
    		TERMINAL_7.addFollower(TERMINAL_104);
    		TERMINAL_7.addFollower(TERMINAL_105);
    		TERMINAL_7.addFollower(TERMINAL_106);
    		TERMINAL_7.addFollower(TERMINAL_107);
    		TERMINAL_7.addFollower(TERMINAL_108);
    		TERMINAL_7.addFollower(TERMINAL_109);
    		TERMINAL_7.addFollower(TERMINAL_110);
    		TERMINAL_7.addFollower(TERMINAL_111);
    		TERMINAL_7.addFollower(TERMINAL_112);
    		TERMINAL_7.addFollower(TERMINAL_113);
    		TERMINAL_7.addFollower(TERMINAL_114);
    		TERMINAL_7.addFollower(TERMINAL_115);
    		TERMINAL_7.addFollower(TERMINAL_116);
    		TERMINAL_7.addFollower(TERMINAL_117);
    		TERMINAL_7.addFollower(TERMINAL_118);
    		TERMINAL_7.addFollower(TERMINAL_119);
    		TERMINAL_7.addFollower(TERMINAL_120);
    		TERMINAL_7.addFollower(TERMINAL_121);
    		TERMINAL_7.addFollower(TERMINAL_122);
    		TERMINAL_7.addFollower(TERMINAL_123);
    		TERMINAL_7.addFollower(TERMINAL_124);
    		TERMINAL_7.addFollower(TERMINAL_125);
    		TERMINAL_7.addFollower(TERMINAL_126);
    		TERMINAL_7.addFollower(TERMINAL_127);
    		TERMINAL_7.addFollower(TERMINAL_128);
    		TERMINAL_7.addFollower(TERMINAL_129);
    		TERMINAL_7.addFollower(TERMINAL_130);
    		TERMINAL_7.addFollower(TERMINAL_131);
    		TERMINAL_7.addFollower(TERMINAL_132);
    		TERMINAL_7.addFollower(TERMINAL_133);
    		TERMINAL_7.addFollower(TERMINAL_134);
    		TERMINAL_7.addFollower(TERMINAL_135);
    		TERMINAL_7.addFollower(TERMINAL_136);
    		TERMINAL_7.addFollower(TERMINAL_137);
    		TERMINAL_7.addFollower(TERMINAL_138);
    		TERMINAL_7.addFollower(TERMINAL_139);
    		TERMINAL_7.addFollower(TERMINAL_140);
    		TERMINAL_7.addFollower(TERMINAL_141);
    		TERMINAL_149.addFollower(TERMINAL_78);
    		TERMINAL_149.addFollower(TERMINAL_79);
    		TERMINAL_149.addFollower(TERMINAL_80);
    		TERMINAL_149.addFollower(TERMINAL_81);
    		TERMINAL_149.addFollower(TERMINAL_82);
    		TERMINAL_149.addFollower(TERMINAL_83);
    		TERMINAL_149.addFollower(TERMINAL_84);
    		TERMINAL_149.addFollower(TERMINAL_85);
    		TERMINAL_149.addFollower(TERMINAL_86);
    		TERMINAL_149.addFollower(TERMINAL_87);
    		TERMINAL_149.addFollower(TERMINAL_88);
    		TERMINAL_149.addFollower(TERMINAL_89);
    		TERMINAL_149.addFollower(TERMINAL_90);
    		TERMINAL_149.addFollower(TERMINAL_91);
    		TERMINAL_149.addFollower(TERMINAL_92);
    		TERMINAL_149.addFollower(TERMINAL_93);
    		TERMINAL_149.addFollower(TERMINAL_94);
    		TERMINAL_149.addFollower(TERMINAL_95);
    		TERMINAL_149.addFollower(TERMINAL_96);
    		TERMINAL_149.addFollower(TERMINAL_97);
    		TERMINAL_149.addFollower(TERMINAL_98);
    		TERMINAL_149.addFollower(TERMINAL_99);
    		TERMINAL_149.addFollower(TERMINAL_100);
    		TERMINAL_149.addFollower(TERMINAL_101);
    		TERMINAL_149.addFollower(TERMINAL_102);
    		TERMINAL_149.addFollower(TERMINAL_103);
    		TERMINAL_149.addFollower(TERMINAL_104);
    		TERMINAL_149.addFollower(TERMINAL_105);
    		TERMINAL_149.addFollower(TERMINAL_106);
    		TERMINAL_149.addFollower(TERMINAL_107);
    		TERMINAL_149.addFollower(TERMINAL_108);
    		TERMINAL_149.addFollower(TERMINAL_109);
    		TERMINAL_149.addFollower(TERMINAL_110);
    		TERMINAL_149.addFollower(TERMINAL_111);
    		TERMINAL_149.addFollower(TERMINAL_112);
    		TERMINAL_149.addFollower(TERMINAL_113);
    		TERMINAL_149.addFollower(TERMINAL_114);
    		TERMINAL_149.addFollower(TERMINAL_115);
    		TERMINAL_149.addFollower(TERMINAL_116);
    		TERMINAL_149.addFollower(TERMINAL_117);
    		TERMINAL_149.addFollower(TERMINAL_118);
    		TERMINAL_149.addFollower(TERMINAL_119);
    		TERMINAL_149.addFollower(TERMINAL_120);
    		TERMINAL_149.addFollower(TERMINAL_121);
    		TERMINAL_149.addFollower(TERMINAL_122);
    		TERMINAL_149.addFollower(TERMINAL_123);
    		TERMINAL_149.addFollower(TERMINAL_124);
    		TERMINAL_149.addFollower(TERMINAL_125);
    		TERMINAL_149.addFollower(TERMINAL_126);
    		TERMINAL_149.addFollower(TERMINAL_127);
    		TERMINAL_149.addFollower(TERMINAL_128);
    		TERMINAL_149.addFollower(TERMINAL_129);
    		TERMINAL_149.addFollower(TERMINAL_130);
    		TERMINAL_149.addFollower(TERMINAL_131);
    		TERMINAL_149.addFollower(TERMINAL_132);
    		TERMINAL_149.addFollower(TERMINAL_133);
    		TERMINAL_149.addFollower(TERMINAL_134);
    		TERMINAL_149.addFollower(TERMINAL_135);
    		TERMINAL_149.addFollower(TERMINAL_136);
    		TERMINAL_149.addFollower(TERMINAL_137);
    		TERMINAL_149.addFollower(TERMINAL_138);
    		TERMINAL_149.addFollower(TERMINAL_139);
    		TERMINAL_149.addFollower(TERMINAL_140);
    		TERMINAL_149.addFollower(TERMINAL_141);
    		TERMINAL_150.addFollower(TERMINAL_78);
    		TERMINAL_150.addFollower(TERMINAL_79);
    		TERMINAL_150.addFollower(TERMINAL_80);
    		TERMINAL_150.addFollower(TERMINAL_81);
    		TERMINAL_150.addFollower(TERMINAL_82);
    		TERMINAL_150.addFollower(TERMINAL_83);
    		TERMINAL_150.addFollower(TERMINAL_84);
    		TERMINAL_150.addFollower(TERMINAL_85);
    		TERMINAL_150.addFollower(TERMINAL_86);
    		TERMINAL_150.addFollower(TERMINAL_87);
    		TERMINAL_150.addFollower(TERMINAL_88);
    		TERMINAL_150.addFollower(TERMINAL_89);
    		TERMINAL_150.addFollower(TERMINAL_90);
    		TERMINAL_150.addFollower(TERMINAL_91);
    		TERMINAL_150.addFollower(TERMINAL_92);
    		TERMINAL_150.addFollower(TERMINAL_93);
    		TERMINAL_150.addFollower(TERMINAL_94);
    		TERMINAL_150.addFollower(TERMINAL_95);
    		TERMINAL_150.addFollower(TERMINAL_96);
    		TERMINAL_150.addFollower(TERMINAL_97);
    		TERMINAL_150.addFollower(TERMINAL_98);
    		TERMINAL_150.addFollower(TERMINAL_99);
    		TERMINAL_150.addFollower(TERMINAL_100);
    		TERMINAL_150.addFollower(TERMINAL_101);
    		TERMINAL_150.addFollower(TERMINAL_102);
    		TERMINAL_150.addFollower(TERMINAL_103);
    		TERMINAL_150.addFollower(TERMINAL_104);
    		TERMINAL_150.addFollower(TERMINAL_105);
    		TERMINAL_150.addFollower(TERMINAL_106);
    		TERMINAL_150.addFollower(TERMINAL_107);
    		TERMINAL_150.addFollower(TERMINAL_108);
    		TERMINAL_150.addFollower(TERMINAL_109);
    		TERMINAL_150.addFollower(TERMINAL_110);
    		TERMINAL_150.addFollower(TERMINAL_111);
    		TERMINAL_150.addFollower(TERMINAL_112);
    		TERMINAL_150.addFollower(TERMINAL_113);
    		TERMINAL_150.addFollower(TERMINAL_114);
    		TERMINAL_150.addFollower(TERMINAL_115);
    		TERMINAL_150.addFollower(TERMINAL_116);
    		TERMINAL_150.addFollower(TERMINAL_117);
    		TERMINAL_150.addFollower(TERMINAL_118);
    		TERMINAL_150.addFollower(TERMINAL_119);
    		TERMINAL_150.addFollower(TERMINAL_120);
    		TERMINAL_150.addFollower(TERMINAL_121);
    		TERMINAL_150.addFollower(TERMINAL_122);
    		TERMINAL_150.addFollower(TERMINAL_123);
    		TERMINAL_150.addFollower(TERMINAL_124);
    		TERMINAL_150.addFollower(TERMINAL_125);
    		TERMINAL_150.addFollower(TERMINAL_126);
    		TERMINAL_150.addFollower(TERMINAL_127);
    		TERMINAL_150.addFollower(TERMINAL_128);
    		TERMINAL_150.addFollower(TERMINAL_129);
    		TERMINAL_150.addFollower(TERMINAL_130);
    		TERMINAL_150.addFollower(TERMINAL_131);
    		TERMINAL_150.addFollower(TERMINAL_132);
    		TERMINAL_150.addFollower(TERMINAL_133);
    		TERMINAL_150.addFollower(TERMINAL_134);
    		TERMINAL_150.addFollower(TERMINAL_135);
    		TERMINAL_150.addFollower(TERMINAL_136);
    		TERMINAL_150.addFollower(TERMINAL_137);
    		TERMINAL_150.addFollower(TERMINAL_138);
    		TERMINAL_150.addFollower(TERMINAL_139);
    		TERMINAL_150.addFollower(TERMINAL_140);
    		TERMINAL_150.addFollower(TERMINAL_141);
    		TERMINAL_151.addFollower(TERMINAL_152);
    		TERMINAL_152.addFollower(TERMINAL_153);
    		TERMINAL_152.addFollower(TERMINAL_154);
    		TERMINAL_152.addFollower(TERMINAL_155);
    		TERMINAL_153.addFollower(TERMINAL_156);
    		TERMINAL_156.addFollower(TERMINAL_157);
    		TERMINAL_157.addFollower(TERMINAL_153);
    		TERMINAL_157.addFollower(TERMINAL_154);
    		TERMINAL_157.addFollower(TERMINAL_155);
    		TERMINAL_154.addFollower(TERMINAL_158);
    		TERMINAL_158.addFollower(TERMINAL_159);
    		TERMINAL_12.addFollower(TERMINAL_160);
    		TERMINAL_160.addFollower(TERMINAL_161);
    		TERMINAL_160.addFollower(TERMINAL_162);
    		TERMINAL_160.addFollower(TERMINAL_163);
    		TERMINAL_161.addFollower(TERMINAL_164);
    		TERMINAL_164.addFollower(TERMINAL_165);
    		TERMINAL_165.addFollower(TERMINAL_161);
    		TERMINAL_165.addFollower(TERMINAL_162);
    		TERMINAL_165.addFollower(TERMINAL_163);
    		TERMINAL_162.addFollower(TERMINAL_166);
    		TERMINAL_166.addFollower(TERMINAL_159);
    		TERMINAL_8.addFollower(TERMINAL_9);
    		TERMINAL_9.addFollower(TERMINAL_167);
    		TERMINAL_167.addFollower(TERMINAL_168);
    		TERMINAL_167.addFollower(TERMINAL_169);
    		TERMINAL_167.addFollower(TERMINAL_170);
    		TERMINAL_167.addFollower(TERMINAL_171);
    		TERMINAL_167.addFollower(TERMINAL_172);
    		TERMINAL_167.addFollower(TERMINAL_173);
    		TERMINAL_168.addFollower(TERMINAL_174);
    		TERMINAL_174.addFollower(TERMINAL_175);
    		TERMINAL_175.addFollower(TERMINAL_168);
    		TERMINAL_175.addFollower(TERMINAL_169);
    		TERMINAL_175.addFollower(TERMINAL_170);
    		TERMINAL_175.addFollower(TERMINAL_171);
    		TERMINAL_175.addFollower(TERMINAL_172);
    		TERMINAL_175.addFollower(TERMINAL_173);
    		TERMINAL_169.addFollower(TERMINAL_176);
    		TERMINAL_176.addFollower(TERMINAL_159);
    		TERMINAL_170.addFollower(TERMINAL_177);
    		TERMINAL_177.addFollower(TERMINAL_178);
    		TERMINAL_178.addFollower(TERMINAL_168);
    		TERMINAL_178.addFollower(TERMINAL_169);
    		TERMINAL_178.addFollower(TERMINAL_170);
    		TERMINAL_178.addFollower(TERMINAL_171);
    		TERMINAL_178.addFollower(TERMINAL_172);
    		TERMINAL_178.addFollower(TERMINAL_173);
    		TERMINAL_171.addFollower(TERMINAL_179);
    		TERMINAL_179.addFollower(TERMINAL_180);
    		TERMINAL_180.addFollower(TERMINAL_168);
    		TERMINAL_180.addFollower(TERMINAL_169);
    		TERMINAL_180.addFollower(TERMINAL_170);
    		TERMINAL_180.addFollower(TERMINAL_171);
    		TERMINAL_180.addFollower(TERMINAL_172);
    		TERMINAL_180.addFollower(TERMINAL_173);
    		TERMINAL_172.addFollower(TERMINAL_181);
    		TERMINAL_181.addFollower(TERMINAL_182);
    		TERMINAL_182.addFollower(TERMINAL_168);
    		TERMINAL_182.addFollower(TERMINAL_169);
    		TERMINAL_182.addFollower(TERMINAL_170);
    		TERMINAL_182.addFollower(TERMINAL_171);
    		TERMINAL_182.addFollower(TERMINAL_172);
    		TERMINAL_182.addFollower(TERMINAL_173);
    		TERMINAL_173.addFollower(TERMINAL_3);
    		TERMINAL_173.addFollower(TERMINAL_4);
    		TERMINAL_173.addFollower(TERMINAL_5);
    		TERMINAL_173.addFollower(TERMINAL_6);
    		TERMINAL_173.addFollower(TERMINAL_7);
    		TERMINAL_173.addFollower(TERMINAL_8);
    		TERMINAL_173.addFollower(TERMINAL_9);
    		TERMINAL_173.addFollower(TERMINAL_10);
    		TERMINAL_173.addFollower(TERMINAL_11);
    		TERMINAL_173.addFollower(TERMINAL_2);
    		TERMINAL_173.addFollower(TERMINAL_78);
    		TERMINAL_173.addFollower(TERMINAL_79);
    		TERMINAL_173.addFollower(TERMINAL_80);
    		TERMINAL_173.addFollower(TERMINAL_81);
    		TERMINAL_173.addFollower(TERMINAL_82);
    		TERMINAL_173.addFollower(TERMINAL_83);
    		TERMINAL_173.addFollower(TERMINAL_84);
    		TERMINAL_173.addFollower(TERMINAL_85);
    		TERMINAL_173.addFollower(TERMINAL_86);
    		TERMINAL_173.addFollower(TERMINAL_87);
    		TERMINAL_173.addFollower(TERMINAL_88);
    		TERMINAL_173.addFollower(TERMINAL_89);
    		TERMINAL_173.addFollower(TERMINAL_90);
    		TERMINAL_173.addFollower(TERMINAL_91);
    		TERMINAL_173.addFollower(TERMINAL_92);
    		TERMINAL_173.addFollower(TERMINAL_93);
    		TERMINAL_173.addFollower(TERMINAL_94);
    		TERMINAL_173.addFollower(TERMINAL_95);
    		TERMINAL_173.addFollower(TERMINAL_96);
    		TERMINAL_173.addFollower(TERMINAL_97);
    		TERMINAL_173.addFollower(TERMINAL_98);
    		TERMINAL_173.addFollower(TERMINAL_99);
    		TERMINAL_173.addFollower(TERMINAL_100);
    		TERMINAL_173.addFollower(TERMINAL_101);
    		TERMINAL_173.addFollower(TERMINAL_102);
    		TERMINAL_173.addFollower(TERMINAL_103);
    		TERMINAL_173.addFollower(TERMINAL_104);
    		TERMINAL_173.addFollower(TERMINAL_105);
    		TERMINAL_173.addFollower(TERMINAL_106);
    		TERMINAL_173.addFollower(TERMINAL_107);
    		TERMINAL_173.addFollower(TERMINAL_108);
    		TERMINAL_173.addFollower(TERMINAL_109);
    		TERMINAL_173.addFollower(TERMINAL_110);
    		TERMINAL_173.addFollower(TERMINAL_111);
    		TERMINAL_173.addFollower(TERMINAL_112);
    		TERMINAL_173.addFollower(TERMINAL_113);
    		TERMINAL_173.addFollower(TERMINAL_114);
    		TERMINAL_173.addFollower(TERMINAL_115);
    		TERMINAL_173.addFollower(TERMINAL_116);
    		TERMINAL_173.addFollower(TERMINAL_117);
    		TERMINAL_173.addFollower(TERMINAL_118);
    		TERMINAL_173.addFollower(TERMINAL_119);
    		TERMINAL_173.addFollower(TERMINAL_120);
    		TERMINAL_173.addFollower(TERMINAL_121);
    		TERMINAL_173.addFollower(TERMINAL_122);
    		TERMINAL_173.addFollower(TERMINAL_123);
    		TERMINAL_173.addFollower(TERMINAL_124);
    		TERMINAL_173.addFollower(TERMINAL_125);
    		TERMINAL_173.addFollower(TERMINAL_126);
    		TERMINAL_173.addFollower(TERMINAL_127);
    		TERMINAL_173.addFollower(TERMINAL_128);
    		TERMINAL_173.addFollower(TERMINAL_129);
    		TERMINAL_173.addFollower(TERMINAL_130);
    		TERMINAL_173.addFollower(TERMINAL_131);
    		TERMINAL_173.addFollower(TERMINAL_132);
    		TERMINAL_173.addFollower(TERMINAL_133);
    		TERMINAL_173.addFollower(TERMINAL_134);
    		TERMINAL_173.addFollower(TERMINAL_135);
    		TERMINAL_173.addFollower(TERMINAL_136);
    		TERMINAL_173.addFollower(TERMINAL_137);
    		TERMINAL_173.addFollower(TERMINAL_138);
    		TERMINAL_173.addFollower(TERMINAL_139);
    		TERMINAL_173.addFollower(TERMINAL_140);
    		TERMINAL_173.addFollower(TERMINAL_141);
    		TERMINAL_183.addFollower(TERMINAL_184);
    		TERMINAL_184.addFollower(TERMINAL_78);
    		TERMINAL_184.addFollower(TERMINAL_79);
    		TERMINAL_184.addFollower(TERMINAL_80);
    		TERMINAL_184.addFollower(TERMINAL_81);
    		TERMINAL_184.addFollower(TERMINAL_82);
    		TERMINAL_184.addFollower(TERMINAL_83);
    		TERMINAL_78.addFollower(TERMINAL_185);
    		TERMINAL_185.addFollower(TERMINAL_186);
    		TERMINAL_186.addFollower(TERMINAL_78);
    		TERMINAL_186.addFollower(TERMINAL_79);
    		TERMINAL_186.addFollower(TERMINAL_80);
    		TERMINAL_186.addFollower(TERMINAL_81);
    		TERMINAL_186.addFollower(TERMINAL_82);
    		TERMINAL_186.addFollower(TERMINAL_83);
    		TERMINAL_79.addFollower(TERMINAL_187);
    	}
    	public static void wire1() {
    		TERMINAL_187.addFollower(TERMINAL_159);
    		TERMINAL_80.addFollower(TERMINAL_188);
    		TERMINAL_188.addFollower(TERMINAL_77);
    		TERMINAL_188.addFollower(TERMINAL_6);
    		TERMINAL_188.addFollower(TERMINAL_7);
    		TERMINAL_188.addFollower(TERMINAL_149);
    		TERMINAL_188.addFollower(TERMINAL_150);
    		TERMINAL_188.addFollower(TERMINAL_8);
    		TERMINAL_188.addFollower(TERMINAL_9);
    		TERMINAL_188.addFollower(TERMINAL_189);
    		TERMINAL_188.addFollower(TERMINAL_190);
    		TERMINAL_188.addFollower(TERMINAL_191);
    		TERMINAL_188.addFollower(TERMINAL_192);
    		TERMINAL_188.addFollower(TERMINAL_193);
    		TERMINAL_81.addFollower(TERMINAL_194);
    		TERMINAL_194.addFollower(TERMINAL_195);
    		TERMINAL_195.addFollower(TERMINAL_78);
    		TERMINAL_195.addFollower(TERMINAL_79);
    		TERMINAL_195.addFollower(TERMINAL_80);
    		TERMINAL_195.addFollower(TERMINAL_81);
    		TERMINAL_195.addFollower(TERMINAL_82);
    		TERMINAL_195.addFollower(TERMINAL_83);
    		TERMINAL_82.addFollower(TERMINAL_196);
    		TERMINAL_196.addFollower(TERMINAL_197);
    		TERMINAL_197.addFollower(TERMINAL_78);
    		TERMINAL_197.addFollower(TERMINAL_79);
    		TERMINAL_197.addFollower(TERMINAL_80);
    		TERMINAL_197.addFollower(TERMINAL_81);
    		TERMINAL_197.addFollower(TERMINAL_82);
    		TERMINAL_197.addFollower(TERMINAL_83);
    		TERMINAL_83.addFollower(TERMINAL_107);
    		TERMINAL_83.addFollower(TERMINAL_108);
    		TERMINAL_83.addFollower(TERMINAL_109);
    		TERMINAL_83.addFollower(TERMINAL_110);
    		TERMINAL_83.addFollower(TERMINAL_111);
    		TERMINAL_83.addFollower(TERMINAL_112);
    		TERMINAL_83.addFollower(TERMINAL_113);
    		TERMINAL_83.addFollower(TERMINAL_114);
    		TERMINAL_83.addFollower(TERMINAL_115);
    		TERMINAL_83.addFollower(TERMINAL_116);
    		TERMINAL_19.addFollower(TERMINAL_20);
    		TERMINAL_19.addFollower(TERMINAL_21);
    		TERMINAL_20.addFollower(TERMINAL_21);
    		TERMINAL_21.addFollower(TERMINAL_198);
    		TERMINAL_198.addFollower(TERMINAL_84);
    		TERMINAL_198.addFollower(TERMINAL_85);
    		TERMINAL_198.addFollower(TERMINAL_86);
    		TERMINAL_198.addFollower(TERMINAL_87);
    		TERMINAL_198.addFollower(TERMINAL_88);
    		TERMINAL_198.addFollower(TERMINAL_89);
    		TERMINAL_198.addFollower(TERMINAL_90);
    		TERMINAL_198.addFollower(TERMINAL_91);
    		TERMINAL_84.addFollower(TERMINAL_199);
    		TERMINAL_199.addFollower(TERMINAL_200);
    		TERMINAL_200.addFollower(TERMINAL_84);
    		TERMINAL_200.addFollower(TERMINAL_85);
    		TERMINAL_200.addFollower(TERMINAL_86);
    		TERMINAL_200.addFollower(TERMINAL_87);
    		TERMINAL_200.addFollower(TERMINAL_88);
    		TERMINAL_200.addFollower(TERMINAL_89);
    		TERMINAL_200.addFollower(TERMINAL_90);
    		TERMINAL_200.addFollower(TERMINAL_91);
    		TERMINAL_85.addFollower(TERMINAL_201);
    		TERMINAL_201.addFollower(TERMINAL_159);
    		TERMINAL_86.addFollower(TERMINAL_202);
    		TERMINAL_202.addFollower(TERMINAL_77);
    		TERMINAL_202.addFollower(TERMINAL_6);
    		TERMINAL_202.addFollower(TERMINAL_7);
    		TERMINAL_202.addFollower(TERMINAL_149);
    		TERMINAL_202.addFollower(TERMINAL_150);
    		TERMINAL_202.addFollower(TERMINAL_8);
    		TERMINAL_202.addFollower(TERMINAL_9);
    		TERMINAL_202.addFollower(TERMINAL_189);
    		TERMINAL_202.addFollower(TERMINAL_190);
    		TERMINAL_202.addFollower(TERMINAL_191);
    		TERMINAL_202.addFollower(TERMINAL_192);
    		TERMINAL_202.addFollower(TERMINAL_193);
    		TERMINAL_87.addFollower(TERMINAL_203);
    		TERMINAL_203.addFollower(TERMINAL_204);
    		TERMINAL_204.addFollower(TERMINAL_84);
    		TERMINAL_204.addFollower(TERMINAL_85);
    		TERMINAL_204.addFollower(TERMINAL_86);
    		TERMINAL_204.addFollower(TERMINAL_87);
    		TERMINAL_204.addFollower(TERMINAL_88);
    		TERMINAL_204.addFollower(TERMINAL_89);
    		TERMINAL_204.addFollower(TERMINAL_90);
    		TERMINAL_204.addFollower(TERMINAL_91);
    		TERMINAL_88.addFollower(TERMINAL_205);
    		TERMINAL_205.addFollower(TERMINAL_206);
    		TERMINAL_206.addFollower(TERMINAL_84);
    		TERMINAL_206.addFollower(TERMINAL_85);
    		TERMINAL_206.addFollower(TERMINAL_86);
    		TERMINAL_206.addFollower(TERMINAL_87);
    		TERMINAL_206.addFollower(TERMINAL_88);
    		TERMINAL_206.addFollower(TERMINAL_89);
    		TERMINAL_206.addFollower(TERMINAL_90);
    		TERMINAL_206.addFollower(TERMINAL_91);
    		TERMINAL_89.addFollower(TERMINAL_207);
    		TERMINAL_207.addFollower(TERMINAL_208);
    		TERMINAL_208.addFollower(TERMINAL_84);
    		TERMINAL_208.addFollower(TERMINAL_85);
    		TERMINAL_208.addFollower(TERMINAL_86);
    		TERMINAL_208.addFollower(TERMINAL_87);
    		TERMINAL_208.addFollower(TERMINAL_88);
    		TERMINAL_208.addFollower(TERMINAL_89);
    		TERMINAL_208.addFollower(TERMINAL_90);
    		TERMINAL_208.addFollower(TERMINAL_91);
    		TERMINAL_90.addFollower(TERMINAL_209);
    		TERMINAL_209.addFollower(TERMINAL_210);
    		TERMINAL_210.addFollower(TERMINAL_84);
    		TERMINAL_210.addFollower(TERMINAL_85);
    		TERMINAL_210.addFollower(TERMINAL_86);
    		TERMINAL_210.addFollower(TERMINAL_87);
    		TERMINAL_210.addFollower(TERMINAL_88);
    		TERMINAL_210.addFollower(TERMINAL_89);
    		TERMINAL_210.addFollower(TERMINAL_90);
    		TERMINAL_210.addFollower(TERMINAL_91);
    		TERMINAL_10.addFollower(TERMINAL_11);
    		TERMINAL_11.addFollower(TERMINAL_211);
    		TERMINAL_211.addFollower(TERMINAL_212);
    		TERMINAL_211.addFollower(TERMINAL_213);
    		TERMINAL_211.addFollower(TERMINAL_214);
    		TERMINAL_211.addFollower(TERMINAL_215);
    		TERMINAL_212.addFollower(TERMINAL_216);
    		TERMINAL_216.addFollower(TERMINAL_217);
    		TERMINAL_217.addFollower(TERMINAL_212);
    		TERMINAL_217.addFollower(TERMINAL_213);
    		TERMINAL_217.addFollower(TERMINAL_214);
    		TERMINAL_217.addFollower(TERMINAL_215);
    		TERMINAL_213.addFollower(TERMINAL_218);
    		TERMINAL_218.addFollower(TERMINAL_159);
    		TERMINAL_214.addFollower(TERMINAL_219);
    		TERMINAL_219.addFollower(TERMINAL_220);
    		TERMINAL_220.addFollower(TERMINAL_212);
    		TERMINAL_220.addFollower(TERMINAL_213);
    		TERMINAL_220.addFollower(TERMINAL_214);
    		TERMINAL_220.addFollower(TERMINAL_215);
    		TERMINAL_215.addFollower(TERMINAL_3);
    		TERMINAL_215.addFollower(TERMINAL_4);
    		TERMINAL_215.addFollower(TERMINAL_5);
    		TERMINAL_215.addFollower(TERMINAL_6);
    		TERMINAL_215.addFollower(TERMINAL_7);
    		TERMINAL_215.addFollower(TERMINAL_8);
    		TERMINAL_215.addFollower(TERMINAL_9);
    		TERMINAL_215.addFollower(TERMINAL_10);
    		TERMINAL_215.addFollower(TERMINAL_11);
    		TERMINAL_215.addFollower(TERMINAL_2);
    		TERMINAL_159.addFollower(TERMINAL_221);
    		TERMINAL_221.addFollower(TERMINAL_222);
    		TERMINAL_221.addFollower(TERMINAL_223);
    		TERMINAL_221.addFollower(TERMINAL_224);
    		TERMINAL_221.addFollower(TERMINAL_225);
    		TERMINAL_221.addFollower(TERMINAL_226);
    		TERMINAL_221.addFollower(TERMINAL_227);
    		TERMINAL_222.addFollower(TERMINAL_228);
    		TERMINAL_228.addFollower(TERMINAL_229);
    		TERMINAL_229.addFollower(TERMINAL_222);
    		TERMINAL_229.addFollower(TERMINAL_223);
    		TERMINAL_229.addFollower(TERMINAL_224);
    		TERMINAL_229.addFollower(TERMINAL_225);
    		TERMINAL_229.addFollower(TERMINAL_226);
    		TERMINAL_229.addFollower(TERMINAL_227);
    		TERMINAL_223.addFollower(TERMINAL_230);
    		TERMINAL_230.addFollower(TERMINAL_159);
    		TERMINAL_224.addFollower(TERMINAL_231);
    		TERMINAL_231.addFollower(TERMINAL_232);
    		TERMINAL_232.addFollower(TERMINAL_222);
    		TERMINAL_232.addFollower(TERMINAL_223);
    		TERMINAL_232.addFollower(TERMINAL_224);
    		TERMINAL_232.addFollower(TERMINAL_225);
    		TERMINAL_232.addFollower(TERMINAL_226);
    		TERMINAL_232.addFollower(TERMINAL_227);
    		TERMINAL_225.addFollower(TERMINAL_233);
    		TERMINAL_233.addFollower(TERMINAL_234);
    		TERMINAL_234.addFollower(TERMINAL_222);
    		TERMINAL_234.addFollower(TERMINAL_223);
    		TERMINAL_234.addFollower(TERMINAL_224);
    		TERMINAL_234.addFollower(TERMINAL_225);
    		TERMINAL_234.addFollower(TERMINAL_226);
    		TERMINAL_234.addFollower(TERMINAL_227);
    		TERMINAL_226.addFollower(TERMINAL_235);
    		TERMINAL_235.addFollower(TERMINAL_236);
    		TERMINAL_236.addFollower(TERMINAL_222);
    		TERMINAL_236.addFollower(TERMINAL_223);
    		TERMINAL_236.addFollower(TERMINAL_224);
    		TERMINAL_236.addFollower(TERMINAL_225);
    		TERMINAL_236.addFollower(TERMINAL_226);
    		TERMINAL_236.addFollower(TERMINAL_227);
    		TERMINAL_227.addFollower(TERMINAL_153);
    		TERMINAL_227.addFollower(TERMINAL_154);
    		TERMINAL_227.addFollower(TERMINAL_155);
    		TERMINAL_227.addFollower(TERMINAL_161);
    		TERMINAL_227.addFollower(TERMINAL_162);
    		TERMINAL_227.addFollower(TERMINAL_163);
    		TERMINAL_227.addFollower(TERMINAL_168);
    		TERMINAL_227.addFollower(TERMINAL_169);
    		TERMINAL_227.addFollower(TERMINAL_170);
    		TERMINAL_227.addFollower(TERMINAL_171);
    		TERMINAL_227.addFollower(TERMINAL_172);
    		TERMINAL_227.addFollower(TERMINAL_173);
    		TERMINAL_227.addFollower(TERMINAL_78);
    		TERMINAL_227.addFollower(TERMINAL_79);
    		TERMINAL_227.addFollower(TERMINAL_80);
    		TERMINAL_227.addFollower(TERMINAL_81);
    		TERMINAL_227.addFollower(TERMINAL_82);
    		TERMINAL_227.addFollower(TERMINAL_83);
    		TERMINAL_227.addFollower(TERMINAL_84);
    		TERMINAL_227.addFollower(TERMINAL_85);
    		TERMINAL_227.addFollower(TERMINAL_86);
    		TERMINAL_227.addFollower(TERMINAL_87);
    		TERMINAL_227.addFollower(TERMINAL_88);
    		TERMINAL_227.addFollower(TERMINAL_89);
    		TERMINAL_227.addFollower(TERMINAL_90);
    		TERMINAL_227.addFollower(TERMINAL_91);
    		TERMINAL_227.addFollower(TERMINAL_212);
    		TERMINAL_227.addFollower(TERMINAL_213);
    		TERMINAL_227.addFollower(TERMINAL_214);
    		TERMINAL_227.addFollower(TERMINAL_215);
    		TERMINAL_227.addFollower(TERMINAL_222);
    		TERMINAL_227.addFollower(TERMINAL_223);
    		TERMINAL_227.addFollower(TERMINAL_224);
    		TERMINAL_227.addFollower(TERMINAL_225);
    		TERMINAL_227.addFollower(TERMINAL_226);
    		TERMINAL_227.addFollower(TERMINAL_227);
    		TERMINAL_227.addFollower(TERMINAL_92);
    		TERMINAL_227.addFollower(TERMINAL_93);
    		TERMINAL_227.addFollower(TERMINAL_94);
    		TERMINAL_227.addFollower(TERMINAL_95);
    		TERMINAL_227.addFollower(TERMINAL_96);
    		TERMINAL_227.addFollower(TERMINAL_97);
    		TERMINAL_227.addFollower(TERMINAL_98);
    		TERMINAL_227.addFollower(TERMINAL_99);
    		TERMINAL_227.addFollower(TERMINAL_100);
    		TERMINAL_227.addFollower(TERMINAL_101);
    		TERMINAL_227.addFollower(TERMINAL_102);
    		TERMINAL_227.addFollower(TERMINAL_103);
    		TERMINAL_227.addFollower(TERMINAL_104);
    		TERMINAL_227.addFollower(TERMINAL_105);
    		TERMINAL_227.addFollower(TERMINAL_106);
    		TERMINAL_227.addFollower(TERMINAL_107);
    		TERMINAL_227.addFollower(TERMINAL_108);
    		TERMINAL_227.addFollower(TERMINAL_109);
    		TERMINAL_227.addFollower(TERMINAL_110);
    		TERMINAL_227.addFollower(TERMINAL_111);
    		TERMINAL_227.addFollower(TERMINAL_112);
    		TERMINAL_227.addFollower(TERMINAL_113);
    		TERMINAL_227.addFollower(TERMINAL_114);
    		TERMINAL_227.addFollower(TERMINAL_115);
    		TERMINAL_227.addFollower(TERMINAL_116);
    		TERMINAL_227.addFollower(TERMINAL_117);
    		TERMINAL_227.addFollower(TERMINAL_118);
    		TERMINAL_227.addFollower(TERMINAL_119);
    		TERMINAL_227.addFollower(TERMINAL_120);
    		TERMINAL_227.addFollower(TERMINAL_121);
    		TERMINAL_227.addFollower(TERMINAL_122);
    		TERMINAL_227.addFollower(TERMINAL_123);
    		TERMINAL_227.addFollower(TERMINAL_124);
    		TERMINAL_227.addFollower(TERMINAL_125);
    		TERMINAL_227.addFollower(TERMINAL_126);
    		TERMINAL_227.addFollower(TERMINAL_127);
    		TERMINAL_227.addFollower(TERMINAL_128);
    		TERMINAL_227.addFollower(TERMINAL_129);
    		TERMINAL_227.addFollower(TERMINAL_130);
    		TERMINAL_227.addFollower(TERMINAL_131);
    		TERMINAL_227.addFollower(TERMINAL_132);
    		TERMINAL_227.addFollower(TERMINAL_133);
    		TERMINAL_227.addFollower(TERMINAL_134);
    		TERMINAL_227.addFollower(TERMINAL_135);
    		TERMINAL_227.addFollower(TERMINAL_136);
    		TERMINAL_227.addFollower(TERMINAL_137);
    		TERMINAL_227.addFollower(TERMINAL_138);
    		TERMINAL_227.addFollower(TERMINAL_139);
    		TERMINAL_227.addFollower(TERMINAL_140);
    		TERMINAL_227.addFollower(TERMINAL_141);
    		TERMINAL_227.addFollower(TERMINAL_237);
    		TERMINAL_227.addFollower(TERMINAL_238);
    		TERMINAL_227.addFollower(TERMINAL_239);
    		TERMINAL_227.addFollower(TERMINAL_240);
    		TERMINAL_227.addFollower(TERMINAL_241);
    		TERMINAL_189.addFollower(TERMINAL_242);
    		TERMINAL_242.addFollower(TERMINAL_92);
    		TERMINAL_242.addFollower(TERMINAL_93);
    		TERMINAL_242.addFollower(TERMINAL_94);
    		TERMINAL_242.addFollower(TERMINAL_95);
    		TERMINAL_242.addFollower(TERMINAL_96);
    		TERMINAL_242.addFollower(TERMINAL_97);
    		TERMINAL_242.addFollower(TERMINAL_98);
    		TERMINAL_92.addFollower(TERMINAL_243);
    		TERMINAL_243.addFollower(TERMINAL_244);
    		TERMINAL_244.addFollower(TERMINAL_92);
    		TERMINAL_244.addFollower(TERMINAL_93);
    		TERMINAL_244.addFollower(TERMINAL_94);
    		TERMINAL_244.addFollower(TERMINAL_95);
    		TERMINAL_244.addFollower(TERMINAL_96);
    		TERMINAL_244.addFollower(TERMINAL_97);
    		TERMINAL_244.addFollower(TERMINAL_98);
    		TERMINAL_93.addFollower(TERMINAL_245);
    		TERMINAL_245.addFollower(TERMINAL_159);
    		TERMINAL_94.addFollower(TERMINAL_246);
    		TERMINAL_246.addFollower(TERMINAL_77);
    		TERMINAL_246.addFollower(TERMINAL_6);
    		TERMINAL_246.addFollower(TERMINAL_7);
    		TERMINAL_246.addFollower(TERMINAL_149);
    		TERMINAL_246.addFollower(TERMINAL_150);
    		TERMINAL_246.addFollower(TERMINAL_8);
    		TERMINAL_246.addFollower(TERMINAL_9);
    		TERMINAL_246.addFollower(TERMINAL_189);
    		TERMINAL_246.addFollower(TERMINAL_190);
    		TERMINAL_246.addFollower(TERMINAL_191);
    		TERMINAL_246.addFollower(TERMINAL_192);
    		TERMINAL_246.addFollower(TERMINAL_193);
    		TERMINAL_95.addFollower(TERMINAL_247);
    		TERMINAL_247.addFollower(TERMINAL_248);
    		TERMINAL_248.addFollower(TERMINAL_92);
    		TERMINAL_248.addFollower(TERMINAL_93);
    		TERMINAL_248.addFollower(TERMINAL_94);
    		TERMINAL_248.addFollower(TERMINAL_95);
    		TERMINAL_248.addFollower(TERMINAL_96);
    		TERMINAL_248.addFollower(TERMINAL_97);
    		TERMINAL_248.addFollower(TERMINAL_98);
    		TERMINAL_96.addFollower(TERMINAL_249);
    		TERMINAL_249.addFollower(TERMINAL_250);
    		TERMINAL_250.addFollower(TERMINAL_92);
    		TERMINAL_250.addFollower(TERMINAL_93);
    		TERMINAL_250.addFollower(TERMINAL_94);
    		TERMINAL_250.addFollower(TERMINAL_95);
    		TERMINAL_250.addFollower(TERMINAL_96);
    		TERMINAL_250.addFollower(TERMINAL_97);
    		TERMINAL_250.addFollower(TERMINAL_98);
    		TERMINAL_97.addFollower(TERMINAL_251);
    		TERMINAL_251.addFollower(TERMINAL_252);
    		TERMINAL_252.addFollower(TERMINAL_92);
    		TERMINAL_252.addFollower(TERMINAL_93);
    		TERMINAL_252.addFollower(TERMINAL_94);
    		TERMINAL_252.addFollower(TERMINAL_95);
    		TERMINAL_252.addFollower(TERMINAL_96);
    		TERMINAL_252.addFollower(TERMINAL_97);
    		TERMINAL_252.addFollower(TERMINAL_98);
    		TERMINAL_98.addFollower(TERMINAL_78);
    		TERMINAL_98.addFollower(TERMINAL_79);
    		TERMINAL_98.addFollower(TERMINAL_80);
    		TERMINAL_98.addFollower(TERMINAL_81);
    		TERMINAL_98.addFollower(TERMINAL_82);
    		TERMINAL_98.addFollower(TERMINAL_83);
    		TERMINAL_98.addFollower(TERMINAL_84);
    		TERMINAL_98.addFollower(TERMINAL_85);
    		TERMINAL_98.addFollower(TERMINAL_86);
    		TERMINAL_98.addFollower(TERMINAL_87);
    		TERMINAL_98.addFollower(TERMINAL_88);
    		TERMINAL_98.addFollower(TERMINAL_89);
    		TERMINAL_98.addFollower(TERMINAL_90);
    		TERMINAL_98.addFollower(TERMINAL_91);
    		TERMINAL_98.addFollower(TERMINAL_92);
    		TERMINAL_98.addFollower(TERMINAL_93);
    		TERMINAL_98.addFollower(TERMINAL_94);
    		TERMINAL_98.addFollower(TERMINAL_95);
    		TERMINAL_98.addFollower(TERMINAL_96);
    		TERMINAL_98.addFollower(TERMINAL_97);
    		TERMINAL_98.addFollower(TERMINAL_98);
    		TERMINAL_98.addFollower(TERMINAL_99);
    		TERMINAL_98.addFollower(TERMINAL_100);
    		TERMINAL_98.addFollower(TERMINAL_101);
    		TERMINAL_98.addFollower(TERMINAL_102);
    		TERMINAL_98.addFollower(TERMINAL_103);
    		TERMINAL_98.addFollower(TERMINAL_104);
    		TERMINAL_98.addFollower(TERMINAL_105);
    		TERMINAL_98.addFollower(TERMINAL_106);
    		TERMINAL_98.addFollower(TERMINAL_107);
    		TERMINAL_98.addFollower(TERMINAL_108);
    		TERMINAL_98.addFollower(TERMINAL_109);
    		TERMINAL_98.addFollower(TERMINAL_110);
    		TERMINAL_98.addFollower(TERMINAL_111);
    		TERMINAL_98.addFollower(TERMINAL_112);
    		TERMINAL_98.addFollower(TERMINAL_113);
    		TERMINAL_98.addFollower(TERMINAL_114);
    		TERMINAL_98.addFollower(TERMINAL_115);
    		TERMINAL_98.addFollower(TERMINAL_116);
    		TERMINAL_98.addFollower(TERMINAL_117);
    		TERMINAL_98.addFollower(TERMINAL_118);
    		TERMINAL_98.addFollower(TERMINAL_119);
    		TERMINAL_98.addFollower(TERMINAL_120);
    		TERMINAL_98.addFollower(TERMINAL_121);
    		TERMINAL_98.addFollower(TERMINAL_122);
    		TERMINAL_98.addFollower(TERMINAL_123);
    		TERMINAL_98.addFollower(TERMINAL_124);
    		TERMINAL_98.addFollower(TERMINAL_125);
    		TERMINAL_98.addFollower(TERMINAL_126);
    		TERMINAL_98.addFollower(TERMINAL_127);
    		TERMINAL_98.addFollower(TERMINAL_128);
    		TERMINAL_98.addFollower(TERMINAL_129);
    		TERMINAL_98.addFollower(TERMINAL_130);
    		TERMINAL_98.addFollower(TERMINAL_131);
    		TERMINAL_98.addFollower(TERMINAL_132);
    		TERMINAL_98.addFollower(TERMINAL_133);
    		TERMINAL_98.addFollower(TERMINAL_134);
    		TERMINAL_98.addFollower(TERMINAL_135);
    		TERMINAL_98.addFollower(TERMINAL_136);
    		TERMINAL_98.addFollower(TERMINAL_137);
    		TERMINAL_98.addFollower(TERMINAL_138);
    		TERMINAL_98.addFollower(TERMINAL_139);
    		TERMINAL_98.addFollower(TERMINAL_140);
    		TERMINAL_98.addFollower(TERMINAL_141);
    		TERMINAL_190.addFollower(TERMINAL_253);
    		TERMINAL_253.addFollower(TERMINAL_99);
    		TERMINAL_253.addFollower(TERMINAL_100);
    		TERMINAL_253.addFollower(TERMINAL_101);
    		TERMINAL_253.addFollower(TERMINAL_102);
    		TERMINAL_253.addFollower(TERMINAL_103);
    		TERMINAL_253.addFollower(TERMINAL_104);
    		TERMINAL_253.addFollower(TERMINAL_105);
    		TERMINAL_253.addFollower(TERMINAL_106);
    		TERMINAL_99.addFollower(TERMINAL_254);
    		TERMINAL_254.addFollower(TERMINAL_255);
    		TERMINAL_255.addFollower(TERMINAL_99);
    		TERMINAL_255.addFollower(TERMINAL_100);
    		TERMINAL_255.addFollower(TERMINAL_101);
    		TERMINAL_255.addFollower(TERMINAL_102);
    		TERMINAL_255.addFollower(TERMINAL_103);
    		TERMINAL_255.addFollower(TERMINAL_104);
    		TERMINAL_255.addFollower(TERMINAL_105);
    		TERMINAL_255.addFollower(TERMINAL_106);
    		TERMINAL_100.addFollower(TERMINAL_256);
    		TERMINAL_256.addFollower(TERMINAL_159);
    		TERMINAL_101.addFollower(TERMINAL_257);
    		TERMINAL_257.addFollower(TERMINAL_77);
    		TERMINAL_257.addFollower(TERMINAL_6);
    		TERMINAL_257.addFollower(TERMINAL_7);
    		TERMINAL_257.addFollower(TERMINAL_149);
    		TERMINAL_257.addFollower(TERMINAL_150);
    		TERMINAL_257.addFollower(TERMINAL_8);
    		TERMINAL_257.addFollower(TERMINAL_9);
    		TERMINAL_257.addFollower(TERMINAL_189);
    		TERMINAL_257.addFollower(TERMINAL_190);
    		TERMINAL_257.addFollower(TERMINAL_191);
    		TERMINAL_257.addFollower(TERMINAL_192);
    		TERMINAL_257.addFollower(TERMINAL_193);
    		TERMINAL_102.addFollower(TERMINAL_258);
    		TERMINAL_258.addFollower(TERMINAL_259);
    		TERMINAL_259.addFollower(TERMINAL_99);
    		TERMINAL_259.addFollower(TERMINAL_100);
    		TERMINAL_259.addFollower(TERMINAL_101);
    		TERMINAL_259.addFollower(TERMINAL_102);
    		TERMINAL_259.addFollower(TERMINAL_103);
    		TERMINAL_259.addFollower(TERMINAL_104);
    		TERMINAL_259.addFollower(TERMINAL_105);
    		TERMINAL_259.addFollower(TERMINAL_106);
    		TERMINAL_103.addFollower(TERMINAL_260);
    		TERMINAL_260.addFollower(TERMINAL_261);
    		TERMINAL_261.addFollower(TERMINAL_99);
    		TERMINAL_261.addFollower(TERMINAL_100);
    		TERMINAL_261.addFollower(TERMINAL_101);
    		TERMINAL_261.addFollower(TERMINAL_102);
    		TERMINAL_261.addFollower(TERMINAL_103);
    		TERMINAL_261.addFollower(TERMINAL_104);
    		TERMINAL_261.addFollower(TERMINAL_105);
    		TERMINAL_261.addFollower(TERMINAL_106);
    		TERMINAL_104.addFollower(TERMINAL_262);
    		TERMINAL_262.addFollower(TERMINAL_263);
    		TERMINAL_263.addFollower(TERMINAL_99);
    		TERMINAL_263.addFollower(TERMINAL_100);
    		TERMINAL_263.addFollower(TERMINAL_101);
    		TERMINAL_263.addFollower(TERMINAL_102);
    		TERMINAL_263.addFollower(TERMINAL_103);
    		TERMINAL_263.addFollower(TERMINAL_104);
    		TERMINAL_263.addFollower(TERMINAL_105);
    		TERMINAL_263.addFollower(TERMINAL_106);
    	}
    	public static void wire2() {
    		TERMINAL_105.addFollower(TERMINAL_264);
    		TERMINAL_264.addFollower(TERMINAL_191);
    		TERMINAL_106.addFollower(TERMINAL_78);
    		TERMINAL_106.addFollower(TERMINAL_79);
    		TERMINAL_106.addFollower(TERMINAL_80);
    		TERMINAL_106.addFollower(TERMINAL_81);
    		TERMINAL_106.addFollower(TERMINAL_82);
    		TERMINAL_106.addFollower(TERMINAL_83);
    		TERMINAL_106.addFollower(TERMINAL_84);
    		TERMINAL_106.addFollower(TERMINAL_85);
    		TERMINAL_106.addFollower(TERMINAL_86);
    		TERMINAL_106.addFollower(TERMINAL_87);
    		TERMINAL_106.addFollower(TERMINAL_88);
    		TERMINAL_106.addFollower(TERMINAL_89);
    		TERMINAL_106.addFollower(TERMINAL_90);
    		TERMINAL_106.addFollower(TERMINAL_91);
    		TERMINAL_106.addFollower(TERMINAL_92);
    		TERMINAL_106.addFollower(TERMINAL_93);
    		TERMINAL_106.addFollower(TERMINAL_94);
    		TERMINAL_106.addFollower(TERMINAL_95);
    		TERMINAL_106.addFollower(TERMINAL_96);
    		TERMINAL_106.addFollower(TERMINAL_97);
    		TERMINAL_106.addFollower(TERMINAL_98);
    		TERMINAL_106.addFollower(TERMINAL_99);
    		TERMINAL_106.addFollower(TERMINAL_100);
    		TERMINAL_106.addFollower(TERMINAL_101);
    		TERMINAL_106.addFollower(TERMINAL_102);
    		TERMINAL_106.addFollower(TERMINAL_103);
    		TERMINAL_106.addFollower(TERMINAL_104);
    		TERMINAL_106.addFollower(TERMINAL_105);
    		TERMINAL_106.addFollower(TERMINAL_106);
    		TERMINAL_106.addFollower(TERMINAL_107);
    		TERMINAL_106.addFollower(TERMINAL_108);
    		TERMINAL_106.addFollower(TERMINAL_109);
    		TERMINAL_106.addFollower(TERMINAL_110);
    		TERMINAL_106.addFollower(TERMINAL_111);
    		TERMINAL_106.addFollower(TERMINAL_112);
    		TERMINAL_106.addFollower(TERMINAL_113);
    		TERMINAL_106.addFollower(TERMINAL_114);
    		TERMINAL_106.addFollower(TERMINAL_115);
    		TERMINAL_106.addFollower(TERMINAL_116);
    		TERMINAL_106.addFollower(TERMINAL_117);
    		TERMINAL_106.addFollower(TERMINAL_118);
    		TERMINAL_106.addFollower(TERMINAL_119);
    		TERMINAL_106.addFollower(TERMINAL_120);
    		TERMINAL_106.addFollower(TERMINAL_121);
    		TERMINAL_106.addFollower(TERMINAL_122);
    		TERMINAL_106.addFollower(TERMINAL_123);
    		TERMINAL_106.addFollower(TERMINAL_124);
    		TERMINAL_106.addFollower(TERMINAL_125);
    		TERMINAL_106.addFollower(TERMINAL_126);
    		TERMINAL_106.addFollower(TERMINAL_127);
    		TERMINAL_106.addFollower(TERMINAL_128);
    		TERMINAL_106.addFollower(TERMINAL_129);
    		TERMINAL_106.addFollower(TERMINAL_130);
    		TERMINAL_106.addFollower(TERMINAL_131);
    		TERMINAL_106.addFollower(TERMINAL_132);
    		TERMINAL_106.addFollower(TERMINAL_133);
    		TERMINAL_106.addFollower(TERMINAL_134);
    		TERMINAL_106.addFollower(TERMINAL_135);
    		TERMINAL_106.addFollower(TERMINAL_136);
    		TERMINAL_106.addFollower(TERMINAL_137);
    		TERMINAL_106.addFollower(TERMINAL_138);
    		TERMINAL_106.addFollower(TERMINAL_139);
    		TERMINAL_106.addFollower(TERMINAL_140);
    		TERMINAL_106.addFollower(TERMINAL_141);
    		TERMINAL_191.addFollower(TERMINAL_265);
    		TERMINAL_265.addFollower(TERMINAL_107);
    		TERMINAL_265.addFollower(TERMINAL_108);
    		TERMINAL_265.addFollower(TERMINAL_109);
    		TERMINAL_265.addFollower(TERMINAL_110);
    		TERMINAL_265.addFollower(TERMINAL_111);
    		TERMINAL_265.addFollower(TERMINAL_112);
    		TERMINAL_265.addFollower(TERMINAL_113);
    		TERMINAL_265.addFollower(TERMINAL_114);
    		TERMINAL_265.addFollower(TERMINAL_115);
    		TERMINAL_265.addFollower(TERMINAL_116);
    		TERMINAL_107.addFollower(TERMINAL_266);
    		TERMINAL_266.addFollower(TERMINAL_267);
    		TERMINAL_267.addFollower(TERMINAL_107);
    		TERMINAL_267.addFollower(TERMINAL_108);
    		TERMINAL_267.addFollower(TERMINAL_109);
    		TERMINAL_267.addFollower(TERMINAL_110);
    		TERMINAL_267.addFollower(TERMINAL_111);
    		TERMINAL_267.addFollower(TERMINAL_112);
    		TERMINAL_267.addFollower(TERMINAL_113);
    		TERMINAL_267.addFollower(TERMINAL_114);
    		TERMINAL_267.addFollower(TERMINAL_115);
    		TERMINAL_267.addFollower(TERMINAL_116);
    		TERMINAL_108.addFollower(TERMINAL_268);
    		TERMINAL_268.addFollower(TERMINAL_159);
    		TERMINAL_109.addFollower(TERMINAL_269);
    		TERMINAL_269.addFollower(TERMINAL_77);
    		TERMINAL_269.addFollower(TERMINAL_6);
    		TERMINAL_269.addFollower(TERMINAL_7);
    		TERMINAL_269.addFollower(TERMINAL_149);
    		TERMINAL_269.addFollower(TERMINAL_150);
    		TERMINAL_269.addFollower(TERMINAL_8);
    		TERMINAL_269.addFollower(TERMINAL_9);
    		TERMINAL_269.addFollower(TERMINAL_189);
    		TERMINAL_269.addFollower(TERMINAL_190);
    		TERMINAL_269.addFollower(TERMINAL_191);
    		TERMINAL_269.addFollower(TERMINAL_192);
    		TERMINAL_269.addFollower(TERMINAL_193);
    		TERMINAL_110.addFollower(TERMINAL_270);
    		TERMINAL_270.addFollower(TERMINAL_271);
    		TERMINAL_271.addFollower(TERMINAL_107);
    		TERMINAL_271.addFollower(TERMINAL_108);
    		TERMINAL_271.addFollower(TERMINAL_109);
    		TERMINAL_271.addFollower(TERMINAL_110);
    		TERMINAL_271.addFollower(TERMINAL_111);
    		TERMINAL_271.addFollower(TERMINAL_112);
    		TERMINAL_271.addFollower(TERMINAL_113);
    		TERMINAL_271.addFollower(TERMINAL_114);
    		TERMINAL_271.addFollower(TERMINAL_115);
    		TERMINAL_271.addFollower(TERMINAL_116);
    		TERMINAL_111.addFollower(TERMINAL_272);
    		TERMINAL_272.addFollower(TERMINAL_273);
    		TERMINAL_273.addFollower(TERMINAL_107);
    		TERMINAL_273.addFollower(TERMINAL_108);
    		TERMINAL_273.addFollower(TERMINAL_109);
    		TERMINAL_273.addFollower(TERMINAL_110);
    		TERMINAL_273.addFollower(TERMINAL_111);
    		TERMINAL_273.addFollower(TERMINAL_112);
    		TERMINAL_273.addFollower(TERMINAL_113);
    		TERMINAL_273.addFollower(TERMINAL_114);
    		TERMINAL_273.addFollower(TERMINAL_115);
    		TERMINAL_273.addFollower(TERMINAL_116);
    		TERMINAL_112.addFollower(TERMINAL_274);
    		TERMINAL_274.addFollower(TERMINAL_275);
    		TERMINAL_275.addFollower(TERMINAL_107);
    		TERMINAL_275.addFollower(TERMINAL_108);
    		TERMINAL_275.addFollower(TERMINAL_109);
    		TERMINAL_275.addFollower(TERMINAL_110);
    		TERMINAL_275.addFollower(TERMINAL_111);
    		TERMINAL_275.addFollower(TERMINAL_112);
    		TERMINAL_275.addFollower(TERMINAL_113);
    		TERMINAL_275.addFollower(TERMINAL_114);
    		TERMINAL_275.addFollower(TERMINAL_115);
    		TERMINAL_275.addFollower(TERMINAL_116);
    		TERMINAL_113.addFollower(TERMINAL_276);
    		TERMINAL_276.addFollower(TERMINAL_277);
    		TERMINAL_277.addFollower(TERMINAL_107);
    		TERMINAL_277.addFollower(TERMINAL_108);
    		TERMINAL_277.addFollower(TERMINAL_109);
    		TERMINAL_277.addFollower(TERMINAL_110);
    		TERMINAL_277.addFollower(TERMINAL_111);
    		TERMINAL_277.addFollower(TERMINAL_112);
    		TERMINAL_277.addFollower(TERMINAL_113);
    		TERMINAL_277.addFollower(TERMINAL_114);
    		TERMINAL_277.addFollower(TERMINAL_115);
    		TERMINAL_277.addFollower(TERMINAL_116);
    		TERMINAL_114.addFollower(TERMINAL_278);
    		TERMINAL_278.addFollower(TERMINAL_279);
    		TERMINAL_279.addFollower(TERMINAL_107);
    		TERMINAL_279.addFollower(TERMINAL_108);
    		TERMINAL_279.addFollower(TERMINAL_109);
    		TERMINAL_279.addFollower(TERMINAL_110);
    		TERMINAL_279.addFollower(TERMINAL_111);
    		TERMINAL_279.addFollower(TERMINAL_112);
    		TERMINAL_279.addFollower(TERMINAL_113);
    		TERMINAL_279.addFollower(TERMINAL_114);
    		TERMINAL_279.addFollower(TERMINAL_115);
    		TERMINAL_279.addFollower(TERMINAL_116);
    		TERMINAL_115.addFollower(TERMINAL_280);
    		TERMINAL_280.addFollower(TERMINAL_183);
    		TERMINAL_116.addFollower(TERMINAL_78);
    		TERMINAL_116.addFollower(TERMINAL_79);
    		TERMINAL_116.addFollower(TERMINAL_80);
    		TERMINAL_116.addFollower(TERMINAL_81);
    		TERMINAL_116.addFollower(TERMINAL_82);
    		TERMINAL_116.addFollower(TERMINAL_83);
    		TERMINAL_116.addFollower(TERMINAL_84);
    		TERMINAL_116.addFollower(TERMINAL_85);
    		TERMINAL_116.addFollower(TERMINAL_86);
    		TERMINAL_116.addFollower(TERMINAL_87);
    		TERMINAL_116.addFollower(TERMINAL_88);
    		TERMINAL_116.addFollower(TERMINAL_89);
    		TERMINAL_116.addFollower(TERMINAL_90);
    		TERMINAL_116.addFollower(TERMINAL_91);
    		TERMINAL_116.addFollower(TERMINAL_92);
    		TERMINAL_116.addFollower(TERMINAL_93);
    		TERMINAL_116.addFollower(TERMINAL_94);
    		TERMINAL_116.addFollower(TERMINAL_95);
    		TERMINAL_116.addFollower(TERMINAL_96);
    		TERMINAL_116.addFollower(TERMINAL_97);
    		TERMINAL_116.addFollower(TERMINAL_98);
    		TERMINAL_116.addFollower(TERMINAL_99);
    		TERMINAL_116.addFollower(TERMINAL_100);
    		TERMINAL_116.addFollower(TERMINAL_101);
    		TERMINAL_116.addFollower(TERMINAL_102);
    		TERMINAL_116.addFollower(TERMINAL_103);
    		TERMINAL_116.addFollower(TERMINAL_104);
    		TERMINAL_116.addFollower(TERMINAL_105);
    		TERMINAL_116.addFollower(TERMINAL_106);
    		TERMINAL_116.addFollower(TERMINAL_107);
    		TERMINAL_116.addFollower(TERMINAL_108);
    		TERMINAL_116.addFollower(TERMINAL_109);
    		TERMINAL_116.addFollower(TERMINAL_110);
    		TERMINAL_116.addFollower(TERMINAL_111);
    		TERMINAL_116.addFollower(TERMINAL_112);
    		TERMINAL_116.addFollower(TERMINAL_113);
    		TERMINAL_116.addFollower(TERMINAL_114);
    		TERMINAL_116.addFollower(TERMINAL_115);
    		TERMINAL_116.addFollower(TERMINAL_116);
    		TERMINAL_116.addFollower(TERMINAL_117);
    		TERMINAL_116.addFollower(TERMINAL_118);
    		TERMINAL_116.addFollower(TERMINAL_119);
    		TERMINAL_116.addFollower(TERMINAL_120);
    		TERMINAL_116.addFollower(TERMINAL_121);
    		TERMINAL_116.addFollower(TERMINAL_122);
    		TERMINAL_116.addFollower(TERMINAL_123);
    		TERMINAL_116.addFollower(TERMINAL_124);
    		TERMINAL_116.addFollower(TERMINAL_125);
    		TERMINAL_116.addFollower(TERMINAL_126);
    		TERMINAL_116.addFollower(TERMINAL_127);
    		TERMINAL_116.addFollower(TERMINAL_128);
    		TERMINAL_116.addFollower(TERMINAL_129);
    		TERMINAL_116.addFollower(TERMINAL_130);
    		TERMINAL_116.addFollower(TERMINAL_131);
    		TERMINAL_116.addFollower(TERMINAL_132);
    		TERMINAL_116.addFollower(TERMINAL_133);
    		TERMINAL_116.addFollower(TERMINAL_134);
    		TERMINAL_116.addFollower(TERMINAL_135);
    		TERMINAL_116.addFollower(TERMINAL_136);
    		TERMINAL_116.addFollower(TERMINAL_137);
    		TERMINAL_116.addFollower(TERMINAL_138);
    		TERMINAL_116.addFollower(TERMINAL_139);
    		TERMINAL_116.addFollower(TERMINAL_140);
    		TERMINAL_116.addFollower(TERMINAL_141);
    		TERMINAL_192.addFollower(TERMINAL_281);
    		TERMINAL_281.addFollower(TERMINAL_117);
    		TERMINAL_281.addFollower(TERMINAL_118);
    		TERMINAL_281.addFollower(TERMINAL_119);
    		TERMINAL_281.addFollower(TERMINAL_120);
    		TERMINAL_281.addFollower(TERMINAL_121);
    		TERMINAL_281.addFollower(TERMINAL_122);
    		TERMINAL_117.addFollower(TERMINAL_282);
    		TERMINAL_282.addFollower(TERMINAL_283);
    		TERMINAL_283.addFollower(TERMINAL_117);
    		TERMINAL_283.addFollower(TERMINAL_118);
    		TERMINAL_283.addFollower(TERMINAL_119);
    		TERMINAL_283.addFollower(TERMINAL_120);
    		TERMINAL_283.addFollower(TERMINAL_121);
    		TERMINAL_283.addFollower(TERMINAL_122);
    		TERMINAL_118.addFollower(TERMINAL_284);
    		TERMINAL_284.addFollower(TERMINAL_159);
    		TERMINAL_119.addFollower(TERMINAL_285);
    		TERMINAL_285.addFollower(TERMINAL_77);
    		TERMINAL_285.addFollower(TERMINAL_6);
    		TERMINAL_285.addFollower(TERMINAL_7);
    		TERMINAL_285.addFollower(TERMINAL_149);
    		TERMINAL_285.addFollower(TERMINAL_150);
    		TERMINAL_285.addFollower(TERMINAL_8);
    		TERMINAL_285.addFollower(TERMINAL_9);
    		TERMINAL_285.addFollower(TERMINAL_189);
    		TERMINAL_285.addFollower(TERMINAL_190);
    		TERMINAL_285.addFollower(TERMINAL_191);
    		TERMINAL_285.addFollower(TERMINAL_192);
    		TERMINAL_285.addFollower(TERMINAL_193);
    		TERMINAL_120.addFollower(TERMINAL_286);
    		TERMINAL_286.addFollower(TERMINAL_287);
    		TERMINAL_287.addFollower(TERMINAL_117);
    		TERMINAL_287.addFollower(TERMINAL_118);
    		TERMINAL_287.addFollower(TERMINAL_119);
    		TERMINAL_287.addFollower(TERMINAL_120);
    		TERMINAL_287.addFollower(TERMINAL_121);
    		TERMINAL_287.addFollower(TERMINAL_122);
    		TERMINAL_121.addFollower(TERMINAL_288);
    		TERMINAL_288.addFollower(TERMINAL_289);
    		TERMINAL_289.addFollower(TERMINAL_117);
    		TERMINAL_289.addFollower(TERMINAL_118);
    		TERMINAL_289.addFollower(TERMINAL_119);
    		TERMINAL_289.addFollower(TERMINAL_120);
    		TERMINAL_289.addFollower(TERMINAL_121);
    		TERMINAL_289.addFollower(TERMINAL_122);
    		TERMINAL_122.addFollower(TERMINAL_78);
    		TERMINAL_122.addFollower(TERMINAL_79);
    		TERMINAL_122.addFollower(TERMINAL_80);
    		TERMINAL_122.addFollower(TERMINAL_81);
    		TERMINAL_122.addFollower(TERMINAL_82);
    		TERMINAL_122.addFollower(TERMINAL_83);
    		TERMINAL_122.addFollower(TERMINAL_84);
    		TERMINAL_122.addFollower(TERMINAL_85);
    		TERMINAL_122.addFollower(TERMINAL_86);
    		TERMINAL_122.addFollower(TERMINAL_87);
    		TERMINAL_122.addFollower(TERMINAL_88);
    		TERMINAL_122.addFollower(TERMINAL_89);
    		TERMINAL_122.addFollower(TERMINAL_90);
    		TERMINAL_122.addFollower(TERMINAL_91);
    		TERMINAL_122.addFollower(TERMINAL_92);
    		TERMINAL_122.addFollower(TERMINAL_93);
    		TERMINAL_122.addFollower(TERMINAL_94);
    		TERMINAL_122.addFollower(TERMINAL_95);
    		TERMINAL_122.addFollower(TERMINAL_96);
    		TERMINAL_122.addFollower(TERMINAL_97);
    		TERMINAL_122.addFollower(TERMINAL_98);
    		TERMINAL_122.addFollower(TERMINAL_99);
    		TERMINAL_122.addFollower(TERMINAL_100);
    		TERMINAL_122.addFollower(TERMINAL_101);
    		TERMINAL_122.addFollower(TERMINAL_102);
    		TERMINAL_122.addFollower(TERMINAL_103);
    		TERMINAL_122.addFollower(TERMINAL_104);
    		TERMINAL_122.addFollower(TERMINAL_105);
    		TERMINAL_122.addFollower(TERMINAL_106);
    		TERMINAL_122.addFollower(TERMINAL_107);
    		TERMINAL_122.addFollower(TERMINAL_108);
    		TERMINAL_122.addFollower(TERMINAL_109);
    		TERMINAL_122.addFollower(TERMINAL_110);
    		TERMINAL_122.addFollower(TERMINAL_111);
    		TERMINAL_122.addFollower(TERMINAL_112);
    		TERMINAL_122.addFollower(TERMINAL_113);
    		TERMINAL_122.addFollower(TERMINAL_114);
    		TERMINAL_122.addFollower(TERMINAL_115);
    		TERMINAL_122.addFollower(TERMINAL_116);
    		TERMINAL_122.addFollower(TERMINAL_117);
    		TERMINAL_122.addFollower(TERMINAL_118);
    		TERMINAL_122.addFollower(TERMINAL_119);
    		TERMINAL_122.addFollower(TERMINAL_120);
    		TERMINAL_122.addFollower(TERMINAL_121);
    		TERMINAL_122.addFollower(TERMINAL_122);
    		TERMINAL_122.addFollower(TERMINAL_123);
    		TERMINAL_122.addFollower(TERMINAL_124);
    		TERMINAL_122.addFollower(TERMINAL_125);
    		TERMINAL_122.addFollower(TERMINAL_126);
    		TERMINAL_122.addFollower(TERMINAL_127);
    		TERMINAL_122.addFollower(TERMINAL_128);
    		TERMINAL_122.addFollower(TERMINAL_129);
    		TERMINAL_122.addFollower(TERMINAL_130);
    		TERMINAL_122.addFollower(TERMINAL_131);
    		TERMINAL_122.addFollower(TERMINAL_132);
    		TERMINAL_122.addFollower(TERMINAL_133);
    		TERMINAL_122.addFollower(TERMINAL_134);
    		TERMINAL_122.addFollower(TERMINAL_135);
    		TERMINAL_122.addFollower(TERMINAL_136);
    		TERMINAL_122.addFollower(TERMINAL_137);
    		TERMINAL_122.addFollower(TERMINAL_138);
    		TERMINAL_122.addFollower(TERMINAL_139);
    		TERMINAL_122.addFollower(TERMINAL_140);
    		TERMINAL_122.addFollower(TERMINAL_141);
    		TERMINAL_193.addFollower(TERMINAL_290);
    		TERMINAL_290.addFollower(TERMINAL_123);
    		TERMINAL_290.addFollower(TERMINAL_124);
    		TERMINAL_290.addFollower(TERMINAL_125);
    		TERMINAL_290.addFollower(TERMINAL_126);
    		TERMINAL_290.addFollower(TERMINAL_127);
    		TERMINAL_290.addFollower(TERMINAL_128);
    		TERMINAL_290.addFollower(TERMINAL_129);
    		TERMINAL_123.addFollower(TERMINAL_291);
    		TERMINAL_291.addFollower(TERMINAL_292);
    		TERMINAL_292.addFollower(TERMINAL_123);
    		TERMINAL_292.addFollower(TERMINAL_124);
    		TERMINAL_292.addFollower(TERMINAL_125);
    		TERMINAL_292.addFollower(TERMINAL_126);
    		TERMINAL_292.addFollower(TERMINAL_127);
    		TERMINAL_292.addFollower(TERMINAL_128);
    		TERMINAL_292.addFollower(TERMINAL_129);
    		TERMINAL_124.addFollower(TERMINAL_293);
    		TERMINAL_293.addFollower(TERMINAL_159);
    		TERMINAL_125.addFollower(TERMINAL_294);
    		TERMINAL_294.addFollower(TERMINAL_77);
    		TERMINAL_294.addFollower(TERMINAL_6);
    		TERMINAL_294.addFollower(TERMINAL_7);
    		TERMINAL_294.addFollower(TERMINAL_149);
    		TERMINAL_294.addFollower(TERMINAL_150);
    		TERMINAL_294.addFollower(TERMINAL_8);
    		TERMINAL_294.addFollower(TERMINAL_9);
    		TERMINAL_294.addFollower(TERMINAL_189);
    		TERMINAL_294.addFollower(TERMINAL_190);
    		TERMINAL_294.addFollower(TERMINAL_191);
    		TERMINAL_294.addFollower(TERMINAL_192);
    		TERMINAL_294.addFollower(TERMINAL_193);
    		TERMINAL_126.addFollower(TERMINAL_295);
    		TERMINAL_295.addFollower(TERMINAL_296);
    		TERMINAL_296.addFollower(TERMINAL_123);
    		TERMINAL_296.addFollower(TERMINAL_124);
    		TERMINAL_296.addFollower(TERMINAL_125);
    		TERMINAL_296.addFollower(TERMINAL_126);
    		TERMINAL_296.addFollower(TERMINAL_127);
    		TERMINAL_296.addFollower(TERMINAL_128);
    		TERMINAL_296.addFollower(TERMINAL_129);
    		TERMINAL_127.addFollower(TERMINAL_297);
    		TERMINAL_297.addFollower(TERMINAL_298);
    		TERMINAL_298.addFollower(TERMINAL_123);
    		TERMINAL_298.addFollower(TERMINAL_124);
    		TERMINAL_298.addFollower(TERMINAL_125);
    		TERMINAL_298.addFollower(TERMINAL_126);
    		TERMINAL_298.addFollower(TERMINAL_127);
    		TERMINAL_298.addFollower(TERMINAL_128);
    		TERMINAL_298.addFollower(TERMINAL_129);
    		TERMINAL_128.addFollower(TERMINAL_299);
    		TERMINAL_299.addFollower(TERMINAL_300);
    		TERMINAL_300.addFollower(TERMINAL_123);
    		TERMINAL_300.addFollower(TERMINAL_124);
    		TERMINAL_300.addFollower(TERMINAL_125);
    		TERMINAL_300.addFollower(TERMINAL_126);
    		TERMINAL_300.addFollower(TERMINAL_127);
    		TERMINAL_300.addFollower(TERMINAL_128);
    		TERMINAL_300.addFollower(TERMINAL_129);
    		TERMINAL_129.addFollower(TERMINAL_78);
    		TERMINAL_129.addFollower(TERMINAL_79);
    		TERMINAL_129.addFollower(TERMINAL_80);
    		TERMINAL_129.addFollower(TERMINAL_81);
    		TERMINAL_129.addFollower(TERMINAL_82);
    		TERMINAL_129.addFollower(TERMINAL_83);
    		TERMINAL_129.addFollower(TERMINAL_84);
    		TERMINAL_129.addFollower(TERMINAL_85);
    		TERMINAL_129.addFollower(TERMINAL_86);
    		TERMINAL_129.addFollower(TERMINAL_87);
    		TERMINAL_129.addFollower(TERMINAL_88);
    		TERMINAL_129.addFollower(TERMINAL_89);
    		TERMINAL_129.addFollower(TERMINAL_90);
    		TERMINAL_129.addFollower(TERMINAL_91);
    		TERMINAL_129.addFollower(TERMINAL_92);
    		TERMINAL_129.addFollower(TERMINAL_93);
    		TERMINAL_129.addFollower(TERMINAL_94);
    		TERMINAL_129.addFollower(TERMINAL_95);
    		TERMINAL_129.addFollower(TERMINAL_96);
    		TERMINAL_129.addFollower(TERMINAL_97);
    		TERMINAL_129.addFollower(TERMINAL_98);
    		TERMINAL_129.addFollower(TERMINAL_99);
    		TERMINAL_129.addFollower(TERMINAL_100);
    		TERMINAL_129.addFollower(TERMINAL_101);
    		TERMINAL_129.addFollower(TERMINAL_102);
    		TERMINAL_129.addFollower(TERMINAL_103);
    		TERMINAL_129.addFollower(TERMINAL_104);
    		TERMINAL_129.addFollower(TERMINAL_105);
    		TERMINAL_129.addFollower(TERMINAL_106);
    		TERMINAL_129.addFollower(TERMINAL_107);
    		TERMINAL_129.addFollower(TERMINAL_108);
    		TERMINAL_129.addFollower(TERMINAL_109);
    		TERMINAL_129.addFollower(TERMINAL_110);
    		TERMINAL_129.addFollower(TERMINAL_111);
    		TERMINAL_129.addFollower(TERMINAL_112);
    		TERMINAL_129.addFollower(TERMINAL_113);
    		TERMINAL_129.addFollower(TERMINAL_114);
    		TERMINAL_129.addFollower(TERMINAL_115);
    		TERMINAL_129.addFollower(TERMINAL_116);
    		TERMINAL_129.addFollower(TERMINAL_117);
    		TERMINAL_129.addFollower(TERMINAL_118);
    		TERMINAL_129.addFollower(TERMINAL_119);
    		TERMINAL_129.addFollower(TERMINAL_120);
    		TERMINAL_129.addFollower(TERMINAL_121);
    		TERMINAL_129.addFollower(TERMINAL_122);
    		TERMINAL_129.addFollower(TERMINAL_123);
    		TERMINAL_129.addFollower(TERMINAL_124);
    		TERMINAL_129.addFollower(TERMINAL_125);
    		TERMINAL_129.addFollower(TERMINAL_126);
    		TERMINAL_129.addFollower(TERMINAL_127);
    		TERMINAL_129.addFollower(TERMINAL_128);
    		TERMINAL_129.addFollower(TERMINAL_129);
    		TERMINAL_129.addFollower(TERMINAL_130);
    		TERMINAL_129.addFollower(TERMINAL_131);
    		TERMINAL_129.addFollower(TERMINAL_132);
    		TERMINAL_129.addFollower(TERMINAL_133);
    		TERMINAL_129.addFollower(TERMINAL_134);
    		TERMINAL_129.addFollower(TERMINAL_135);
    		TERMINAL_129.addFollower(TERMINAL_136);
    		TERMINAL_129.addFollower(TERMINAL_137);
    		TERMINAL_129.addFollower(TERMINAL_138);
    		TERMINAL_129.addFollower(TERMINAL_139);
    		TERMINAL_129.addFollower(TERMINAL_140);
    		TERMINAL_129.addFollower(TERMINAL_141);
    		TERMINAL_45.addFollower(TERMINAL_52);
    		TERMINAL_45.addFollower(TERMINAL_51);
    		TERMINAL_45.addFollower(TERMINAL_50);
    		TERMINAL_45.addFollower(TERMINAL_55);
    		TERMINAL_45.addFollower(TERMINAL_47);
    		TERMINAL_45.addFollower(TERMINAL_53);
    		TERMINAL_45.addFollower(TERMINAL_56);
    		TERMINAL_45.addFollower(TERMINAL_57);
    		TERMINAL_45.addFollower(TERMINAL_58);
    		TERMINAL_45.addFollower(TERMINAL_49);
    		TERMINAL_45.addFollower(TERMINAL_48);
    		TERMINAL_45.addFollower(TERMINAL_54);
    		TERMINAL_45.addFollower(TERMINAL_61);
    		TERMINAL_45.addFollower(TERMINAL_45);
    		TERMINAL_45.addFollower(TERMINAL_301);
    		TERMINAL_45.addFollower(TERMINAL_302);
    		TERMINAL_302.addFollower(TERMINAL_43);
    		TERMINAL_302.addFollower(TERMINAL_13);
    		TERMINAL_302.addFollower(TERMINAL_14);
    		TERMINAL_302.addFollower(TERMINAL_15);
    		TERMINAL_302.addFollower(TERMINAL_16);
    		TERMINAL_302.addFollower(TERMINAL_17);
    		TERMINAL_302.addFollower(TERMINAL_36);
    		TERMINAL_302.addFollower(TERMINAL_52);
    		TERMINAL_302.addFollower(TERMINAL_51);
    		TERMINAL_302.addFollower(TERMINAL_50);
    		TERMINAL_302.addFollower(TERMINAL_55);
    		TERMINAL_302.addFollower(TERMINAL_47);
    		TERMINAL_302.addFollower(TERMINAL_53);
    		TERMINAL_302.addFollower(TERMINAL_56);
    		TERMINAL_302.addFollower(TERMINAL_57);
    		TERMINAL_302.addFollower(TERMINAL_58);
    		TERMINAL_302.addFollower(TERMINAL_49);
    		TERMINAL_302.addFollower(TERMINAL_48);
    		TERMINAL_302.addFollower(TERMINAL_54);
    		TERMINAL_302.addFollower(TERMINAL_61);
    		TERMINAL_302.addFollower(TERMINAL_45);
    		TERMINAL_302.addFollower(TERMINAL_301);
    		TERMINAL_302.addFollower(TERMINAL_302);
    		TERMINAL_302.addFollower(TERMINAL_303);
    		TERMINAL_302.addFollower(TERMINAL_304);
    		TERMINAL_302.addFollower(TERMINAL_60);
    		TERMINAL_302.addFollower(TERMINAL_305);
    		TERMINAL_302.addFollower(TERMINAL_306);
    		TERMINAL_302.addFollower(TERMINAL_307);
    		TERMINAL_302.addFollower(TERMINAL_308);
    		TERMINAL_302.addFollower(TERMINAL_309);
    		TERMINAL_302.addFollower(TERMINAL_310);
    		TERMINAL_302.addFollower(TERMINAL_311);
    		TERMINAL_302.addFollower(TERMINAL_135);
    		TERMINAL_302.addFollower(TERMINAL_136);
    		TERMINAL_302.addFollower(TERMINAL_137);
    		TERMINAL_302.addFollower(TERMINAL_138);
    		TERMINAL_302.addFollower(TERMINAL_139);
    		TERMINAL_302.addFollower(TERMINAL_140);
    		TERMINAL_302.addFollower(TERMINAL_141);
    		TERMINAL_301.addFollower(TERMINAL_312);
    		TERMINAL_301.addFollower(TERMINAL_45);
    		TERMINAL_301.addFollower(TERMINAL_46);
    		TERMINAL_301.addFollower(TERMINAL_47);
    		TERMINAL_301.addFollower(TERMINAL_48);
    		TERMINAL_301.addFollower(TERMINAL_49);
    		TERMINAL_301.addFollower(TERMINAL_50);
    		TERMINAL_301.addFollower(TERMINAL_51);
    		TERMINAL_301.addFollower(TERMINAL_52);
    		TERMINAL_301.addFollower(TERMINAL_22);
    		TERMINAL_301.addFollower(TERMINAL_53);
    		TERMINAL_301.addFollower(TERMINAL_54);
    		TERMINAL_301.addFollower(TERMINAL_55);
    		TERMINAL_301.addFollower(TERMINAL_56);
    		TERMINAL_301.addFollower(TERMINAL_57);
    		TERMINAL_301.addFollower(TERMINAL_58);
    		TERMINAL_301.addFollower(TERMINAL_59);
    		TERMINAL_301.addFollower(TERMINAL_60);
    		TERMINAL_301.addFollower(TERMINAL_61);
    		TERMINAL_301.addFollower(TERMINAL_62);
    		TERMINAL_301.addFollower(TERMINAL_301);
    		TERMINAL_301.addFollower(TERMINAL_302);
    		TERMINAL_312.addFollower(TERMINAL_313);
    		TERMINAL_313.addFollower(TERMINAL_314);
    		TERMINAL_314.addFollower(TERMINAL_22);
    		TERMINAL_315.addFollower(TERMINAL_45);
    		TERMINAL_315.addFollower(TERMINAL_46);
    		TERMINAL_315.addFollower(TERMINAL_47);
    		TERMINAL_315.addFollower(TERMINAL_48);
    		TERMINAL_315.addFollower(TERMINAL_49);
    		TERMINAL_315.addFollower(TERMINAL_50);
    		TERMINAL_315.addFollower(TERMINAL_51);
    		TERMINAL_315.addFollower(TERMINAL_52);
    		TERMINAL_315.addFollower(TERMINAL_22);
    		TERMINAL_315.addFollower(TERMINAL_53);
    		TERMINAL_315.addFollower(TERMINAL_54);
    		TERMINAL_315.addFollower(TERMINAL_55);
    		TERMINAL_315.addFollower(TERMINAL_56);
    		TERMINAL_315.addFollower(TERMINAL_57);
    		TERMINAL_315.addFollower(TERMINAL_58);
    		TERMINAL_315.addFollower(TERMINAL_59);
    		TERMINAL_315.addFollower(TERMINAL_60);
    		TERMINAL_315.addFollower(TERMINAL_61);
    		TERMINAL_315.addFollower(TERMINAL_62);
    		TERMINAL_315.addFollower(TERMINAL_301);
    		TERMINAL_315.addFollower(TERMINAL_302);
    		TERMINAL_22.addFollower(TERMINAL_315);
    		TERMINAL_22.addFollower(TERMINAL_316);
    		TERMINAL_22.addFollower(TERMINAL_43);
    		TERMINAL_22.addFollower(TERMINAL_13);
    		TERMINAL_22.addFollower(TERMINAL_14);
    		TERMINAL_22.addFollower(TERMINAL_15);
    		TERMINAL_22.addFollower(TERMINAL_16);
    		TERMINAL_22.addFollower(TERMINAL_17);
    		TERMINAL_22.addFollower(TERMINAL_36);
    		TERMINAL_22.addFollower(TERMINAL_52);
    		TERMINAL_22.addFollower(TERMINAL_51);
    		TERMINAL_22.addFollower(TERMINAL_50);
    		TERMINAL_22.addFollower(TERMINAL_55);
    		TERMINAL_22.addFollower(TERMINAL_47);
    		TERMINAL_22.addFollower(TERMINAL_53);
    		TERMINAL_22.addFollower(TERMINAL_56);
    		TERMINAL_22.addFollower(TERMINAL_57);
    		TERMINAL_22.addFollower(TERMINAL_58);
    		TERMINAL_22.addFollower(TERMINAL_49);
    		TERMINAL_22.addFollower(TERMINAL_48);
    		TERMINAL_22.addFollower(TERMINAL_54);
    		TERMINAL_22.addFollower(TERMINAL_61);
    		TERMINAL_22.addFollower(TERMINAL_45);
    		TERMINAL_22.addFollower(TERMINAL_301);
    		TERMINAL_22.addFollower(TERMINAL_302);
    		TERMINAL_22.addFollower(TERMINAL_303);
    		TERMINAL_22.addFollower(TERMINAL_306);
    		TERMINAL_22.addFollower(TERMINAL_307);
    		TERMINAL_22.addFollower(TERMINAL_308);
    		TERMINAL_22.addFollower(TERMINAL_309);
    		TERMINAL_22.addFollower(TERMINAL_310);
    		TERMINAL_22.addFollower(TERMINAL_311);
    		TERMINAL_22.addFollower(TERMINAL_135);
    		TERMINAL_22.addFollower(TERMINAL_136);
    		TERMINAL_22.addFollower(TERMINAL_137);
    		TERMINAL_22.addFollower(TERMINAL_138);
    		TERMINAL_22.addFollower(TERMINAL_139);
    		TERMINAL_22.addFollower(TERMINAL_140);
    		TERMINAL_22.addFollower(TERMINAL_141);
    		TERMINAL_22.addFollower(TERMINAL_304);
    		TERMINAL_22.addFollower(TERMINAL_60);
    		TERMINAL_22.addFollower(TERMINAL_305);
    		TERMINAL_22.addFollower(TERMINAL_237);
    		TERMINAL_22.addFollower(TERMINAL_238);
    		TERMINAL_22.addFollower(TERMINAL_239);
    		TERMINAL_22.addFollower(TERMINAL_240);
    		TERMINAL_22.addFollower(TERMINAL_241);
    		TERMINAL_46.addFollower(TERMINAL_45);
    		TERMINAL_46.addFollower(TERMINAL_46);
    		TERMINAL_46.addFollower(TERMINAL_47);
    		TERMINAL_46.addFollower(TERMINAL_48);
    		TERMINAL_46.addFollower(TERMINAL_49);
    		TERMINAL_46.addFollower(TERMINAL_50);
    		TERMINAL_46.addFollower(TERMINAL_51);
    		TERMINAL_46.addFollower(TERMINAL_52);
    		TERMINAL_46.addFollower(TERMINAL_22);
    		TERMINAL_46.addFollower(TERMINAL_53);
    		TERMINAL_46.addFollower(TERMINAL_54);
    		TERMINAL_46.addFollower(TERMINAL_55);
    		TERMINAL_46.addFollower(TERMINAL_56);
    		TERMINAL_46.addFollower(TERMINAL_57);
    		TERMINAL_46.addFollower(TERMINAL_58);
    		TERMINAL_46.addFollower(TERMINAL_59);
    		TERMINAL_46.addFollower(TERMINAL_60);
    		TERMINAL_46.addFollower(TERMINAL_61);
    		TERMINAL_46.addFollower(TERMINAL_62);
    		TERMINAL_47.addFollower(TERMINAL_43);
    		TERMINAL_47.addFollower(TERMINAL_13);
    		TERMINAL_47.addFollower(TERMINAL_14);
    		TERMINAL_47.addFollower(TERMINAL_15);
    		TERMINAL_47.addFollower(TERMINAL_16);
    		TERMINAL_47.addFollower(TERMINAL_17);
    		TERMINAL_47.addFollower(TERMINAL_36);
    		TERMINAL_47.addFollower(TERMINAL_301);
    		TERMINAL_47.addFollower(TERMINAL_302);
    		TERMINAL_47.addFollower(TERMINAL_303);
    		TERMINAL_47.addFollower(TERMINAL_304);
    		TERMINAL_47.addFollower(TERMINAL_45);
    		TERMINAL_47.addFollower(TERMINAL_55);
    		TERMINAL_47.addFollower(TERMINAL_47);
    		TERMINAL_47.addFollower(TERMINAL_53);
    		TERMINAL_47.addFollower(TERMINAL_56);
    		TERMINAL_47.addFollower(TERMINAL_57);
    		TERMINAL_47.addFollower(TERMINAL_58);
    		TERMINAL_47.addFollower(TERMINAL_49);
    		TERMINAL_47.addFollower(TERMINAL_48);
    		TERMINAL_47.addFollower(TERMINAL_54);
    		TERMINAL_47.addFollower(TERMINAL_52);
    		TERMINAL_47.addFollower(TERMINAL_60);
    		TERMINAL_47.addFollower(TERMINAL_305);
    		TERMINAL_47.addFollower(TERMINAL_306);
    		TERMINAL_47.addFollower(TERMINAL_307);
    		TERMINAL_47.addFollower(TERMINAL_308);
    		TERMINAL_47.addFollower(TERMINAL_309);
    		TERMINAL_47.addFollower(TERMINAL_310);
    		TERMINAL_47.addFollower(TERMINAL_311);
    		TERMINAL_47.addFollower(TERMINAL_135);
    		TERMINAL_47.addFollower(TERMINAL_136);
    		TERMINAL_47.addFollower(TERMINAL_137);
    		TERMINAL_47.addFollower(TERMINAL_138);
    		TERMINAL_47.addFollower(TERMINAL_139);
    		TERMINAL_47.addFollower(TERMINAL_140);
    		TERMINAL_47.addFollower(TERMINAL_141);
    		TERMINAL_48.addFollower(TERMINAL_43);
    		TERMINAL_48.addFollower(TERMINAL_13);
    		TERMINAL_48.addFollower(TERMINAL_14);
    		TERMINAL_48.addFollower(TERMINAL_15);
    		TERMINAL_48.addFollower(TERMINAL_16);
    		TERMINAL_48.addFollower(TERMINAL_17);
    		TERMINAL_48.addFollower(TERMINAL_36);
    		TERMINAL_48.addFollower(TERMINAL_301);
    		TERMINAL_48.addFollower(TERMINAL_302);
    		TERMINAL_48.addFollower(TERMINAL_303);
    		TERMINAL_48.addFollower(TERMINAL_304);
    		TERMINAL_48.addFollower(TERMINAL_45);
    		TERMINAL_48.addFollower(TERMINAL_55);
    		TERMINAL_48.addFollower(TERMINAL_47);
    		TERMINAL_48.addFollower(TERMINAL_53);
    		TERMINAL_48.addFollower(TERMINAL_56);
    		TERMINAL_48.addFollower(TERMINAL_57);
    		TERMINAL_48.addFollower(TERMINAL_58);
    		TERMINAL_48.addFollower(TERMINAL_49);
    		TERMINAL_48.addFollower(TERMINAL_48);
    		TERMINAL_48.addFollower(TERMINAL_54);
    		TERMINAL_48.addFollower(TERMINAL_52);
    		TERMINAL_48.addFollower(TERMINAL_60);
    		TERMINAL_48.addFollower(TERMINAL_305);
    		TERMINAL_48.addFollower(TERMINAL_306);
    		TERMINAL_48.addFollower(TERMINAL_307);
    		TERMINAL_48.addFollower(TERMINAL_308);
    		TERMINAL_48.addFollower(TERMINAL_309);
    		TERMINAL_48.addFollower(TERMINAL_310);
    		TERMINAL_48.addFollower(TERMINAL_311);
    		TERMINAL_48.addFollower(TERMINAL_135);
    		TERMINAL_48.addFollower(TERMINAL_136);
    		TERMINAL_48.addFollower(TERMINAL_137);
    		TERMINAL_48.addFollower(TERMINAL_138);
    		TERMINAL_48.addFollower(TERMINAL_139);
    		TERMINAL_48.addFollower(TERMINAL_140);
    		TERMINAL_48.addFollower(TERMINAL_141);
    		TERMINAL_49.addFollower(TERMINAL_43);
    		TERMINAL_49.addFollower(TERMINAL_13);
    		TERMINAL_49.addFollower(TERMINAL_14);
    		TERMINAL_49.addFollower(TERMINAL_15);
    		TERMINAL_49.addFollower(TERMINAL_16);
    		TERMINAL_49.addFollower(TERMINAL_17);
    		TERMINAL_49.addFollower(TERMINAL_36);
    		TERMINAL_49.addFollower(TERMINAL_301);
    		TERMINAL_49.addFollower(TERMINAL_302);
    		TERMINAL_49.addFollower(TERMINAL_303);
    		TERMINAL_49.addFollower(TERMINAL_304);
    		TERMINAL_49.addFollower(TERMINAL_45);
    		TERMINAL_49.addFollower(TERMINAL_55);
    		TERMINAL_49.addFollower(TERMINAL_47);
    		TERMINAL_49.addFollower(TERMINAL_53);
    		TERMINAL_49.addFollower(TERMINAL_56);
    		TERMINAL_49.addFollower(TERMINAL_57);
    		TERMINAL_49.addFollower(TERMINAL_58);
    		TERMINAL_49.addFollower(TERMINAL_49);
    		TERMINAL_49.addFollower(TERMINAL_48);
    		TERMINAL_49.addFollower(TERMINAL_54);
    		TERMINAL_49.addFollower(TERMINAL_52);
    		TERMINAL_49.addFollower(TERMINAL_60);
    		TERMINAL_49.addFollower(TERMINAL_305);
    		TERMINAL_49.addFollower(TERMINAL_306);
    		TERMINAL_49.addFollower(TERMINAL_307);
    		TERMINAL_49.addFollower(TERMINAL_308);
    		TERMINAL_49.addFollower(TERMINAL_309);
    		TERMINAL_49.addFollower(TERMINAL_310);
    		TERMINAL_49.addFollower(TERMINAL_311);
    		TERMINAL_49.addFollower(TERMINAL_135);
    		TERMINAL_49.addFollower(TERMINAL_136);
    		TERMINAL_49.addFollower(TERMINAL_137);
    		TERMINAL_49.addFollower(TERMINAL_138);
    		TERMINAL_49.addFollower(TERMINAL_139);
    		TERMINAL_49.addFollower(TERMINAL_140);
    		TERMINAL_49.addFollower(TERMINAL_141);
    		TERMINAL_50.addFollower(TERMINAL_55);
    		TERMINAL_50.addFollower(TERMINAL_47);
    		TERMINAL_50.addFollower(TERMINAL_53);
    		TERMINAL_50.addFollower(TERMINAL_56);
    		TERMINAL_50.addFollower(TERMINAL_57);
    		TERMINAL_50.addFollower(TERMINAL_58);
    		TERMINAL_50.addFollower(TERMINAL_49);
    		TERMINAL_50.addFollower(TERMINAL_48);
    		TERMINAL_50.addFollower(TERMINAL_50);
    		TERMINAL_317.addFollower(TERMINAL_47);
    		TERMINAL_317.addFollower(TERMINAL_45);
    		TERMINAL_317.addFollower(TERMINAL_55);
    		TERMINAL_317.addFollower(TERMINAL_53);
    		TERMINAL_317.addFollower(TERMINAL_56);
    		TERMINAL_317.addFollower(TERMINAL_57);
    		TERMINAL_317.addFollower(TERMINAL_58);
    		TERMINAL_317.addFollower(TERMINAL_49);
    		TERMINAL_317.addFollower(TERMINAL_48);
    		TERMINAL_317.addFollower(TERMINAL_54);
    		TERMINAL_317.addFollower(TERMINAL_60);
    		TERMINAL_317.addFollower(TERMINAL_52);
    		TERMINAL_304.addFollower(TERMINAL_47);
    		TERMINAL_305.addFollower(TERMINAL_43);
    		TERMINAL_305.addFollower(TERMINAL_13);
    		TERMINAL_305.addFollower(TERMINAL_14);
    		TERMINAL_305.addFollower(TERMINAL_15);
    		TERMINAL_305.addFollower(TERMINAL_16);
    		TERMINAL_305.addFollower(TERMINAL_17);
    		TERMINAL_305.addFollower(TERMINAL_36);
    		TERMINAL_305.addFollower(TERMINAL_52);
    		TERMINAL_305.addFollower(TERMINAL_51);
    		TERMINAL_305.addFollower(TERMINAL_50);
    		TERMINAL_305.addFollower(TERMINAL_55);
    		TERMINAL_305.addFollower(TERMINAL_47);
    		TERMINAL_305.addFollower(TERMINAL_53);
    		TERMINAL_305.addFollower(TERMINAL_56);
    		TERMINAL_305.addFollower(TERMINAL_57);
    		TERMINAL_305.addFollower(TERMINAL_58);
    		TERMINAL_305.addFollower(TERMINAL_49);
    		TERMINAL_305.addFollower(TERMINAL_48);
    		TERMINAL_305.addFollower(TERMINAL_54);
    		TERMINAL_305.addFollower(TERMINAL_61);
    		TERMINAL_305.addFollower(TERMINAL_45);
    		TERMINAL_305.addFollower(TERMINAL_301);
    		TERMINAL_305.addFollower(TERMINAL_302);
    		TERMINAL_305.addFollower(TERMINAL_303);
    		TERMINAL_305.addFollower(TERMINAL_304);
    		TERMINAL_305.addFollower(TERMINAL_60);
    		TERMINAL_305.addFollower(TERMINAL_305);
    		TERMINAL_305.addFollower(TERMINAL_306);
    		TERMINAL_305.addFollower(TERMINAL_307);
    		TERMINAL_305.addFollower(TERMINAL_308);
    		TERMINAL_305.addFollower(TERMINAL_309);
    		TERMINAL_305.addFollower(TERMINAL_310);
    		TERMINAL_305.addFollower(TERMINAL_311);
    		TERMINAL_305.addFollower(TERMINAL_135);
    		TERMINAL_305.addFollower(TERMINAL_136);
    		TERMINAL_305.addFollower(TERMINAL_137);
    		TERMINAL_305.addFollower(TERMINAL_138);
    		TERMINAL_305.addFollower(TERMINAL_139);
    		TERMINAL_305.addFollower(TERMINAL_140);
    		TERMINAL_305.addFollower(TERMINAL_141);
    		TERMINAL_51.addFollower(TERMINAL_45);
    		TERMINAL_51.addFollower(TERMINAL_46);
    		TERMINAL_51.addFollower(TERMINAL_47);
    		TERMINAL_51.addFollower(TERMINAL_48);
    		TERMINAL_51.addFollower(TERMINAL_49);
    		TERMINAL_51.addFollower(TERMINAL_50);
    		TERMINAL_51.addFollower(TERMINAL_51);
    		TERMINAL_51.addFollower(TERMINAL_52);
    		TERMINAL_51.addFollower(TERMINAL_22);
    		TERMINAL_51.addFollower(TERMINAL_53);
    		TERMINAL_51.addFollower(TERMINAL_54);
    		TERMINAL_51.addFollower(TERMINAL_55);
    		TERMINAL_51.addFollower(TERMINAL_56);
    		TERMINAL_51.addFollower(TERMINAL_57);
    		TERMINAL_51.addFollower(TERMINAL_58);
    		TERMINAL_51.addFollower(TERMINAL_59);
    		TERMINAL_51.addFollower(TERMINAL_60);
    		TERMINAL_51.addFollower(TERMINAL_61);
    		TERMINAL_51.addFollower(TERMINAL_62);
    		TERMINAL_51.addFollower(TERMINAL_303);
    		TERMINAL_303.addFollower(TERMINAL_45);
    		TERMINAL_303.addFollower(TERMINAL_46);
    		TERMINAL_303.addFollower(TERMINAL_47);
    		TERMINAL_303.addFollower(TERMINAL_48);
    		TERMINAL_303.addFollower(TERMINAL_49);
    		TERMINAL_303.addFollower(TERMINAL_50);
    		TERMINAL_303.addFollower(TERMINAL_51);
    		TERMINAL_303.addFollower(TERMINAL_52);
    		TERMINAL_303.addFollower(TERMINAL_22);
    		TERMINAL_303.addFollower(TERMINAL_53);
    		TERMINAL_303.addFollower(TERMINAL_54);
    		TERMINAL_303.addFollower(TERMINAL_55);
    		TERMINAL_303.addFollower(TERMINAL_56);
    		TERMINAL_303.addFollower(TERMINAL_57);
    		TERMINAL_303.addFollower(TERMINAL_58);
    		TERMINAL_303.addFollower(TERMINAL_59);
    		TERMINAL_303.addFollower(TERMINAL_60);
    		TERMINAL_303.addFollower(TERMINAL_61);
    		TERMINAL_303.addFollower(TERMINAL_62);
    		TERMINAL_318.addFollower(TERMINAL_45);
    		TERMINAL_318.addFollower(TERMINAL_46);
    		TERMINAL_318.addFollower(TERMINAL_47);
    		TERMINAL_318.addFollower(TERMINAL_48);
    		TERMINAL_318.addFollower(TERMINAL_49);
    		TERMINAL_318.addFollower(TERMINAL_50);
    		TERMINAL_318.addFollower(TERMINAL_51);
    		TERMINAL_318.addFollower(TERMINAL_52);
    		TERMINAL_318.addFollower(TERMINAL_22);
    		TERMINAL_318.addFollower(TERMINAL_53);
    		TERMINAL_318.addFollower(TERMINAL_54);
    		TERMINAL_318.addFollower(TERMINAL_55);
    		TERMINAL_318.addFollower(TERMINAL_56);
    		TERMINAL_318.addFollower(TERMINAL_57);
    		TERMINAL_318.addFollower(TERMINAL_58);
    		TERMINAL_318.addFollower(TERMINAL_59);
    		TERMINAL_318.addFollower(TERMINAL_60);
    		TERMINAL_318.addFollower(TERMINAL_61);
    		TERMINAL_318.addFollower(TERMINAL_62);
    		TERMINAL_52.addFollower(TERMINAL_319);
    		TERMINAL_319.addFollower(TERMINAL_320);
    		TERMINAL_320.addFollower(TERMINAL_22);
    		TERMINAL_316.addFollower(TERMINAL_45);
    		TERMINAL_316.addFollower(TERMINAL_46);
    		TERMINAL_316.addFollower(TERMINAL_47);
    		TERMINAL_316.addFollower(TERMINAL_48);
    		TERMINAL_316.addFollower(TERMINAL_49);
    		TERMINAL_316.addFollower(TERMINAL_50);
    		TERMINAL_316.addFollower(TERMINAL_51);
    		TERMINAL_316.addFollower(TERMINAL_52);
    		TERMINAL_316.addFollower(TERMINAL_22);
    		TERMINAL_316.addFollower(TERMINAL_53);
    		TERMINAL_316.addFollower(TERMINAL_54);
    		TERMINAL_316.addFollower(TERMINAL_55);
    		TERMINAL_316.addFollower(TERMINAL_56);
    		TERMINAL_316.addFollower(TERMINAL_57);
    		TERMINAL_316.addFollower(TERMINAL_58);
    		TERMINAL_316.addFollower(TERMINAL_59);
    		TERMINAL_316.addFollower(TERMINAL_60);
    		TERMINAL_316.addFollower(TERMINAL_61);
    		TERMINAL_316.addFollower(TERMINAL_62);
    		TERMINAL_53.addFollower(TERMINAL_43);
    		TERMINAL_53.addFollower(TERMINAL_13);
    		TERMINAL_53.addFollower(TERMINAL_14);
    		TERMINAL_53.addFollower(TERMINAL_15);
    		TERMINAL_53.addFollower(TERMINAL_16);
    		TERMINAL_53.addFollower(TERMINAL_17);
    		TERMINAL_53.addFollower(TERMINAL_36);
    		TERMINAL_53.addFollower(TERMINAL_52);
    		TERMINAL_53.addFollower(TERMINAL_51);
    		TERMINAL_53.addFollower(TERMINAL_50);
    		TERMINAL_53.addFollower(TERMINAL_55);
    		TERMINAL_53.addFollower(TERMINAL_47);
    		TERMINAL_53.addFollower(TERMINAL_53);
    		TERMINAL_53.addFollower(TERMINAL_56);
    		TERMINAL_53.addFollower(TERMINAL_57);
    		TERMINAL_53.addFollower(TERMINAL_58);
    		TERMINAL_53.addFollower(TERMINAL_49);
    		TERMINAL_53.addFollower(TERMINAL_48);
    		TERMINAL_53.addFollower(TERMINAL_54);
    		TERMINAL_53.addFollower(TERMINAL_61);
    		TERMINAL_53.addFollower(TERMINAL_45);
    		TERMINAL_53.addFollower(TERMINAL_301);
    		TERMINAL_53.addFollower(TERMINAL_302);
    		TERMINAL_53.addFollower(TERMINAL_303);
    		TERMINAL_53.addFollower(TERMINAL_304);
    		TERMINAL_53.addFollower(TERMINAL_60);
    		TERMINAL_53.addFollower(TERMINAL_305);
    		TERMINAL_53.addFollower(TERMINAL_306);
    		TERMINAL_53.addFollower(TERMINAL_307);
    		TERMINAL_53.addFollower(TERMINAL_308);
    		TERMINAL_53.addFollower(TERMINAL_309);
    		TERMINAL_53.addFollower(TERMINAL_310);
    		TERMINAL_53.addFollower(TERMINAL_311);
    		TERMINAL_53.addFollower(TERMINAL_135);
    		TERMINAL_53.addFollower(TERMINAL_136);
    		TERMINAL_53.addFollower(TERMINAL_137);
    		TERMINAL_53.addFollower(TERMINAL_138);
    		TERMINAL_53.addFollower(TERMINAL_139);
    		TERMINAL_53.addFollower(TERMINAL_140);
    		TERMINAL_53.addFollower(TERMINAL_141);
    		TERMINAL_53.addFollower(TERMINAL_321);
    		TERMINAL_53.addFollower(TERMINAL_322);
    		TERMINAL_54.addFollower(TERMINAL_323);
    		TERMINAL_323.addFollower(TERMINAL_45);
    		TERMINAL_323.addFollower(TERMINAL_46);
    		TERMINAL_323.addFollower(TERMINAL_47);
    		TERMINAL_323.addFollower(TERMINAL_48);
    		TERMINAL_323.addFollower(TERMINAL_49);
    		TERMINAL_323.addFollower(TERMINAL_50);
    		TERMINAL_323.addFollower(TERMINAL_51);
    		TERMINAL_323.addFollower(TERMINAL_52);
    		TERMINAL_323.addFollower(TERMINAL_22);
    		TERMINAL_323.addFollower(TERMINAL_53);
    		TERMINAL_323.addFollower(TERMINAL_54);
    		TERMINAL_323.addFollower(TERMINAL_55);
    		TERMINAL_323.addFollower(TERMINAL_56);
    		TERMINAL_323.addFollower(TERMINAL_57);
    		TERMINAL_323.addFollower(TERMINAL_58);
    		TERMINAL_323.addFollower(TERMINAL_59);
    		TERMINAL_323.addFollower(TERMINAL_60);
    		TERMINAL_323.addFollower(TERMINAL_61);
    		TERMINAL_323.addFollower(TERMINAL_62);
    		TERMINAL_323.addFollower(TERMINAL_307);
    		TERMINAL_306.addFollower(TERMINAL_45);
    		TERMINAL_306.addFollower(TERMINAL_46);
    		TERMINAL_306.addFollower(TERMINAL_47);
    		TERMINAL_306.addFollower(TERMINAL_48);
    		TERMINAL_306.addFollower(TERMINAL_49);
    		TERMINAL_306.addFollower(TERMINAL_50);
    		TERMINAL_306.addFollower(TERMINAL_51);
    		TERMINAL_306.addFollower(TERMINAL_52);
    		TERMINAL_306.addFollower(TERMINAL_22);
    		TERMINAL_306.addFollower(TERMINAL_53);
    		TERMINAL_306.addFollower(TERMINAL_54);
    		TERMINAL_306.addFollower(TERMINAL_55);
    		TERMINAL_306.addFollower(TERMINAL_56);
    		TERMINAL_306.addFollower(TERMINAL_57);
    		TERMINAL_306.addFollower(TERMINAL_58);
    		TERMINAL_306.addFollower(TERMINAL_59);
    		TERMINAL_306.addFollower(TERMINAL_60);
    		TERMINAL_306.addFollower(TERMINAL_61);
    		TERMINAL_306.addFollower(TERMINAL_62);
    		TERMINAL_307.addFollower(TERMINAL_43);
    		TERMINAL_307.addFollower(TERMINAL_13);
    		TERMINAL_307.addFollower(TERMINAL_14);
    		TERMINAL_307.addFollower(TERMINAL_15);
    		TERMINAL_307.addFollower(TERMINAL_16);
    		TERMINAL_307.addFollower(TERMINAL_17);
    		TERMINAL_307.addFollower(TERMINAL_36);
    		TERMINAL_307.addFollower(TERMINAL_52);
    		TERMINAL_307.addFollower(TERMINAL_51);
    		TERMINAL_307.addFollower(TERMINAL_50);
    		TERMINAL_307.addFollower(TERMINAL_55);
    		TERMINAL_307.addFollower(TERMINAL_47);
    		TERMINAL_307.addFollower(TERMINAL_53);
    		TERMINAL_307.addFollower(TERMINAL_56);
    		TERMINAL_307.addFollower(TERMINAL_57);
    		TERMINAL_307.addFollower(TERMINAL_58);
    		TERMINAL_307.addFollower(TERMINAL_49);
    		TERMINAL_307.addFollower(TERMINAL_48);
    		TERMINAL_307.addFollower(TERMINAL_54);
    		TERMINAL_307.addFollower(TERMINAL_61);
    		TERMINAL_307.addFollower(TERMINAL_45);
    		TERMINAL_307.addFollower(TERMINAL_301);
    		TERMINAL_307.addFollower(TERMINAL_302);
    		TERMINAL_307.addFollower(TERMINAL_303);
    		TERMINAL_307.addFollower(TERMINAL_304);
    		TERMINAL_307.addFollower(TERMINAL_60);
    		TERMINAL_307.addFollower(TERMINAL_305);
    		TERMINAL_307.addFollower(TERMINAL_306);
    		TERMINAL_307.addFollower(TERMINAL_307);
    		TERMINAL_307.addFollower(TERMINAL_308);
    		TERMINAL_307.addFollower(TERMINAL_309);
    		TERMINAL_307.addFollower(TERMINAL_310);
    		TERMINAL_307.addFollower(TERMINAL_311);
    		TERMINAL_307.addFollower(TERMINAL_135);
    		TERMINAL_307.addFollower(TERMINAL_136);
    		TERMINAL_307.addFollower(TERMINAL_137);
    		TERMINAL_307.addFollower(TERMINAL_138);
    		TERMINAL_307.addFollower(TERMINAL_139);
    		TERMINAL_307.addFollower(TERMINAL_140);
    		TERMINAL_307.addFollower(TERMINAL_141);
    		TERMINAL_321.addFollower(TERMINAL_55);
    		TERMINAL_321.addFollower(TERMINAL_47);
    		TERMINAL_321.addFollower(TERMINAL_53);
    		TERMINAL_321.addFollower(TERMINAL_56);
    		TERMINAL_321.addFollower(TERMINAL_57);
    		TERMINAL_321.addFollower(TERMINAL_58);
    		TERMINAL_321.addFollower(TERMINAL_49);
    		TERMINAL_321.addFollower(TERMINAL_48);
    		TERMINAL_321.addFollower(TERMINAL_54);
    		TERMINAL_321.addFollower(TERMINAL_60);
    		TERMINAL_321.addFollower(TERMINAL_59);
    		TERMINAL_322.addFollower(TERMINAL_324);
    		TERMINAL_324.addFollower(TERMINAL_55);
    		TERMINAL_324.addFollower(TERMINAL_47);
    		TERMINAL_324.addFollower(TERMINAL_53);
    		TERMINAL_324.addFollower(TERMINAL_56);
    		TERMINAL_324.addFollower(TERMINAL_57);
    		TERMINAL_324.addFollower(TERMINAL_58);
    		TERMINAL_324.addFollower(TERMINAL_49);
    		TERMINAL_324.addFollower(TERMINAL_48);
    		TERMINAL_324.addFollower(TERMINAL_54);
    		TERMINAL_324.addFollower(TERMINAL_60);
    		TERMINAL_324.addFollower(TERMINAL_59);
    		TERMINAL_56.addFollower(TERMINAL_43);
    		TERMINAL_56.addFollower(TERMINAL_13);
    		TERMINAL_56.addFollower(TERMINAL_14);
    		TERMINAL_56.addFollower(TERMINAL_15);
    		TERMINAL_56.addFollower(TERMINAL_16);
    		TERMINAL_56.addFollower(TERMINAL_17);
    		TERMINAL_56.addFollower(TERMINAL_36);
    		TERMINAL_56.addFollower(TERMINAL_52);
    		TERMINAL_56.addFollower(TERMINAL_51);
    		TERMINAL_56.addFollower(TERMINAL_50);
    		TERMINAL_56.addFollower(TERMINAL_55);
    		TERMINAL_56.addFollower(TERMINAL_47);
    		TERMINAL_56.addFollower(TERMINAL_53);
    		TERMINAL_56.addFollower(TERMINAL_56);
    		TERMINAL_56.addFollower(TERMINAL_57);
    		TERMINAL_56.addFollower(TERMINAL_58);
    		TERMINAL_56.addFollower(TERMINAL_49);
    		TERMINAL_56.addFollower(TERMINAL_48);
    		TERMINAL_56.addFollower(TERMINAL_54);
    		TERMINAL_56.addFollower(TERMINAL_61);
    		TERMINAL_56.addFollower(TERMINAL_45);
    		TERMINAL_56.addFollower(TERMINAL_301);
    		TERMINAL_56.addFollower(TERMINAL_302);
    		TERMINAL_56.addFollower(TERMINAL_303);
    		TERMINAL_56.addFollower(TERMINAL_304);
    		TERMINAL_56.addFollower(TERMINAL_60);
    		TERMINAL_56.addFollower(TERMINAL_305);
    		TERMINAL_56.addFollower(TERMINAL_306);
    		TERMINAL_56.addFollower(TERMINAL_307);
    		TERMINAL_56.addFollower(TERMINAL_308);
    		TERMINAL_56.addFollower(TERMINAL_309);
    		TERMINAL_56.addFollower(TERMINAL_310);
    		TERMINAL_56.addFollower(TERMINAL_311);
    		TERMINAL_56.addFollower(TERMINAL_135);
    		TERMINAL_56.addFollower(TERMINAL_136);
    		TERMINAL_56.addFollower(TERMINAL_137);
    		TERMINAL_56.addFollower(TERMINAL_138);
    		TERMINAL_56.addFollower(TERMINAL_139);
    		TERMINAL_56.addFollower(TERMINAL_140);
    		TERMINAL_56.addFollower(TERMINAL_141);
    		TERMINAL_56.addFollower(TERMINAL_321);
    		TERMINAL_56.addFollower(TERMINAL_322);
    		TERMINAL_58.addFollower(TERMINAL_43);
    		TERMINAL_58.addFollower(TERMINAL_13);
    		TERMINAL_58.addFollower(TERMINAL_14);
    		TERMINAL_58.addFollower(TERMINAL_15);
    		TERMINAL_58.addFollower(TERMINAL_16);
    		TERMINAL_58.addFollower(TERMINAL_17);
    		TERMINAL_58.addFollower(TERMINAL_36);
    		TERMINAL_58.addFollower(TERMINAL_301);
    		TERMINAL_58.addFollower(TERMINAL_302);
    		TERMINAL_58.addFollower(TERMINAL_303);
    		TERMINAL_58.addFollower(TERMINAL_304);
    		TERMINAL_58.addFollower(TERMINAL_45);
    		TERMINAL_58.addFollower(TERMINAL_55);
    		TERMINAL_58.addFollower(TERMINAL_47);
    		TERMINAL_58.addFollower(TERMINAL_53);
    		TERMINAL_58.addFollower(TERMINAL_56);
    		TERMINAL_58.addFollower(TERMINAL_57);
    		TERMINAL_58.addFollower(TERMINAL_58);
    		TERMINAL_58.addFollower(TERMINAL_49);
    		TERMINAL_58.addFollower(TERMINAL_48);
    		TERMINAL_58.addFollower(TERMINAL_54);
    		TERMINAL_58.addFollower(TERMINAL_52);
    		TERMINAL_58.addFollower(TERMINAL_60);
    		TERMINAL_58.addFollower(TERMINAL_305);
    		TERMINAL_58.addFollower(TERMINAL_306);
    		TERMINAL_58.addFollower(TERMINAL_307);
    		TERMINAL_58.addFollower(TERMINAL_308);
    		TERMINAL_58.addFollower(TERMINAL_309);
    		TERMINAL_58.addFollower(TERMINAL_310);
    		TERMINAL_58.addFollower(TERMINAL_311);
    		TERMINAL_58.addFollower(TERMINAL_135);
    		TERMINAL_58.addFollower(TERMINAL_136);
    		TERMINAL_58.addFollower(TERMINAL_137);
    		TERMINAL_58.addFollower(TERMINAL_138);
    		TERMINAL_58.addFollower(TERMINAL_139);
    		TERMINAL_58.addFollower(TERMINAL_140);
    		TERMINAL_58.addFollower(TERMINAL_141);
    		TERMINAL_55.addFollower(TERMINAL_47);
    		TERMINAL_55.addFollower(TERMINAL_53);
    		TERMINAL_55.addFollower(TERMINAL_56);
    		TERMINAL_55.addFollower(TERMINAL_57);
    		TERMINAL_55.addFollower(TERMINAL_58);
    		TERMINAL_55.addFollower(TERMINAL_49);
    		TERMINAL_55.addFollower(TERMINAL_48);
    		TERMINAL_325.addFollower(TERMINAL_335);
    	}
    	public static void wire3() {
    		TERMINAL_335.addFollower(TERMINAL_325);
    		TERMINAL_335.addFollower(TERMINAL_326);
    		TERMINAL_335.addFollower(TERMINAL_327);
    		TERMINAL_335.addFollower(TERMINAL_328);
    		TERMINAL_335.addFollower(TERMINAL_329);
    		TERMINAL_335.addFollower(TERMINAL_330);
    		TERMINAL_335.addFollower(TERMINAL_331);
    		TERMINAL_335.addFollower(TERMINAL_332);
    		TERMINAL_335.addFollower(TERMINAL_333);
    		TERMINAL_335.addFollower(TERMINAL_334);
    		TERMINAL_326.addFollower(TERMINAL_336);
    		TERMINAL_336.addFollower(TERMINAL_337);
    		TERMINAL_337.addFollower(TERMINAL_45);
    		TERMINAL_337.addFollower(TERMINAL_46);
    		TERMINAL_337.addFollower(TERMINAL_47);
    		TERMINAL_337.addFollower(TERMINAL_48);
    		TERMINAL_337.addFollower(TERMINAL_49);
    		TERMINAL_337.addFollower(TERMINAL_50);
    		TERMINAL_337.addFollower(TERMINAL_51);
    		TERMINAL_337.addFollower(TERMINAL_52);
    		TERMINAL_337.addFollower(TERMINAL_22);
    		TERMINAL_337.addFollower(TERMINAL_53);
    		TERMINAL_337.addFollower(TERMINAL_54);
    		TERMINAL_337.addFollower(TERMINAL_55);
    		TERMINAL_337.addFollower(TERMINAL_56);
    		TERMINAL_337.addFollower(TERMINAL_57);
    		TERMINAL_337.addFollower(TERMINAL_58);
    		TERMINAL_337.addFollower(TERMINAL_59);
    		TERMINAL_337.addFollower(TERMINAL_60);
    		TERMINAL_337.addFollower(TERMINAL_61);
    		TERMINAL_337.addFollower(TERMINAL_62);
    		TERMINAL_337.addFollower(TERMINAL_309);
    		TERMINAL_308.addFollower(TERMINAL_45);
    		TERMINAL_308.addFollower(TERMINAL_46);
    		TERMINAL_308.addFollower(TERMINAL_47);
    		TERMINAL_308.addFollower(TERMINAL_48);
    		TERMINAL_308.addFollower(TERMINAL_49);
    		TERMINAL_308.addFollower(TERMINAL_50);
    		TERMINAL_308.addFollower(TERMINAL_51);
    		TERMINAL_308.addFollower(TERMINAL_52);
    		TERMINAL_308.addFollower(TERMINAL_22);
    		TERMINAL_308.addFollower(TERMINAL_53);
    		TERMINAL_308.addFollower(TERMINAL_54);
    		TERMINAL_308.addFollower(TERMINAL_55);
    		TERMINAL_308.addFollower(TERMINAL_56);
    		TERMINAL_308.addFollower(TERMINAL_57);
    		TERMINAL_308.addFollower(TERMINAL_58);
    		TERMINAL_308.addFollower(TERMINAL_59);
    		TERMINAL_308.addFollower(TERMINAL_60);
    		TERMINAL_308.addFollower(TERMINAL_61);
    		TERMINAL_308.addFollower(TERMINAL_62);
    		TERMINAL_309.addFollower(TERMINAL_325);
    		TERMINAL_309.addFollower(TERMINAL_326);
    		TERMINAL_309.addFollower(TERMINAL_327);
    		TERMINAL_309.addFollower(TERMINAL_328);
    		TERMINAL_309.addFollower(TERMINAL_329);
    		TERMINAL_309.addFollower(TERMINAL_330);
    		TERMINAL_309.addFollower(TERMINAL_331);
    		TERMINAL_309.addFollower(TERMINAL_332);
    		TERMINAL_309.addFollower(TERMINAL_333);
    		TERMINAL_309.addFollower(TERMINAL_334);
    		TERMINAL_327.addFollower(TERMINAL_338);
    		TERMINAL_338.addFollower(TERMINAL_325);
    		TERMINAL_338.addFollower(TERMINAL_326);
    		TERMINAL_338.addFollower(TERMINAL_327);
    		TERMINAL_338.addFollower(TERMINAL_328);
    		TERMINAL_338.addFollower(TERMINAL_329);
    		TERMINAL_338.addFollower(TERMINAL_330);
    		TERMINAL_338.addFollower(TERMINAL_331);
    		TERMINAL_338.addFollower(TERMINAL_332);
    		TERMINAL_338.addFollower(TERMINAL_333);
    		TERMINAL_338.addFollower(TERMINAL_334);
    		TERMINAL_328.addFollower(TERMINAL_339);
    		TERMINAL_339.addFollower(TERMINAL_325);
    		TERMINAL_339.addFollower(TERMINAL_326);
    		TERMINAL_339.addFollower(TERMINAL_327);
    		TERMINAL_339.addFollower(TERMINAL_328);
    		TERMINAL_339.addFollower(TERMINAL_329);
    		TERMINAL_339.addFollower(TERMINAL_330);
    		TERMINAL_339.addFollower(TERMINAL_331);
    		TERMINAL_339.addFollower(TERMINAL_332);
    		TERMINAL_339.addFollower(TERMINAL_333);
    		TERMINAL_339.addFollower(TERMINAL_334);
    		TERMINAL_329.addFollower(TERMINAL_45);
    		TERMINAL_329.addFollower(TERMINAL_46);
    		TERMINAL_329.addFollower(TERMINAL_47);
    		TERMINAL_329.addFollower(TERMINAL_48);
    		TERMINAL_329.addFollower(TERMINAL_49);
    		TERMINAL_329.addFollower(TERMINAL_50);
    		TERMINAL_329.addFollower(TERMINAL_51);
    		TERMINAL_329.addFollower(TERMINAL_52);
    		TERMINAL_329.addFollower(TERMINAL_22);
    		TERMINAL_329.addFollower(TERMINAL_53);
    		TERMINAL_329.addFollower(TERMINAL_54);
    		TERMINAL_329.addFollower(TERMINAL_55);
    		TERMINAL_329.addFollower(TERMINAL_56);
    		TERMINAL_329.addFollower(TERMINAL_57);
    		TERMINAL_329.addFollower(TERMINAL_58);
    		TERMINAL_329.addFollower(TERMINAL_59);
    		TERMINAL_329.addFollower(TERMINAL_60);
    		TERMINAL_329.addFollower(TERMINAL_61);
    		TERMINAL_329.addFollower(TERMINAL_62);
    		TERMINAL_340.addFollower(TERMINAL_43);
    		TERMINAL_340.addFollower(TERMINAL_13);
    		TERMINAL_340.addFollower(TERMINAL_14);
    		TERMINAL_340.addFollower(TERMINAL_15);
    		TERMINAL_340.addFollower(TERMINAL_16);
    		TERMINAL_340.addFollower(TERMINAL_17);
    		TERMINAL_340.addFollower(TERMINAL_36);
    		TERMINAL_340.addFollower(TERMINAL_52);
    		TERMINAL_340.addFollower(TERMINAL_51);
    		TERMINAL_340.addFollower(TERMINAL_50);
    		TERMINAL_340.addFollower(TERMINAL_55);
    		TERMINAL_340.addFollower(TERMINAL_47);
    		TERMINAL_340.addFollower(TERMINAL_53);
    		TERMINAL_340.addFollower(TERMINAL_56);
    		TERMINAL_340.addFollower(TERMINAL_57);
    		TERMINAL_340.addFollower(TERMINAL_58);
    		TERMINAL_340.addFollower(TERMINAL_49);
    		TERMINAL_340.addFollower(TERMINAL_48);
    		TERMINAL_340.addFollower(TERMINAL_54);
    		TERMINAL_340.addFollower(TERMINAL_61);
    		TERMINAL_340.addFollower(TERMINAL_45);
    		TERMINAL_340.addFollower(TERMINAL_301);
    		TERMINAL_340.addFollower(TERMINAL_302);
    		TERMINAL_340.addFollower(TERMINAL_303);
    		TERMINAL_340.addFollower(TERMINAL_304);
    		TERMINAL_340.addFollower(TERMINAL_60);
    		TERMINAL_340.addFollower(TERMINAL_305);
    		TERMINAL_340.addFollower(TERMINAL_306);
    		TERMINAL_340.addFollower(TERMINAL_307);
    		TERMINAL_340.addFollower(TERMINAL_308);
    		TERMINAL_340.addFollower(TERMINAL_309);
    		TERMINAL_340.addFollower(TERMINAL_310);
    		TERMINAL_340.addFollower(TERMINAL_311);
    		TERMINAL_340.addFollower(TERMINAL_135);
    		TERMINAL_340.addFollower(TERMINAL_136);
    		TERMINAL_340.addFollower(TERMINAL_137);
    		TERMINAL_340.addFollower(TERMINAL_138);
    		TERMINAL_340.addFollower(TERMINAL_139);
    		TERMINAL_340.addFollower(TERMINAL_140);
    		TERMINAL_340.addFollower(TERMINAL_141);
    		TERMINAL_340.addFollower(TERMINAL_321);
    		TERMINAL_340.addFollower(TERMINAL_322);
    		TERMINAL_330.addFollower(TERMINAL_45);
    		TERMINAL_330.addFollower(TERMINAL_46);
    		TERMINAL_330.addFollower(TERMINAL_47);
    		TERMINAL_330.addFollower(TERMINAL_48);
    		TERMINAL_330.addFollower(TERMINAL_49);
    		TERMINAL_330.addFollower(TERMINAL_50);
    		TERMINAL_330.addFollower(TERMINAL_51);
    		TERMINAL_330.addFollower(TERMINAL_52);
    		TERMINAL_330.addFollower(TERMINAL_22);
    		TERMINAL_330.addFollower(TERMINAL_53);
    		TERMINAL_330.addFollower(TERMINAL_54);
    		TERMINAL_330.addFollower(TERMINAL_55);
    		TERMINAL_330.addFollower(TERMINAL_56);
    		TERMINAL_330.addFollower(TERMINAL_57);
    		TERMINAL_330.addFollower(TERMINAL_58);
    		TERMINAL_330.addFollower(TERMINAL_59);
    		TERMINAL_330.addFollower(TERMINAL_60);
    		TERMINAL_330.addFollower(TERMINAL_61);
    		TERMINAL_330.addFollower(TERMINAL_62);
    		TERMINAL_331.addFollower(TERMINAL_45);
    		TERMINAL_331.addFollower(TERMINAL_46);
    		TERMINAL_331.addFollower(TERMINAL_47);
    		TERMINAL_331.addFollower(TERMINAL_48);
    		TERMINAL_331.addFollower(TERMINAL_49);
    		TERMINAL_331.addFollower(TERMINAL_50);
    		TERMINAL_331.addFollower(TERMINAL_51);
    		TERMINAL_331.addFollower(TERMINAL_52);
    		TERMINAL_331.addFollower(TERMINAL_22);
    		TERMINAL_331.addFollower(TERMINAL_53);
    		TERMINAL_331.addFollower(TERMINAL_54);
    		TERMINAL_331.addFollower(TERMINAL_55);
    		TERMINAL_331.addFollower(TERMINAL_56);
    		TERMINAL_331.addFollower(TERMINAL_57);
    		TERMINAL_331.addFollower(TERMINAL_58);
    		TERMINAL_331.addFollower(TERMINAL_59);
    		TERMINAL_331.addFollower(TERMINAL_60);
    		TERMINAL_331.addFollower(TERMINAL_61);
    		TERMINAL_331.addFollower(TERMINAL_62);
    		TERMINAL_332.addFollower(TERMINAL_45);
    		TERMINAL_332.addFollower(TERMINAL_46);
    		TERMINAL_332.addFollower(TERMINAL_47);
    		TERMINAL_332.addFollower(TERMINAL_48);
    		TERMINAL_332.addFollower(TERMINAL_49);
    		TERMINAL_332.addFollower(TERMINAL_50);
    		TERMINAL_332.addFollower(TERMINAL_51);
    		TERMINAL_332.addFollower(TERMINAL_52);
    		TERMINAL_332.addFollower(TERMINAL_22);
    		TERMINAL_332.addFollower(TERMINAL_53);
    		TERMINAL_332.addFollower(TERMINAL_54);
    		TERMINAL_332.addFollower(TERMINAL_55);
    		TERMINAL_332.addFollower(TERMINAL_56);
    		TERMINAL_332.addFollower(TERMINAL_57);
    		TERMINAL_332.addFollower(TERMINAL_58);
    		TERMINAL_332.addFollower(TERMINAL_59);
    		TERMINAL_332.addFollower(TERMINAL_60);
    		TERMINAL_332.addFollower(TERMINAL_61);
    		TERMINAL_332.addFollower(TERMINAL_62);
    		TERMINAL_333.addFollower(TERMINAL_45);
    		TERMINAL_333.addFollower(TERMINAL_46);
    		TERMINAL_333.addFollower(TERMINAL_47);
    		TERMINAL_333.addFollower(TERMINAL_48);
    		TERMINAL_333.addFollower(TERMINAL_49);
    		TERMINAL_333.addFollower(TERMINAL_50);
    		TERMINAL_333.addFollower(TERMINAL_51);
    		TERMINAL_333.addFollower(TERMINAL_52);
    		TERMINAL_333.addFollower(TERMINAL_22);
    		TERMINAL_333.addFollower(TERMINAL_53);
    		TERMINAL_333.addFollower(TERMINAL_54);
    		TERMINAL_333.addFollower(TERMINAL_55);
    		TERMINAL_333.addFollower(TERMINAL_56);
    		TERMINAL_333.addFollower(TERMINAL_57);
    		TERMINAL_333.addFollower(TERMINAL_58);
    		TERMINAL_333.addFollower(TERMINAL_59);
    		TERMINAL_333.addFollower(TERMINAL_60);
    		TERMINAL_333.addFollower(TERMINAL_61);
    		TERMINAL_333.addFollower(TERMINAL_62);
    		TERMINAL_334.addFollower(TERMINAL_341);
    		TERMINAL_334.addFollower(TERMINAL_342);
    		TERMINAL_334.addFollower(TERMINAL_343);
    		TERMINAL_334.addFollower(TERMINAL_344);
    		TERMINAL_334.addFollower(TERMINAL_43);
    		TERMINAL_334.addFollower(TERMINAL_13);
    		TERMINAL_334.addFollower(TERMINAL_14);
    		TERMINAL_334.addFollower(TERMINAL_15);
    		TERMINAL_334.addFollower(TERMINAL_16);
    		TERMINAL_334.addFollower(TERMINAL_17);
    		TERMINAL_334.addFollower(TERMINAL_36);
    		TERMINAL_334.addFollower(TERMINAL_52);
    		TERMINAL_334.addFollower(TERMINAL_51);
    		TERMINAL_334.addFollower(TERMINAL_50);
    		TERMINAL_334.addFollower(TERMINAL_55);
    		TERMINAL_334.addFollower(TERMINAL_47);
    		TERMINAL_334.addFollower(TERMINAL_53);
    		TERMINAL_334.addFollower(TERMINAL_56);
    		TERMINAL_334.addFollower(TERMINAL_57);
    		TERMINAL_334.addFollower(TERMINAL_58);
    		TERMINAL_334.addFollower(TERMINAL_49);
    		TERMINAL_334.addFollower(TERMINAL_48);
    		TERMINAL_334.addFollower(TERMINAL_54);
    		TERMINAL_334.addFollower(TERMINAL_61);
    		TERMINAL_334.addFollower(TERMINAL_45);
    		TERMINAL_334.addFollower(TERMINAL_301);
    		TERMINAL_334.addFollower(TERMINAL_302);
    		TERMINAL_334.addFollower(TERMINAL_303);
    		TERMINAL_334.addFollower(TERMINAL_304);
    		TERMINAL_334.addFollower(TERMINAL_60);
    		TERMINAL_334.addFollower(TERMINAL_305);
    		TERMINAL_334.addFollower(TERMINAL_306);
    		TERMINAL_334.addFollower(TERMINAL_307);
    		TERMINAL_334.addFollower(TERMINAL_308);
    		TERMINAL_334.addFollower(TERMINAL_309);
    		TERMINAL_334.addFollower(TERMINAL_310);
    		TERMINAL_334.addFollower(TERMINAL_311);
    		TERMINAL_334.addFollower(TERMINAL_135);
    		TERMINAL_334.addFollower(TERMINAL_136);
    		TERMINAL_334.addFollower(TERMINAL_137);
    		TERMINAL_334.addFollower(TERMINAL_138);
    		TERMINAL_334.addFollower(TERMINAL_139);
    		TERMINAL_334.addFollower(TERMINAL_140);
    		TERMINAL_334.addFollower(TERMINAL_141);
    		TERMINAL_334.addFollower(TERMINAL_321);
    		TERMINAL_334.addFollower(TERMINAL_322);
    		TERMINAL_341.addFollower(TERMINAL_45);
    		TERMINAL_341.addFollower(TERMINAL_46);
    		TERMINAL_341.addFollower(TERMINAL_47);
    		TERMINAL_341.addFollower(TERMINAL_48);
    		TERMINAL_341.addFollower(TERMINAL_49);
    		TERMINAL_341.addFollower(TERMINAL_50);
    		TERMINAL_341.addFollower(TERMINAL_51);
    		TERMINAL_341.addFollower(TERMINAL_52);
    		TERMINAL_341.addFollower(TERMINAL_22);
    		TERMINAL_341.addFollower(TERMINAL_53);
    		TERMINAL_341.addFollower(TERMINAL_54);
    		TERMINAL_341.addFollower(TERMINAL_55);
    		TERMINAL_341.addFollower(TERMINAL_56);
    		TERMINAL_341.addFollower(TERMINAL_57);
    		TERMINAL_341.addFollower(TERMINAL_58);
    		TERMINAL_341.addFollower(TERMINAL_59);
    		TERMINAL_341.addFollower(TERMINAL_60);
    		TERMINAL_341.addFollower(TERMINAL_61);
    		TERMINAL_341.addFollower(TERMINAL_62);
    		TERMINAL_342.addFollower(TERMINAL_45);
    		TERMINAL_342.addFollower(TERMINAL_46);
    		TERMINAL_342.addFollower(TERMINAL_47);
    		TERMINAL_342.addFollower(TERMINAL_48);
    		TERMINAL_342.addFollower(TERMINAL_49);
    		TERMINAL_342.addFollower(TERMINAL_50);
    		TERMINAL_342.addFollower(TERMINAL_51);
    		TERMINAL_342.addFollower(TERMINAL_52);
    		TERMINAL_342.addFollower(TERMINAL_22);
    		TERMINAL_342.addFollower(TERMINAL_53);
    		TERMINAL_342.addFollower(TERMINAL_54);
    		TERMINAL_342.addFollower(TERMINAL_55);
    		TERMINAL_342.addFollower(TERMINAL_56);
    		TERMINAL_342.addFollower(TERMINAL_57);
    		TERMINAL_342.addFollower(TERMINAL_58);
    		TERMINAL_342.addFollower(TERMINAL_59);
    		TERMINAL_342.addFollower(TERMINAL_60);
    		TERMINAL_342.addFollower(TERMINAL_61);
    		TERMINAL_342.addFollower(TERMINAL_62);
    		TERMINAL_343.addFollower(TERMINAL_45);
    		TERMINAL_343.addFollower(TERMINAL_46);
    		TERMINAL_343.addFollower(TERMINAL_47);
    		TERMINAL_343.addFollower(TERMINAL_48);
    		TERMINAL_343.addFollower(TERMINAL_49);
    		TERMINAL_343.addFollower(TERMINAL_50);
    		TERMINAL_343.addFollower(TERMINAL_51);
    		TERMINAL_343.addFollower(TERMINAL_52);
    		TERMINAL_343.addFollower(TERMINAL_22);
    		TERMINAL_343.addFollower(TERMINAL_53);
    		TERMINAL_343.addFollower(TERMINAL_54);
    		TERMINAL_343.addFollower(TERMINAL_55);
    		TERMINAL_343.addFollower(TERMINAL_56);
    		TERMINAL_343.addFollower(TERMINAL_57);
    		TERMINAL_343.addFollower(TERMINAL_58);
    		TERMINAL_343.addFollower(TERMINAL_59);
    		TERMINAL_343.addFollower(TERMINAL_60);
    		TERMINAL_343.addFollower(TERMINAL_61);
    		TERMINAL_343.addFollower(TERMINAL_62);
    		TERMINAL_344.addFollower(TERMINAL_45);
    		TERMINAL_344.addFollower(TERMINAL_46);
    		TERMINAL_344.addFollower(TERMINAL_47);
    		TERMINAL_344.addFollower(TERMINAL_48);
    		TERMINAL_344.addFollower(TERMINAL_49);
    		TERMINAL_344.addFollower(TERMINAL_50);
    		TERMINAL_344.addFollower(TERMINAL_51);
    		TERMINAL_344.addFollower(TERMINAL_52);
    		TERMINAL_344.addFollower(TERMINAL_22);
    		TERMINAL_344.addFollower(TERMINAL_53);
    		TERMINAL_344.addFollower(TERMINAL_54);
    		TERMINAL_344.addFollower(TERMINAL_55);
    		TERMINAL_344.addFollower(TERMINAL_56);
    		TERMINAL_344.addFollower(TERMINAL_57);
    		TERMINAL_344.addFollower(TERMINAL_58);
    		TERMINAL_344.addFollower(TERMINAL_59);
    		TERMINAL_344.addFollower(TERMINAL_60);
    		TERMINAL_344.addFollower(TERMINAL_61);
    		TERMINAL_344.addFollower(TERMINAL_62);
    		TERMINAL_345.addFollower(TERMINAL_354);
    		TERMINAL_354.addFollower(TERMINAL_345);
    		TERMINAL_354.addFollower(TERMINAL_346);
    		TERMINAL_354.addFollower(TERMINAL_347);
    		TERMINAL_354.addFollower(TERMINAL_348);
    		TERMINAL_354.addFollower(TERMINAL_349);
    		TERMINAL_354.addFollower(TERMINAL_350);
    		TERMINAL_354.addFollower(TERMINAL_351);
    		TERMINAL_354.addFollower(TERMINAL_352);
    		TERMINAL_354.addFollower(TERMINAL_353);
    		TERMINAL_354.addFollower(TERMINAL_43);
    		TERMINAL_354.addFollower(TERMINAL_13);
    		TERMINAL_354.addFollower(TERMINAL_14);
    		TERMINAL_354.addFollower(TERMINAL_15);
    		TERMINAL_354.addFollower(TERMINAL_16);
    		TERMINAL_354.addFollower(TERMINAL_17);
    		TERMINAL_354.addFollower(TERMINAL_36);
    		TERMINAL_354.addFollower(TERMINAL_52);
    		TERMINAL_354.addFollower(TERMINAL_51);
    		TERMINAL_354.addFollower(TERMINAL_50);
    		TERMINAL_354.addFollower(TERMINAL_55);
    		TERMINAL_354.addFollower(TERMINAL_47);
    		TERMINAL_354.addFollower(TERMINAL_53);
    		TERMINAL_354.addFollower(TERMINAL_56);
    		TERMINAL_354.addFollower(TERMINAL_57);
    		TERMINAL_354.addFollower(TERMINAL_58);
    		TERMINAL_354.addFollower(TERMINAL_49);
    		TERMINAL_354.addFollower(TERMINAL_48);
    		TERMINAL_354.addFollower(TERMINAL_54);
    		TERMINAL_354.addFollower(TERMINAL_61);
    		TERMINAL_354.addFollower(TERMINAL_45);
    		TERMINAL_354.addFollower(TERMINAL_301);
    		TERMINAL_354.addFollower(TERMINAL_302);
    		TERMINAL_354.addFollower(TERMINAL_303);
    		TERMINAL_354.addFollower(TERMINAL_304);
    		TERMINAL_354.addFollower(TERMINAL_60);
    		TERMINAL_354.addFollower(TERMINAL_305);
    		TERMINAL_354.addFollower(TERMINAL_306);
    		TERMINAL_354.addFollower(TERMINAL_307);
    		TERMINAL_354.addFollower(TERMINAL_308);
    		TERMINAL_354.addFollower(TERMINAL_309);
    		TERMINAL_354.addFollower(TERMINAL_310);
    		TERMINAL_354.addFollower(TERMINAL_311);
    		TERMINAL_354.addFollower(TERMINAL_135);
    		TERMINAL_354.addFollower(TERMINAL_136);
    		TERMINAL_354.addFollower(TERMINAL_137);
    		TERMINAL_354.addFollower(TERMINAL_138);
    		TERMINAL_354.addFollower(TERMINAL_139);
    		TERMINAL_354.addFollower(TERMINAL_140);
    		TERMINAL_354.addFollower(TERMINAL_141);
    		TERMINAL_354.addFollower(TERMINAL_321);
    		TERMINAL_354.addFollower(TERMINAL_322);
    		TERMINAL_346.addFollower(TERMINAL_355);
    		TERMINAL_355.addFollower(TERMINAL_356);
    		TERMINAL_356.addFollower(TERMINAL_45);
    		TERMINAL_356.addFollower(TERMINAL_46);
    		TERMINAL_356.addFollower(TERMINAL_47);
    		TERMINAL_356.addFollower(TERMINAL_48);
    		TERMINAL_356.addFollower(TERMINAL_49);
    		TERMINAL_356.addFollower(TERMINAL_50);
    		TERMINAL_356.addFollower(TERMINAL_51);
    		TERMINAL_356.addFollower(TERMINAL_52);
    		TERMINAL_356.addFollower(TERMINAL_22);
    		TERMINAL_356.addFollower(TERMINAL_53);
    		TERMINAL_356.addFollower(TERMINAL_54);
    		TERMINAL_356.addFollower(TERMINAL_55);
    		TERMINAL_356.addFollower(TERMINAL_56);
    		TERMINAL_356.addFollower(TERMINAL_57);
    		TERMINAL_356.addFollower(TERMINAL_58);
    		TERMINAL_356.addFollower(TERMINAL_59);
    		TERMINAL_356.addFollower(TERMINAL_60);
    		TERMINAL_356.addFollower(TERMINAL_61);
    		TERMINAL_356.addFollower(TERMINAL_62);
    		TERMINAL_356.addFollower(TERMINAL_357);
    		TERMINAL_358.addFollower(TERMINAL_45);
    		TERMINAL_358.addFollower(TERMINAL_46);
    		TERMINAL_358.addFollower(TERMINAL_47);
    		TERMINAL_358.addFollower(TERMINAL_48);
    		TERMINAL_358.addFollower(TERMINAL_49);
    		TERMINAL_358.addFollower(TERMINAL_50);
    		TERMINAL_358.addFollower(TERMINAL_51);
    		TERMINAL_358.addFollower(TERMINAL_52);
    		TERMINAL_358.addFollower(TERMINAL_22);
    		TERMINAL_358.addFollower(TERMINAL_53);
    		TERMINAL_358.addFollower(TERMINAL_54);
    		TERMINAL_358.addFollower(TERMINAL_55);
    		TERMINAL_358.addFollower(TERMINAL_56);
    		TERMINAL_358.addFollower(TERMINAL_57);
    		TERMINAL_358.addFollower(TERMINAL_58);
    		TERMINAL_358.addFollower(TERMINAL_59);
    		TERMINAL_358.addFollower(TERMINAL_60);
    		TERMINAL_358.addFollower(TERMINAL_61);
    		TERMINAL_358.addFollower(TERMINAL_62);
    		TERMINAL_357.addFollower(TERMINAL_345);
    		TERMINAL_357.addFollower(TERMINAL_346);
    		TERMINAL_357.addFollower(TERMINAL_347);
    		TERMINAL_357.addFollower(TERMINAL_348);
    		TERMINAL_357.addFollower(TERMINAL_349);
    		TERMINAL_357.addFollower(TERMINAL_350);
    		TERMINAL_357.addFollower(TERMINAL_351);
    		TERMINAL_357.addFollower(TERMINAL_352);
    		TERMINAL_357.addFollower(TERMINAL_353);
    		TERMINAL_357.addFollower(TERMINAL_43);
    		TERMINAL_357.addFollower(TERMINAL_13);
    		TERMINAL_357.addFollower(TERMINAL_14);
    		TERMINAL_357.addFollower(TERMINAL_15);
    		TERMINAL_357.addFollower(TERMINAL_16);
    		TERMINAL_357.addFollower(TERMINAL_17);
    		TERMINAL_357.addFollower(TERMINAL_36);
    		TERMINAL_357.addFollower(TERMINAL_52);
    		TERMINAL_357.addFollower(TERMINAL_51);
    		TERMINAL_357.addFollower(TERMINAL_50);
    		TERMINAL_357.addFollower(TERMINAL_55);
    		TERMINAL_357.addFollower(TERMINAL_47);
    		TERMINAL_357.addFollower(TERMINAL_53);
    		TERMINAL_357.addFollower(TERMINAL_56);
    		TERMINAL_357.addFollower(TERMINAL_57);
    		TERMINAL_357.addFollower(TERMINAL_58);
    		TERMINAL_357.addFollower(TERMINAL_49);
    		TERMINAL_357.addFollower(TERMINAL_48);
    		TERMINAL_357.addFollower(TERMINAL_54);
    		TERMINAL_357.addFollower(TERMINAL_61);
    		TERMINAL_357.addFollower(TERMINAL_45);
    		TERMINAL_357.addFollower(TERMINAL_301);
    		TERMINAL_357.addFollower(TERMINAL_302);
    		TERMINAL_357.addFollower(TERMINAL_303);
    		TERMINAL_357.addFollower(TERMINAL_304);
    		TERMINAL_357.addFollower(TERMINAL_60);
    		TERMINAL_357.addFollower(TERMINAL_305);
    		TERMINAL_357.addFollower(TERMINAL_306);
    		TERMINAL_357.addFollower(TERMINAL_307);
    		TERMINAL_357.addFollower(TERMINAL_308);
    		TERMINAL_357.addFollower(TERMINAL_309);
    		TERMINAL_357.addFollower(TERMINAL_310);
    		TERMINAL_357.addFollower(TERMINAL_311);
    		TERMINAL_357.addFollower(TERMINAL_135);
    		TERMINAL_357.addFollower(TERMINAL_136);
    		TERMINAL_357.addFollower(TERMINAL_137);
    		TERMINAL_357.addFollower(TERMINAL_138);
    		TERMINAL_357.addFollower(TERMINAL_139);
    		TERMINAL_357.addFollower(TERMINAL_140);
    		TERMINAL_357.addFollower(TERMINAL_141);
    		TERMINAL_357.addFollower(TERMINAL_321);
    		TERMINAL_357.addFollower(TERMINAL_322);
    		TERMINAL_347.addFollower(TERMINAL_359);
    		TERMINAL_359.addFollower(TERMINAL_345);
    		TERMINAL_359.addFollower(TERMINAL_346);
    		TERMINAL_359.addFollower(TERMINAL_347);
    		TERMINAL_359.addFollower(TERMINAL_348);
    		TERMINAL_359.addFollower(TERMINAL_349);
    		TERMINAL_359.addFollower(TERMINAL_350);
    		TERMINAL_359.addFollower(TERMINAL_351);
    		TERMINAL_359.addFollower(TERMINAL_352);
    		TERMINAL_359.addFollower(TERMINAL_353);
    		TERMINAL_359.addFollower(TERMINAL_43);
    		TERMINAL_359.addFollower(TERMINAL_13);
    		TERMINAL_359.addFollower(TERMINAL_14);
    		TERMINAL_359.addFollower(TERMINAL_15);
    		TERMINAL_359.addFollower(TERMINAL_16);
    		TERMINAL_359.addFollower(TERMINAL_17);
    		TERMINAL_359.addFollower(TERMINAL_36);
    		TERMINAL_359.addFollower(TERMINAL_52);
    		TERMINAL_359.addFollower(TERMINAL_51);
    		TERMINAL_359.addFollower(TERMINAL_50);
    		TERMINAL_359.addFollower(TERMINAL_55);
    		TERMINAL_359.addFollower(TERMINAL_47);
    		TERMINAL_359.addFollower(TERMINAL_53);
    		TERMINAL_359.addFollower(TERMINAL_56);
    		TERMINAL_359.addFollower(TERMINAL_57);
    		TERMINAL_359.addFollower(TERMINAL_58);
    		TERMINAL_359.addFollower(TERMINAL_49);
    		TERMINAL_359.addFollower(TERMINAL_48);
    		TERMINAL_359.addFollower(TERMINAL_54);
    		TERMINAL_359.addFollower(TERMINAL_61);
    		TERMINAL_359.addFollower(TERMINAL_45);
    		TERMINAL_359.addFollower(TERMINAL_301);
    		TERMINAL_359.addFollower(TERMINAL_302);
    		TERMINAL_359.addFollower(TERMINAL_303);
    		TERMINAL_359.addFollower(TERMINAL_304);
    		TERMINAL_359.addFollower(TERMINAL_60);
    		TERMINAL_359.addFollower(TERMINAL_305);
    		TERMINAL_359.addFollower(TERMINAL_306);
    		TERMINAL_359.addFollower(TERMINAL_307);
    		TERMINAL_359.addFollower(TERMINAL_308);
    		TERMINAL_359.addFollower(TERMINAL_309);
    		TERMINAL_359.addFollower(TERMINAL_310);
    		TERMINAL_359.addFollower(TERMINAL_311);
    		TERMINAL_359.addFollower(TERMINAL_135);
    		TERMINAL_359.addFollower(TERMINAL_136);
    		TERMINAL_359.addFollower(TERMINAL_137);
    		TERMINAL_359.addFollower(TERMINAL_138);
    		TERMINAL_359.addFollower(TERMINAL_139);
    		TERMINAL_359.addFollower(TERMINAL_140);
    		TERMINAL_359.addFollower(TERMINAL_141);
    		TERMINAL_359.addFollower(TERMINAL_321);
    		TERMINAL_359.addFollower(TERMINAL_322);
    		TERMINAL_348.addFollower(TERMINAL_360);
    		TERMINAL_360.addFollower(TERMINAL_345);
    		TERMINAL_360.addFollower(TERMINAL_346);
    		TERMINAL_360.addFollower(TERMINAL_347);
    		TERMINAL_360.addFollower(TERMINAL_348);
    		TERMINAL_360.addFollower(TERMINAL_349);
    		TERMINAL_360.addFollower(TERMINAL_350);
    		TERMINAL_360.addFollower(TERMINAL_351);
    		TERMINAL_360.addFollower(TERMINAL_352);
    		TERMINAL_360.addFollower(TERMINAL_353);
    		TERMINAL_360.addFollower(TERMINAL_43);
    		TERMINAL_360.addFollower(TERMINAL_13);
    		TERMINAL_360.addFollower(TERMINAL_14);
    		TERMINAL_360.addFollower(TERMINAL_15);
    		TERMINAL_360.addFollower(TERMINAL_16);
    		TERMINAL_360.addFollower(TERMINAL_17);
    		TERMINAL_360.addFollower(TERMINAL_36);
    		TERMINAL_360.addFollower(TERMINAL_52);
    		TERMINAL_360.addFollower(TERMINAL_51);
    		TERMINAL_360.addFollower(TERMINAL_50);
    		TERMINAL_360.addFollower(TERMINAL_55);
    		TERMINAL_360.addFollower(TERMINAL_47);
    		TERMINAL_360.addFollower(TERMINAL_53);
    		TERMINAL_360.addFollower(TERMINAL_56);
    		TERMINAL_360.addFollower(TERMINAL_57);
    		TERMINAL_360.addFollower(TERMINAL_58);
    		TERMINAL_360.addFollower(TERMINAL_49);
    		TERMINAL_360.addFollower(TERMINAL_48);
    		TERMINAL_360.addFollower(TERMINAL_54);
    		TERMINAL_360.addFollower(TERMINAL_61);
    		TERMINAL_360.addFollower(TERMINAL_45);
    		TERMINAL_360.addFollower(TERMINAL_301);
    		TERMINAL_360.addFollower(TERMINAL_302);
    		TERMINAL_360.addFollower(TERMINAL_303);
    		TERMINAL_360.addFollower(TERMINAL_304);
    		TERMINAL_360.addFollower(TERMINAL_60);
    		TERMINAL_360.addFollower(TERMINAL_305);
    		TERMINAL_360.addFollower(TERMINAL_306);
    		TERMINAL_360.addFollower(TERMINAL_307);
    		TERMINAL_360.addFollower(TERMINAL_308);
    		TERMINAL_360.addFollower(TERMINAL_309);
    		TERMINAL_360.addFollower(TERMINAL_310);
    		TERMINAL_360.addFollower(TERMINAL_311);
    		TERMINAL_360.addFollower(TERMINAL_135);
    		TERMINAL_360.addFollower(TERMINAL_136);
    		TERMINAL_360.addFollower(TERMINAL_137);
    		TERMINAL_360.addFollower(TERMINAL_138);
    		TERMINAL_360.addFollower(TERMINAL_139);
    		TERMINAL_360.addFollower(TERMINAL_140);
    		TERMINAL_360.addFollower(TERMINAL_141);
    		TERMINAL_360.addFollower(TERMINAL_321);
    		TERMINAL_360.addFollower(TERMINAL_322);
    		TERMINAL_349.addFollower(TERMINAL_45);
    		TERMINAL_349.addFollower(TERMINAL_46);
    		TERMINAL_349.addFollower(TERMINAL_47);
    		TERMINAL_349.addFollower(TERMINAL_48);
    		TERMINAL_349.addFollower(TERMINAL_49);
    		TERMINAL_349.addFollower(TERMINAL_50);
    		TERMINAL_349.addFollower(TERMINAL_51);
    		TERMINAL_349.addFollower(TERMINAL_52);
    		TERMINAL_349.addFollower(TERMINAL_22);
    		TERMINAL_349.addFollower(TERMINAL_53);
    		TERMINAL_349.addFollower(TERMINAL_54);
    		TERMINAL_349.addFollower(TERMINAL_55);
    		TERMINAL_349.addFollower(TERMINAL_56);
    		TERMINAL_349.addFollower(TERMINAL_57);
    		TERMINAL_349.addFollower(TERMINAL_58);
    		TERMINAL_349.addFollower(TERMINAL_59);
    		TERMINAL_349.addFollower(TERMINAL_60);
    		TERMINAL_349.addFollower(TERMINAL_61);
    		TERMINAL_349.addFollower(TERMINAL_62);
    		TERMINAL_350.addFollower(TERMINAL_45);
    		TERMINAL_350.addFollower(TERMINAL_46);
    		TERMINAL_350.addFollower(TERMINAL_47);
    		TERMINAL_350.addFollower(TERMINAL_48);
    		TERMINAL_350.addFollower(TERMINAL_49);
    		TERMINAL_350.addFollower(TERMINAL_50);
    		TERMINAL_350.addFollower(TERMINAL_51);
    		TERMINAL_350.addFollower(TERMINAL_52);
    		TERMINAL_350.addFollower(TERMINAL_22);
    		TERMINAL_350.addFollower(TERMINAL_53);
    		TERMINAL_350.addFollower(TERMINAL_54);
    		TERMINAL_350.addFollower(TERMINAL_55);
    		TERMINAL_350.addFollower(TERMINAL_56);
    		TERMINAL_350.addFollower(TERMINAL_57);
    		TERMINAL_350.addFollower(TERMINAL_58);
    		TERMINAL_350.addFollower(TERMINAL_59);
    		TERMINAL_350.addFollower(TERMINAL_60);
    		TERMINAL_350.addFollower(TERMINAL_61);
    		TERMINAL_350.addFollower(TERMINAL_62);
    		TERMINAL_351.addFollower(TERMINAL_45);
    		TERMINAL_351.addFollower(TERMINAL_46);
    		TERMINAL_351.addFollower(TERMINAL_47);
    		TERMINAL_351.addFollower(TERMINAL_48);
    		TERMINAL_351.addFollower(TERMINAL_49);
    		TERMINAL_351.addFollower(TERMINAL_50);
    		TERMINAL_351.addFollower(TERMINAL_51);
    		TERMINAL_351.addFollower(TERMINAL_52);
    		TERMINAL_351.addFollower(TERMINAL_22);
    		TERMINAL_351.addFollower(TERMINAL_53);
    		TERMINAL_351.addFollower(TERMINAL_54);
    		TERMINAL_351.addFollower(TERMINAL_55);
    		TERMINAL_351.addFollower(TERMINAL_56);
    		TERMINAL_351.addFollower(TERMINAL_57);
    		TERMINAL_351.addFollower(TERMINAL_58);
    		TERMINAL_351.addFollower(TERMINAL_59);
    		TERMINAL_351.addFollower(TERMINAL_60);
    		TERMINAL_351.addFollower(TERMINAL_61);
    		TERMINAL_351.addFollower(TERMINAL_62);
    		TERMINAL_352.addFollower(TERMINAL_45);
    		TERMINAL_352.addFollower(TERMINAL_46);
    		TERMINAL_352.addFollower(TERMINAL_47);
    		TERMINAL_352.addFollower(TERMINAL_48);
    		TERMINAL_352.addFollower(TERMINAL_49);
    		TERMINAL_352.addFollower(TERMINAL_50);
    		TERMINAL_352.addFollower(TERMINAL_51);
    		TERMINAL_352.addFollower(TERMINAL_52);
    		TERMINAL_352.addFollower(TERMINAL_22);
    		TERMINAL_352.addFollower(TERMINAL_53);
    		TERMINAL_352.addFollower(TERMINAL_54);
    		TERMINAL_352.addFollower(TERMINAL_55);
    		TERMINAL_352.addFollower(TERMINAL_56);
    		TERMINAL_352.addFollower(TERMINAL_57);
    		TERMINAL_352.addFollower(TERMINAL_58);
    		TERMINAL_352.addFollower(TERMINAL_59);
    		TERMINAL_352.addFollower(TERMINAL_60);
    		TERMINAL_352.addFollower(TERMINAL_61);
    		TERMINAL_352.addFollower(TERMINAL_62);
    		TERMINAL_353.addFollower(TERMINAL_45);
    		TERMINAL_353.addFollower(TERMINAL_46);
    		TERMINAL_353.addFollower(TERMINAL_47);
    		TERMINAL_353.addFollower(TERMINAL_48);
    		TERMINAL_353.addFollower(TERMINAL_49);
    		TERMINAL_353.addFollower(TERMINAL_50);
    		TERMINAL_353.addFollower(TERMINAL_51);
    		TERMINAL_353.addFollower(TERMINAL_52);
    		TERMINAL_353.addFollower(TERMINAL_22);
    		TERMINAL_353.addFollower(TERMINAL_53);
    		TERMINAL_353.addFollower(TERMINAL_54);
    		TERMINAL_353.addFollower(TERMINAL_55);
    		TERMINAL_353.addFollower(TERMINAL_56);
    		TERMINAL_353.addFollower(TERMINAL_57);
    		TERMINAL_353.addFollower(TERMINAL_58);
    		TERMINAL_353.addFollower(TERMINAL_59);
    		TERMINAL_353.addFollower(TERMINAL_60);
    		TERMINAL_353.addFollower(TERMINAL_61);
    		TERMINAL_353.addFollower(TERMINAL_62);
    		TERMINAL_57.addFollower(TERMINAL_361);
    		TERMINAL_361.addFollower(TERMINAL_362);
    		TERMINAL_362.addFollower(TERMINAL_363);
    		TERMINAL_363.addFollower(TERMINAL_364);
    		TERMINAL_364.addFollower(TERMINAL_45);
    		TERMINAL_364.addFollower(TERMINAL_46);
    		TERMINAL_364.addFollower(TERMINAL_47);
    		TERMINAL_364.addFollower(TERMINAL_48);
    		TERMINAL_364.addFollower(TERMINAL_49);
    		TERMINAL_364.addFollower(TERMINAL_50);
    		TERMINAL_364.addFollower(TERMINAL_51);
    		TERMINAL_364.addFollower(TERMINAL_52);
    		TERMINAL_364.addFollower(TERMINAL_22);
    		TERMINAL_364.addFollower(TERMINAL_53);
    		TERMINAL_364.addFollower(TERMINAL_54);
    		TERMINAL_364.addFollower(TERMINAL_55);
    		TERMINAL_364.addFollower(TERMINAL_56);
    		TERMINAL_364.addFollower(TERMINAL_57);
    		TERMINAL_364.addFollower(TERMINAL_58);
    		TERMINAL_364.addFollower(TERMINAL_59);
    		TERMINAL_364.addFollower(TERMINAL_60);
    		TERMINAL_364.addFollower(TERMINAL_61);
    		TERMINAL_364.addFollower(TERMINAL_62);
    		TERMINAL_364.addFollower(TERMINAL_311);
    		TERMINAL_310.addFollower(TERMINAL_45);
    		TERMINAL_310.addFollower(TERMINAL_46);
    		TERMINAL_310.addFollower(TERMINAL_47);
    		TERMINAL_310.addFollower(TERMINAL_48);
    		TERMINAL_310.addFollower(TERMINAL_49);
    		TERMINAL_310.addFollower(TERMINAL_50);
    		TERMINAL_310.addFollower(TERMINAL_51);
    		TERMINAL_310.addFollower(TERMINAL_52);
    		TERMINAL_310.addFollower(TERMINAL_22);
    		TERMINAL_310.addFollower(TERMINAL_53);
    		TERMINAL_310.addFollower(TERMINAL_54);
    		TERMINAL_310.addFollower(TERMINAL_55);
    		TERMINAL_310.addFollower(TERMINAL_56);
    		TERMINAL_310.addFollower(TERMINAL_57);
    		TERMINAL_310.addFollower(TERMINAL_58);
    		TERMINAL_310.addFollower(TERMINAL_59);
    		TERMINAL_310.addFollower(TERMINAL_60);
    		TERMINAL_310.addFollower(TERMINAL_61);
    		TERMINAL_310.addFollower(TERMINAL_62);
    		TERMINAL_311.addFollower(TERMINAL_43);
    		TERMINAL_311.addFollower(TERMINAL_13);
    		TERMINAL_311.addFollower(TERMINAL_14);
    		TERMINAL_311.addFollower(TERMINAL_15);
    		TERMINAL_311.addFollower(TERMINAL_16);
    		TERMINAL_311.addFollower(TERMINAL_17);
    		TERMINAL_311.addFollower(TERMINAL_36);
    		TERMINAL_311.addFollower(TERMINAL_52);
    		TERMINAL_311.addFollower(TERMINAL_51);
    		TERMINAL_311.addFollower(TERMINAL_50);
    		TERMINAL_311.addFollower(TERMINAL_55);
    		TERMINAL_311.addFollower(TERMINAL_47);
    		TERMINAL_311.addFollower(TERMINAL_53);
    		TERMINAL_311.addFollower(TERMINAL_56);
    		TERMINAL_311.addFollower(TERMINAL_57);
    		TERMINAL_311.addFollower(TERMINAL_58);
    		TERMINAL_311.addFollower(TERMINAL_49);
    		TERMINAL_311.addFollower(TERMINAL_48);
    		TERMINAL_311.addFollower(TERMINAL_54);
    		TERMINAL_311.addFollower(TERMINAL_61);
    		TERMINAL_311.addFollower(TERMINAL_45);
    		TERMINAL_311.addFollower(TERMINAL_301);
    		TERMINAL_311.addFollower(TERMINAL_302);
    		TERMINAL_311.addFollower(TERMINAL_303);
    		TERMINAL_311.addFollower(TERMINAL_304);
    		TERMINAL_311.addFollower(TERMINAL_60);
    		TERMINAL_311.addFollower(TERMINAL_305);
    		TERMINAL_311.addFollower(TERMINAL_306);
    		TERMINAL_311.addFollower(TERMINAL_307);
    		TERMINAL_311.addFollower(TERMINAL_308);
    		TERMINAL_311.addFollower(TERMINAL_309);
    		TERMINAL_311.addFollower(TERMINAL_310);
    		TERMINAL_311.addFollower(TERMINAL_311);
    		TERMINAL_311.addFollower(TERMINAL_135);
    		TERMINAL_311.addFollower(TERMINAL_136);
    		TERMINAL_311.addFollower(TERMINAL_137);
    		TERMINAL_311.addFollower(TERMINAL_138);
    		TERMINAL_311.addFollower(TERMINAL_139);
    		TERMINAL_311.addFollower(TERMINAL_140);
    		TERMINAL_311.addFollower(TERMINAL_141);
    		TERMINAL_59.addFollower(TERMINAL_43);
    		TERMINAL_59.addFollower(TERMINAL_13);
    		TERMINAL_59.addFollower(TERMINAL_14);
    		TERMINAL_59.addFollower(TERMINAL_15);
    		TERMINAL_59.addFollower(TERMINAL_16);
    		TERMINAL_59.addFollower(TERMINAL_17);
    		TERMINAL_59.addFollower(TERMINAL_36);
    		TERMINAL_59.addFollower(TERMINAL_301);
    		TERMINAL_59.addFollower(TERMINAL_302);
    		TERMINAL_59.addFollower(TERMINAL_303);
    		TERMINAL_59.addFollower(TERMINAL_304);
    		TERMINAL_59.addFollower(TERMINAL_45);
    		TERMINAL_59.addFollower(TERMINAL_55);
    		TERMINAL_59.addFollower(TERMINAL_47);
    		TERMINAL_59.addFollower(TERMINAL_53);
    		TERMINAL_59.addFollower(TERMINAL_56);
    		TERMINAL_59.addFollower(TERMINAL_57);
    		TERMINAL_59.addFollower(TERMINAL_58);
    		TERMINAL_59.addFollower(TERMINAL_49);
    		TERMINAL_59.addFollower(TERMINAL_48);
    		TERMINAL_59.addFollower(TERMINAL_54);
    		TERMINAL_59.addFollower(TERMINAL_52);
    		TERMINAL_59.addFollower(TERMINAL_60);
    		TERMINAL_59.addFollower(TERMINAL_305);
    		TERMINAL_59.addFollower(TERMINAL_306);
    		TERMINAL_59.addFollower(TERMINAL_307);
    		TERMINAL_59.addFollower(TERMINAL_308);
    		TERMINAL_59.addFollower(TERMINAL_309);
    		TERMINAL_59.addFollower(TERMINAL_310);
    		TERMINAL_59.addFollower(TERMINAL_311);
    		TERMINAL_59.addFollower(TERMINAL_135);
    		TERMINAL_59.addFollower(TERMINAL_136);
    		TERMINAL_59.addFollower(TERMINAL_137);
    		TERMINAL_59.addFollower(TERMINAL_138);
    		TERMINAL_59.addFollower(TERMINAL_139);
    		TERMINAL_59.addFollower(TERMINAL_140);
    		TERMINAL_59.addFollower(TERMINAL_141);
    		TERMINAL_60.addFollower(TERMINAL_43);
    		TERMINAL_60.addFollower(TERMINAL_13);
    		TERMINAL_60.addFollower(TERMINAL_14);
    		TERMINAL_60.addFollower(TERMINAL_15);
    		TERMINAL_60.addFollower(TERMINAL_16);
    		TERMINAL_60.addFollower(TERMINAL_17);
    		TERMINAL_60.addFollower(TERMINAL_36);
    		TERMINAL_60.addFollower(TERMINAL_301);
    		TERMINAL_60.addFollower(TERMINAL_302);
    		TERMINAL_60.addFollower(TERMINAL_303);
    		TERMINAL_60.addFollower(TERMINAL_304);
    		TERMINAL_60.addFollower(TERMINAL_45);
    		TERMINAL_60.addFollower(TERMINAL_55);
    		TERMINAL_60.addFollower(TERMINAL_47);
    		TERMINAL_60.addFollower(TERMINAL_53);
    		TERMINAL_60.addFollower(TERMINAL_56);
    		TERMINAL_60.addFollower(TERMINAL_57);
    		TERMINAL_60.addFollower(TERMINAL_58);
    		TERMINAL_60.addFollower(TERMINAL_49);
    		TERMINAL_60.addFollower(TERMINAL_48);
    		TERMINAL_60.addFollower(TERMINAL_54);
    		TERMINAL_60.addFollower(TERMINAL_52);
    		TERMINAL_60.addFollower(TERMINAL_60);
    		TERMINAL_60.addFollower(TERMINAL_305);
    		TERMINAL_60.addFollower(TERMINAL_306);
    		TERMINAL_60.addFollower(TERMINAL_307);
    		TERMINAL_60.addFollower(TERMINAL_308);
    		TERMINAL_60.addFollower(TERMINAL_309);
    		TERMINAL_60.addFollower(TERMINAL_310);
    		TERMINAL_60.addFollower(TERMINAL_311);
    		TERMINAL_60.addFollower(TERMINAL_135);
    		TERMINAL_60.addFollower(TERMINAL_136);
    		TERMINAL_60.addFollower(TERMINAL_137);
    		TERMINAL_60.addFollower(TERMINAL_138);
    		TERMINAL_60.addFollower(TERMINAL_139);
    		TERMINAL_60.addFollower(TERMINAL_140);
    		TERMINAL_60.addFollower(TERMINAL_141);
    		TERMINAL_61.addFollower(TERMINAL_365);
    		TERMINAL_365.addFollower(TERMINAL_130);
    		TERMINAL_365.addFollower(TERMINAL_131);
    		TERMINAL_365.addFollower(TERMINAL_132);
    		TERMINAL_365.addFollower(TERMINAL_133);
    		TERMINAL_365.addFollower(TERMINAL_134);
    		TERMINAL_130.addFollower(TERMINAL_366);
    		TERMINAL_366.addFollower(TERMINAL_367);
    		TERMINAL_367.addFollower(TERMINAL_130);
    		TERMINAL_367.addFollower(TERMINAL_131);
    		TERMINAL_367.addFollower(TERMINAL_132);
    		TERMINAL_367.addFollower(TERMINAL_133);
    		TERMINAL_367.addFollower(TERMINAL_134);
    		TERMINAL_131.addFollower(TERMINAL_368);
    		TERMINAL_368.addFollower(TERMINAL_159);
    		TERMINAL_132.addFollower(TERMINAL_369);
    		TERMINAL_369.addFollower(TERMINAL_77);
    		TERMINAL_369.addFollower(TERMINAL_6);
    		TERMINAL_369.addFollower(TERMINAL_7);
    		TERMINAL_369.addFollower(TERMINAL_149);
    		TERMINAL_369.addFollower(TERMINAL_150);
    		TERMINAL_369.addFollower(TERMINAL_8);
    		TERMINAL_369.addFollower(TERMINAL_9);
    		TERMINAL_369.addFollower(TERMINAL_189);
    		TERMINAL_369.addFollower(TERMINAL_190);
    		TERMINAL_369.addFollower(TERMINAL_191);
    		TERMINAL_369.addFollower(TERMINAL_192);
    		TERMINAL_369.addFollower(TERMINAL_193);
    		TERMINAL_133.addFollower(TERMINAL_370);
    		TERMINAL_370.addFollower(TERMINAL_371);
    		TERMINAL_371.addFollower(TERMINAL_130);
    		TERMINAL_371.addFollower(TERMINAL_131);
    		TERMINAL_371.addFollower(TERMINAL_132);
    		TERMINAL_371.addFollower(TERMINAL_133);
    		TERMINAL_371.addFollower(TERMINAL_134);
    		TERMINAL_134.addFollower(TERMINAL_43);
    		TERMINAL_134.addFollower(TERMINAL_13);
    		TERMINAL_134.addFollower(TERMINAL_14);
    		TERMINAL_134.addFollower(TERMINAL_15);
    		TERMINAL_134.addFollower(TERMINAL_16);
    		TERMINAL_134.addFollower(TERMINAL_17);
    		TERMINAL_134.addFollower(TERMINAL_36);
    		TERMINAL_134.addFollower(TERMINAL_52);
    		TERMINAL_134.addFollower(TERMINAL_51);
    		TERMINAL_134.addFollower(TERMINAL_50);
    		TERMINAL_134.addFollower(TERMINAL_55);
    		TERMINAL_134.addFollower(TERMINAL_47);
    		TERMINAL_134.addFollower(TERMINAL_53);
    		TERMINAL_134.addFollower(TERMINAL_56);
    		TERMINAL_134.addFollower(TERMINAL_57);
    		TERMINAL_134.addFollower(TERMINAL_58);
    		TERMINAL_134.addFollower(TERMINAL_49);
    		TERMINAL_134.addFollower(TERMINAL_48);
    		TERMINAL_134.addFollower(TERMINAL_54);
    		TERMINAL_134.addFollower(TERMINAL_61);
    		TERMINAL_134.addFollower(TERMINAL_45);
    		TERMINAL_134.addFollower(TERMINAL_301);
    		TERMINAL_134.addFollower(TERMINAL_302);
    		TERMINAL_134.addFollower(TERMINAL_303);
    		TERMINAL_134.addFollower(TERMINAL_304);
    		TERMINAL_134.addFollower(TERMINAL_60);
    		TERMINAL_134.addFollower(TERMINAL_305);
    		TERMINAL_134.addFollower(TERMINAL_306);
    		TERMINAL_134.addFollower(TERMINAL_307);
    		TERMINAL_134.addFollower(TERMINAL_308);
    		TERMINAL_134.addFollower(TERMINAL_309);
    		TERMINAL_134.addFollower(TERMINAL_310);
    		TERMINAL_134.addFollower(TERMINAL_311);
    		TERMINAL_134.addFollower(TERMINAL_135);
    		TERMINAL_134.addFollower(TERMINAL_136);
    		TERMINAL_134.addFollower(TERMINAL_137);
    		TERMINAL_134.addFollower(TERMINAL_138);
    		TERMINAL_134.addFollower(TERMINAL_139);
    		TERMINAL_134.addFollower(TERMINAL_140);
    		TERMINAL_134.addFollower(TERMINAL_141);
    		TERMINAL_62.addFollower(TERMINAL_372);
    		TERMINAL_372.addFollower(TERMINAL_135);
    		TERMINAL_372.addFollower(TERMINAL_136);
    		TERMINAL_372.addFollower(TERMINAL_137);
    		TERMINAL_372.addFollower(TERMINAL_138);
    		TERMINAL_372.addFollower(TERMINAL_139);
    		TERMINAL_372.addFollower(TERMINAL_140);
    		TERMINAL_372.addFollower(TERMINAL_141);
    		TERMINAL_135.addFollower(TERMINAL_373);
    		TERMINAL_373.addFollower(TERMINAL_374);
    		TERMINAL_374.addFollower(TERMINAL_135);
    		TERMINAL_374.addFollower(TERMINAL_136);
    		TERMINAL_374.addFollower(TERMINAL_137);
    		TERMINAL_374.addFollower(TERMINAL_138);
    		TERMINAL_374.addFollower(TERMINAL_139);
    		TERMINAL_374.addFollower(TERMINAL_140);
    		TERMINAL_374.addFollower(TERMINAL_141);
    		TERMINAL_136.addFollower(TERMINAL_375);
    		TERMINAL_375.addFollower(TERMINAL_159);
    		TERMINAL_137.addFollower(TERMINAL_376);
    		TERMINAL_376.addFollower(TERMINAL_77);
    		TERMINAL_376.addFollower(TERMINAL_6);
    		TERMINAL_376.addFollower(TERMINAL_7);
    		TERMINAL_376.addFollower(TERMINAL_149);
    		TERMINAL_376.addFollower(TERMINAL_150);
    		TERMINAL_376.addFollower(TERMINAL_8);
    		TERMINAL_376.addFollower(TERMINAL_9);
    		TERMINAL_376.addFollower(TERMINAL_189);
    		TERMINAL_376.addFollower(TERMINAL_190);
    		TERMINAL_376.addFollower(TERMINAL_191);
    		TERMINAL_376.addFollower(TERMINAL_192);
    		TERMINAL_376.addFollower(TERMINAL_193);
    		TERMINAL_138.addFollower(TERMINAL_377);
    		TERMINAL_377.addFollower(TERMINAL_378);
    		TERMINAL_378.addFollower(TERMINAL_135);
    		TERMINAL_378.addFollower(TERMINAL_136);
    		TERMINAL_378.addFollower(TERMINAL_137);
    		TERMINAL_378.addFollower(TERMINAL_138);
    		TERMINAL_378.addFollower(TERMINAL_139);
    		TERMINAL_378.addFollower(TERMINAL_140);
    		TERMINAL_378.addFollower(TERMINAL_141);
    		TERMINAL_139.addFollower(TERMINAL_379);
    		TERMINAL_379.addFollower(TERMINAL_380);
    		TERMINAL_140.addFollower(TERMINAL_381);
    		TERMINAL_381.addFollower(TERMINAL_45);
    		TERMINAL_381.addFollower(TERMINAL_46);
    		TERMINAL_381.addFollower(TERMINAL_47);
    		TERMINAL_381.addFollower(TERMINAL_48);
    		TERMINAL_381.addFollower(TERMINAL_49);
    		TERMINAL_381.addFollower(TERMINAL_50);
    		TERMINAL_381.addFollower(TERMINAL_51);
    		TERMINAL_381.addFollower(TERMINAL_52);
    		TERMINAL_381.addFollower(TERMINAL_22);
    		TERMINAL_381.addFollower(TERMINAL_53);
    		TERMINAL_381.addFollower(TERMINAL_54);
    		TERMINAL_381.addFollower(TERMINAL_55);
    		TERMINAL_381.addFollower(TERMINAL_56);
    		TERMINAL_381.addFollower(TERMINAL_57);
    		TERMINAL_381.addFollower(TERMINAL_58);
    		TERMINAL_381.addFollower(TERMINAL_59);
    		TERMINAL_381.addFollower(TERMINAL_60);
    		TERMINAL_381.addFollower(TERMINAL_61);
    		TERMINAL_381.addFollower(TERMINAL_62);
    		TERMINAL_141.addFollower(TERMINAL_43);
    		TERMINAL_141.addFollower(TERMINAL_13);
    		TERMINAL_141.addFollower(TERMINAL_14);
    		TERMINAL_141.addFollower(TERMINAL_15);
    		TERMINAL_141.addFollower(TERMINAL_16);
    		TERMINAL_141.addFollower(TERMINAL_17);
    		TERMINAL_141.addFollower(TERMINAL_36);
    		TERMINAL_141.addFollower(TERMINAL_301);
    		TERMINAL_141.addFollower(TERMINAL_302);
    		TERMINAL_141.addFollower(TERMINAL_303);
    		TERMINAL_141.addFollower(TERMINAL_304);
    		TERMINAL_141.addFollower(TERMINAL_45);
    		TERMINAL_141.addFollower(TERMINAL_55);
    		TERMINAL_141.addFollower(TERMINAL_47);
    		TERMINAL_141.addFollower(TERMINAL_53);
    		TERMINAL_141.addFollower(TERMINAL_56);
    		TERMINAL_141.addFollower(TERMINAL_57);
    		TERMINAL_141.addFollower(TERMINAL_58);
    		TERMINAL_141.addFollower(TERMINAL_49);
    		TERMINAL_141.addFollower(TERMINAL_48);
    		TERMINAL_141.addFollower(TERMINAL_54);
    		TERMINAL_141.addFollower(TERMINAL_52);
    		TERMINAL_141.addFollower(TERMINAL_60);
    		TERMINAL_141.addFollower(TERMINAL_305);
    		TERMINAL_141.addFollower(TERMINAL_306);
    		TERMINAL_141.addFollower(TERMINAL_307);
    		TERMINAL_141.addFollower(TERMINAL_308);
    		TERMINAL_141.addFollower(TERMINAL_309);
    		TERMINAL_141.addFollower(TERMINAL_310);
    		TERMINAL_141.addFollower(TERMINAL_311);
    		TERMINAL_141.addFollower(TERMINAL_135);
    		TERMINAL_141.addFollower(TERMINAL_136);
    		TERMINAL_141.addFollower(TERMINAL_137);
    		TERMINAL_141.addFollower(TERMINAL_138);
    		TERMINAL_141.addFollower(TERMINAL_139);
    		TERMINAL_141.addFollower(TERMINAL_140);
    		TERMINAL_141.addFollower(TERMINAL_141);
    		TERMINAL_380.addFollower(TERMINAL_382);
    		TERMINAL_382.addFollower(TERMINAL_237);
    		TERMINAL_382.addFollower(TERMINAL_238);
    		TERMINAL_382.addFollower(TERMINAL_239);
    		TERMINAL_382.addFollower(TERMINAL_240);
    		TERMINAL_382.addFollower(TERMINAL_241);
    		TERMINAL_237.addFollower(TERMINAL_383);
    		TERMINAL_383.addFollower(TERMINAL_384);
    		TERMINAL_384.addFollower(TERMINAL_237);
    		TERMINAL_384.addFollower(TERMINAL_238);
    		TERMINAL_384.addFollower(TERMINAL_239);
    		TERMINAL_384.addFollower(TERMINAL_240);
    		TERMINAL_384.addFollower(TERMINAL_241);
    		TERMINAL_238.addFollower(TERMINAL_385);
    		TERMINAL_385.addFollower(TERMINAL_159);
    		TERMINAL_239.addFollower(TERMINAL_386);
    		TERMINAL_386.addFollower(TERMINAL_387);
    		TERMINAL_387.addFollower(TERMINAL_237);
    		TERMINAL_387.addFollower(TERMINAL_238);
    		TERMINAL_387.addFollower(TERMINAL_239);
    		TERMINAL_387.addFollower(TERMINAL_240);
    		TERMINAL_387.addFollower(TERMINAL_241);
    		TERMINAL_240.addFollower(TERMINAL_388);
    		TERMINAL_388.addFollower(TERMINAL_22);
    		TERMINAL_241.addFollower(TERMINAL_135);
    		TERMINAL_241.addFollower(TERMINAL_136);
    		TERMINAL_241.addFollower(TERMINAL_137);
    		TERMINAL_241.addFollower(TERMINAL_138);
    		TERMINAL_241.addFollower(TERMINAL_139);
    		TERMINAL_241.addFollower(TERMINAL_140);
    		TERMINAL_241.addFollower(TERMINAL_141);
    	}
    	// wire the terminals
    	static {
    		wire0();
    		wire1();
    		wire2();
    		wire3();
    	}



    // $ANTLR start "start"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4408:1: start returns [ org.eclipse.emf.ecore.EObject element = null] : (c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Model | c2= parse_org_kermeta_language_structure_Property | c3= parse_org_kermeta_language_structure_Operation | c4= parse_org_kermeta_language_structure_Parameter | c5= parse_org_kermeta_language_structure_MultiplicityElement | c6= parse_org_kermeta_language_behavior_TypeReference ) EOF ;
    public final org.eclipse.emf.ecore.EObject start() throws RecognitionException {
        org.eclipse.emf.ecore.EObject element =  null;
        int start_StartIndex = input.index();
        org.kermeta.language.structure.ModelingUnit c0 = null;

        org.kermeta.language.structure.Model c1 = null;

        org.kermeta.language.structure.Property c2 = null;

        org.kermeta.language.structure.Operation c3 = null;

        org.kermeta.language.structure.Parameter c4 = null;

        org.kermeta.language.structure.MultiplicityElement c5 = null;

        org.kermeta.language.behavior.TypeReference c6 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 1) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4409:1: ( (c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Model | c2= parse_org_kermeta_language_structure_Property | c3= parse_org_kermeta_language_structure_Operation | c4= parse_org_kermeta_language_structure_Parameter | c5= parse_org_kermeta_language_structure_MultiplicityElement | c6= parse_org_kermeta_language_behavior_TypeReference ) EOF )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4410:2: (c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Model | c2= parse_org_kermeta_language_structure_Property | c3= parse_org_kermeta_language_structure_Operation | c4= parse_org_kermeta_language_structure_Parameter | c5= parse_org_kermeta_language_structure_MultiplicityElement | c6= parse_org_kermeta_language_behavior_TypeReference ) EOF
            {
            if ( state.backtracking==0 ) {

              		// follow set for start rule(s)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 0));
              		expectedElementsIndexOfLastCompleteElement = expectedElements.size() - 1;
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4437:2: (c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Model | c2= parse_org_kermeta_language_structure_Property | c3= parse_org_kermeta_language_structure_Operation | c4= parse_org_kermeta_language_structure_Parameter | c5= parse_org_kermeta_language_structure_MultiplicityElement | c6= parse_org_kermeta_language_behavior_TypeReference )
            int alt1=7;
            alt1 = dfa1.predict(input);
            switch (alt1) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4438:3: c0= parse_org_kermeta_language_structure_ModelingUnit
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_start82);
                    c0=parse_org_kermeta_language_structure_ModelingUnit();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; 
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4439:8: c1= parse_org_kermeta_language_structure_Model
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Model_in_start96);
                    c1=parse_org_kermeta_language_structure_Model();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; 
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4440:8: c2= parse_org_kermeta_language_structure_Property
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_start110);
                    c2=parse_org_kermeta_language_structure_Property();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; 
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4441:8: c3= parse_org_kermeta_language_structure_Operation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_start124);
                    c3=parse_org_kermeta_language_structure_Operation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; 
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4442:8: c4= parse_org_kermeta_language_structure_Parameter
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_start138);
                    c4=parse_org_kermeta_language_structure_Parameter();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c4; 
                    }

                    }
                    break;
                case 6 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4443:8: c5= parse_org_kermeta_language_structure_MultiplicityElement
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_start152);
                    c5=parse_org_kermeta_language_structure_MultiplicityElement();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c5; 
                    }

                    }
                    break;
                case 7 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4444:8: c6= parse_org_kermeta_language_behavior_TypeReference
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_start166);
                    c6=parse_org_kermeta_language_behavior_TypeReference();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c6; 
                    }

                    }
                    break;

            }

            match(input,EOF,FOLLOW_EOF_in_start173); if (state.failed) return element;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 1, start_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "start"


    // $ANTLR start "parse_org_kermeta_language_structure_ModelingUnit"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4449:1: parse_org_kermeta_language_structure_ModelingUnit returns [org.kermeta.language.structure.ModelingUnit element = null] : ( ( (a0_0= parse_org_kermeta_language_structure_Require ) ) )* ( ( (a1_0= parse_org_kermeta_language_structure_Using ) ) )* ( ( (a2_0= parse_org_kermeta_language_structure_Package ) ) )* ;
    public final org.kermeta.language.structure.ModelingUnit parse_org_kermeta_language_structure_ModelingUnit() throws RecognitionException {
        org.kermeta.language.structure.ModelingUnit element =  null;
        int parse_org_kermeta_language_structure_ModelingUnit_StartIndex = input.index();
        org.kermeta.language.structure.Require a0_0 = null;

        org.kermeta.language.structure.Using a1_0 = null;

        org.kermeta.language.structure.Package a2_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 2) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4452:1: ( ( ( (a0_0= parse_org_kermeta_language_structure_Require ) ) )* ( ( (a1_0= parse_org_kermeta_language_structure_Using ) ) )* ( ( (a2_0= parse_org_kermeta_language_structure_Package ) ) )* )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4453:2: ( ( (a0_0= parse_org_kermeta_language_structure_Require ) ) )* ( ( (a1_0= parse_org_kermeta_language_structure_Using ) ) )* ( ( (a2_0= parse_org_kermeta_language_structure_Package ) ) )*
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4453:2: ( ( (a0_0= parse_org_kermeta_language_structure_Require ) ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==15) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4454:3: ( (a0_0= parse_org_kermeta_language_structure_Require ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4454:3: ( (a0_0= parse_org_kermeta_language_structure_Require ) )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4455:4: (a0_0= parse_org_kermeta_language_structure_Require )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4455:4: (a0_0= parse_org_kermeta_language_structure_Require )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4456:5: a0_0= parse_org_kermeta_language_structure_Require
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Require_in_parse_org_kermeta_language_structure_ModelingUnit211);
            	    a0_0=parse_org_kermeta_language_structure_Require();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelingUnit();
            	      					}
            	      					if (a0_0 != null) {
            	      						if (a0_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODELING_UNIT__REQUIRES, a0_0);
            	      							completedElement(a0_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a0_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 1));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 2));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4506:2: ( ( (a1_0= parse_org_kermeta_language_structure_Using ) ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==14) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4507:3: ( (a1_0= parse_org_kermeta_language_structure_Using ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4507:3: ( (a1_0= parse_org_kermeta_language_structure_Using ) )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4508:4: (a1_0= parse_org_kermeta_language_structure_Using )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4508:4: (a1_0= parse_org_kermeta_language_structure_Using )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4509:5: a1_0= parse_org_kermeta_language_structure_Using
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Using_in_parse_org_kermeta_language_structure_ModelingUnit267);
            	    a1_0=parse_org_kermeta_language_structure_Using();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelingUnit();
            	      					}
            	      					if (a1_0 != null) {
            	      						if (a1_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODELING_UNIT__USINGS, a1_0);
            	      							completedElement(a1_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a1_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 3));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 3));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 3));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 3));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 3));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 3));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 3));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 3));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 3));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 3));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 3));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 4));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 4));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 4));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 4));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 4));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 4));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 4));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 4));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 4));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 4));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 4));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4557:2: ( ( (a2_0= parse_org_kermeta_language_structure_Package ) ) )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( ((LA4_0>=IDENTIFIER && LA4_0<=PRIMITIVE_TYPE)||LA4_0==16||(LA4_0>=20 && LA4_0<=22)||LA4_0==35||LA4_0==42||LA4_0==53) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4558:3: ( (a2_0= parse_org_kermeta_language_structure_Package ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4558:3: ( (a2_0= parse_org_kermeta_language_structure_Package ) )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4559:4: (a2_0= parse_org_kermeta_language_structure_Package )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4559:4: (a2_0= parse_org_kermeta_language_structure_Package )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4560:5: a2_0= parse_org_kermeta_language_structure_Package
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_ModelingUnit323);
            	    a2_0=parse_org_kermeta_language_structure_Package();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelingUnit();
            	      					}
            	      					if (a2_0 != null) {
            	      						if (a2_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODELING_UNIT__PACKAGES, a2_0);
            	      							completedElement(a2_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a2_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 5));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 5));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 5));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 5));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 5));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 5));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 5));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 5));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 5));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 5));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 6));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 6));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 6));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 6));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 6));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 6));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 6));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 6));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 6));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 6));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 2, parse_org_kermeta_language_structure_ModelingUnit_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ModelingUnit"


    // $ANTLR start "parse_org_kermeta_language_structure_Using"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4608:1: parse_org_kermeta_language_structure_Using returns [org.kermeta.language.structure.Using element = null] : a0= 'using' ;
    public final org.kermeta.language.structure.Using parse_org_kermeta_language_structure_Using() throws RecognitionException {
        org.kermeta.language.structure.Using element =  null;
        int parse_org_kermeta_language_structure_Using_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4611:1: (a0= 'using' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4612:2: a0= 'using'
            {
            a0=(Token)match(input,14,FOLLOW_14_in_parse_org_kermeta_language_structure_Using379); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createUsing();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 7));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 7));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 7));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 7));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 7));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 7));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 7));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 7));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 7));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 7));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 7));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 3, parse_org_kermeta_language_structure_Using_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Using"


    // $ANTLR start "parse_org_kermeta_language_structure_Require"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4636:1: parse_org_kermeta_language_structure_Require returns [org.kermeta.language.structure.Require element = null] : a0= 'require' ;
    public final org.kermeta.language.structure.Require parse_org_kermeta_language_structure_Require() throws RecognitionException {
        org.kermeta.language.structure.Require element =  null;
        int parse_org_kermeta_language_structure_Require_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4639:1: (a0= 'require' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4640:2: a0= 'require'
            {
            a0=(Token)match(input,15,FOLLOW_15_in_parse_org_kermeta_language_structure_Require408); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createRequire();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 8));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 8));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 8));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 8));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 8));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 8));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 8));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 8));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 8));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 8));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 8));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 8));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 4, parse_org_kermeta_language_structure_Require_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Require"


    // $ANTLR start "parse_org_kermeta_language_structure_Package"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4665:1: parse_org_kermeta_language_structure_Package returns [org.kermeta.language.structure.Package element = null] : (a0= 'package' ( ( (a1= IDENTIFIER ) a2= '::' ) )* (a3= IDENTIFIER ) ( ( ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a7= '}' | a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Package ) ) )* a10= '}' ) )? | ( ( (a11_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ );
    public final org.kermeta.language.structure.Package parse_org_kermeta_language_structure_Package() throws RecognitionException {
        org.kermeta.language.structure.Package element =  null;
        int parse_org_kermeta_language_structure_Package_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a5=null;
        Token a7=null;
        Token a8=null;
        Token a10=null;
        org.kermeta.language.structure.TypeDefinition a4_0 = null;

        org.kermeta.language.structure.TypeDefinition a6_0 = null;

        org.kermeta.language.structure.Package a9_0 = null;

        org.kermeta.language.structure.TypeDefinition a11_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4668:1: (a0= 'package' ( ( (a1= IDENTIFIER ) a2= '::' ) )* (a3= IDENTIFIER ) ( ( ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a7= '}' | a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Package ) ) )* a10= '}' ) )? | ( ( (a11_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==16) ) {
                alt12=1;
            }
            else if ( ((LA12_0>=IDENTIFIER && LA12_0<=PRIMITIVE_TYPE)||(LA12_0>=20 && LA12_0<=22)||LA12_0==35||LA12_0==42||LA12_0==53) ) {
                alt12=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4669:2: a0= 'package' ( ( (a1= IDENTIFIER ) a2= '::' ) )* (a3= IDENTIFIER ) ( ( ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a7= '}' | a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Package ) ) )* a10= '}' ) )?
                    {
                    a0=(Token)match(input,16,FOLLOW_16_in_parse_org_kermeta_language_structure_Package437); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 9));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 9));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4682:2: ( ( (a1= IDENTIFIER ) a2= '::' ) )*
                    loop5:
                    do {
                        int alt5=2;
                        int LA5_0 = input.LA(1);

                        if ( (LA5_0==IDENTIFIER) ) {
                            int LA5_1 = input.LA(2);

                            if ( (LA5_1==17) ) {
                                alt5=1;
                            }


                        }


                        switch (alt5) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4683:3: ( (a1= IDENTIFIER ) a2= '::' )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4683:3: ( (a1= IDENTIFIER ) a2= '::' )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4684:4: (a1= IDENTIFIER ) a2= '::'
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4684:4: (a1= IDENTIFIER )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4685:5: a1= IDENTIFIER
                    	    {
                    	    a1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Package466); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      					if (terminateParsing) {
                    	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      					}
                    	      					if (element == null) {
                    	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                    	      					}
                    	      					if (a1 != null) {
                    	      						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	      						tokenResolver.setOptions(getOptions());
                    	      						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	      						tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NESTING_PACKAGE), result);
                    	      						java.lang.Object resolvedObject = result.getResolvedToken();
                    	      						if (resolvedObject == null) {
                    	      							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
                    	      						}
                    	      						String resolved = (String) resolvedObject;
                    	      						org.kermeta.language.structure.Package proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                    	      						collectHiddenTokens(element);
                    	      						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Package, org.kermeta.language.structure.Package>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getPackageNestingPackageReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NESTING_PACKAGE), resolved, proxy);
                    	      						if (proxy != null) {
                    	      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NESTING_PACKAGE), proxy);
                    	      							completedElement(proxy);
                    	      						}
                    	      						collectHiddenTokens(element);
                    	      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
                    	      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, proxy);
                    	      					}
                    	      				
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      				// expected elements (follow set)
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 10));
                    	      			
                    	    }
                    	    a2=(Token)match(input,17,FOLLOW_17_in_parse_org_kermeta_language_structure_Package499); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      				if (element == null) {
                    	      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                    	      				}
                    	      				collectHiddenTokens(element);
                    	      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
                    	      			
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      				// expected elements (follow set)
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 11));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 11));
                    	      			
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop5;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 12));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 12));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4742:2: (a3= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4743:3: a3= IDENTIFIER
                    {
                    a3=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Package536); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (terminateParsing) {
                      				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      			}
                      			if (element == null) {
                      				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                      			}
                      			if (a3 != null) {
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      				tokenResolver.setOptions(getOptions());
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      				tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), result);
                      				java.lang.Object resolvedObject = result.getResolvedToken();
                      				if (resolvedObject == null) {
                      					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a3).getLine(), ((org.antlr.runtime.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a3).getStartIndex(), ((org.antlr.runtime.CommonToken) a3).getStopIndex());
                      				}
                      				java.lang.String resolved = (java.lang.String)resolvedObject;
                      				if (resolved != null) {
                      					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), resolved);
                      					completedElement(resolved);
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken) a3, element);
                      			}
                      		
                    }

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 13));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 13));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 13));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 13));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 13));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 13));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 13));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 13));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 13));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 13));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 13));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 13));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 13));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4787:2: ( ( ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a7= '}' | a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Package ) ) )* a10= '}' ) )?
                    int alt10=2;
                    alt10 = dfa10.predict(input);
                    switch (alt10) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4788:3: ( ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a7= '}' | a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Package ) ) )* a10= '}' )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4788:3: ( ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a7= '}' | a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Package ) ) )* a10= '}' )
                            int alt9=3;
                            alt9 = dfa9.predict(input);
                            switch (alt9) {
                                case 1 :
                                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4789:4: ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                                    {
                                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4789:4: ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                                    int cnt6=0;
                                    loop6:
                                    do {
                                        int alt6=2;
                                        alt6 = dfa6.predict(input);
                                        switch (alt6) {
                                    	case 1 :
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4790:5: ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                                    	    {
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4790:5: ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4791:6: (a4_0= parse_org_kermeta_language_structure_TypeDefinition )
                                    	    {
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4791:6: (a4_0= parse_org_kermeta_language_structure_TypeDefinition )
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4792:7: a4_0= parse_org_kermeta_language_structure_TypeDefinition
                                    	    {
                                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Package587);
                                    	    a4_0=parse_org_kermeta_language_structure_TypeDefinition();

                                    	    state._fsp--;
                                    	    if (state.failed) return element;
                                    	    if ( state.backtracking==0 ) {

                                    	      							if (terminateParsing) {
                                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                                    	      							}
                                    	      							if (element == null) {
                                    	      								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                    	      							}
                                    	      							if (a4_0 != null) {
                                    	      								if (a4_0 != null) {
                                    	      									addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__OWNED_TYPE_DEFINITION, a4_0);
                                    	      									completedElement(a4_0);
                                    	      								}
                                    	      								collectHiddenTokens(element);
                                    	      								copyLocalizationInfos(a4_0, element); 							}
                                    	      						
                                    	    }

                                    	    }

                                    	    if ( state.backtracking==0 ) {

                                    	      						// expected elements (follow set)
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 14));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 14));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 14));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 14));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 14));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 14));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 14));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 14));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 14));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 14));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 14));
                                    	      					
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    if ( cnt6 >= 1 ) break loop6;
                                    	    if (state.backtracking>0) {state.failed=true; return element;}
                                                EarlyExitException eee =
                                                    new EarlyExitException(6, input);
                                                throw eee;
                                        }
                                        cnt6++;
                                    } while (true);

                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 15));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 15));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 15));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 15));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 15));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 15));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 15));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 15));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 15));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 15));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 15));
                                      			
                                    }

                                    }
                                    break;
                                case 2 :
                                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4841:8: a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a7= '}'
                                    {
                                    a5=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_Package656); if (state.failed) return element;
                                    if ( state.backtracking==0 ) {

                                      				if (element == null) {
                                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                      				}
                                      				collectHiddenTokens(element);
                                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                                      			
                                    }
                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 16));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 16));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 16));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 16));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 16));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 16));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 16));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 16));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 16));
                                      			
                                    }
                                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4861:4: ( ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                                    int cnt7=0;
                                    loop7:
                                    do {
                                        int alt7=2;
                                        int LA7_0 = input.LA(1);

                                        if ( ((LA7_0>=IDENTIFIER && LA7_0<=PRIMITIVE_TYPE)||(LA7_0>=20 && LA7_0<=22)||LA7_0==35||LA7_0==42||LA7_0==53) ) {
                                            alt7=1;
                                        }


                                        switch (alt7) {
                                    	case 1 :
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4862:5: ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                                    	    {
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4862:5: ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4863:6: (a6_0= parse_org_kermeta_language_structure_TypeDefinition )
                                    	    {
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4863:6: (a6_0= parse_org_kermeta_language_structure_TypeDefinition )
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4864:7: a6_0= parse_org_kermeta_language_structure_TypeDefinition
                                    	    {
                                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Package697);
                                    	    a6_0=parse_org_kermeta_language_structure_TypeDefinition();

                                    	    state._fsp--;
                                    	    if (state.failed) return element;
                                    	    if ( state.backtracking==0 ) {

                                    	      							if (terminateParsing) {
                                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                                    	      							}
                                    	      							if (element == null) {
                                    	      								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                    	      							}
                                    	      							if (a6_0 != null) {
                                    	      								if (a6_0 != null) {
                                    	      									addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__OWNED_TYPE_DEFINITION, a6_0);
                                    	      									completedElement(a6_0);
                                    	      								}
                                    	      								collectHiddenTokens(element);
                                    	      								copyLocalizationInfos(a6_0, element); 							}
                                    	      						
                                    	    }

                                    	    }

                                    	    if ( state.backtracking==0 ) {

                                    	      						// expected elements (follow set)
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 17));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 17));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 17));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 17));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 17));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 17));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 17));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 17));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 17));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 17));
                                    	      					
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    if ( cnt7 >= 1 ) break loop7;
                                    	    if (state.backtracking>0) {state.failed=true; return element;}
                                                EarlyExitException eee =
                                                    new EarlyExitException(7, input);
                                                throw eee;
                                        }
                                        cnt7++;
                                    } while (true);

                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 18));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 18));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 18));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 18));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 18));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 18));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 18));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 18));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 18));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 18));
                                      			
                                    }
                                    a7=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_Package758); if (state.failed) return element;
                                    if ( state.backtracking==0 ) {

                                      				if (element == null) {
                                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                      				}
                                      				collectHiddenTokens(element);
                                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
                                      			
                                    }
                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 19));
                                      			
                                    }

                                    }
                                    break;
                                case 3 :
                                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4933:8: a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Package ) ) )* a10= '}'
                                    {
                                    a8=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_Package786); if (state.failed) return element;
                                    if ( state.backtracking==0 ) {

                                      				if (element == null) {
                                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                      				}
                                      				collectHiddenTokens(element);
                                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
                                      			
                                    }
                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 20));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 20));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 20));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 20));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 20));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 20));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 20));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 20));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 20));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 20));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 20));
                                      			
                                    }
                                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4955:4: ( ( (a9_0= parse_org_kermeta_language_structure_Package ) ) )*
                                    loop8:
                                    do {
                                        int alt8=2;
                                        int LA8_0 = input.LA(1);

                                        if ( ((LA8_0>=IDENTIFIER && LA8_0<=PRIMITIVE_TYPE)||LA8_0==16||(LA8_0>=20 && LA8_0<=22)||LA8_0==35||LA8_0==42||LA8_0==53) ) {
                                            alt8=1;
                                        }


                                        switch (alt8) {
                                    	case 1 :
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4956:5: ( (a9_0= parse_org_kermeta_language_structure_Package ) )
                                    	    {
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4956:5: ( (a9_0= parse_org_kermeta_language_structure_Package ) )
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4957:6: (a9_0= parse_org_kermeta_language_structure_Package )
                                    	    {
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4957:6: (a9_0= parse_org_kermeta_language_structure_Package )
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4958:7: a9_0= parse_org_kermeta_language_structure_Package
                                    	    {
                                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Package827);
                                    	    a9_0=parse_org_kermeta_language_structure_Package();

                                    	    state._fsp--;
                                    	    if (state.failed) return element;
                                    	    if ( state.backtracking==0 ) {

                                    	      							if (terminateParsing) {
                                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                                    	      							}
                                    	      							if (element == null) {
                                    	      								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                    	      							}
                                    	      							if (a9_0 != null) {
                                    	      								if (a9_0 != null) {
                                    	      									addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__NESTED_PACKAGE, a9_0);
                                    	      									completedElement(a9_0);
                                    	      								}
                                    	      								collectHiddenTokens(element);
                                    	      								copyLocalizationInfos(a9_0, element); 							}
                                    	      						
                                    	    }

                                    	    }

                                    	    if ( state.backtracking==0 ) {

                                    	      						// expected elements (follow set)
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 21));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 21));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 21));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 21));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 21));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 21));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 21));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 21));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 21));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 21));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 21));
                                    	      					
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    break loop8;
                                        }
                                    } while (true);

                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 22));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 22));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 22));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 22));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 22));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 22));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 22));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 22));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 22));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 22));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 22));
                                      			
                                    }
                                    a10=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_Package888); if (state.failed) return element;
                                    if ( state.backtracking==0 ) {

                                      				if (element == null) {
                                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                      				}
                                      				collectHiddenTokens(element);
                                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
                                      			
                                    }
                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 23));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 23));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 23));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 23));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 23));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 23));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 23));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 23));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 23));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 23));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 23));
                                      			
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 24));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 24));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 24));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 24));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 24));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 24));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 24));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 24));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 24));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 24));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 24));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5046:4: ( ( (a11_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5046:4: ( ( (a11_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                    int cnt11=0;
                    loop11:
                    do {
                        int alt11=2;
                        alt11 = dfa11.predict(input);
                        switch (alt11) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5047:3: ( (a11_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5047:3: ( (a11_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5048:4: (a11_0= parse_org_kermeta_language_structure_TypeDefinition )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5048:4: (a11_0= parse_org_kermeta_language_structure_TypeDefinition )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5049:5: a11_0= parse_org_kermeta_language_structure_TypeDefinition
                    	    {
                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Package940);
                    	    a11_0=parse_org_kermeta_language_structure_TypeDefinition();

                    	    state._fsp--;
                    	    if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      					if (terminateParsing) {
                    	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      					}
                    	      					if (element == null) {
                    	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                    	      					}
                    	      					if (a11_0 != null) {
                    	      						if (a11_0 != null) {
                    	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__OWNED_TYPE_DEFINITION, a11_0);
                    	      							completedElement(a11_0);
                    	      						}
                    	      						collectHiddenTokens(element);
                    	      						copyLocalizationInfos(a11_0, element); 					}
                    	      				
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      				// expected elements (follow set)
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 25));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 25));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 25));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 25));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 25));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 25));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 25));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 25));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 25));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 25));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 25));
                    	      			
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt11 >= 1 ) break loop11;
                    	    if (state.backtracking>0) {state.failed=true; return element;}
                                EarlyExitException eee =
                                    new EarlyExitException(11, input);
                                throw eee;
                        }
                        cnt11++;
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 26));
                      	
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 5, parse_org_kermeta_language_structure_Package_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Package"


    // $ANTLR start "parse_org_kermeta_language_structure_ClassDefinition"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5099:1: parse_org_kermeta_language_structure_ClassDefinition returns [org.kermeta.language.structure.ClassDefinition element = null] : ( (a0= 'aspect' ) )? ( (a1= 'abstract' ) )? a2= 'class' (a3= IDENTIFIER ) ( (a4= 'inherits' (a5= IDENTIFIER ) ( (a6= ',' (a7= IDENTIFIER ) ) )* ) )? a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Constraint ) ) )* ( ( (a10_0= parse_org_kermeta_language_structure_Property ) ) )* ( ( (a11_0= parse_org_kermeta_language_structure_Operation ) ) )* a12= '}' ;
    public final org.kermeta.language.structure.ClassDefinition parse_org_kermeta_language_structure_ClassDefinition() throws RecognitionException {
        org.kermeta.language.structure.ClassDefinition element =  null;
        int parse_org_kermeta_language_structure_ClassDefinition_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a8=null;
        Token a12=null;
        org.kermeta.language.structure.Constraint a9_0 = null;

        org.kermeta.language.structure.Property a10_0 = null;

        org.kermeta.language.structure.Operation a11_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5102:1: ( ( (a0= 'aspect' ) )? ( (a1= 'abstract' ) )? a2= 'class' (a3= IDENTIFIER ) ( (a4= 'inherits' (a5= IDENTIFIER ) ( (a6= ',' (a7= IDENTIFIER ) ) )* ) )? a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Constraint ) ) )* ( ( (a10_0= parse_org_kermeta_language_structure_Property ) ) )* ( ( (a11_0= parse_org_kermeta_language_structure_Operation ) ) )* a12= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5103:2: ( (a0= 'aspect' ) )? ( (a1= 'abstract' ) )? a2= 'class' (a3= IDENTIFIER ) ( (a4= 'inherits' (a5= IDENTIFIER ) ( (a6= ',' (a7= IDENTIFIER ) ) )* ) )? a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Constraint ) ) )* ( ( (a10_0= parse_org_kermeta_language_structure_Property ) ) )* ( ( (a11_0= parse_org_kermeta_language_structure_Operation ) ) )* a12= '}'
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5103:2: ( (a0= 'aspect' ) )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==20) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5104:3: (a0= 'aspect' )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5104:3: (a0= 'aspect' )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5105:4: a0= 'aspect'
                    {
                    a0=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_ClassDefinition1005); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 27));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 27));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 28));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 28));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5126:2: ( (a1= 'abstract' ) )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==21) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5127:3: (a1= 'abstract' )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5127:3: (a1= 'abstract' )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5128:4: a1= 'abstract'
                    {
                    a1=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_structure_ClassDefinition1047); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 29));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 30));
              	
            }
            a2=(Token)match(input,22,FOLLOW_22_in_parse_org_kermeta_language_structure_ClassDefinition1080); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_30, 31));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5159:2: (a3= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5160:3: a3= IDENTIFIER
            {
            a3=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ClassDefinition1098); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
              			}
              			if (a3 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a3).getLine(), ((org.antlr.runtime.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a3).getStartIndex(), ((org.antlr.runtime.CommonToken) a3).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a3, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_31, 32));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 32));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5193:2: ( (a4= 'inherits' (a5= IDENTIFIER ) ( (a6= ',' (a7= IDENTIFIER ) ) )* ) )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==23) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5194:3: (a4= 'inherits' (a5= IDENTIFIER ) ( (a6= ',' (a7= IDENTIFIER ) ) )* )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5194:3: (a4= 'inherits' (a5= IDENTIFIER ) ( (a6= ',' (a7= IDENTIFIER ) ) )* )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5195:4: a4= 'inherits' (a5= IDENTIFIER ) ( (a6= ',' (a7= IDENTIFIER ) ) )*
                    {
                    a4=(Token)match(input,23,FOLLOW_23_in_parse_org_kermeta_language_structure_ClassDefinition1128); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_33, 33));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5207:4: (a5= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5208:5: a5= IDENTIFIER
                    {
                    a5=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ClassDefinition1154); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                      					}
                      					if (a5 != null) {
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      						tokenResolver.setOptions(getOptions());
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      						tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), result);
                      						java.lang.Object resolvedObject = result.getResolvedToken();
                      						if (resolvedObject == null) {
                      							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a5).getLine(), ((org.antlr.runtime.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a5).getStartIndex(), ((org.antlr.runtime.CommonToken) a5).getStopIndex());
                      						}
                      						String resolved = (String) resolvedObject;
                      						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                      						collectHiddenTokens(element);
                      						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ClassDefinition, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getClassDefinitionSuperTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), resolved, proxy);
                      						if (proxy != null) {
                      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE, proxy);
                      							completedElement(proxy);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, proxy);
                      					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_34, 34));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 34));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5245:4: ( (a6= ',' (a7= IDENTIFIER ) ) )*
                    loop15:
                    do {
                        int alt15=2;
                        int LA15_0 = input.LA(1);

                        if ( (LA15_0==24) ) {
                            alt15=1;
                        }


                        switch (alt15) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5246:5: (a6= ',' (a7= IDENTIFIER ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5246:5: (a6= ',' (a7= IDENTIFIER ) )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5247:6: a6= ',' (a7= IDENTIFIER )
                    	    {
                    	    a6=(Token)match(input,24,FOLLOW_24_in_parse_org_kermeta_language_structure_ClassDefinition1200); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      						if (element == null) {
                    	      							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                    	      						}
                    	      						collectHiddenTokens(element);
                    	      						copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                    	      					
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_35, 35));
                    	      					
                    	    }
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5259:6: (a7= IDENTIFIER )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5260:7: a7= IDENTIFIER
                    	    {
                    	    a7=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ClassDefinition1234); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      							if (terminateParsing) {
                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      							}
                    	      							if (element == null) {
                    	      								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                    	      							}
                    	      							if (a7 != null) {
                    	      								org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	      								tokenResolver.setOptions(getOptions());
                    	      								org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	      								tokenResolver.resolve(a7.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), result);
                    	      								java.lang.Object resolvedObject = result.getResolvedToken();
                    	      								if (resolvedObject == null) {
                    	      									addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a7).getLine(), ((org.antlr.runtime.CommonToken) a7).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a7).getStartIndex(), ((org.antlr.runtime.CommonToken) a7).getStopIndex());
                    	      								}
                    	      								String resolved = (String) resolvedObject;
                    	      								org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                    	      								collectHiddenTokens(element);
                    	      								registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ClassDefinition, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getClassDefinitionSuperTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), resolved, proxy);
                    	      								if (proxy != null) {
                    	      									addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE, proxy);
                    	      									completedElement(proxy);
                    	      								}
                    	      								collectHiddenTokens(element);
                    	      								copyLocalizationInfos((org.antlr.runtime.CommonToken) a7, element);
                    	      								copyLocalizationInfos((org.antlr.runtime.CommonToken) a7, proxy);
                    	      							}
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_34, 36));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 36));
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop15;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_34, 37));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 37));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 38));
              	
            }
            a8=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_ClassDefinition1315); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 39));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 39));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 39));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 39));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 39));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 39));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5329:2: ( ( (a9_0= parse_org_kermeta_language_structure_Constraint ) ) )*
            loop17:
            do {
                int alt17=2;
                int LA17_0 = input.LA(1);

                if ( (LA17_0==IDENTIFIER) ) {
                    int LA17_2 = input.LA(2);

                    if ( (LA17_2==IDENTIFIER) ) {
                        int LA17_3 = input.LA(3);

                        if ( (synpred23_Kermeta()) ) {
                            alt17=1;
                        }


                    }


                }


                switch (alt17) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5330:3: ( (a9_0= parse_org_kermeta_language_structure_Constraint ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5330:3: ( (a9_0= parse_org_kermeta_language_structure_Constraint ) )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5331:4: (a9_0= parse_org_kermeta_language_structure_Constraint )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5331:4: (a9_0= parse_org_kermeta_language_structure_Constraint )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5332:5: a9_0= parse_org_kermeta_language_structure_Constraint
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_ClassDefinition1344);
            	    a9_0=parse_org_kermeta_language_structure_Constraint();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
            	      					}
            	      					if (a9_0 != null) {
            	      						if (a9_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__INV, a9_0);
            	      							completedElement(a9_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a9_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 40));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 40));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 40));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 40));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 40));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 40));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 41));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 41));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 41));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 41));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 41));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 41));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5370:2: ( ( (a10_0= parse_org_kermeta_language_structure_Property ) ) )*
            loop18:
            do {
                int alt18=2;
                int LA18_0 = input.LA(1);

                if ( ((LA18_0>=25 && LA18_0<=26)||LA18_0==28) ) {
                    alt18=1;
                }


                switch (alt18) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5371:3: ( (a10_0= parse_org_kermeta_language_structure_Property ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5371:3: ( (a10_0= parse_org_kermeta_language_structure_Property ) )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5372:4: (a10_0= parse_org_kermeta_language_structure_Property )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5372:4: (a10_0= parse_org_kermeta_language_structure_Property )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5373:5: a10_0= parse_org_kermeta_language_structure_Property
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_ClassDefinition1400);
            	    a10_0=parse_org_kermeta_language_structure_Property();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
            	      					}
            	      					if (a10_0 != null) {
            	      						if (a10_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__OWNED_ATTRIBUTE, a10_0);
            	      							completedElement(a10_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a10_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 42));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 42));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 42));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 42));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 42));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 42));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop18;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 43));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 43));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 43));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 43));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 43));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 43));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5411:2: ( ( (a11_0= parse_org_kermeta_language_structure_Operation ) ) )*
            loop19:
            do {
                int alt19=2;
                int LA19_0 = input.LA(1);

                if ( (LA19_0==IDENTIFIER||LA19_0==31) ) {
                    alt19=1;
                }


                switch (alt19) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5412:3: ( (a11_0= parse_org_kermeta_language_structure_Operation ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5412:3: ( (a11_0= parse_org_kermeta_language_structure_Operation ) )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5413:4: (a11_0= parse_org_kermeta_language_structure_Operation )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5413:4: (a11_0= parse_org_kermeta_language_structure_Operation )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5414:5: a11_0= parse_org_kermeta_language_structure_Operation
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_ClassDefinition1456);
            	    a11_0=parse_org_kermeta_language_structure_Operation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
            	      					}
            	      					if (a11_0 != null) {
            	      						if (a11_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__OWNED_OPERATION, a11_0);
            	      							completedElement(a11_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a11_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 44));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 44));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 44));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop19;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 45));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 45));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 45));
              	
            }
            a12=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_ClassDefinition1497); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 46));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 46));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 46));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 46));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 46));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 46));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 46));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 46));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 46));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 46));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 6, parse_org_kermeta_language_structure_ClassDefinition_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ClassDefinition"


    // $ANTLR start "parse_org_kermeta_language_structure_Property"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5469:1: parse_org_kermeta_language_structure_Property returns [org.kermeta.language.structure.Property element = null] : ( (a0= 'attribute' | a1= 'reference' ) (a2= IDENTIFIER ) ( (a3= ':' (a4= IDENTIFIER ) ) )? | a5= 'property' (a6= IDENTIFIER ) ( (a7= ':' (a8= IDENTIFIER ) ) )? ( (a9= 'getter' (a10_0= parse_org_kermeta_language_behavior_Expression ) ) )? ( (a11= 'setter' (a12_0= parse_org_kermeta_language_behavior_Expression ) ) )? );
    public final org.kermeta.language.structure.Property parse_org_kermeta_language_structure_Property() throws RecognitionException {
        org.kermeta.language.structure.Property element =  null;
        int parse_org_kermeta_language_structure_Property_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        org.kermeta.language.behavior.Expression a10_0 = null;

        org.kermeta.language.behavior.Expression a12_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5472:1: ( (a0= 'attribute' | a1= 'reference' ) (a2= IDENTIFIER ) ( (a3= ':' (a4= IDENTIFIER ) ) )? | a5= 'property' (a6= IDENTIFIER ) ( (a7= ':' (a8= IDENTIFIER ) ) )? ( (a9= 'getter' (a10_0= parse_org_kermeta_language_behavior_Expression ) ) )? ( (a11= 'setter' (a12_0= parse_org_kermeta_language_behavior_Expression ) ) )? )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( ((LA25_0>=25 && LA25_0<=26)) ) {
                alt25=1;
            }
            else if ( (LA25_0==28) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5473:2: (a0= 'attribute' | a1= 'reference' ) (a2= IDENTIFIER ) ( (a3= ':' (a4= IDENTIFIER ) ) )?
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5473:2: (a0= 'attribute' | a1= 'reference' )
                    int alt20=2;
                    int LA20_0 = input.LA(1);

                    if ( (LA20_0==25) ) {
                        alt20=1;
                    }
                    else if ( (LA20_0==26) ) {
                        alt20=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 20, 0, input);

                        throw nvae;
                    }
                    switch (alt20) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5474:3: a0= 'attribute'
                            {
                            a0=(Token)match(input,25,FOLLOW_25_in_parse_org_kermeta_language_structure_Property1530); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              			if (element == null) {
                              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              			}
                              			collectHiddenTokens(element);
                              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                              		
                            }
                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 47));
                              		
                            }

                            }
                            break;
                        case 2 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5487:6: a1= 'reference'
                            {
                            a1=(Token)match(input,26,FOLLOW_26_in_parse_org_kermeta_language_structure_Property1553); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              			if (element == null) {
                              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              			}
                              			collectHiddenTokens(element);
                              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                              		
                            }
                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 48));
                              		
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 49));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5505:2: (a2= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5506:3: a2= IDENTIFIER
                    {
                    a2=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property1581); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (terminateParsing) {
                      				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      			}
                      			if (element == null) {
                      				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                      			}
                      			if (a2 != null) {
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      				tokenResolver.setOptions(getOptions());
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), result);
                      				java.lang.Object resolvedObject = result.getResolvedToken();
                      				if (resolvedObject == null) {
                      					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
                      				}
                      				java.lang.String resolved = (java.lang.String)resolvedObject;
                      				if (resolved != null) {
                      					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), resolved);
                      					completedElement(resolved);
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
                      			}
                      		
                    }

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_38, 50));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 50));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 50));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 50));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 50));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 50));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 50));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5544:2: ( (a3= ':' (a4= IDENTIFIER ) ) )?
                    int alt21=2;
                    int LA21_0 = input.LA(1);

                    if ( (LA21_0==27) ) {
                        alt21=1;
                    }
                    switch (alt21) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5545:3: (a3= ':' (a4= IDENTIFIER ) )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5545:3: (a3= ':' (a4= IDENTIFIER ) )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5546:4: a3= ':' (a4= IDENTIFIER )
                            {
                            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Property1611); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              				}
                              				collectHiddenTokens(element);
                              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                              			
                            }
                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_39, 51));
                              			
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5558:4: (a4= IDENTIFIER )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5559:5: a4= IDENTIFIER
                            {
                            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property1637); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              					}
                              					if (a4 != null) {
                              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                              						tokenResolver.setOptions(getOptions());
                              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), result);
                              						java.lang.Object resolvedObject = result.getResolvedToken();
                              						if (resolvedObject == null) {
                              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
                              						}
                              						String resolved = (String) resolvedObject;
                              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                              						collectHiddenTokens(element);
                              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), resolved, proxy);
                              						if (proxy != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), proxy);
                              							completedElement(proxy);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
                              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
                              					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 52));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 52));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 52));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 52));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 52));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 52));
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 53));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 53));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 53));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 53));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 53));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 53));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5613:4: a5= 'property' (a6= IDENTIFIER ) ( (a7= ':' (a8= IDENTIFIER ) ) )? ( (a9= 'getter' (a10_0= parse_org_kermeta_language_behavior_Expression ) ) )? ( (a11= 'setter' (a12_0= parse_org_kermeta_language_behavior_Expression ) ) )?
                    {
                    a5=(Token)match(input,28,FOLLOW_28_in_parse_org_kermeta_language_structure_Property1687); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 54));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5625:2: (a6= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5626:3: a6= IDENTIFIER
                    {
                    a6=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property1705); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (terminateParsing) {
                      				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      			}
                      			if (element == null) {
                      				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                      			}
                      			if (a6 != null) {
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      				tokenResolver.setOptions(getOptions());
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      				tokenResolver.resolve(a6.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), result);
                      				java.lang.Object resolvedObject = result.getResolvedToken();
                      				if (resolvedObject == null) {
                      					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a6).getLine(), ((org.antlr.runtime.CommonToken) a6).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a6).getStartIndex(), ((org.antlr.runtime.CommonToken) a6).getStopIndex());
                      				}
                      				java.lang.String resolved = (java.lang.String)resolvedObject;
                      				if (resolved != null) {
                      					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), resolved);
                      					completedElement(resolved);
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken) a6, element);
                      			}
                      		
                    }

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 55));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_42, 55));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 55));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 55));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 55));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 55));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 55));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 55));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 55));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5666:2: ( (a7= ':' (a8= IDENTIFIER ) ) )?
                    int alt22=2;
                    int LA22_0 = input.LA(1);

                    if ( (LA22_0==27) ) {
                        alt22=1;
                    }
                    switch (alt22) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5667:3: (a7= ':' (a8= IDENTIFIER ) )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5667:3: (a7= ':' (a8= IDENTIFIER ) )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5668:4: a7= ':' (a8= IDENTIFIER )
                            {
                            a7=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Property1735); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              				}
                              				collectHiddenTokens(element);
                              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
                              			
                            }
                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 56));
                              			
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5680:4: (a8= IDENTIFIER )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5681:5: a8= IDENTIFIER
                            {
                            a8=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property1761); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              					}
                              					if (a8 != null) {
                              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                              						tokenResolver.setOptions(getOptions());
                              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              						tokenResolver.resolve(a8.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), result);
                              						java.lang.Object resolvedObject = result.getResolvedToken();
                              						if (resolvedObject == null) {
                              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a8).getLine(), ((org.antlr.runtime.CommonToken) a8).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a8).getStartIndex(), ((org.antlr.runtime.CommonToken) a8).getStopIndex());
                              						}
                              						String resolved = (String) resolvedObject;
                              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                              						collectHiddenTokens(element);
                              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), resolved, proxy);
                              						if (proxy != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), proxy);
                              							completedElement(proxy);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a8, element);
                              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a8, proxy);
                              					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_42, 57));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 57));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 57));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 57));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 57));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 57));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 57));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 57));
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_42, 58));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 58));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 58));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 58));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 58));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 58));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 58));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 58));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5738:2: ( (a9= 'getter' (a10_0= parse_org_kermeta_language_behavior_Expression ) ) )?
                    int alt23=2;
                    int LA23_0 = input.LA(1);

                    if ( (LA23_0==29) ) {
                        alt23=1;
                    }
                    switch (alt23) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5739:3: (a9= 'getter' (a10_0= parse_org_kermeta_language_behavior_Expression ) )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5739:3: (a9= 'getter' (a10_0= parse_org_kermeta_language_behavior_Expression ) )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5740:4: a9= 'getter' (a10_0= parse_org_kermeta_language_behavior_Expression )
                            {
                            a9=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Property1816); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              				}
                              				collectHiddenTokens(element);
                              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
                              			
                            }
                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 59));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 59));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 59));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 59));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 59));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 59));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 59));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 59));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 59));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 59));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 59));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 59));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 59));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 59));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 59));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 59));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 59));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 59));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 59));
                              			
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5770:4: (a10_0= parse_org_kermeta_language_behavior_Expression )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5771:5: a10_0= parse_org_kermeta_language_behavior_Expression
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_structure_Property1842);
                            a10_0=parse_org_kermeta_language_behavior_Expression();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              					}
                              					if (a10_0 != null) {
                              						if (a10_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__GETTER_BODY), a10_0);
                              							completedElement(a10_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a10_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 60));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 60));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 60));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 60));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 60));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 60));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 60));
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 61));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 61));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 61));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 61));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 61));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 61));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 61));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5811:2: ( (a11= 'setter' (a12_0= parse_org_kermeta_language_behavior_Expression ) ) )?
                    int alt24=2;
                    int LA24_0 = input.LA(1);

                    if ( (LA24_0==30) ) {
                        alt24=1;
                    }
                    switch (alt24) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5812:3: (a11= 'setter' (a12_0= parse_org_kermeta_language_behavior_Expression ) )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5812:3: (a11= 'setter' (a12_0= parse_org_kermeta_language_behavior_Expression ) )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5813:4: a11= 'setter' (a12_0= parse_org_kermeta_language_behavior_Expression )
                            {
                            a11=(Token)match(input,30,FOLLOW_30_in_parse_org_kermeta_language_structure_Property1892); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              				}
                              				collectHiddenTokens(element);
                              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
                              			
                            }
                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 62));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 62));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 62));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 62));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 62));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 62));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 62));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 62));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 62));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 62));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 62));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 62));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 62));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 62));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 62));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 62));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 62));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 62));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 62));
                              			
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5843:4: (a12_0= parse_org_kermeta_language_behavior_Expression )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5844:5: a12_0= parse_org_kermeta_language_behavior_Expression
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_structure_Property1918);
                            a12_0=parse_org_kermeta_language_behavior_Expression();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              					}
                              					if (a12_0 != null) {
                              						if (a12_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__SETTER_BODY), a12_0);
                              							completedElement(a12_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a12_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 63));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 63));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 63));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 63));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 63));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 63));
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 64));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 64));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 64));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 64));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 64));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 64));
                      	
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 7, parse_org_kermeta_language_structure_Property_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Property"


    // $ANTLR start "parse_org_kermeta_language_structure_Operation"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5884:1: parse_org_kermeta_language_structure_Operation returns [org.kermeta.language.structure.Operation element = null] : ( (a0_0= parse_org_kermeta_language_structure_Constraint ) )* ( (a1_0= parse_org_kermeta_language_structure_Constraint ) )* a2= 'operation' (a3= IDENTIFIER ) a4= '(' ( ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= IDENTIFIER ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )* ) )? a12= ')' ( (a13= ':' (a14= IDENTIFIER ) ) )? a15= 'is' ( (a16_0= parse_org_kermeta_language_behavior_Block ) | a17= 'abstract' ) ;
    public final org.kermeta.language.structure.Operation parse_org_kermeta_language_structure_Operation() throws RecognitionException {
        org.kermeta.language.structure.Operation element =  null;
        int parse_org_kermeta_language_structure_Operation_StartIndex = input.index();
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a6=null;
        Token a7=null;
        Token a8=null;
        Token a10=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a17=null;
        org.kermeta.language.structure.Constraint a0_0 = null;

        org.kermeta.language.structure.Constraint a1_0 = null;

        org.kermeta.language.structure.Parameter a5_0 = null;

        org.kermeta.language.structure.Parameter a9_0 = null;

        org.kermeta.language.behavior.Block a16_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5887:1: ( ( (a0_0= parse_org_kermeta_language_structure_Constraint ) )* ( (a1_0= parse_org_kermeta_language_structure_Constraint ) )* a2= 'operation' (a3= IDENTIFIER ) a4= '(' ( ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= IDENTIFIER ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )* ) )? a12= ')' ( (a13= ':' (a14= IDENTIFIER ) ) )? a15= 'is' ( (a16_0= parse_org_kermeta_language_behavior_Block ) | a17= 'abstract' ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5888:2: ( (a0_0= parse_org_kermeta_language_structure_Constraint ) )* ( (a1_0= parse_org_kermeta_language_structure_Constraint ) )* a2= 'operation' (a3= IDENTIFIER ) a4= '(' ( ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= IDENTIFIER ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )* ) )? a12= ')' ( (a13= ':' (a14= IDENTIFIER ) ) )? a15= 'is' ( (a16_0= parse_org_kermeta_language_behavior_Block ) | a17= 'abstract' )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5888:2: ( (a0_0= parse_org_kermeta_language_structure_Constraint ) )*
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( (LA26_0==IDENTIFIER) ) {
                    int LA26_1 = input.LA(2);

                    if ( (LA26_1==IDENTIFIER) ) {
                        int LA26_3 = input.LA(3);

                        if ( (synpred32_Kermeta()) ) {
                            alt26=1;
                        }


                    }


                }


                switch (alt26) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5889:3: (a0_0= parse_org_kermeta_language_structure_Constraint )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5889:3: (a0_0= parse_org_kermeta_language_structure_Constraint )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5890:4: a0_0= parse_org_kermeta_language_structure_Constraint
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Operation1983);
            	    a0_0=parse_org_kermeta_language_structure_Constraint();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
            	      				}
            	      				if (a0_0 != null) {
            	      					if (a0_0 != null) {
            	      						addObjectToList(element, org.kermeta.language.structure.StructurePackage.OPERATION__PRE, a0_0);
            	      						completedElement(a0_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a0_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop26;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 65));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 65));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5913:2: ( (a1_0= parse_org_kermeta_language_structure_Constraint ) )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==IDENTIFIER) ) {
                    alt27=1;
                }


                switch (alt27) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5914:3: (a1_0= parse_org_kermeta_language_structure_Constraint )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5914:3: (a1_0= parse_org_kermeta_language_structure_Constraint )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5915:4: a1_0= parse_org_kermeta_language_structure_Constraint
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Operation2018);
            	    a1_0=parse_org_kermeta_language_structure_Constraint();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
            	      				}
            	      				if (a1_0 != null) {
            	      					if (a1_0 != null) {
            	      						addObjectToList(element, org.kermeta.language.structure.StructurePackage.OPERATION__POST, a1_0);
            	      						completedElement(a1_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a1_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 66));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 66));
              	
            }
            a2=(Token)match(input,31,FOLLOW_31_in_parse_org_kermeta_language_structure_Operation2044); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 67));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5950:2: (a3= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5951:3: a3= IDENTIFIER
            {
            a3=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2062); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
              			}
              			if (a3 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a3).getLine(), ((org.antlr.runtime.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a3).getStartIndex(), ((org.antlr.runtime.CommonToken) a3).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a3, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 68));
              	
            }
            a4=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_structure_Operation2083); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 69));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 69));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5996:2: ( ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= IDENTIFIER ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )* ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==IDENTIFIER) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5997:3: ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= IDENTIFIER ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )* )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5997:3: ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= IDENTIFIER ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )* )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5998:4: (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= IDENTIFIER ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )*
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5998:4: (a5_0= parse_org_kermeta_language_structure_Parameter )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5999:5: a5_0= parse_org_kermeta_language_structure_Parameter
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Operation2112);
                    a5_0=parse_org_kermeta_language_structure_Parameter();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                      					}
                      					if (a5_0 != null) {
                      						if (a5_0 != null) {
                      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OPERATION__OWNED_PARAMETER, a5_0);
                      							completedElement(a5_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a5_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 70));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 70));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 70));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6022:4: ( (a6= ':' (a7= IDENTIFIER ) ) )?
                    int alt28=2;
                    int LA28_0 = input.LA(1);

                    if ( (LA28_0==27) ) {
                        alt28=1;
                    }
                    switch (alt28) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6023:5: (a6= ':' (a7= IDENTIFIER ) )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6023:5: (a6= ':' (a7= IDENTIFIER ) )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6024:6: a6= ':' (a7= IDENTIFIER )
                            {
                            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Operation2153); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              						if (element == null) {
                              							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						// expected elements (follow set)
                              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 71));
                              					
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6036:6: (a7= IDENTIFIER )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6037:7: a7= IDENTIFIER
                            {
                            a7=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2187); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              							if (terminateParsing) {
                              								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              							}
                              							if (element == null) {
                              								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                              							}
                              							if (a7 != null) {
                              								org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                              								tokenResolver.setOptions(getOptions());
                              								org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              								tokenResolver.resolve(a7.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), result);
                              								java.lang.Object resolvedObject = result.getResolvedToken();
                              								if (resolvedObject == null) {
                              									addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a7).getLine(), ((org.antlr.runtime.CommonToken) a7).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a7).getStartIndex(), ((org.antlr.runtime.CommonToken) a7).getStopIndex());
                              								}
                              								String resolved = (String) resolvedObject;
                              								org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                              								collectHiddenTokens(element);
                              								registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), resolved, proxy);
                              								if (proxy != null) {
                              									element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), proxy);
                              									completedElement(proxy);
                              								}
                              								collectHiddenTokens(element);
                              								copyLocalizationInfos((org.antlr.runtime.CommonToken) a7, element);
                              								copyLocalizationInfos((org.antlr.runtime.CommonToken) a7, proxy);
                              							}
                              						
                            }

                            }

                            if ( state.backtracking==0 ) {

                              						// expected elements (follow set)
                              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 72));
                              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 72));
                              					
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 73));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 73));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6082:4: ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )*
                    loop30:
                    do {
                        int alt30=2;
                        int LA30_0 = input.LA(1);

                        if ( (LA30_0==24) ) {
                            alt30=1;
                        }


                        switch (alt30) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6083:5: (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6083:5: (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6084:6: a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )?
                    	    {
                    	    a8=(Token)match(input,24,FOLLOW_24_in_parse_org_kermeta_language_structure_Operation2268); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      						if (element == null) {
                    	      							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	      						}
                    	      						collectHiddenTokens(element);
                    	      						copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
                    	      					
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 74));
                    	      					
                    	    }
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6096:6: (a9_0= parse_org_kermeta_language_structure_Parameter )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6097:7: a9_0= parse_org_kermeta_language_structure_Parameter
                    	    {
                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Operation2302);
                    	    a9_0=parse_org_kermeta_language_structure_Parameter();

                    	    state._fsp--;
                    	    if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      							if (terminateParsing) {
                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      							}
                    	      							if (element == null) {
                    	      								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	      							}
                    	      							if (a9_0 != null) {
                    	      								if (a9_0 != null) {
                    	      									addObjectToList(element, org.kermeta.language.structure.StructurePackage.OPERATION__OWNED_PARAMETER, a9_0);
                    	      									completedElement(a9_0);
                    	      								}
                    	      								collectHiddenTokens(element);
                    	      								copyLocalizationInfos(a9_0, element); 							}
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 75));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 75));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 75));
                    	      					
                    	    }
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6120:6: ( (a10= ':' (a11= IDENTIFIER ) ) )?
                    	    int alt29=2;
                    	    int LA29_0 = input.LA(1);

                    	    if ( (LA29_0==27) ) {
                    	        alt29=1;
                    	    }
                    	    switch (alt29) {
                    	        case 1 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6121:7: (a10= ':' (a11= IDENTIFIER ) )
                    	            {
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6121:7: (a10= ':' (a11= IDENTIFIER ) )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6122:8: a10= ':' (a11= IDENTIFIER )
                    	            {
                    	            a10=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Operation2357); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              								if (element == null) {
                    	              									element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              								}
                    	              								collectHiddenTokens(element);
                    	              								copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
                    	              							
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								// expected elements (follow set)
                    	              								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 76));
                    	              							
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6134:8: (a11= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6135:9: a11= IDENTIFIER
                    	            {
                    	            a11=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2399); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              									if (terminateParsing) {
                    	              										throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              									}
                    	              									if (element == null) {
                    	              										element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              									}
                    	              									if (a11 != null) {
                    	              										org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              										tokenResolver.setOptions(getOptions());
                    	              										org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              										tokenResolver.resolve(a11.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), result);
                    	              										java.lang.Object resolvedObject = result.getResolvedToken();
                    	              										if (resolvedObject == null) {
                    	              											addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a11).getLine(), ((org.antlr.runtime.CommonToken) a11).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a11).getStartIndex(), ((org.antlr.runtime.CommonToken) a11).getStopIndex());
                    	              										}
                    	              										String resolved = (String) resolvedObject;
                    	              										org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                    	              										collectHiddenTokens(element);
                    	              										registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), resolved, proxy);
                    	              										if (proxy != null) {
                    	              											element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), proxy);
                    	              											completedElement(proxy);
                    	              										}
                    	              										collectHiddenTokens(element);
                    	              										copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, element);
                    	              										copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, proxy);
                    	              									}
                    	              								
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              								// expected elements (follow set)
                    	              								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 77));
                    	              								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 77));
                    	              							
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 78));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 78));
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop30;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 79));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 79));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 80));
              	
            }
            a12=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_structure_Operation2525); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 81));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_72, 81));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6208:2: ( (a13= ':' (a14= IDENTIFIER ) ) )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==27) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6209:3: (a13= ':' (a14= IDENTIFIER ) )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6209:3: (a13= ':' (a14= IDENTIFIER ) )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6210:4: a13= ':' (a14= IDENTIFIER )
                    {
                    a13=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Operation2548); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_73, 82));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6222:4: (a14= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6223:5: a14= IDENTIFIER
                    {
                    a14=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2574); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                      					}
                      					if (a14 != null) {
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      						tokenResolver.setOptions(getOptions());
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      						tokenResolver.resolve(a14.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), result);
                      						java.lang.Object resolvedObject = result.getResolvedToken();
                      						if (resolvedObject == null) {
                      							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a14).getLine(), ((org.antlr.runtime.CommonToken) a14).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a14).getStartIndex(), ((org.antlr.runtime.CommonToken) a14).getStopIndex());
                      						}
                      						String resolved = (String) resolvedObject;
                      						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                      						collectHiddenTokens(element);
                      						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), resolved, proxy);
                      						if (proxy != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), proxy);
                      							completedElement(proxy);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a14, element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a14, proxy);
                      					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_72, 83));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_72, 84));
              	
            }
            a15=(Token)match(input,34,FOLLOW_34_in_parse_org_kermeta_language_structure_Operation2620); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 85));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_74, 85));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6279:2: ( (a16_0= parse_org_kermeta_language_behavior_Block ) | a17= 'abstract' )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==69) ) {
                alt33=1;
            }
            else if ( (LA33_0==21) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6280:3: (a16_0= parse_org_kermeta_language_behavior_Block )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6280:3: (a16_0= parse_org_kermeta_language_behavior_Block )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6281:4: a16_0= parse_org_kermeta_language_behavior_Block
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_structure_Operation2643);
                    a16_0=parse_org_kermeta_language_behavior_Block();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                      				}
                      				if (a16_0 != null) {
                      					if (a16_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__BODY), a16_0);
                      						completedElement(a16_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a16_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 86));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 86));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 86));
                      		
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6305:6: a17= 'abstract'
                    {
                    a17=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_structure_Operation2672); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (element == null) {
                      				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                      			}
                      			collectHiddenTokens(element);
                      			copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 87));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 87));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 87));
                      		
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 88));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 88));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 88));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 8, parse_org_kermeta_language_structure_Operation_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Operation"


    // $ANTLR start "parse_org_kermeta_language_structure_Parameter"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6329:1: parse_org_kermeta_language_structure_Parameter returns [org.kermeta.language.structure.Parameter element = null] : (a0= IDENTIFIER ) a1= ':' (a2= IDENTIFIER ) ;
    public final org.kermeta.language.structure.Parameter parse_org_kermeta_language_structure_Parameter() throws RecognitionException {
        org.kermeta.language.structure.Parameter element =  null;
        int parse_org_kermeta_language_structure_Parameter_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6332:1: ( (a0= IDENTIFIER ) a1= ':' (a2= IDENTIFIER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6333:2: (a0= IDENTIFIER ) a1= ':' (a2= IDENTIFIER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6333:2: (a0= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6334:3: a0= IDENTIFIER
            {
            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Parameter2715); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createParameter();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_75, 89));
              	
            }
            a1=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Parameter2736); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createParameter();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_76, 90));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6378:2: (a2= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6379:3: a2= IDENTIFIER
            {
            a2=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Parameter2754); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createParameter();
              			}
              			if (a2 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__TYPE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
              				}
              				String resolved = (String) resolvedObject;
              				org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
              				collectHiddenTokens(element);
              				registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__TYPE), resolved, proxy);
              				if (proxy != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__TYPE), proxy);
              					completedElement(proxy);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, proxy);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 91));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 91));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 91));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 9, parse_org_kermeta_language_structure_Parameter_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Parameter"


    // $ANTLR start "parse_org_kermeta_language_structure_Class"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6419:1: parse_org_kermeta_language_structure_Class returns [org.kermeta.language.structure.Class element = null] : (a0= IDENTIFIER ) ;
    public final org.kermeta.language.structure.Class parse_org_kermeta_language_structure_Class() throws RecognitionException {
        org.kermeta.language.structure.Class element =  null;
        int parse_org_kermeta_language_structure_Class_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6422:1: ( (a0= IDENTIFIER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6423:2: (a0= IDENTIFIER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6423:2: (a0= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6424:3: a0= IDENTIFIER
            {
            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Class2794); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS__TYPE_DEFINITION), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				String resolved = (String) resolvedObject;
              				org.kermeta.language.structure.ClassDefinition proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
              				collectHiddenTokens(element);
              				registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ParameterizedType, org.kermeta.language.structure.GenericTypeDefinition>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getParameterizedTypeTypeDefinitionReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS__TYPE_DEFINITION), resolved, proxy);
              				if (proxy != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS__TYPE_DEFINITION), proxy);
              					completedElement(proxy);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, proxy);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 92));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 10, parse_org_kermeta_language_structure_Class_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Class"


    // $ANTLR start "parse_org_kermeta_language_structure_Enumeration"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6525:1: parse_org_kermeta_language_structure_Enumeration returns [org.kermeta.language.structure.Enumeration element = null] : a0= 'enumeration' (a1= IDENTIFIER ) a2= '{' ( (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a4= ';' ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )* ) a7= '}' ;
    public final org.kermeta.language.structure.Enumeration parse_org_kermeta_language_structure_Enumeration() throws RecognitionException {
        org.kermeta.language.structure.Enumeration element =  null;
        int parse_org_kermeta_language_structure_Enumeration_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        Token a6=null;
        Token a7=null;
        org.kermeta.language.structure.EnumerationLiteral a3_0 = null;

        org.kermeta.language.structure.EnumerationLiteral a5_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6528:1: (a0= 'enumeration' (a1= IDENTIFIER ) a2= '{' ( (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a4= ';' ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )* ) a7= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6529:2: a0= 'enumeration' (a1= IDENTIFIER ) a2= '{' ( (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a4= ';' ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )* ) a7= '}'
            {
            a0=(Token)match(input,35,FOLLOW_35_in_parse_org_kermeta_language_structure_Enumeration2830); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 93));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6541:2: (a1= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6542:3: a1= IDENTIFIER
            {
            a1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Enumeration2848); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              			}
              			if (a1 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 94));
              	
            }
            a2=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_Enumeration2869); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 95));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6586:2: ( (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a4= ';' ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )* )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6587:3: (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a4= ';' ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )*
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6587:3: (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6588:4: a3_0= parse_org_kermeta_language_structure_EnumerationLiteral
            {
            pushFollow(FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Enumeration2892);
            a3_0=parse_org_kermeta_language_structure_EnumerationLiteral();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              				if (terminateParsing) {
              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              				}
              				if (element == null) {
              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              				}
              				if (a3_0 != null) {
              					if (a3_0 != null) {
              						addObjectToList(element, org.kermeta.language.structure.StructurePackage.ENUMERATION__OWNED_LITERAL, a3_0);
              						completedElement(a3_0);
              					}
              					collectHiddenTokens(element);
              					copyLocalizationInfos(a3_0, element); 				}
              			
            }

            }

            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 96));
              		
            }
            a4=(Token)match(input,36,FOLLOW_36_in_parse_org_kermeta_language_structure_Enumeration2915); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              			}
              			collectHiddenTokens(element);
              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              		
            }
            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 97));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 97));
              		
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6622:3: ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==IDENTIFIER) ) {
                    alt34=1;
                }


                switch (alt34) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6623:4: ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6623:4: ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6624:5: (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';'
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6624:5: (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6625:6: a5_0= parse_org_kermeta_language_structure_EnumerationLiteral
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Enumeration2950);
            	    a5_0=parse_org_kermeta_language_structure_EnumerationLiteral();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      						if (terminateParsing) {
            	      							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      						}
            	      						if (element == null) {
            	      							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
            	      						}
            	      						if (a5_0 != null) {
            	      							if (a5_0 != null) {
            	      								addObjectToList(element, org.kermeta.language.structure.StructurePackage.ENUMERATION__OWNED_LITERAL, a5_0);
            	      								completedElement(a5_0);
            	      							}
            	      							collectHiddenTokens(element);
            	      							copyLocalizationInfos(a5_0, element); 						}
            	      					
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      					// expected elements (follow set)
            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 98));
            	      				
            	    }
            	    a6=(Token)match(input,36,FOLLOW_36_in_parse_org_kermeta_language_structure_Enumeration2983); if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	      				
            	    }
            	    if ( state.backtracking==0 ) {

            	      					// expected elements (follow set)
            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 99));
            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 99));
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 100));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 100));
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 101));
              	
            }
            a7=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_Enumeration3031); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 102));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 102));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 11, parse_org_kermeta_language_structure_Enumeration_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Enumeration"


    // $ANTLR start "parse_org_kermeta_language_structure_EnumerationLiteral"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6760:1: parse_org_kermeta_language_structure_EnumerationLiteral returns [org.kermeta.language.structure.EnumerationLiteral element = null] : (a0= IDENTIFIER ) ;
    public final org.kermeta.language.structure.EnumerationLiteral parse_org_kermeta_language_structure_EnumerationLiteral() throws RecognitionException {
        org.kermeta.language.structure.EnumerationLiteral element =  null;
        int parse_org_kermeta_language_structure_EnumerationLiteral_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6763:1: ( (a0= IDENTIFIER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6764:2: (a0= IDENTIFIER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6764:2: (a0= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6765:3: a0= IDENTIFIER
            {
            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_EnumerationLiteral3064); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumerationLiteral();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION_LITERAL__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION_LITERAL__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 103));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 12, parse_org_kermeta_language_structure_EnumerationLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_EnumerationLiteral"


    // $ANTLR start "parse_org_kermeta_language_structure_Constraint"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6799:1: parse_org_kermeta_language_structure_Constraint returns [org.kermeta.language.structure.Constraint element = null] : (a0= IDENTIFIER ) (a1= IDENTIFIER ) ;
    public final org.kermeta.language.structure.Constraint parse_org_kermeta_language_structure_Constraint() throws RecognitionException {
        org.kermeta.language.structure.Constraint element =  null;
        int parse_org_kermeta_language_structure_Constraint_StartIndex = input.index();
        Token a0=null;
        Token a1=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6802:1: ( (a0= IDENTIFIER ) (a1= IDENTIFIER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6803:2: (a0= IDENTIFIER ) (a1= IDENTIFIER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6803:2: (a0= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6804:3: a0= IDENTIFIER
            {
            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Constraint3104); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createConstraint();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__STEREOTYPE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				org.kermeta.language.structure.ConstraintType resolved = (org.kermeta.language.structure.ConstraintType)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__STEREOTYPE), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 104));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6836:2: (a1= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6837:3: a1= IDENTIFIER
            {
            a1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Constraint3129); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createConstraint();
              			}
              			if (a1 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__LANGUAGE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
              				}
              				org.kermeta.language.structure.ConstraintLanguage resolved = (org.kermeta.language.structure.ConstraintLanguage)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__LANGUAGE), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 105));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 105));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 13, parse_org_kermeta_language_structure_Constraint_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Constraint"


    // $ANTLR start "parse_org_kermeta_language_structure_PrimitiveType"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6876:1: parse_org_kermeta_language_structure_PrimitiveType returns [org.kermeta.language.structure.PrimitiveType element = null] : (a0= PRIMITIVE_TYPE ) ;
    public final org.kermeta.language.structure.PrimitiveType parse_org_kermeta_language_structure_PrimitiveType() throws RecognitionException {
        org.kermeta.language.structure.PrimitiveType element =  null;
        int parse_org_kermeta_language_structure_PrimitiveType_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6879:1: ( (a0= PRIMITIVE_TYPE ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6880:2: (a0= PRIMITIVE_TYPE )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6880:2: (a0= PRIMITIVE_TYPE )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6881:3: a0= PRIMITIVE_TYPE
            {
            a0=(Token)match(input,PRIMITIVE_TYPE,FOLLOW_PRIMITIVE_TYPE_in_parse_org_kermeta_language_structure_PrimitiveType3169); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("PRIMITIVE_TYPE");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 106));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 14, parse_org_kermeta_language_structure_PrimitiveType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_PrimitiveType"


    // $ANTLR start "parse_org_kermeta_language_structure_UnresolvedType"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6988:1: parse_org_kermeta_language_structure_UnresolvedType returns [org.kermeta.language.structure.UnresolvedType element = null] : (a0= IDENTIFIER ) ;
    public final org.kermeta.language.structure.UnresolvedType parse_org_kermeta_language_structure_UnresolvedType() throws RecognitionException {
        org.kermeta.language.structure.UnresolvedType element =  null;
        int parse_org_kermeta_language_structure_UnresolvedType_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6991:1: ( (a0= IDENTIFIER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6992:2: (a0= IDENTIFIER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6992:2: (a0= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6993:3: a0= IDENTIFIER
            {
            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_UnresolvedType3209); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createUnresolvedType();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.UNRESOLVED_TYPE__TYPE_IDENTIFIER), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.UNRESOLVED_TYPE__TYPE_IDENTIFIER), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 107));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 15, parse_org_kermeta_language_structure_UnresolvedType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_UnresolvedType"


    // $ANTLR start "parse_org_kermeta_language_structure_VoidType"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7090:1: parse_org_kermeta_language_structure_VoidType returns [org.kermeta.language.structure.VoidType element = null] : a0= 'Void' ;
    public final org.kermeta.language.structure.VoidType parse_org_kermeta_language_structure_VoidType() throws RecognitionException {
        org.kermeta.language.structure.VoidType element =  null;
        int parse_org_kermeta_language_structure_VoidType_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7093:1: (a0= 'Void' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7094:2: a0= 'Void'
            {
            a0=(Token)match(input,37,FOLLOW_37_in_parse_org_kermeta_language_structure_VoidType3245); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 108));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 16, parse_org_kermeta_language_structure_VoidType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_VoidType"


    // $ANTLR start "parse_org_kermeta_language_structure_Object"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7171:1: parse_org_kermeta_language_structure_Object returns [org.kermeta.language.structure.Object element = null] : (a0= 'Object' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}' | c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Using | c2= parse_org_kermeta_language_structure_Require | c3= parse_org_kermeta_language_structure_Package | c4= parse_org_kermeta_language_structure_ClassDefinition | c5= parse_org_kermeta_language_structure_Property | c6= parse_org_kermeta_language_structure_Operation | c7= parse_org_kermeta_language_structure_Parameter | c8= parse_org_kermeta_language_structure_Class | c9= parse_org_kermeta_language_structure_Enumeration | c10= parse_org_kermeta_language_structure_EnumerationLiteral | c11= parse_org_kermeta_language_structure_Constraint | c12= parse_org_kermeta_language_structure_PrimitiveType | c13= parse_org_kermeta_language_structure_UnresolvedType | c14= parse_org_kermeta_language_structure_VoidType | c15= parse_org_kermeta_language_structure_Model | c16= parse_org_kermeta_language_structure_ModelType | c17= parse_org_kermeta_language_structure_TypeVariableBinding | c18= parse_org_kermeta_language_structure_MultiplicityElement | c19= parse_org_kermeta_language_structure_TypeDefinition | c20= parse_org_kermeta_language_structure_Tag | c21= parse_org_kermeta_language_structure_ObjectTypeVariable | c22= parse_org_kermeta_language_structure_ModelTypeVariable | c23= parse_org_kermeta_language_structure_VirtualType | c24= parse_org_kermeta_language_structure_ProductType | c25= parse_org_kermeta_language_structure_FunctionType | c26= parse_org_kermeta_language_behavior_Block | c27= parse_org_kermeta_language_behavior_Rescue | c28= parse_org_kermeta_language_behavior_TypeReference | c29= parse_org_kermeta_language_behavior_Raise | c30= parse_org_kermeta_language_behavior_BooleanLiteral | c31= parse_org_kermeta_language_behavior_IntegerLiteral | c32= parse_org_kermeta_language_behavior_StringLiteral | c33= parse_org_kermeta_language_behavior_Conditional | c34= parse_org_kermeta_language_behavior_Loop | c35= parse_org_kermeta_language_behavior_VariableDecl | c36= parse_org_kermeta_language_behavior_TypeLiteral | c37= parse_org_kermeta_language_behavior_CallResult | c38= parse_org_kermeta_language_behavior_CallSuperOperation | c39= parse_org_kermeta_language_behavior_Assignment | c40= parse_org_kermeta_language_behavior_CallVariable | c41= parse_org_kermeta_language_behavior_SelfExpression | c42= parse_org_kermeta_language_behavior_CallFeature | c43= parse_org_kermeta_language_behavior_JavaStaticCall | c44= parse_org_kermeta_language_behavior_VoidLiteral | c45= parse_org_kermeta_language_behavior_CallValue | c46= parse_org_kermeta_language_behavior_EmptyExpression | c47= parse_org_kermeta_language_behavior_LambdaExpression | c48= parse_org_kermeta_language_behavior_LambdaParameter );
    public final org.kermeta.language.structure.Object parse_org_kermeta_language_structure_Object() throws RecognitionException {
        org.kermeta.language.structure.Object element =  null;
        int parse_org_kermeta_language_structure_Object_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.ModelingUnit c0 = null;

        org.kermeta.language.structure.Using c1 = null;

        org.kermeta.language.structure.Require c2 = null;

        org.kermeta.language.structure.Package c3 = null;

        org.kermeta.language.structure.ClassDefinition c4 = null;

        org.kermeta.language.structure.Property c5 = null;

        org.kermeta.language.structure.Operation c6 = null;

        org.kermeta.language.structure.Parameter c7 = null;

        org.kermeta.language.structure.Class c8 = null;

        org.kermeta.language.structure.Enumeration c9 = null;

        org.kermeta.language.structure.EnumerationLiteral c10 = null;

        org.kermeta.language.structure.Constraint c11 = null;

        org.kermeta.language.structure.PrimitiveType c12 = null;

        org.kermeta.language.structure.UnresolvedType c13 = null;

        org.kermeta.language.structure.VoidType c14 = null;

        org.kermeta.language.structure.Model c15 = null;

        org.kermeta.language.structure.ModelType c16 = null;

        org.kermeta.language.structure.TypeVariableBinding c17 = null;

        org.kermeta.language.structure.MultiplicityElement c18 = null;

        org.kermeta.language.structure.TypeDefinition c19 = null;

        org.kermeta.language.structure.Tag c20 = null;

        org.kermeta.language.structure.ObjectTypeVariable c21 = null;

        org.kermeta.language.structure.ModelTypeVariable c22 = null;

        org.kermeta.language.structure.VirtualType c23 = null;

        org.kermeta.language.structure.ProductType c24 = null;

        org.kermeta.language.structure.FunctionType c25 = null;

        org.kermeta.language.behavior.Block c26 = null;

        org.kermeta.language.behavior.Rescue c27 = null;

        org.kermeta.language.behavior.TypeReference c28 = null;

        org.kermeta.language.behavior.Raise c29 = null;

        org.kermeta.language.behavior.BooleanLiteral c30 = null;

        org.kermeta.language.behavior.IntegerLiteral c31 = null;

        org.kermeta.language.behavior.StringLiteral c32 = null;

        org.kermeta.language.behavior.Conditional c33 = null;

        org.kermeta.language.behavior.Loop c34 = null;

        org.kermeta.language.behavior.VariableDecl c35 = null;

        org.kermeta.language.behavior.TypeLiteral c36 = null;

        org.kermeta.language.behavior.CallResult c37 = null;

        org.kermeta.language.behavior.CallSuperOperation c38 = null;

        org.kermeta.language.behavior.Assignment c39 = null;

        org.kermeta.language.behavior.CallVariable c40 = null;

        org.kermeta.language.behavior.SelfExpression c41 = null;

        org.kermeta.language.behavior.CallFeature c42 = null;

        org.kermeta.language.behavior.JavaStaticCall c43 = null;

        org.kermeta.language.behavior.VoidLiteral c44 = null;

        org.kermeta.language.behavior.CallValue c45 = null;

        org.kermeta.language.behavior.EmptyExpression c46 = null;

        org.kermeta.language.behavior.LambdaExpression c47 = null;

        org.kermeta.language.behavior.LambdaParameter c48 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7174:1: (a0= 'Object' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}' | c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Using | c2= parse_org_kermeta_language_structure_Require | c3= parse_org_kermeta_language_structure_Package | c4= parse_org_kermeta_language_structure_ClassDefinition | c5= parse_org_kermeta_language_structure_Property | c6= parse_org_kermeta_language_structure_Operation | c7= parse_org_kermeta_language_structure_Parameter | c8= parse_org_kermeta_language_structure_Class | c9= parse_org_kermeta_language_structure_Enumeration | c10= parse_org_kermeta_language_structure_EnumerationLiteral | c11= parse_org_kermeta_language_structure_Constraint | c12= parse_org_kermeta_language_structure_PrimitiveType | c13= parse_org_kermeta_language_structure_UnresolvedType | c14= parse_org_kermeta_language_structure_VoidType | c15= parse_org_kermeta_language_structure_Model | c16= parse_org_kermeta_language_structure_ModelType | c17= parse_org_kermeta_language_structure_TypeVariableBinding | c18= parse_org_kermeta_language_structure_MultiplicityElement | c19= parse_org_kermeta_language_structure_TypeDefinition | c20= parse_org_kermeta_language_structure_Tag | c21= parse_org_kermeta_language_structure_ObjectTypeVariable | c22= parse_org_kermeta_language_structure_ModelTypeVariable | c23= parse_org_kermeta_language_structure_VirtualType | c24= parse_org_kermeta_language_structure_ProductType | c25= parse_org_kermeta_language_structure_FunctionType | c26= parse_org_kermeta_language_behavior_Block | c27= parse_org_kermeta_language_behavior_Rescue | c28= parse_org_kermeta_language_behavior_TypeReference | c29= parse_org_kermeta_language_behavior_Raise | c30= parse_org_kermeta_language_behavior_BooleanLiteral | c31= parse_org_kermeta_language_behavior_IntegerLiteral | c32= parse_org_kermeta_language_behavior_StringLiteral | c33= parse_org_kermeta_language_behavior_Conditional | c34= parse_org_kermeta_language_behavior_Loop | c35= parse_org_kermeta_language_behavior_VariableDecl | c36= parse_org_kermeta_language_behavior_TypeLiteral | c37= parse_org_kermeta_language_behavior_CallResult | c38= parse_org_kermeta_language_behavior_CallSuperOperation | c39= parse_org_kermeta_language_behavior_Assignment | c40= parse_org_kermeta_language_behavior_CallVariable | c41= parse_org_kermeta_language_behavior_SelfExpression | c42= parse_org_kermeta_language_behavior_CallFeature | c43= parse_org_kermeta_language_behavior_JavaStaticCall | c44= parse_org_kermeta_language_behavior_VoidLiteral | c45= parse_org_kermeta_language_behavior_CallValue | c46= parse_org_kermeta_language_behavior_EmptyExpression | c47= parse_org_kermeta_language_behavior_LambdaExpression | c48= parse_org_kermeta_language_behavior_LambdaParameter )
            int alt37=50;
            alt37 = dfa37.predict(input);
            switch (alt37) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7175:2: a0= 'Object' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}'
                    {
                    a0=(Token)match(input,38,FOLLOW_38_in_parse_org_kermeta_language_structure_Object3274); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 109));
                      	
                    }
                    a1=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_Object3288); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 110));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 110));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 110));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7201:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )*
                    loop36:
                    do {
                        int alt36=2;
                        int LA36_0 = input.LA(1);

                        if ( ((LA36_0>=39 && LA36_0<=40)) ) {
                            alt36=1;
                        }


                        switch (alt36) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7202:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7202:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) )
                    	    int alt35=2;
                    	    int LA35_0 = input.LA(1);

                    	    if ( (LA35_0==39) ) {
                    	        alt35=1;
                    	    }
                    	    else if ( (LA35_0==40) ) {
                    	        alt35=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 35, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt35) {
                    	        case 1 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7203:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
                    	            {
                    	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_Object3311); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 111));
                    	              			
                    	            }
                    	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Object3331); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 112));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7227:4: (a4= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7228:5: a4= IDENTIFIER
                    	            {
                    	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Object3357); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              					}
                    	              					if (a4 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT__TAG), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT__TAG), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT__TAG, proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 113));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 113));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 113));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7267:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
                    	            {
                    	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_Object3398); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 114));
                    	              			
                    	            }
                    	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Object3418); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 115));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7291:4: (a7_0= parse_org_kermeta_language_structure_Tag )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7292:5: a7_0= parse_org_kermeta_language_structure_Tag
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Object3444);
                    	            a7_0=parse_org_kermeta_language_structure_Tag();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              					}
                    	              					if (a7_0 != null) {
                    	              						if (a7_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT__OWNED_TAGS, a7_0);
                    	              							completedElement(a7_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a7_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 116));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 116));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 116));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop36;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 117));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 117));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 117));
                      	
                    }
                    a8=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_Object3485); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7337:2: c0= parse_org_kermeta_language_structure_ModelingUnit
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_parse_org_kermeta_language_structure_Object3504);
                    c0=parse_org_kermeta_language_structure_ModelingUnit();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7338:4: c1= parse_org_kermeta_language_structure_Using
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Using_in_parse_org_kermeta_language_structure_Object3514);
                    c1=parse_org_kermeta_language_structure_Using();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7339:4: c2= parse_org_kermeta_language_structure_Require
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Require_in_parse_org_kermeta_language_structure_Object3524);
                    c2=parse_org_kermeta_language_structure_Require();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7340:4: c3= parse_org_kermeta_language_structure_Package
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Object3534);
                    c3=parse_org_kermeta_language_structure_Package();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 6 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7341:4: c4= parse_org_kermeta_language_structure_ClassDefinition
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_parse_org_kermeta_language_structure_Object3544);
                    c4=parse_org_kermeta_language_structure_ClassDefinition();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c4; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 7 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7342:4: c5= parse_org_kermeta_language_structure_Property
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_Object3554);
                    c5=parse_org_kermeta_language_structure_Property();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c5; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 8 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7343:4: c6= parse_org_kermeta_language_structure_Operation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_Object3564);
                    c6=parse_org_kermeta_language_structure_Operation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c6; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 9 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7344:4: c7= parse_org_kermeta_language_structure_Parameter
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Object3574);
                    c7=parse_org_kermeta_language_structure_Parameter();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c7; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 10 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7345:4: c8= parse_org_kermeta_language_structure_Class
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Class_in_parse_org_kermeta_language_structure_Object3584);
                    c8=parse_org_kermeta_language_structure_Class();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c8; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 11 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7346:4: c9= parse_org_kermeta_language_structure_Enumeration
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_Object3594);
                    c9=parse_org_kermeta_language_structure_Enumeration();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c9; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 12 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7347:4: c10= parse_org_kermeta_language_structure_EnumerationLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Object3604);
                    c10=parse_org_kermeta_language_structure_EnumerationLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c10; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 13 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7348:4: c11= parse_org_kermeta_language_structure_Constraint
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Object3614);
                    c11=parse_org_kermeta_language_structure_Constraint();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c11; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 14 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7349:4: c12= parse_org_kermeta_language_structure_PrimitiveType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_Object3624);
                    c12=parse_org_kermeta_language_structure_PrimitiveType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c12; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 15 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7350:4: c13= parse_org_kermeta_language_structure_UnresolvedType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_parse_org_kermeta_language_structure_Object3634);
                    c13=parse_org_kermeta_language_structure_UnresolvedType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c13; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 16 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7351:4: c14= parse_org_kermeta_language_structure_VoidType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_VoidType_in_parse_org_kermeta_language_structure_Object3644);
                    c14=parse_org_kermeta_language_structure_VoidType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c14; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 17 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7352:4: c15= parse_org_kermeta_language_structure_Model
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Model_in_parse_org_kermeta_language_structure_Object3654);
                    c15=parse_org_kermeta_language_structure_Model();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c15; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 18 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7353:4: c16= parse_org_kermeta_language_structure_ModelType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_Object3664);
                    c16=parse_org_kermeta_language_structure_ModelType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c16; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 19 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7354:4: c17= parse_org_kermeta_language_structure_TypeVariableBinding
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeVariableBinding_in_parse_org_kermeta_language_structure_Object3674);
                    c17=parse_org_kermeta_language_structure_TypeVariableBinding();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c17; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 20 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7355:4: c18= parse_org_kermeta_language_structure_MultiplicityElement
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_parse_org_kermeta_language_structure_Object3684);
                    c18=parse_org_kermeta_language_structure_MultiplicityElement();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c18; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 21 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7356:4: c19= parse_org_kermeta_language_structure_TypeDefinition
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Object3694);
                    c19=parse_org_kermeta_language_structure_TypeDefinition();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c19; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 22 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7357:4: c20= parse_org_kermeta_language_structure_Tag
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Object3704);
                    c20=parse_org_kermeta_language_structure_Tag();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c20; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 23 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7358:4: c21= parse_org_kermeta_language_structure_ObjectTypeVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_parse_org_kermeta_language_structure_Object3714);
                    c21=parse_org_kermeta_language_structure_ObjectTypeVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c21; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 24 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7359:4: c22= parse_org_kermeta_language_structure_ModelTypeVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelTypeVariable_in_parse_org_kermeta_language_structure_Object3724);
                    c22=parse_org_kermeta_language_structure_ModelTypeVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c22; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 25 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7360:4: c23= parse_org_kermeta_language_structure_VirtualType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_Object3734);
                    c23=parse_org_kermeta_language_structure_VirtualType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c23; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 26 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7361:4: c24= parse_org_kermeta_language_structure_ProductType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ProductType_in_parse_org_kermeta_language_structure_Object3744);
                    c24=parse_org_kermeta_language_structure_ProductType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c24; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 27 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7362:4: c25= parse_org_kermeta_language_structure_FunctionType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_FunctionType_in_parse_org_kermeta_language_structure_Object3754);
                    c25=parse_org_kermeta_language_structure_FunctionType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c25; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 28 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7363:4: c26= parse_org_kermeta_language_behavior_Block
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_structure_Object3764);
                    c26=parse_org_kermeta_language_behavior_Block();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c26; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 29 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7364:4: c27= parse_org_kermeta_language_behavior_Rescue
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Rescue_in_parse_org_kermeta_language_structure_Object3774);
                    c27=parse_org_kermeta_language_behavior_Rescue();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c27; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 30 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7365:4: c28= parse_org_kermeta_language_behavior_TypeReference
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_structure_Object3784);
                    c28=parse_org_kermeta_language_behavior_TypeReference();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c28; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 31 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7366:4: c29= parse_org_kermeta_language_behavior_Raise
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Raise_in_parse_org_kermeta_language_structure_Object3794);
                    c29=parse_org_kermeta_language_behavior_Raise();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c29; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 32 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7367:4: c30= parse_org_kermeta_language_behavior_BooleanLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_structure_Object3804);
                    c30=parse_org_kermeta_language_behavior_BooleanLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c30; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 33 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7368:4: c31= parse_org_kermeta_language_behavior_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_structure_Object3814);
                    c31=parse_org_kermeta_language_behavior_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c31; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 34 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7369:4: c32= parse_org_kermeta_language_behavior_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_structure_Object3824);
                    c32=parse_org_kermeta_language_behavior_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c32; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 35 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7370:4: c33= parse_org_kermeta_language_behavior_Conditional
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_structure_Object3834);
                    c33=parse_org_kermeta_language_behavior_Conditional();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c33; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 36 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7371:4: c34= parse_org_kermeta_language_behavior_Loop
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_structure_Object3844);
                    c34=parse_org_kermeta_language_behavior_Loop();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c34; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 37 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7372:4: c35= parse_org_kermeta_language_behavior_VariableDecl
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_structure_Object3854);
                    c35=parse_org_kermeta_language_behavior_VariableDecl();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c35; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 38 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7373:4: c36= parse_org_kermeta_language_behavior_TypeLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_parse_org_kermeta_language_structure_Object3864);
                    c36=parse_org_kermeta_language_behavior_TypeLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c36; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 39 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7374:4: c37= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_structure_Object3874);
                    c37=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c37; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 40 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7375:4: c38= parse_org_kermeta_language_behavior_CallSuperOperation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_structure_Object3884);
                    c38=parse_org_kermeta_language_behavior_CallSuperOperation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c38; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 41 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7376:4: c39= parse_org_kermeta_language_behavior_Assignment
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_structure_Object3894);
                    c39=parse_org_kermeta_language_behavior_Assignment();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c39; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 42 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7377:4: c40= parse_org_kermeta_language_behavior_CallVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_structure_Object3904);
                    c40=parse_org_kermeta_language_behavior_CallVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c40; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 43 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7378:4: c41= parse_org_kermeta_language_behavior_SelfExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_structure_Object3914);
                    c41=parse_org_kermeta_language_behavior_SelfExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c41; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 44 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7379:4: c42= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_structure_Object3924);
                    c42=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c42; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 45 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7380:4: c43= parse_org_kermeta_language_behavior_JavaStaticCall
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_structure_Object3934);
                    c43=parse_org_kermeta_language_behavior_JavaStaticCall();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c43; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 46 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7381:4: c44= parse_org_kermeta_language_behavior_VoidLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_structure_Object3944);
                    c44=parse_org_kermeta_language_behavior_VoidLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c44; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 47 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7382:4: c45= parse_org_kermeta_language_behavior_CallValue
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_structure_Object3954);
                    c45=parse_org_kermeta_language_behavior_CallValue();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c45; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 48 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7383:4: c46= parse_org_kermeta_language_behavior_EmptyExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_structure_Object3964);
                    c46=parse_org_kermeta_language_behavior_EmptyExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c46; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 49 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7384:4: c47= parse_org_kermeta_language_behavior_LambdaExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_LambdaExpression_in_parse_org_kermeta_language_structure_Object3974);
                    c47=parse_org_kermeta_language_behavior_LambdaExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c47; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 50 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7385:4: c48= parse_org_kermeta_language_behavior_LambdaParameter
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_LambdaParameter_in_parse_org_kermeta_language_structure_Object3984);
                    c48=parse_org_kermeta_language_behavior_LambdaParameter();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c48; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 17, parse_org_kermeta_language_structure_Object_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Object"


    // $ANTLR start "parse_org_kermeta_language_structure_Model"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7389:1: parse_org_kermeta_language_structure_Model returns [org.kermeta.language.structure.Model element = null] : a0= 'Model' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}' ;
    public final org.kermeta.language.structure.Model parse_org_kermeta_language_structure_Model() throws RecognitionException {
        org.kermeta.language.structure.Model element =  null;
        int parse_org_kermeta_language_structure_Model_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        org.kermeta.language.structure.Tag a7_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7392:1: (a0= 'Model' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7393:2: a0= 'Model' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}'
            {
            a0=(Token)match(input,41,FOLLOW_41_in_parse_org_kermeta_language_structure_Model4009); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 119));
              	
            }
            a1=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_Model4023); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 120));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 120));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 120));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7419:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( ((LA39_0>=39 && LA39_0<=40)) ) {
                    alt39=1;
                }


                switch (alt39) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7420:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7420:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) )
            	    int alt38=2;
            	    int LA38_0 = input.LA(1);

            	    if ( (LA38_0==39) ) {
            	        alt38=1;
            	    }
            	    else if ( (LA38_0==40) ) {
            	        alt38=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 38, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt38) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7421:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_Model4046); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 121));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Model4066); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 122));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7445:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7446:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Model4092); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 123));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 123));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 123));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7485:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_Model4133); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 124));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Model4153); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 125));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7509:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7510:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Model4179);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 126));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 126));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 126));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 127));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 127));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 127));
              	
            }
            a8=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_Model4220); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 18, parse_org_kermeta_language_structure_Model_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Model"


    // $ANTLR start "parse_org_kermeta_language_structure_ModelType"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7555:1: parse_org_kermeta_language_structure_ModelType returns [org.kermeta.language.structure.ModelType element = null] : ( (a0= IDENTIFIER ) )? a1= 'ModelType' a2= '{' ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= IDENTIFIER ) | a12= 'name' a13= ':' (a14= IDENTIFIER ) | a15= 'includedTypeDefinition' a16= ':' (a17= IDENTIFIER ) ) )* a18= '}' ;
    public final org.kermeta.language.structure.ModelType parse_org_kermeta_language_structure_ModelType() throws RecognitionException {
        org.kermeta.language.structure.ModelType element =  null;
        int parse_org_kermeta_language_structure_ModelType_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        org.kermeta.language.structure.Tag a8_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7558:1: ( ( (a0= IDENTIFIER ) )? a1= 'ModelType' a2= '{' ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= IDENTIFIER ) | a12= 'name' a13= ':' (a14= IDENTIFIER ) | a15= 'includedTypeDefinition' a16= ':' (a17= IDENTIFIER ) ) )* a18= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7559:2: ( (a0= IDENTIFIER ) )? a1= 'ModelType' a2= '{' ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= IDENTIFIER ) | a12= 'name' a13= ':' (a14= IDENTIFIER ) | a15= 'includedTypeDefinition' a16= ':' (a17= IDENTIFIER ) ) )* a18= '}'
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7559:2: ( (a0= IDENTIFIER ) )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==IDENTIFIER) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7560:3: (a0= IDENTIFIER )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7560:3: (a0= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7561:4: a0= IDENTIFIER
                    {
                    a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4258); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
                      				}
                      				if (a0 != null) {
                      					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      					tokenResolver.setOptions(getOptions());
                      					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__IS_ASPECT), result);
                      					java.lang.Object resolvedObject = result.getResolvedToken();
                      					if (resolvedObject == null) {
                      						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
                      					}
                      					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
                      					if (resolved != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__IS_ASPECT), resolved);
                      						completedElement(resolved);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
                      				}
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 129));
              	
            }
            a1=(Token)match(input,42,FOLLOW_42_in_parse_org_kermeta_language_structure_ModelType4288); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 130));
              	
            }
            a2=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_ModelType4302); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 131));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_169, 131));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 131));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_171, 131));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 131));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 131));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7623:2: ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= IDENTIFIER ) | a12= 'name' a13= ':' (a14= IDENTIFIER ) | a15= 'includedTypeDefinition' a16= ':' (a17= IDENTIFIER ) ) )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( ((LA42_0>=39 && LA42_0<=40)||(LA42_0>=43 && LA42_0<=45)) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7624:3: (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= IDENTIFIER ) | a12= 'name' a13= ':' (a14= IDENTIFIER ) | a15= 'includedTypeDefinition' a16= ':' (a17= IDENTIFIER ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7624:3: (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= IDENTIFIER ) | a12= 'name' a13= ':' (a14= IDENTIFIER ) | a15= 'includedTypeDefinition' a16= ':' (a17= IDENTIFIER ) )
            	    int alt41=5;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt41=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt41=2;
            	        }
            	        break;
            	    case 43:
            	        {
            	        alt41=3;
            	        }
            	        break;
            	    case 44:
            	        {
            	        alt41=4;
            	        }
            	        break;
            	    case 45:
            	        {
            	        alt41=5;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 41, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt41) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7625:4: a3= 'tag' a4= ':' (a5= IDENTIFIER )
            	            {
            	            a3=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_ModelType4325); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_174, 132));
            	              			
            	            }
            	            a4=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4345); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_175, 133));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7649:4: (a5= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7650:5: a5= IDENTIFIER
            	            {
            	            a5=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4371); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              					}
            	              					if (a5 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a5).getLine(), ((org.antlr.runtime.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a5).getStartIndex(), ((org.antlr.runtime.CommonToken) a5).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 134));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_169, 134));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 134));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_171, 134));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 134));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 134));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7692:8: a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a6=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_ModelType4412); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_176, 135));
            	              			
            	            }
            	            a7=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4432); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 136));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7716:4: (a8_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7717:5: a8_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ModelType4458);
            	            a8_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              					}
            	              					if (a8_0 != null) {
            	              						if (a8_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE__OWNED_TAGS, a8_0);
            	              							completedElement(a8_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a8_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 137));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_169, 137));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 137));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_171, 137));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 137));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 137));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7744:8: a9= 'typeContainer' a10= ':' (a11= IDENTIFIER )
            	            {
            	            a9=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_structure_ModelType4494); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 138));
            	              			
            	            }
            	            a10=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4514); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 139));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7768:4: (a11= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7769:5: a11= IDENTIFIER
            	            {
            	            a11=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4540); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              					}
            	              					if (a11 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a11.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TYPE_CONTAINER), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a11).getLine(), ((org.antlr.runtime.CommonToken) a11).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a11).getStartIndex(), ((org.antlr.runtime.CommonToken) a11).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TYPE_CONTAINER), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TYPE_CONTAINER), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 140));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_169, 140));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 140));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_171, 140));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 140));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 140));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7811:8: a12= 'name' a13= ':' (a14= IDENTIFIER )
            	            {
            	            a12=(Token)match(input,44,FOLLOW_44_in_parse_org_kermeta_language_structure_ModelType4581); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_179, 141));
            	              			
            	            }
            	            a13=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4601); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_180, 142));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7835:4: (a14= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7836:5: a14= IDENTIFIER
            	            {
            	            a14=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4627); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              					}
            	              					if (a14 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a14.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__NAME), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a14).getLine(), ((org.antlr.runtime.CommonToken) a14).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a14).getStartIndex(), ((org.antlr.runtime.CommonToken) a14).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__NAME), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a14, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 143));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_169, 143));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 143));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_171, 143));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 143));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 143));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7874:8: a15= 'includedTypeDefinition' a16= ':' (a17= IDENTIFIER )
            	            {
            	            a15=(Token)match(input,45,FOLLOW_45_in_parse_org_kermeta_language_structure_ModelType4668); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_181, 144));
            	              			
            	            }
            	            a16=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4688); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a16, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_182, 145));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7898:4: (a17= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7899:5: a17= IDENTIFIER
            	            {
            	            a17=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4714); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              					}
            	              					if (a17 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a17.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__INCLUDED_TYPE_DEFINITION), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a17).getLine(), ((org.antlr.runtime.CommonToken) a17).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a17).getStartIndex(), ((org.antlr.runtime.CommonToken) a17).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.TypeDefinition proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ModelType, org.kermeta.language.structure.TypeDefinition>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getModelTypeIncludedTypeDefinitionReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__INCLUDED_TYPE_DEFINITION), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE__INCLUDED_TYPE_DEFINITION, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a17, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a17, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 146));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_169, 146));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 146));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_171, 146));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 146));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 146));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 147));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_169, 147));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 147));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_171, 147));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 147));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 147));
              	
            }
            a18=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_ModelType4760); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 148));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 19, parse_org_kermeta_language_structure_ModelType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ModelType"


    // $ANTLR start "parse_org_kermeta_language_structure_TypeVariableBinding"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8039:1: parse_org_kermeta_language_structure_TypeVariableBinding returns [org.kermeta.language.structure.TypeVariableBinding element = null] : a0= 'TypeVariableBinding' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}' ;
    public final org.kermeta.language.structure.TypeVariableBinding parse_org_kermeta_language_structure_TypeVariableBinding() throws RecognitionException {
        org.kermeta.language.structure.TypeVariableBinding element =  null;
        int parse_org_kermeta_language_structure_TypeVariableBinding_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8042:1: (a0= 'TypeVariableBinding' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8043:2: a0= 'TypeVariableBinding' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}'
            {
            a0=(Token)match(input,46,FOLLOW_46_in_parse_org_kermeta_language_structure_TypeVariableBinding4789); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_184, 149));
              	
            }
            a1=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_TypeVariableBinding4803); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 150));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 150));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 150));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 150));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 150));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 150));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8072:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( ((LA44_0>=39 && LA44_0<=40)||(LA44_0>=47 && LA44_0<=49)) ) {
                    alt44=1;
                }


                switch (alt44) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8073:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8073:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) )
            	    int alt43=5;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt43=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt43=2;
            	        }
            	        break;
            	    case 47:
            	        {
            	        alt43=3;
            	        }
            	        break;
            	    case 48:
            	        {
            	        alt43=4;
            	        }
            	        break;
            	    case 49:
            	        {
            	        alt43=5;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 43, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt43) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8074:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_TypeVariableBinding4826); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_185, 151));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding4846); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_186, 152));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8098:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8099:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeVariableBinding4872); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 153));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 153));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 153));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 153));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 153));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 153));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8141:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_TypeVariableBinding4913); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_187, 154));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding4933); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 155));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8165:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8166:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_TypeVariableBinding4959);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 156));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 156));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 156));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 156));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 156));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 156));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8193:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_structure_TypeVariableBinding4995); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_188, 157));
            	              			
            	            }
            	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding5015); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_77, 158));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 158));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 158));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 158));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 158));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 158));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 158));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_189, 158));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_190, 158));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_191, 158));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 158));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 158));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8228:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8229:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_TypeVariableBinding5041);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 159));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 159));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 159));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 159));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 159));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 159));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8256:8: a11= 'variable' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,48,FOLLOW_48_in_parse_org_kermeta_language_structure_TypeVariableBinding5077); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 160));
            	              			
            	            }
            	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding5097); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 161));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8280:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8281:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeVariableBinding5123); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__VARIABLE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.ObjectTypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariableBinding, org.kermeta.language.structure.TypeVariable>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableBindingVariableReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__VARIABLE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__VARIABLE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 162));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 162));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 162));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 162));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 162));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 162));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8323:8: a14= 'type' a15= ':' (a16= IDENTIFIER )
            	            {
            	            a14=(Token)match(input,49,FOLLOW_49_in_parse_org_kermeta_language_structure_TypeVariableBinding5164); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 163));
            	              			
            	            }
            	            a15=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding5184); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 164));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8347:4: (a16= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8348:5: a16= IDENTIFIER
            	            {
            	            a16=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeVariableBinding5210); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariableBinding, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableBindingTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 165));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 165));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 165));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 165));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 165));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 165));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 166));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 166));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 166));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 166));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 166));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 166));
              	
            }
            a17=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_TypeVariableBinding5256); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 167));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 167));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 167));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 167));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 167));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 167));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 167));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 167));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 167));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 167));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 20, parse_org_kermeta_language_structure_TypeVariableBinding_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_TypeVariableBinding"


    // $ANTLR start "parse_org_kermeta_language_structure_MultiplicityElement"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8424:1: parse_org_kermeta_language_structure_MultiplicityElement returns [org.kermeta.language.structure.MultiplicityElement element = null] : ( ( (a0= IDENTIFIER ) )? ( (a1= IDENTIFIER ) )? a2= 'MultiplicityElement' a3= '{' ( (a4= 'tag' a5= ':' (a6= IDENTIFIER ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= IDENTIFIER ) | a16= 'type' a17= ':' (a18= IDENTIFIER ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) ) )* a25= '}' | c0= parse_org_kermeta_language_structure_Property | c1= parse_org_kermeta_language_structure_Operation | c2= parse_org_kermeta_language_structure_Parameter | c3= parse_org_kermeta_language_behavior_TypeReference );
    public final org.kermeta.language.structure.MultiplicityElement parse_org_kermeta_language_structure_MultiplicityElement() throws RecognitionException {
        org.kermeta.language.structure.MultiplicityElement element =  null;
        int parse_org_kermeta_language_structure_MultiplicityElement_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a8=null;
        Token a10=null;
        Token a11=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        Token a21=null;
        Token a22=null;
        Token a23=null;
        Token a24=null;
        Token a25=null;
        org.kermeta.language.structure.Tag a9_0 = null;

        org.kermeta.language.structure.Type a12_0 = null;

        org.kermeta.language.structure.Property c0 = null;

        org.kermeta.language.structure.Operation c1 = null;

        org.kermeta.language.structure.Parameter c2 = null;

        org.kermeta.language.behavior.TypeReference c3 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8427:1: ( ( (a0= IDENTIFIER ) )? ( (a1= IDENTIFIER ) )? a2= 'MultiplicityElement' a3= '{' ( (a4= 'tag' a5= ':' (a6= IDENTIFIER ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= IDENTIFIER ) | a16= 'type' a17= ':' (a18= IDENTIFIER ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) ) )* a25= '}' | c0= parse_org_kermeta_language_structure_Property | c1= parse_org_kermeta_language_structure_Operation | c2= parse_org_kermeta_language_structure_Parameter | c3= parse_org_kermeta_language_behavior_TypeReference )
            int alt49=5;
            switch ( input.LA(1) ) {
            case IDENTIFIER:
                {
                switch ( input.LA(2) ) {
                case 50:
                    {
                    alt49=1;
                    }
                    break;
                case EOF:
                    {
                    alt49=5;
                    }
                    break;
                case IDENTIFIER:
                    {
                    int LA49_6 = input.LA(3);

                    if ( (LA49_6==50) ) {
                        alt49=1;
                    }
                    else if ( (LA49_6==IDENTIFIER||LA49_6==31) ) {
                        alt49=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 49, 6, input);

                        throw nvae;
                    }
                    }
                    break;
                case 27:
                    {
                    alt49=4;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 1, input);

                    throw nvae;
                }

                }
                break;
            case 50:
                {
                alt49=1;
                }
                break;
            case 25:
            case 26:
            case 28:
                {
                alt49=2;
                }
                break;
            case 31:
                {
                alt49=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;
            }

            switch (alt49) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8428:2: ( (a0= IDENTIFIER ) )? ( (a1= IDENTIFIER ) )? a2= 'MultiplicityElement' a3= '{' ( (a4= 'tag' a5= ':' (a6= IDENTIFIER ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= IDENTIFIER ) | a16= 'type' a17= ':' (a18= IDENTIFIER ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) ) )* a25= '}'
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8428:2: ( (a0= IDENTIFIER ) )?
                    int alt45=2;
                    int LA45_0 = input.LA(1);

                    if ( (LA45_0==IDENTIFIER) ) {
                        int LA45_1 = input.LA(2);

                        if ( (synpred105_Kermeta()) ) {
                            alt45=1;
                        }
                    }
                    switch (alt45) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8429:3: (a0= IDENTIFIER )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8429:3: (a0= IDENTIFIER )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8430:4: a0= IDENTIFIER
                            {
                            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5294); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                              				}
                              				if (a0 != null) {
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                              					tokenResolver.setOptions(getOptions());
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_ORDERED), result);
                              					java.lang.Object resolvedObject = result.getResolvedToken();
                              					if (resolvedObject == null) {
                              						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
                              					}
                              					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
                              					if (resolved != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_ORDERED), resolved);
                              						completedElement(resolved);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
                              				}
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 168));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 168));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8464:2: ( (a1= IDENTIFIER ) )?
                    int alt46=2;
                    int LA46_0 = input.LA(1);

                    if ( (LA46_0==IDENTIFIER) ) {
                        alt46=1;
                    }
                    switch (alt46) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8465:3: (a1= IDENTIFIER )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8465:3: (a1= IDENTIFIER )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8466:4: a1= IDENTIFIER
                            {
                            a1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5333); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                              				}
                              				if (a1 != null) {
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                              					tokenResolver.setOptions(getOptions());
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              					tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_UNIQUE), result);
                              					java.lang.Object resolvedObject = result.getResolvedToken();
                              					if (resolvedObject == null) {
                              						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
                              					}
                              					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
                              					if (resolved != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_UNIQUE), resolved);
                              						completedElement(resolved);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
                              				}
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 169));
                      	
                    }
                    a2=(Token)match(input,50,FOLLOW_50_in_parse_org_kermeta_language_structure_MultiplicityElement5363); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 170));
                      	
                    }
                    a3=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_MultiplicityElement5377); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 171));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 171));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 171));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 171));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 171));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 171));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 171));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 171));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8530:2: ( (a4= 'tag' a5= ':' (a6= IDENTIFIER ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= IDENTIFIER ) | a16= 'type' a17= ':' (a18= IDENTIFIER ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) ) )*
                    loop48:
                    do {
                        int alt48=2;
                        int LA48_0 = input.LA(1);

                        if ( ((LA48_0>=39 && LA48_0<=40)||LA48_0==44||LA48_0==47||LA48_0==49||(LA48_0>=51 && LA48_0<=52)) ) {
                            alt48=1;
                        }


                        switch (alt48) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8531:3: (a4= 'tag' a5= ':' (a6= IDENTIFIER ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= IDENTIFIER ) | a16= 'type' a17= ':' (a18= IDENTIFIER ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8531:3: (a4= 'tag' a5= ':' (a6= IDENTIFIER ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= IDENTIFIER ) | a16= 'type' a17= ':' (a18= IDENTIFIER ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) )
                    	    int alt47=7;
                    	    switch ( input.LA(1) ) {
                    	    case 39:
                    	        {
                    	        alt47=1;
                    	        }
                    	        break;
                    	    case 40:
                    	        {
                    	        alt47=2;
                    	        }
                    	        break;
                    	    case 47:
                    	        {
                    	        alt47=3;
                    	        }
                    	        break;
                    	    case 44:
                    	        {
                    	        alt47=4;
                    	        }
                    	        break;
                    	    case 49:
                    	        {
                    	        alt47=5;
                    	        }
                    	        break;
                    	    case 51:
                    	        {
                    	        alt47=6;
                    	        }
                    	        break;
                    	    case 52:
                    	        {
                    	        alt47=7;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 47, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt47) {
                    	        case 1 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8532:4: a4= 'tag' a5= ':' (a6= IDENTIFIER )
                    	            {
                    	            a4=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_MultiplicityElement5400); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_199, 172));
                    	              			
                    	            }
                    	            a5=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5420); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_200, 173));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8556:4: (a6= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8557:5: a6= IDENTIFIER
                    	            {
                    	            a6=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5446); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a6 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a6.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TAG), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a6).getLine(), ((org.antlr.runtime.CommonToken) a6).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a6).getStartIndex(), ((org.antlr.runtime.CommonToken) a6).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TAG), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TAG, proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a6, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a6, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 174));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 174));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 174));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 174));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 174));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 174));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 174));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 174));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8601:8: a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag )
                    	            {
                    	            a7=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_MultiplicityElement5487); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_201, 175));
                    	              			
                    	            }
                    	            a8=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5507); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 176));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8625:4: (a9_0= parse_org_kermeta_language_structure_Tag )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8626:5: a9_0= parse_org_kermeta_language_structure_Tag
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_MultiplicityElement5533);
                    	            a9_0=parse_org_kermeta_language_structure_Tag();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a9_0 != null) {
                    	              						if (a9_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__OWNED_TAGS, a9_0);
                    	              							completedElement(a9_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a9_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 177));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 177));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 177));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 177));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 177));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 177));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 177));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 177));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8655:8: a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type )
                    	            {
                    	            a10=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_structure_MultiplicityElement5569); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_202, 178));
                    	              			
                    	            }
                    	            a11=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5589); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_77, 179));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 179));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 179));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 179));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 179));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 179));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 179));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_189, 179));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_190, 179));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_191, 179));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 179));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 179));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8690:4: (a12_0= parse_org_kermeta_language_structure_Type )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8691:5: a12_0= parse_org_kermeta_language_structure_Type
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_MultiplicityElement5615);
                    	            a12_0=parse_org_kermeta_language_structure_Type();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a12_0 != null) {
                    	              						if (a12_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__CONTAINED_TYPE, a12_0);
                    	              							completedElement(a12_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a12_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 180));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 180));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 180));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 180));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 180));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 180));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 180));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 180));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8720:8: a13= 'name' a14= ':' (a15= IDENTIFIER )
                    	            {
                    	            a13=(Token)match(input,44,FOLLOW_44_in_parse_org_kermeta_language_structure_MultiplicityElement5651); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_203, 181));
                    	              			
                    	            }
                    	            a14=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5671); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_204, 182));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8744:4: (a15= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8745:5: a15= IDENTIFIER
                    	            {
                    	            a15=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5697); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a15 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a15.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__NAME), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a15).getLine(), ((org.antlr.runtime.CommonToken) a15).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a15).getStartIndex(), ((org.antlr.runtime.CommonToken) a15).getStopIndex());
                    	              						}
                    	              						java.lang.String resolved = (java.lang.String)resolvedObject;
                    	              						if (resolved != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__NAME), resolved);
                    	              							completedElement(resolved);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a15, element);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 183));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 183));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 183));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 183));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 183));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 183));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 183));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 183));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 5 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8785:8: a16= 'type' a17= ':' (a18= IDENTIFIER )
                    	            {
                    	            a16=(Token)match(input,49,FOLLOW_49_in_parse_org_kermeta_language_structure_MultiplicityElement5738); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a16, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_205, 184));
                    	              			
                    	            }
                    	            a17=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5758); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_206, 185));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8809:4: (a18= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8810:5: a18= IDENTIFIER
                    	            {
                    	            a18=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5784); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a18 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a18.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TYPE), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a18).getLine(), ((org.antlr.runtime.CommonToken) a18).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a18).getStartIndex(), ((org.antlr.runtime.CommonToken) a18).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TYPE), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TYPE), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a18, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a18, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 186));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 186));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 186));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 186));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 186));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 186));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 186));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 186));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 6 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8854:8: a19= 'lower' a20= ':' (a21= INTEGER )
                    	            {
                    	            a19=(Token)match(input,51,FOLLOW_51_in_parse_org_kermeta_language_structure_MultiplicityElement5825); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a19, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_207, 187));
                    	              			
                    	            }
                    	            a20=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5845); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_208, 188));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8878:4: (a21= INTEGER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8879:5: a21= INTEGER
                    	            {
                    	            a21=(Token)match(input,INTEGER,FOLLOW_INTEGER_in_parse_org_kermeta_language_structure_MultiplicityElement5871); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a21 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a21.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__LOWER), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a21).getLine(), ((org.antlr.runtime.CommonToken) a21).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a21).getStartIndex(), ((org.antlr.runtime.CommonToken) a21).getStopIndex());
                    	              						}
                    	              						java.lang.Integer resolved = (java.lang.Integer)resolvedObject;
                    	              						if (resolved != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__LOWER), resolved);
                    	              							completedElement(resolved);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a21, element);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 189));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 189));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 189));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 189));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 189));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 189));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 189));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 189));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 7 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8919:8: a22= 'upper' a23= ':' (a24= INTEGER )
                    	            {
                    	            a22=(Token)match(input,52,FOLLOW_52_in_parse_org_kermeta_language_structure_MultiplicityElement5912); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a22, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_209, 190));
                    	              			
                    	            }
                    	            a23=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5932); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_210, 191));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8943:4: (a24= INTEGER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8944:5: a24= INTEGER
                    	            {
                    	            a24=(Token)match(input,INTEGER,FOLLOW_INTEGER_in_parse_org_kermeta_language_structure_MultiplicityElement5958); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a24 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a24.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__UPPER), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a24).getLine(), ((org.antlr.runtime.CommonToken) a24).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a24).getStartIndex(), ((org.antlr.runtime.CommonToken) a24).getStopIndex());
                    	              						}
                    	              						java.lang.Integer resolved = (java.lang.Integer)resolvedObject;
                    	              						if (resolved != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__UPPER), resolved);
                    	              							completedElement(resolved);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a24, element);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 192));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 192));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 192));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 192));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 192));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 192));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 192));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 192));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop48;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 193));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 193));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 193));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 193));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 193));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 193));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 193));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 193));
                      	
                    }
                    a25=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_MultiplicityElement6004); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a25, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9010:2: c0= parse_org_kermeta_language_structure_Property
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_MultiplicityElement6023);
                    c0=parse_org_kermeta_language_structure_Property();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9011:4: c1= parse_org_kermeta_language_structure_Operation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_MultiplicityElement6033);
                    c1=parse_org_kermeta_language_structure_Operation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9012:4: c2= parse_org_kermeta_language_structure_Parameter
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_MultiplicityElement6043);
                    c2=parse_org_kermeta_language_structure_Parameter();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9013:4: c3= parse_org_kermeta_language_behavior_TypeReference
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_structure_MultiplicityElement6053);
                    c3=parse_org_kermeta_language_behavior_TypeReference();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 21, parse_org_kermeta_language_structure_MultiplicityElement_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_MultiplicityElement"


    // $ANTLR start "parse_org_kermeta_language_structure_TypeDefinition"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9017:1: parse_org_kermeta_language_structure_TypeDefinition returns [org.kermeta.language.structure.TypeDefinition element = null] : ( ( (a0= IDENTIFIER ) )? a1= 'TypeDefinition' a2= '{' ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= IDENTIFIER ) ) )* a12= '}' | c0= parse_org_kermeta_language_structure_ClassDefinition | c1= parse_org_kermeta_language_structure_Enumeration | c2= parse_org_kermeta_language_structure_PrimitiveType | c3= parse_org_kermeta_language_structure_ModelType );
    public final org.kermeta.language.structure.TypeDefinition parse_org_kermeta_language_structure_TypeDefinition() throws RecognitionException {
        org.kermeta.language.structure.TypeDefinition element =  null;
        int parse_org_kermeta_language_structure_TypeDefinition_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        Token a12=null;
        org.kermeta.language.structure.Tag a8_0 = null;

        org.kermeta.language.structure.ClassDefinition c0 = null;

        org.kermeta.language.structure.Enumeration c1 = null;

        org.kermeta.language.structure.PrimitiveType c2 = null;

        org.kermeta.language.structure.ModelType c3 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9020:1: ( ( (a0= IDENTIFIER ) )? a1= 'TypeDefinition' a2= '{' ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= IDENTIFIER ) ) )* a12= '}' | c0= parse_org_kermeta_language_structure_ClassDefinition | c1= parse_org_kermeta_language_structure_Enumeration | c2= parse_org_kermeta_language_structure_PrimitiveType | c3= parse_org_kermeta_language_structure_ModelType )
            int alt53=5;
            switch ( input.LA(1) ) {
            case IDENTIFIER:
                {
                int LA53_1 = input.LA(2);

                if ( (LA53_1==42) ) {
                    alt53=5;
                }
                else if ( (LA53_1==53) ) {
                    alt53=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 1, input);

                    throw nvae;
                }
                }
                break;
            case 53:
                {
                alt53=1;
                }
                break;
            case 20:
            case 21:
            case 22:
                {
                alt53=2;
                }
                break;
            case 35:
                {
                alt53=3;
                }
                break;
            case PRIMITIVE_TYPE:
                {
                alt53=4;
                }
                break;
            case 42:
                {
                alt53=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;
            }

            switch (alt53) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9021:2: ( (a0= IDENTIFIER ) )? a1= 'TypeDefinition' a2= '{' ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= IDENTIFIER ) ) )* a12= '}'
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9021:2: ( (a0= IDENTIFIER ) )?
                    int alt50=2;
                    int LA50_0 = input.LA(1);

                    if ( (LA50_0==IDENTIFIER) ) {
                        alt50=1;
                    }
                    switch (alt50) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9022:3: (a0= IDENTIFIER )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9022:3: (a0= IDENTIFIER )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9023:4: a0= IDENTIFIER
                            {
                            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeDefinition6087); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                              				}
                              				if (a0 != null) {
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                              					tokenResolver.setOptions(getOptions());
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__IS_ASPECT), result);
                              					java.lang.Object resolvedObject = result.getResolvedToken();
                              					if (resolvedObject == null) {
                              						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
                              					}
                              					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
                              					if (resolved != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__IS_ASPECT), resolved);
                              						completedElement(resolved);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
                              				}
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 195));
                      	
                    }
                    a1=(Token)match(input,53,FOLLOW_53_in_parse_org_kermeta_language_structure_TypeDefinition6117); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_211, 196));
                      	
                    }
                    a2=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_TypeDefinition6131); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_212, 197));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 197));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 197));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 197));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9083:2: ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= IDENTIFIER ) ) )*
                    loop52:
                    do {
                        int alt52=2;
                        int LA52_0 = input.LA(1);

                        if ( ((LA52_0>=39 && LA52_0<=40)||LA52_0==44) ) {
                            alt52=1;
                        }


                        switch (alt52) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9084:3: (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= IDENTIFIER ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9084:3: (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= IDENTIFIER ) )
                    	    int alt51=3;
                    	    switch ( input.LA(1) ) {
                    	    case 39:
                    	        {
                    	        alt51=1;
                    	        }
                    	        break;
                    	    case 40:
                    	        {
                    	        alt51=2;
                    	        }
                    	        break;
                    	    case 44:
                    	        {
                    	        alt51=3;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 51, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt51) {
                    	        case 1 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9085:4: a3= 'tag' a4= ':' (a5= IDENTIFIER )
                    	            {
                    	            a3=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_TypeDefinition6154); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 198));
                    	              			
                    	            }
                    	            a4=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_TypeDefinition6174); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 199));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9109:4: (a5= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9110:5: a5= IDENTIFIER
                    	            {
                    	            a5=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeDefinition6200); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              					}
                    	              					if (a5 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__TAG), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a5).getLine(), ((org.antlr.runtime.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a5).getStartIndex(), ((org.antlr.runtime.CommonToken) a5).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__TAG), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__TAG, proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_212, 200));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 200));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 200));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 200));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9150:8: a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag )
                    	            {
                    	            a6=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_TypeDefinition6241); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 201));
                    	              			
                    	            }
                    	            a7=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_TypeDefinition6261); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 202));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9174:4: (a8_0= parse_org_kermeta_language_structure_Tag )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9175:5: a8_0= parse_org_kermeta_language_structure_Tag
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_TypeDefinition6287);
                    	            a8_0=parse_org_kermeta_language_structure_Tag();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              					}
                    	              					if (a8_0 != null) {
                    	              						if (a8_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__OWNED_TAGS, a8_0);
                    	              							completedElement(a8_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a8_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_212, 203));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 203));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 203));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 203));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9200:8: a9= 'name' a10= ':' (a11= IDENTIFIER )
                    	            {
                    	            a9=(Token)match(input,44,FOLLOW_44_in_parse_org_kermeta_language_structure_TypeDefinition6323); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_219, 204));
                    	              			
                    	            }
                    	            a10=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_TypeDefinition6343); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_220, 205));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9224:4: (a11= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9225:5: a11= IDENTIFIER
                    	            {
                    	            a11=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeDefinition6369); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              					}
                    	              					if (a11 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a11.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__NAME), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a11).getLine(), ((org.antlr.runtime.CommonToken) a11).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a11).getStartIndex(), ((org.antlr.runtime.CommonToken) a11).getStopIndex());
                    	              						}
                    	              						java.lang.String resolved = (java.lang.String)resolvedObject;
                    	              						if (resolved != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__NAME), resolved);
                    	              							completedElement(resolved);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, element);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_212, 206));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 206));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 206));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 206));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop52;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_212, 207));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 207));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 207));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 207));
                      	
                    }
                    a12=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_TypeDefinition6415); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 208));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 208));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 208));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 208));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 208));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 208));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 208));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 208));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 208));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 208));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9293:2: c0= parse_org_kermeta_language_structure_ClassDefinition
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_parse_org_kermeta_language_structure_TypeDefinition6434);
                    c0=parse_org_kermeta_language_structure_ClassDefinition();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9294:4: c1= parse_org_kermeta_language_structure_Enumeration
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_TypeDefinition6444);
                    c1=parse_org_kermeta_language_structure_Enumeration();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9295:4: c2= parse_org_kermeta_language_structure_PrimitiveType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_TypeDefinition6454);
                    c2=parse_org_kermeta_language_structure_PrimitiveType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9296:4: c3= parse_org_kermeta_language_structure_ModelType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_TypeDefinition6464);
                    c3=parse_org_kermeta_language_structure_ModelType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 22, parse_org_kermeta_language_structure_TypeDefinition_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_TypeDefinition"


    // $ANTLR start "parse_org_kermeta_language_structure_Tag"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9300:1: parse_org_kermeta_language_structure_Tag returns [org.kermeta.language.structure.Tag element = null] : a0= 'Tag' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'value' a12= ':' (a13= IDENTIFIER ) | a14= 'object' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}' ;
    public final org.kermeta.language.structure.Tag parse_org_kermeta_language_structure_Tag() throws RecognitionException {
        org.kermeta.language.structure.Tag element =  null;
        int parse_org_kermeta_language_structure_Tag_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        org.kermeta.language.structure.Tag a7_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9303:1: (a0= 'Tag' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'value' a12= ':' (a13= IDENTIFIER ) | a14= 'object' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9304:2: a0= 'Tag' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'value' a12= ':' (a13= IDENTIFIER ) | a14= 'object' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}'
            {
            a0=(Token)match(input,54,FOLLOW_54_in_parse_org_kermeta_language_structure_Tag6489); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_221, 209));
              	
            }
            a1=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_Tag6503); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_222, 210));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_223, 210));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_224, 210));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_225, 210));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_226, 210));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 210));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9333:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'value' a12= ':' (a13= IDENTIFIER ) | a14= 'object' a15= ':' (a16= IDENTIFIER ) ) )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( ((LA55_0>=39 && LA55_0<=40)||LA55_0==44||(LA55_0>=55 && LA55_0<=56)) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9334:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'value' a12= ':' (a13= IDENTIFIER ) | a14= 'object' a15= ':' (a16= IDENTIFIER ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9334:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'value' a12= ':' (a13= IDENTIFIER ) | a14= 'object' a15= ':' (a16= IDENTIFIER ) )
            	    int alt54=5;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt54=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt54=2;
            	        }
            	        break;
            	    case 44:
            	        {
            	        alt54=3;
            	        }
            	        break;
            	    case 55:
            	        {
            	        alt54=4;
            	        }
            	        break;
            	    case 56:
            	        {
            	        alt54=5;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 54, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt54) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9335:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_Tag6526); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_228, 211));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Tag6546); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_229, 212));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9359:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9360:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag6572); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TAG__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_222, 213));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_223, 213));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_224, 213));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_225, 213));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_226, 213));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 213));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9402:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_Tag6613); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_230, 214));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Tag6633); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 215));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9426:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9427:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Tag6659);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TAG__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_222, 216));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_223, 216));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_224, 216));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_225, 216));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_226, 216));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 216));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9454:8: a8= 'name' a9= ':' (a10= IDENTIFIER )
            	            {
            	            a8=(Token)match(input,44,FOLLOW_44_in_parse_org_kermeta_language_structure_Tag6695); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_231, 217));
            	              			
            	            }
            	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Tag6715); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_232, 218));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9478:4: (a10= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9479:5: a10= IDENTIFIER
            	            {
            	            a10=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag6741); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              					}
            	              					if (a10 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a10.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__NAME), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a10).getLine(), ((org.antlr.runtime.CommonToken) a10).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a10).getStartIndex(), ((org.antlr.runtime.CommonToken) a10).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__NAME), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_222, 219));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_223, 219));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_224, 219));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_225, 219));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_226, 219));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 219));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9517:8: a11= 'value' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,55,FOLLOW_55_in_parse_org_kermeta_language_structure_Tag6782); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_233, 220));
            	              			
            	            }
            	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Tag6802); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_234, 221));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9541:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9542:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag6828); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__VALUE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__VALUE), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_222, 222));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_223, 222));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_224, 222));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_225, 222));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_226, 222));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 222));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9580:8: a14= 'object' a15= ':' (a16= IDENTIFIER )
            	            {
            	            a14=(Token)match(input,56,FOLLOW_56_in_parse_org_kermeta_language_structure_Tag6869); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_235, 223));
            	              			
            	            }
            	            a15=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Tag6889); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_236, 224));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9604:4: (a16= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9605:5: a16= IDENTIFIER
            	            {
            	            a16=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag6915); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__OBJECT), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Object proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Tag, org.kermeta.language.structure.Object>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTagObjectReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__OBJECT), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TAG__OBJECT, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_222, 225));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_223, 225));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_224, 225));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_225, 225));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_226, 225));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 225));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_222, 226));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_223, 226));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_224, 226));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_225, 226));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_226, 226));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 226));
              	
            }
            a17=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_Tag6961); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_169, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_171, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_212, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_222, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_223, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_224, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_225, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_226, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_237, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_241, 227));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 23, parse_org_kermeta_language_structure_Tag_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Tag"


    // $ANTLR start "parse_org_kermeta_language_structure_ObjectTypeVariable"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9762:1: parse_org_kermeta_language_structure_ObjectTypeVariable returns [org.kermeta.language.structure.ObjectTypeVariable element = null] : (a0= 'ObjectTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) ) )* a20= '}' | c0= parse_org_kermeta_language_structure_VirtualType );
    public final org.kermeta.language.structure.ObjectTypeVariable parse_org_kermeta_language_structure_ObjectTypeVariable() throws RecognitionException {
        org.kermeta.language.structure.ObjectTypeVariable element =  null;
        int parse_org_kermeta_language_structure_ObjectTypeVariable_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;

        org.kermeta.language.structure.VirtualType c0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9765:1: (a0= 'ObjectTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) ) )* a20= '}' | c0= parse_org_kermeta_language_structure_VirtualType )
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==57) ) {
                alt58=1;
            }
            else if ( (LA58_0==61) ) {
                alt58=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 58, 0, input);

                throw nvae;
            }
            switch (alt58) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9766:2: a0= 'ObjectTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) ) )* a20= '}'
                    {
                    a0=(Token)match(input,57,FOLLOW_57_in_parse_org_kermeta_language_structure_ObjectTypeVariable6990); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_242, 228));
                      	
                    }
                    a1=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_ObjectTypeVariable7004); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 229));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 229));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 229));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 229));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 229));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 229));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 229));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9796:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) ) )*
                    loop57:
                    do {
                        int alt57=2;
                        int LA57_0 = input.LA(1);

                        if ( ((LA57_0>=39 && LA57_0<=40)||(LA57_0>=43 && LA57_0<=44)||LA57_0==47||LA57_0==58) ) {
                            alt57=1;
                        }


                        switch (alt57) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9797:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9797:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) )
                    	    int alt56=6;
                    	    switch ( input.LA(1) ) {
                    	    case 39:
                    	        {
                    	        alt56=1;
                    	        }
                    	        break;
                    	    case 40:
                    	        {
                    	        alt56=2;
                    	        }
                    	        break;
                    	    case 47:
                    	        {
                    	        alt56=3;
                    	        }
                    	        break;
                    	    case 43:
                    	        {
                    	        alt56=4;
                    	        }
                    	        break;
                    	    case 44:
                    	        {
                    	        alt56=5;
                    	        }
                    	        break;
                    	    case 58:
                    	        {
                    	        alt56=6;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 56, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt56) {
                    	        case 1 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9798:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
                    	            {
                    	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_ObjectTypeVariable7027); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_243, 230));
                    	              			
                    	            }
                    	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7047); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_244, 231));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9822:4: (a4= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9823:5: a4= IDENTIFIER
                    	            {
                    	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7073); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a4 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TAG), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TAG), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TAG, proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 232));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 232));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 232));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 232));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 232));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 232));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 232));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9866:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
                    	            {
                    	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_ObjectTypeVariable7114); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_245, 233));
                    	              			
                    	            }
                    	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7134); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 234));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9890:4: (a7_0= parse_org_kermeta_language_structure_Tag )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9891:5: a7_0= parse_org_kermeta_language_structure_Tag
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ObjectTypeVariable7160);
                    	            a7_0=parse_org_kermeta_language_structure_Tag();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a7_0 != null) {
                    	              						if (a7_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__OWNED_TAGS, a7_0);
                    	              							completedElement(a7_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a7_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 235));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 235));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 235));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 235));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 235));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 235));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 235));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9919:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
                    	            {
                    	            a8=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_structure_ObjectTypeVariable7196); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_246, 236));
                    	              			
                    	            }
                    	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7216); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_77, 237));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 237));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 237));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 237));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 237));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 237));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 237));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_189, 237));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_190, 237));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_191, 237));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 237));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 237));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9954:4: (a10_0= parse_org_kermeta_language_structure_Type )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9955:5: a10_0= parse_org_kermeta_language_structure_Type
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ObjectTypeVariable7242);
                    	            a10_0=parse_org_kermeta_language_structure_Type();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a10_0 != null) {
                    	              						if (a10_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__CONTAINED_TYPE, a10_0);
                    	              							completedElement(a10_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a10_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 238));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 238));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 238));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 238));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 238));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 238));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 238));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9983:8: a11= 'typeContainer' a12= ':' (a13= IDENTIFIER )
                    	            {
                    	            a11=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_structure_ObjectTypeVariable7278); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_247, 239));
                    	              			
                    	            }
                    	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7298); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_248, 240));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10007:4: (a13= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10008:5: a13= IDENTIFIER
                    	            {
                    	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7324); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a13 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TYPE_CONTAINER), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TYPE_CONTAINER), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TYPE_CONTAINER), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 241));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 241));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 241));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 241));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 241));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 241));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 241));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 5 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10051:8: a14= 'name' a15= ':' (a16= IDENTIFIER )
                    	            {
                    	            a14=(Token)match(input,44,FOLLOW_44_in_parse_org_kermeta_language_structure_ObjectTypeVariable7365); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_249, 242));
                    	              			
                    	            }
                    	            a15=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7385); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_250, 243));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10075:4: (a16= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10076:5: a16= IDENTIFIER
                    	            {
                    	            a16=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7411); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a16 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__NAME), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
                    	              						}
                    	              						java.lang.String resolved = (java.lang.String)resolvedObject;
                    	              						if (resolved != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__NAME), resolved);
                    	              							completedElement(resolved);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 244));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 244));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 244));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 244));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 244));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 244));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 244));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 6 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10115:8: a17= 'supertype' a18= ':' (a19= IDENTIFIER )
                    	            {
                    	            a17=(Token)match(input,58,FOLLOW_58_in_parse_org_kermeta_language_structure_ObjectTypeVariable7452); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_251, 245));
                    	              			
                    	            }
                    	            a18=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7472); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_252, 246));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10139:4: (a19= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10140:5: a19= IDENTIFIER
                    	            {
                    	            a19=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7498); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a19 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__SUPERTYPE), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariable, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableSupertypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__SUPERTYPE), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__SUPERTYPE), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 247));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 247));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 247));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 247));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 247));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 247));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 247));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop57;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 248));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 248));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 248));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 248));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 248));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 248));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 248));
                      	
                    }
                    a20=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_ObjectTypeVariable7544); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 249));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10272:2: c0= parse_org_kermeta_language_structure_VirtualType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_ObjectTypeVariable7563);
                    c0=parse_org_kermeta_language_structure_VirtualType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 24, parse_org_kermeta_language_structure_ObjectTypeVariable_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ObjectTypeVariable"


    // $ANTLR start "parse_org_kermeta_language_structure_ModelTypeVariable"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10276:1: parse_org_kermeta_language_structure_ModelTypeVariable returns [org.kermeta.language.structure.ModelTypeVariable element = null] : a0= 'ModelTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) ) )* a23= '}' ;
    public final org.kermeta.language.structure.ModelTypeVariable parse_org_kermeta_language_structure_ModelTypeVariable() throws RecognitionException {
        org.kermeta.language.structure.ModelTypeVariable element =  null;
        int parse_org_kermeta_language_structure_ModelTypeVariable_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        Token a21=null;
        Token a23=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;

        org.kermeta.language.structure.VirtualType a22_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10279:1: (a0= 'ModelTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) ) )* a23= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10280:2: a0= 'ModelTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) ) )* a23= '}'
            {
            a0=(Token)match(input,59,FOLLOW_59_in_parse_org_kermeta_language_structure_ModelTypeVariable7588); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_253, 250));
              	
            }
            a1=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_ModelTypeVariable7602); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 251));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 251));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 251));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 251));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 251));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 251));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 251));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 251));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10311:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) ) )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( ((LA60_0>=39 && LA60_0<=40)||(LA60_0>=43 && LA60_0<=44)||LA60_0==47||LA60_0==58||LA60_0==60) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10312:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10312:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) )
            	    int alt59=7;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt59=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt59=2;
            	        }
            	        break;
            	    case 47:
            	        {
            	        alt59=3;
            	        }
            	        break;
            	    case 43:
            	        {
            	        alt59=4;
            	        }
            	        break;
            	    case 44:
            	        {
            	        alt59=5;
            	        }
            	        break;
            	    case 58:
            	        {
            	        alt59=6;
            	        }
            	        break;
            	    case 60:
            	        {
            	        alt59=7;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 59, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt59) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10313:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_ModelTypeVariable7625); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_254, 252));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable7645); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_255, 253));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10337:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10338:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable7671); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 254));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 254));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 254));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 254));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 254));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 254));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 254));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 254));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10382:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_ModelTypeVariable7712); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_256, 255));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable7732); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 256));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10406:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10407:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ModelTypeVariable7758);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 257));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 257));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 257));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 257));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 257));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 257));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 257));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 257));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10436:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_structure_ModelTypeVariable7794); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_257, 258));
            	              			
            	            }
            	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable7814); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_77, 259));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 259));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 259));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 259));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 259));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 259));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 259));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_189, 259));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_190, 259));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_191, 259));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 259));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 259));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10471:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10472:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ModelTypeVariable7840);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 260));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 260));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 260));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 260));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 260));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 260));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 260));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 260));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10501:8: a11= 'typeContainer' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_structure_ModelTypeVariable7876); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_258, 261));
            	              			
            	            }
            	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable7896); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_259, 262));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10525:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10526:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable7922); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TYPE_CONTAINER), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TYPE_CONTAINER), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TYPE_CONTAINER), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 263));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 263));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 263));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 263));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 263));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 263));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 263));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 263));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10570:8: a14= 'name' a15= ':' (a16= IDENTIFIER )
            	            {
            	            a14=(Token)match(input,44,FOLLOW_44_in_parse_org_kermeta_language_structure_ModelTypeVariable7963); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_260, 264));
            	              			
            	            }
            	            a15=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable7983); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_261, 265));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10594:4: (a16= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10595:5: a16= IDENTIFIER
            	            {
            	            a16=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable8009); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__NAME), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__NAME), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 266));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 266));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 266));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 266));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 266));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 266));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 266));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 266));
            	              			
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10635:8: a17= 'supertype' a18= ':' (a19= IDENTIFIER )
            	            {
            	            a17=(Token)match(input,58,FOLLOW_58_in_parse_org_kermeta_language_structure_ModelTypeVariable8050); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_262, 267));
            	              			
            	            }
            	            a18=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable8070); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_263, 268));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10659:4: (a19= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10660:5: a19= IDENTIFIER
            	            {
            	            a19=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable8096); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a19 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__SUPERTYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariable, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableSupertypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__SUPERTYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__SUPERTYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 269));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 269));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 269));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 269));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 269));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 269));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 269));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 269));
            	              			
            	            }

            	            }
            	            break;
            	        case 7 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10704:8: a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType )
            	            {
            	            a20=(Token)match(input,60,FOLLOW_60_in_parse_org_kermeta_language_structure_ModelTypeVariable8137); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_264, 270));
            	              			
            	            }
            	            a21=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable8157); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a21, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_191, 271));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10728:4: (a22_0= parse_org_kermeta_language_structure_VirtualType )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10729:5: a22_0= parse_org_kermeta_language_structure_VirtualType
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_ModelTypeVariable8183);
            	            a22_0=parse_org_kermeta_language_structure_VirtualType();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a22_0 != null) {
            	              						if (a22_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__VIRTUAL_TYPE, a22_0);
            	              							completedElement(a22_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a22_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 272));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 272));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 272));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 272));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 272));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 272));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 272));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 272));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 273));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 273));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 273));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 273));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 273));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 273));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 273));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 273));
              	
            }
            a23=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_ModelTypeVariable8224); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 274));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 25, parse_org_kermeta_language_structure_ModelTypeVariable_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ModelTypeVariable"


    // $ANTLR start "parse_org_kermeta_language_structure_VirtualType"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10848:1: parse_org_kermeta_language_structure_VirtualType returns [org.kermeta.language.structure.VirtualType element = null] : a0= 'VirtualType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'classDefinition' a21= ':' (a22= IDENTIFIER ) | a23= 'modelType' a24= ':' (a25= IDENTIFIER ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) ) )* a29= '}' ;
    public final org.kermeta.language.structure.VirtualType parse_org_kermeta_language_structure_VirtualType() throws RecognitionException {
        org.kermeta.language.structure.VirtualType element =  null;
        int parse_org_kermeta_language_structure_VirtualType_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        Token a21=null;
        Token a22=null;
        Token a23=null;
        Token a24=null;
        Token a25=null;
        Token a26=null;
        Token a27=null;
        Token a29=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;

        org.kermeta.language.structure.TypeVariableBinding a28_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10851:1: (a0= 'VirtualType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'classDefinition' a21= ':' (a22= IDENTIFIER ) | a23= 'modelType' a24= ':' (a25= IDENTIFIER ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) ) )* a29= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10852:2: a0= 'VirtualType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'classDefinition' a21= ':' (a22= IDENTIFIER ) | a23= 'modelType' a24= ':' (a25= IDENTIFIER ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) ) )* a29= '}'
            {
            a0=(Token)match(input,61,FOLLOW_61_in_parse_org_kermeta_language_structure_VirtualType8253); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_265, 275));
              	
            }
            a1=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_VirtualType8267); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 276));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 276));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 276));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 276));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 276));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 276));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 276));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 276));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 276));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 276));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10885:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'classDefinition' a21= ':' (a22= IDENTIFIER ) | a23= 'modelType' a24= ':' (a25= IDENTIFIER ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) ) )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( ((LA62_0>=39 && LA62_0<=40)||(LA62_0>=43 && LA62_0<=44)||LA62_0==47||LA62_0==58||(LA62_0>=62 && LA62_0<=64)) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10886:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'classDefinition' a21= ':' (a22= IDENTIFIER ) | a23= 'modelType' a24= ':' (a25= IDENTIFIER ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10886:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'classDefinition' a21= ':' (a22= IDENTIFIER ) | a23= 'modelType' a24= ':' (a25= IDENTIFIER ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) )
            	    int alt61=9;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt61=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt61=2;
            	        }
            	        break;
            	    case 47:
            	        {
            	        alt61=3;
            	        }
            	        break;
            	    case 43:
            	        {
            	        alt61=4;
            	        }
            	        break;
            	    case 44:
            	        {
            	        alt61=5;
            	        }
            	        break;
            	    case 58:
            	        {
            	        alt61=6;
            	        }
            	        break;
            	    case 62:
            	        {
            	        alt61=7;
            	        }
            	        break;
            	    case 63:
            	        {
            	        alt61=8;
            	        }
            	        break;
            	    case 64:
            	        {
            	        alt61=9;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 61, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt61) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10887:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_VirtualType8290); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_266, 277));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8310); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_267, 278));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10911:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10912:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8336); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 279));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 279));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 279));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 279));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 279));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 279));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 279));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 279));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 279));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 279));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10958:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_VirtualType8377); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_268, 280));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8397); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 281));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10982:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10983:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_VirtualType8423);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 282));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 282));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 282));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 282));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 282));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 282));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 282));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 282));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 282));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 282));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11014:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_structure_VirtualType8459); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_269, 283));
            	              			
            	            }
            	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8479); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_77, 284));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 284));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 284));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 284));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 284));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 284));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 284));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_189, 284));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_190, 284));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_191, 284));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 284));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 284));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11049:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11050:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_VirtualType8505);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 285));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 285));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 285));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 285));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 285));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 285));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 285));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 285));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 285));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 285));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11081:8: a11= 'typeContainer' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_structure_VirtualType8541); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_270, 286));
            	              			
            	            }
            	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8561); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_271, 287));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11105:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11106:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8587); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_CONTAINER), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_CONTAINER), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_CONTAINER), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 288));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 288));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 288));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 288));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 288));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 288));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 288));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 288));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 288));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 288));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11152:8: a14= 'name' a15= ':' (a16= IDENTIFIER )
            	            {
            	            a14=(Token)match(input,44,FOLLOW_44_in_parse_org_kermeta_language_structure_VirtualType8628); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_272, 289));
            	              			
            	            }
            	            a15=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8648); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_273, 290));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11176:4: (a16= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11177:5: a16= IDENTIFIER
            	            {
            	            a16=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8674); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__NAME), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__NAME), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 291));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 291));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 291));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 291));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 291));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 291));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 291));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 291));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 291));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 291));
            	              			
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11219:8: a17= 'supertype' a18= ':' (a19= IDENTIFIER )
            	            {
            	            a17=(Token)match(input,58,FOLLOW_58_in_parse_org_kermeta_language_structure_VirtualType8715); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_274, 292));
            	              			
            	            }
            	            a18=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8735); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_275, 293));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11243:4: (a19= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11244:5: a19= IDENTIFIER
            	            {
            	            a19=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8761); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a19 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__SUPERTYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariable, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableSupertypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__SUPERTYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__SUPERTYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 294));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 294));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 294));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 294));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 294));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 294));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 294));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 294));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 294));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 294));
            	              			
            	            }

            	            }
            	            break;
            	        case 7 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11290:8: a20= 'classDefinition' a21= ':' (a22= IDENTIFIER )
            	            {
            	            a20=(Token)match(input,62,FOLLOW_62_in_parse_org_kermeta_language_structure_VirtualType8802); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_276, 295));
            	              			
            	            }
            	            a21=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8822); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a21, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_277, 296));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11314:4: (a22= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11315:5: a22= IDENTIFIER
            	            {
            	            a22=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8848); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a22 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a22.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CLASS_DEFINITION), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a22).getLine(), ((org.antlr.runtime.CommonToken) a22).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a22).getStartIndex(), ((org.antlr.runtime.CommonToken) a22).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.ClassDefinition proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.VirtualType, org.kermeta.language.structure.ClassDefinition>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getVirtualTypeClassDefinitionReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CLASS_DEFINITION), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CLASS_DEFINITION), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a22, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a22, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 297));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 297));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 297));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 297));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 297));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 297));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 297));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 297));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 297));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 297));
            	              			
            	            }

            	            }
            	            break;
            	        case 8 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11361:8: a23= 'modelType' a24= ':' (a25= IDENTIFIER )
            	            {
            	            a23=(Token)match(input,63,FOLLOW_63_in_parse_org_kermeta_language_structure_VirtualType8889); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_278, 298));
            	              			
            	            }
            	            a24=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8909); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a24, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_279, 299));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11385:4: (a25= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11386:5: a25= IDENTIFIER
            	            {
            	            a25=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8935); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a25 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a25.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__MODEL_TYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a25).getLine(), ((org.antlr.runtime.CommonToken) a25).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a25).getStartIndex(), ((org.antlr.runtime.CommonToken) a25).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.ModelTypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.VirtualType, org.kermeta.language.structure.ModelTypeVariable>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getVirtualTypeModelTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__MODEL_TYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__MODEL_TYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a25, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a25, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 300));
            	              			
            	            }

            	            }
            	            break;
            	        case 9 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11432:8: a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding )
            	            {
            	            a26=(Token)match(input,64,FOLLOW_64_in_parse_org_kermeta_language_structure_VirtualType8976); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a26, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_280, 301));
            	              			
            	            }
            	            a27=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8996); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a27, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 302));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11456:4: (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11457:5: a28_0= parse_org_kermeta_language_structure_TypeVariableBinding
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeVariableBinding_in_parse_org_kermeta_language_structure_VirtualType9022);
            	            a28_0=parse_org_kermeta_language_structure_TypeVariableBinding();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a28_0 != null) {
            	              						if (a28_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_PARAM_BINDING, a28_0);
            	              							completedElement(a28_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a28_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 303));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 303));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 303));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 303));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 303));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 303));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 303));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 303));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 303));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 303));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 304));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 304));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 304));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 304));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 304));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 304));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 304));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 304));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 304));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 304));
              	
            }
            a29=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_VirtualType9063); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a29, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 305));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 26, parse_org_kermeta_language_structure_VirtualType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_VirtualType"


    // $ANTLR start "parse_org_kermeta_language_structure_ProductType"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11580:1: parse_org_kermeta_language_structure_ProductType returns [org.kermeta.language.structure.ProductType element = null] : a0= 'ProductType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}' ;
    public final org.kermeta.language.structure.ProductType parse_org_kermeta_language_structure_ProductType() throws RecognitionException {
        org.kermeta.language.structure.ProductType element =  null;
        int parse_org_kermeta_language_structure_ProductType_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11583:1: (a0= 'ProductType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11584:2: a0= 'ProductType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}'
            {
            a0=(Token)match(input,65,FOLLOW_65_in_parse_org_kermeta_language_structure_ProductType9092); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_281, 306));
              	
            }
            a1=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_ProductType9106); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 307));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 307));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 307));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 307));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 307));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 307));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11613:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( ((LA64_0>=39 && LA64_0<=40)||LA64_0==43||LA64_0==47||LA64_0==49) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11614:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11614:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) )
            	    int alt63=5;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt63=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt63=2;
            	        }
            	        break;
            	    case 47:
            	        {
            	        alt63=3;
            	        }
            	        break;
            	    case 43:
            	        {
            	        alt63=4;
            	        }
            	        break;
            	    case 49:
            	        {
            	        alt63=5;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 63, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt63) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11615:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_ProductType9129); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_282, 308));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9149); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_283, 309));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11639:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11640:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ProductType9175); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 310));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 310));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 310));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 310));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 310));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 310));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11682:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_ProductType9216); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_284, 311));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9236); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 312));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11706:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11707:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ProductType9262);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 313));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 313));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 313));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 313));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 313));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 313));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11734:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_structure_ProductType9298); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_285, 314));
            	              			
            	            }
            	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9318); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_77, 315));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 315));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 315));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 315));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 315));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 315));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 315));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_189, 315));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_190, 315));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_191, 315));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 315));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 315));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11769:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11770:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ProductType9344);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 316));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 316));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 316));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 316));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 316));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 316));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11797:8: a11= 'typeContainer' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_structure_ProductType9380); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_286, 317));
            	              			
            	            }
            	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9400); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_287, 318));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11821:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11822:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ProductType9426); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE_CONTAINER), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE_CONTAINER), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE_CONTAINER), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 319));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 319));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 319));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 319));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 319));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 319));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11864:8: a14= 'type' a15= ':' (a16= IDENTIFIER )
            	            {
            	            a14=(Token)match(input,49,FOLLOW_49_in_parse_org_kermeta_language_structure_ProductType9467); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_288, 320));
            	              			
            	            }
            	            a15=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9487); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_289, 321));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11888:4: (a16= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11889:5: a16= IDENTIFIER
            	            {
            	            a16=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ProductType9513); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ProductType, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getProductTypeTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 322));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 322));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 322));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 322));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 322));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 322));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 323));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 323));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 323));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 323));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 323));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 323));
              	
            }
            a17=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_ProductType9559); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 324));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 27, parse_org_kermeta_language_structure_ProductType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ProductType"


    // $ANTLR start "parse_org_kermeta_language_structure_FunctionType"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12019:1: parse_org_kermeta_language_structure_FunctionType returns [org.kermeta.language.structure.FunctionType element = null] : a0= 'FunctionType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'left' a15= ':' (a16= IDENTIFIER ) | a17= 'right' a18= ':' (a19= IDENTIFIER ) ) )* a20= '}' ;
    public final org.kermeta.language.structure.FunctionType parse_org_kermeta_language_structure_FunctionType() throws RecognitionException {
        org.kermeta.language.structure.FunctionType element =  null;
        int parse_org_kermeta_language_structure_FunctionType_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 28) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12022:1: (a0= 'FunctionType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'left' a15= ':' (a16= IDENTIFIER ) | a17= 'right' a18= ':' (a19= IDENTIFIER ) ) )* a20= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12023:2: a0= 'FunctionType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'left' a15= ':' (a16= IDENTIFIER ) | a17= 'right' a18= ':' (a19= IDENTIFIER ) ) )* a20= '}'
            {
            a0=(Token)match(input,66,FOLLOW_66_in_parse_org_kermeta_language_structure_FunctionType9588); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_290, 325));
              	
            }
            a1=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_FunctionType9602); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 326));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 326));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 326));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 326));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 326));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 326));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 326));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12053:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'left' a15= ':' (a16= IDENTIFIER ) | a17= 'right' a18= ':' (a19= IDENTIFIER ) ) )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( ((LA66_0>=39 && LA66_0<=40)||LA66_0==43||LA66_0==47||(LA66_0>=67 && LA66_0<=68)) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12054:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'left' a15= ':' (a16= IDENTIFIER ) | a17= 'right' a18= ':' (a19= IDENTIFIER ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12054:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'left' a15= ':' (a16= IDENTIFIER ) | a17= 'right' a18= ':' (a19= IDENTIFIER ) )
            	    int alt65=6;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt65=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt65=2;
            	        }
            	        break;
            	    case 47:
            	        {
            	        alt65=3;
            	        }
            	        break;
            	    case 43:
            	        {
            	        alt65=4;
            	        }
            	        break;
            	    case 67:
            	        {
            	        alt65=5;
            	        }
            	        break;
            	    case 68:
            	        {
            	        alt65=6;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 65, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt65) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12055:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_FunctionType9625); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_291, 327));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType9645); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_292, 328));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12079:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12080:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType9671); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 329));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 329));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 329));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 329));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 329));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 329));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 329));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12123:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_FunctionType9712); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_293, 330));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType9732); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 331));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12147:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12148:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_FunctionType9758);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 332));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 332));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 332));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 332));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 332));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 332));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 332));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12176:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_structure_FunctionType9794); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_294, 333));
            	              			
            	            }
            	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType9814); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_77, 334));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 334));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 334));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 334));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 334));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 334));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 334));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_189, 334));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_190, 334));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_191, 334));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 334));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 334));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12211:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12212:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_FunctionType9840);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 335));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 335));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 335));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 335));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 335));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 335));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 335));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12240:8: a11= 'typeContainer' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_structure_FunctionType9876); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_295, 336));
            	              			
            	            }
            	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType9896); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_296, 337));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12264:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12265:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType9922); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TYPE_CONTAINER), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TYPE_CONTAINER), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TYPE_CONTAINER), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 338));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 338));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 338));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 338));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 338));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 338));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 338));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12308:8: a14= 'left' a15= ':' (a16= IDENTIFIER )
            	            {
            	            a14=(Token)match(input,67,FOLLOW_67_in_parse_org_kermeta_language_structure_FunctionType9963); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_297, 339));
            	              			
            	            }
            	            a15=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType9983); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_298, 340));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12332:4: (a16= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12333:5: a16= IDENTIFIER
            	            {
            	            a16=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType10009); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__LEFT), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.FunctionType, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getFunctionTypeLeftReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__LEFT), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__LEFT), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 341));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 341));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 341));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 341));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 341));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 341));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 341));
            	              			
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12376:8: a17= 'right' a18= ':' (a19= IDENTIFIER )
            	            {
            	            a17=(Token)match(input,68,FOLLOW_68_in_parse_org_kermeta_language_structure_FunctionType10050); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_299, 342));
            	              			
            	            }
            	            a18=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType10070); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_300, 343));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12400:4: (a19= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12401:5: a19= IDENTIFIER
            	            {
            	            a19=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType10096); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a19 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__RIGHT), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.FunctionType, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getFunctionTypeRightReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__RIGHT), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__RIGHT), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 344));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 344));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 344));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 344));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 344));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 344));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 344));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 345));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 345));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 345));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 345));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 345));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 345));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 345));
              	
            }
            a20=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_FunctionType10142); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 346));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 28, parse_org_kermeta_language_structure_FunctionType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_FunctionType"


    // $ANTLR start "parse_org_kermeta_language_behavior_Block"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12533:1: parse_org_kermeta_language_behavior_Block returns [org.kermeta.language.behavior.Block element = null] : a0= 'do' ( ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_Block ) ) )* ( ( (a12_0= parse_org_kermeta_language_behavior_Rescue ) ) )* a13= 'end' ;
    public final org.kermeta.language.behavior.Block parse_org_kermeta_language_behavior_Block() throws RecognitionException {
        org.kermeta.language.behavior.Block element =  null;
        int parse_org_kermeta_language_behavior_Block_StartIndex = input.index();
        Token a0=null;
        Token a13=null;
        org.kermeta.language.behavior.VariableDecl a1_0 = null;

        org.kermeta.language.behavior.Loop a2_0 = null;

        org.kermeta.language.behavior.Conditional a3_0 = null;

        org.kermeta.language.behavior.Assignment a4_0 = null;

        org.kermeta.language.behavior.CallFeature a5_0 = null;

        org.kermeta.language.behavior.CallVariable a6_0 = null;

        org.kermeta.language.behavior.CallSuperOperation a7_0 = null;

        org.kermeta.language.behavior.CallResult a8_0 = null;

        org.kermeta.language.behavior.JavaStaticCall a9_0 = null;

        org.kermeta.language.behavior.EmptyExpression a10_0 = null;

        org.kermeta.language.behavior.Block a11_0 = null;

        org.kermeta.language.behavior.Rescue a12_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12536:1: (a0= 'do' ( ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_Block ) ) )* ( ( (a12_0= parse_org_kermeta_language_behavior_Rescue ) ) )* a13= 'end' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12537:2: a0= 'do' ( ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_Block ) ) )* ( ( (a12_0= parse_org_kermeta_language_behavior_Rescue ) ) )* a13= 'end'
            {
            a0=(Token)match(input,69,FOLLOW_69_in_parse_org_kermeta_language_behavior_Block10171); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 347));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12564:2: ( ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_Block ) ) )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( (LA68_0==IDENTIFIER||(LA68_0>=INTEGER && LA68_0<=BOOLEAN)||LA68_0==32||LA68_0==69||LA68_0==73||LA68_0==76||LA68_0==79||(LA68_0>=81 && LA68_0<=82)||LA68_0==85||(LA68_0>=92 && LA68_0<=93)) ) {
                    alt68=1;
                }


                switch (alt68) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12565:3: ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_Block ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12565:3: ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_Block ) )
            	    int alt67=11;
            	    alt67 = dfa67.predict(input);
            	    switch (alt67) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12566:4: (a1_0= parse_org_kermeta_language_behavior_VariableDecl )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12566:4: (a1_0= parse_org_kermeta_language_behavior_VariableDecl )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12567:5: a1_0= parse_org_kermeta_language_behavior_VariableDecl
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Block10200);
            	            a1_0=parse_org_kermeta_language_behavior_VariableDecl();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a1_0 != null) {
            	              						if (a1_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a1_0);
            	              							completedElement(a1_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a1_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 348));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 348));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 348));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 348));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 348));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 348));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 348));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 348));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 348));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 348));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 348));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 348));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 348));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 348));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 348));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 348));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12604:8: (a2_0= parse_org_kermeta_language_behavior_Loop )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12604:8: (a2_0= parse_org_kermeta_language_behavior_Loop )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12605:5: a2_0= parse_org_kermeta_language_behavior_Loop
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_behavior_Block10242);
            	            a2_0=parse_org_kermeta_language_behavior_Loop();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a2_0 != null) {
            	              						if (a2_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a2_0);
            	              							completedElement(a2_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a2_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 349));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12642:8: (a3_0= parse_org_kermeta_language_behavior_Conditional )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12642:8: (a3_0= parse_org_kermeta_language_behavior_Conditional )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12643:5: a3_0= parse_org_kermeta_language_behavior_Conditional
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Block10284);
            	            a3_0=parse_org_kermeta_language_behavior_Conditional();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a3_0 != null) {
            	              						if (a3_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a3_0);
            	              							completedElement(a3_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a3_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 350));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12680:8: (a4_0= parse_org_kermeta_language_behavior_Assignment )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12680:8: (a4_0= parse_org_kermeta_language_behavior_Assignment )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12681:5: a4_0= parse_org_kermeta_language_behavior_Assignment
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Block10326);
            	            a4_0=parse_org_kermeta_language_behavior_Assignment();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a4_0 != null) {
            	              						if (a4_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a4_0);
            	              							completedElement(a4_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a4_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 351));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12718:8: (a5_0= parse_org_kermeta_language_behavior_CallFeature )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12718:8: (a5_0= parse_org_kermeta_language_behavior_CallFeature )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12719:5: a5_0= parse_org_kermeta_language_behavior_CallFeature
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Block10368);
            	            a5_0=parse_org_kermeta_language_behavior_CallFeature();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a5_0 != null) {
            	              						if (a5_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a5_0);
            	              							completedElement(a5_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a5_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 352));
            	              			
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12756:8: (a6_0= parse_org_kermeta_language_behavior_CallVariable )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12756:8: (a6_0= parse_org_kermeta_language_behavior_CallVariable )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12757:5: a6_0= parse_org_kermeta_language_behavior_CallVariable
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Block10410);
            	            a6_0=parse_org_kermeta_language_behavior_CallVariable();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a6_0 != null) {
            	              						if (a6_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a6_0);
            	              							completedElement(a6_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a6_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 353));
            	              			
            	            }

            	            }
            	            break;
            	        case 7 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12794:8: (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12794:8: (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12795:5: a7_0= parse_org_kermeta_language_behavior_CallSuperOperation
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Block10452);
            	            a7_0=parse_org_kermeta_language_behavior_CallSuperOperation();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 354));
            	              			
            	            }

            	            }
            	            break;
            	        case 8 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12832:8: (a8_0= parse_org_kermeta_language_behavior_CallResult )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12832:8: (a8_0= parse_org_kermeta_language_behavior_CallResult )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12833:5: a8_0= parse_org_kermeta_language_behavior_CallResult
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Block10494);
            	            a8_0=parse_org_kermeta_language_behavior_CallResult();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a8_0 != null) {
            	              						if (a8_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a8_0);
            	              							completedElement(a8_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a8_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 355));
            	              			
            	            }

            	            }
            	            break;
            	        case 9 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12870:8: (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12870:8: (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12871:5: a9_0= parse_org_kermeta_language_behavior_JavaStaticCall
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_Block10536);
            	            a9_0=parse_org_kermeta_language_behavior_JavaStaticCall();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a9_0 != null) {
            	              						if (a9_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a9_0);
            	              							completedElement(a9_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a9_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 356));
            	              			
            	            }

            	            }
            	            break;
            	        case 10 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12908:8: (a10_0= parse_org_kermeta_language_behavior_EmptyExpression )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12908:8: (a10_0= parse_org_kermeta_language_behavior_EmptyExpression )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12909:5: a10_0= parse_org_kermeta_language_behavior_EmptyExpression
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_behavior_Block10578);
            	            a10_0=parse_org_kermeta_language_behavior_EmptyExpression();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 357));
            	              			
            	            }

            	            }
            	            break;
            	        case 11 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12946:8: (a11_0= parse_org_kermeta_language_behavior_Block )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12946:8: (a11_0= parse_org_kermeta_language_behavior_Block )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12947:5: a11_0= parse_org_kermeta_language_behavior_Block
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Block10620);
            	            a11_0=parse_org_kermeta_language_behavior_Block();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a11_0 != null) {
            	              						if (a11_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a11_0);
            	              							completedElement(a11_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a11_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 358));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 359));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 359));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 359));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 359));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 359));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 359));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 359));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 359));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 359));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 359));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 359));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 359));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 359));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 359));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 359));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 359));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13005:2: ( ( (a12_0= parse_org_kermeta_language_behavior_Rescue ) ) )*
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( (LA69_0==71) ) {
                    alt69=1;
                }


                switch (alt69) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13006:3: ( (a12_0= parse_org_kermeta_language_behavior_Rescue ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13006:3: ( (a12_0= parse_org_kermeta_language_behavior_Rescue ) )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13007:4: (a12_0= parse_org_kermeta_language_behavior_Rescue )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13007:4: (a12_0= parse_org_kermeta_language_behavior_Rescue )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13008:5: a12_0= parse_org_kermeta_language_behavior_Rescue
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Rescue_in_parse_org_kermeta_language_behavior_Block10676);
            	    a12_0=parse_org_kermeta_language_behavior_Rescue();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	      					}
            	      					if (a12_0 != null) {
            	      						if (a12_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__RESCUE_BLOCK, a12_0);
            	      							completedElement(a12_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a12_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 360));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 360));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 361));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 361));
              	
            }
            a13=(Token)match(input,70,FOLLOW_70_in_parse_org_kermeta_language_behavior_Block10717); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 362));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 29, parse_org_kermeta_language_behavior_Block_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Block"


    // $ANTLR start "parse_org_kermeta_language_behavior_Rescue"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13091:1: parse_org_kermeta_language_behavior_Rescue returns [org.kermeta.language.behavior.Rescue element = null] : a0= 'rescue' ( (a1= '(' (a2= IDENTIFIER ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' ) )? ( ( (a6_0= parse_org_kermeta_language_behavior_Expression ) ) )? ;
    public final org.kermeta.language.behavior.Rescue parse_org_kermeta_language_behavior_Rescue() throws RecognitionException {
        org.kermeta.language.behavior.Rescue element =  null;
        int parse_org_kermeta_language_behavior_Rescue_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a5=null;
        org.kermeta.language.behavior.TypeReference a4_0 = null;

        org.kermeta.language.behavior.Expression a6_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13094:1: (a0= 'rescue' ( (a1= '(' (a2= IDENTIFIER ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' ) )? ( ( (a6_0= parse_org_kermeta_language_behavior_Expression ) ) )? )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13095:2: a0= 'rescue' ( (a1= '(' (a2= IDENTIFIER ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' ) )? ( ( (a6_0= parse_org_kermeta_language_behavior_Expression ) ) )?
            {
            a0=(Token)match(input,71,FOLLOW_71_in_parse_org_kermeta_language_behavior_Rescue10746); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 363));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13128:2: ( (a1= '(' (a2= IDENTIFIER ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' ) )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==32) ) {
                int LA70_1 = input.LA(2);

                if ( (LA70_1==IDENTIFIER) ) {
                    int LA70_3 = input.LA(3);

                    if ( (LA70_3==27) ) {
                        alt70=1;
                    }
                }
            }
            switch (alt70) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13129:3: (a1= '(' (a2= IDENTIFIER ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13129:3: (a1= '(' (a2= IDENTIFIER ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13130:4: a1= '(' (a2= IDENTIFIER ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')'
                    {
                    a1=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_behavior_Rescue10769); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 364));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13142:4: (a2= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13143:5: a2= IDENTIFIER
                    {
                    a2=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_Rescue10795); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      					}
                      					if (a2 != null) {
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      						tokenResolver.setOptions(getOptions());
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      						tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RESCUE__EXCEPTION_NAME), result);
                      						java.lang.Object resolvedObject = result.getResolvedToken();
                      						if (resolvedObject == null) {
                      							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
                      						}
                      						java.lang.String resolved = (java.lang.String)resolvedObject;
                      						if (resolved != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RESCUE__EXCEPTION_NAME), resolved);
                      							completedElement(resolved);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
                      					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 365));
                      			
                    }
                    a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_Rescue10828); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 366));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13187:4: (a4_0= parse_org_kermeta_language_behavior_TypeReference )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13188:5: a4_0= parse_org_kermeta_language_behavior_TypeReference
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_Rescue10854);
                    a4_0=parse_org_kermeta_language_behavior_TypeReference();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      					}
                      					if (a4_0 != null) {
                      						if (a4_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RESCUE__EXCEPTION_TYPE), a4_0);
                      							completedElement(a4_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a4_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 367));
                      			
                    }
                    a5=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_Rescue10882); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 368));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 368));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 368));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 368));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 368));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 368));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 368));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 368));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 368));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 368));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 368));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 368));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 368));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 368));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 368));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 368));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 368));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 368));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 368));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 368));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 368));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 369));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 369));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13268:2: ( ( (a6_0= parse_org_kermeta_language_behavior_Expression ) ) )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==IDENTIFIER||(LA71_0>=INTEGER && LA71_0<=BOOLEAN)||LA71_0==32||LA71_0==37||LA71_0==55||LA71_0==69||(LA71_0>=72 && LA71_0<=73)||LA71_0==76||LA71_0==79||(LA71_0>=81 && LA71_0<=82)||LA71_0==85||(LA71_0>=92 && LA71_0<=93)||LA71_0==95) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13269:3: ( (a6_0= parse_org_kermeta_language_behavior_Expression ) )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13269:3: ( (a6_0= parse_org_kermeta_language_behavior_Expression ) )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13270:4: (a6_0= parse_org_kermeta_language_behavior_Expression )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13270:4: (a6_0= parse_org_kermeta_language_behavior_Expression )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13271:5: a6_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Rescue10930);
                    a6_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      					}
                      					if (a6_0 != null) {
                      						if (a6_0 != null) {
                      							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.RESCUE__BODY, a6_0);
                      							completedElement(a6_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a6_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 370));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 370));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 371));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 30, parse_org_kermeta_language_behavior_Rescue_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Rescue"


    // $ANTLR start "parse_org_kermeta_language_behavior_TypeReference"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13303:1: parse_org_kermeta_language_behavior_TypeReference returns [org.kermeta.language.behavior.TypeReference element = null] : (a0= IDENTIFIER ) ;
    public final org.kermeta.language.behavior.TypeReference parse_org_kermeta_language_behavior_TypeReference() throws RecognitionException {
        org.kermeta.language.behavior.TypeReference element =  null;
        int parse_org_kermeta_language_behavior_TypeReference_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13306:1: ( (a0= IDENTIFIER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13307:2: (a0= IDENTIFIER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13307:2: (a0= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13308:3: a0= IDENTIFIER
            {
            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_TypeReference10990); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createTypeReference();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_REFERENCE__TYPE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				String resolved = (String) resolvedObject;
              				org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
              				collectHiddenTokens(element);
              				registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_REFERENCE__TYPE), resolved, proxy);
              				if (proxy != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_REFERENCE__TYPE), proxy);
              					completedElement(proxy);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, proxy);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_237, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_241, 372));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 31, parse_org_kermeta_language_behavior_TypeReference_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_TypeReference"


    // $ANTLR start "parse_org_kermeta_language_behavior_Raise"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13392:1: parse_org_kermeta_language_behavior_Raise returns [org.kermeta.language.behavior.Raise element = null] : a0= 'raise' (a1_0= parse_org_kermeta_language_behavior_Expression ) ;
    public final org.kermeta.language.behavior.Raise parse_org_kermeta_language_behavior_Raise() throws RecognitionException {
        org.kermeta.language.behavior.Raise element =  null;
        int parse_org_kermeta_language_behavior_Raise_StartIndex = input.index();
        Token a0=null;
        org.kermeta.language.behavior.Expression a1_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13395:1: (a0= 'raise' (a1_0= parse_org_kermeta_language_behavior_Expression ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13396:2: a0= 'raise' (a1_0= parse_org_kermeta_language_behavior_Expression )
            {
            a0=(Token)match(input,72,FOLLOW_72_in_parse_org_kermeta_language_behavior_Raise11026); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 373));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13426:2: (a1_0= parse_org_kermeta_language_behavior_Expression )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13427:3: a1_0= parse_org_kermeta_language_behavior_Expression
            {
            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Raise11044);
            a1_0=parse_org_kermeta_language_behavior_Expression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
              			}
              			if (a1_0 != null) {
              				if (a1_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RAISE__EXPRESSION), a1_0);
              					completedElement(a1_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a1_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 374));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 32, parse_org_kermeta_language_behavior_Raise_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Raise"


    // $ANTLR start "parse_org_kermeta_language_behavior_BooleanLiteral"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13486:1: parse_org_kermeta_language_behavior_BooleanLiteral returns [org.kermeta.language.behavior.BooleanLiteral element = null] : (a0= BOOLEAN ) ;
    public final org.kermeta.language.behavior.BooleanLiteral parse_org_kermeta_language_behavior_BooleanLiteral() throws RecognitionException {
        org.kermeta.language.behavior.BooleanLiteral element =  null;
        int parse_org_kermeta_language_behavior_BooleanLiteral_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13489:1: ( (a0= BOOLEAN ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13490:2: (a0= BOOLEAN )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13490:2: (a0= BOOLEAN )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13491:3: a0= BOOLEAN
            {
            a0=(Token)match(input,BOOLEAN,FOLLOW_BOOLEAN_in_parse_org_kermeta_language_behavior_BooleanLiteral11081); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBooleanLiteral();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("BOOLEAN");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.BOOLEAN_LITERAL__VALUE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.BOOLEAN_LITERAL__VALUE), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 375));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 33, parse_org_kermeta_language_behavior_BooleanLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_BooleanLiteral"


    // $ANTLR start "parse_org_kermeta_language_behavior_IntegerLiteral"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13561:1: parse_org_kermeta_language_behavior_IntegerLiteral returns [org.kermeta.language.behavior.IntegerLiteral element = null] : (a0= INTEGER ) ;
    public final org.kermeta.language.behavior.IntegerLiteral parse_org_kermeta_language_behavior_IntegerLiteral() throws RecognitionException {
        org.kermeta.language.behavior.IntegerLiteral element =  null;
        int parse_org_kermeta_language_behavior_IntegerLiteral_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13564:1: ( (a0= INTEGER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13565:2: (a0= INTEGER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13565:2: (a0= INTEGER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13566:3: a0= INTEGER
            {
            a0=(Token)match(input,INTEGER,FOLLOW_INTEGER_in_parse_org_kermeta_language_behavior_IntegerLiteral11121); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createIntegerLiteral();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.INTEGER_LITERAL__VALUE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.Integer resolved = (java.lang.Integer)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.INTEGER_LITERAL__VALUE), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 376));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 34, parse_org_kermeta_language_behavior_IntegerLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_IntegerLiteral"


    // $ANTLR start "parse_org_kermeta_language_behavior_StringLiteral"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13636:1: parse_org_kermeta_language_behavior_StringLiteral returns [org.kermeta.language.behavior.StringLiteral element = null] : (a0= IDENTIFIER ) ;
    public final org.kermeta.language.behavior.StringLiteral parse_org_kermeta_language_behavior_StringLiteral() throws RecognitionException {
        org.kermeta.language.behavior.StringLiteral element =  null;
        int parse_org_kermeta_language_behavior_StringLiteral_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13639:1: ( (a0= IDENTIFIER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13640:2: (a0= IDENTIFIER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13640:2: (a0= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13641:3: a0= IDENTIFIER
            {
            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_StringLiteral11161); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createStringLiteral();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.STRING_LITERAL__VALUE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.STRING_LITERAL__VALUE), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 377));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 35, parse_org_kermeta_language_behavior_StringLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_StringLiteral"


    // $ANTLR start "parse_org_kermeta_language_behavior_Conditional"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13711:1: parse_org_kermeta_language_behavior_Conditional returns [org.kermeta.language.behavior.Conditional element = null] : a0= 'if' ( (a1_0= parse_org_kermeta_language_behavior_CallFeature ) | (a2_0= parse_org_kermeta_language_behavior_Conditional ) ) a3= 'then' ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a5_0= parse_org_kermeta_language_behavior_Block ) | (a6_0= parse_org_kermeta_language_behavior_Assignment ) | (a7_0= parse_org_kermeta_language_behavior_CallFeature ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallVariable ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_VariableDecl ) ) ( (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) ) )? a23= 'end' ;
    public final org.kermeta.language.behavior.Conditional parse_org_kermeta_language_behavior_Conditional() throws RecognitionException {
        org.kermeta.language.behavior.Conditional element =  null;
        int parse_org_kermeta_language_behavior_Conditional_StartIndex = input.index();
        Token a0=null;
        Token a3=null;
        Token a13=null;
        Token a23=null;
        org.kermeta.language.behavior.CallFeature a1_0 = null;

        org.kermeta.language.behavior.Conditional a2_0 = null;

        org.kermeta.language.behavior.BooleanLiteral a4_0 = null;

        org.kermeta.language.behavior.Block a5_0 = null;

        org.kermeta.language.behavior.Assignment a6_0 = null;

        org.kermeta.language.behavior.CallFeature a7_0 = null;

        org.kermeta.language.behavior.CallSuperOperation a8_0 = null;

        org.kermeta.language.behavior.CallResult a9_0 = null;

        org.kermeta.language.behavior.CallVariable a10_0 = null;

        org.kermeta.language.behavior.CallValue a11_0 = null;

        org.kermeta.language.behavior.VariableDecl a12_0 = null;

        org.kermeta.language.behavior.BooleanLiteral a14_0 = null;

        org.kermeta.language.behavior.Block a15_0 = null;

        org.kermeta.language.behavior.Assignment a16_0 = null;

        org.kermeta.language.behavior.CallFeature a17_0 = null;

        org.kermeta.language.behavior.CallSuperOperation a18_0 = null;

        org.kermeta.language.behavior.CallResult a19_0 = null;

        org.kermeta.language.behavior.VariableDecl a20_0 = null;

        org.kermeta.language.behavior.CallVariable a21_0 = null;

        org.kermeta.language.behavior.CallValue a22_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13714:1: (a0= 'if' ( (a1_0= parse_org_kermeta_language_behavior_CallFeature ) | (a2_0= parse_org_kermeta_language_behavior_Conditional ) ) a3= 'then' ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a5_0= parse_org_kermeta_language_behavior_Block ) | (a6_0= parse_org_kermeta_language_behavior_Assignment ) | (a7_0= parse_org_kermeta_language_behavior_CallFeature ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallVariable ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_VariableDecl ) ) ( (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) ) )? a23= 'end' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13715:2: a0= 'if' ( (a1_0= parse_org_kermeta_language_behavior_CallFeature ) | (a2_0= parse_org_kermeta_language_behavior_Conditional ) ) a3= 'then' ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a5_0= parse_org_kermeta_language_behavior_Block ) | (a6_0= parse_org_kermeta_language_behavior_Assignment ) | (a7_0= parse_org_kermeta_language_behavior_CallFeature ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallVariable ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_VariableDecl ) ) ( (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) ) )? a23= 'end'
            {
            a0=(Token)match(input,73,FOLLOW_73_in_parse_org_kermeta_language_behavior_Conditional11197); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 378));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13735:2: ( (a1_0= parse_org_kermeta_language_behavior_CallFeature ) | (a2_0= parse_org_kermeta_language_behavior_Conditional ) )
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==IDENTIFIER||(LA72_0>=INTEGER && LA72_0<=BOOLEAN)||LA72_0==32||LA72_0==81||LA72_0==85||LA72_0==92) ) {
                alt72=1;
            }
            else if ( (LA72_0==73) ) {
                alt72=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 72, 0, input);

                throw nvae;
            }
            switch (alt72) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13736:3: (a1_0= parse_org_kermeta_language_behavior_CallFeature )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13736:3: (a1_0= parse_org_kermeta_language_behavior_CallFeature )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13737:4: a1_0= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional11220);
                    a1_0=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a1_0 != null) {
                      					if (a1_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__CONDITION), a1_0);
                      						completedElement(a1_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a1_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 379));
                      		
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13759:6: (a2_0= parse_org_kermeta_language_behavior_Conditional )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13759:6: (a2_0= parse_org_kermeta_language_behavior_Conditional )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13760:4: a2_0= parse_org_kermeta_language_behavior_Conditional
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Conditional11254);
                    a2_0=parse_org_kermeta_language_behavior_Conditional();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a2_0 != null) {
                      					if (a2_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__CONDITION), a2_0);
                      						completedElement(a2_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a2_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 380));
                      		
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 381));
              	
            }
            a3=(Token)match(input,74,FOLLOW_74_in_parse_org_kermeta_language_behavior_Conditional11284); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 382));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13810:2: ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a5_0= parse_org_kermeta_language_behavior_Block ) | (a6_0= parse_org_kermeta_language_behavior_Assignment ) | (a7_0= parse_org_kermeta_language_behavior_CallFeature ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallVariable ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_VariableDecl ) )
            int alt73=9;
            alt73 = dfa73.predict(input);
            switch (alt73) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13811:3: (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13811:3: (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13812:4: a4_0= parse_org_kermeta_language_behavior_BooleanLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Conditional11307);
                    a4_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a4_0 != null) {
                      					if (a4_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a4_0);
                      						completedElement(a4_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a4_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 383));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 383));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 383));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 383));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 383));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 383));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 383));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 383));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 383));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 383));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 383));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 383));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 383));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 383));
                      		
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13847:6: (a5_0= parse_org_kermeta_language_behavior_Block )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13847:6: (a5_0= parse_org_kermeta_language_behavior_Block )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13848:4: a5_0= parse_org_kermeta_language_behavior_Block
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Conditional11341);
                    a5_0=parse_org_kermeta_language_behavior_Block();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a5_0 != null) {
                      					if (a5_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a5_0);
                      						completedElement(a5_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a5_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 384));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 384));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 384));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 384));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 384));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 384));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 384));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 384));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 384));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 384));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 384));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 384));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 384));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 384));
                      		
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13883:6: (a6_0= parse_org_kermeta_language_behavior_Assignment )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13883:6: (a6_0= parse_org_kermeta_language_behavior_Assignment )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13884:4: a6_0= parse_org_kermeta_language_behavior_Assignment
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Conditional11375);
                    a6_0=parse_org_kermeta_language_behavior_Assignment();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a6_0 != null) {
                      					if (a6_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a6_0);
                      						completedElement(a6_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a6_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 385));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 385));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 385));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 385));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 385));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 385));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 385));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 385));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 385));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 385));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 385));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 385));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 385));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 385));
                      		
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13919:6: (a7_0= parse_org_kermeta_language_behavior_CallFeature )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13919:6: (a7_0= parse_org_kermeta_language_behavior_CallFeature )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13920:4: a7_0= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional11409);
                    a7_0=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a7_0 != null) {
                      					if (a7_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a7_0);
                      						completedElement(a7_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a7_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 386));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 386));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 386));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 386));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 386));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 386));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 386));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 386));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 386));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 386));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 386));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 386));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 386));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 386));
                      		
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13955:6: (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13955:6: (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13956:4: a8_0= parse_org_kermeta_language_behavior_CallSuperOperation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Conditional11443);
                    a8_0=parse_org_kermeta_language_behavior_CallSuperOperation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a8_0 != null) {
                      					if (a8_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a8_0);
                      						completedElement(a8_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a8_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 387));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 387));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 387));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 387));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 387));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 387));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 387));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 387));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 387));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 387));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 387));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 387));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 387));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 387));
                      		
                    }

                    }
                    break;
                case 6 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13991:6: (a9_0= parse_org_kermeta_language_behavior_CallResult )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13991:6: (a9_0= parse_org_kermeta_language_behavior_CallResult )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13992:4: a9_0= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Conditional11477);
                    a9_0=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a9_0 != null) {
                      					if (a9_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a9_0);
                      						completedElement(a9_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a9_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 388));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 388));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 388));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 388));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 388));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 388));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 388));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 388));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 388));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 388));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 388));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 388));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 388));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 388));
                      		
                    }

                    }
                    break;
                case 7 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14027:6: (a10_0= parse_org_kermeta_language_behavior_CallVariable )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14027:6: (a10_0= parse_org_kermeta_language_behavior_CallVariable )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14028:4: a10_0= parse_org_kermeta_language_behavior_CallVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Conditional11511);
                    a10_0=parse_org_kermeta_language_behavior_CallVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a10_0 != null) {
                      					if (a10_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a10_0);
                      						completedElement(a10_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a10_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 389));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 389));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 389));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 389));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 389));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 389));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 389));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 389));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 389));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 389));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 389));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 389));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 389));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 389));
                      		
                    }

                    }
                    break;
                case 8 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14063:6: (a11_0= parse_org_kermeta_language_behavior_CallValue )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14063:6: (a11_0= parse_org_kermeta_language_behavior_CallValue )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14064:4: a11_0= parse_org_kermeta_language_behavior_CallValue
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Conditional11545);
                    a11_0=parse_org_kermeta_language_behavior_CallValue();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a11_0 != null) {
                      					if (a11_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a11_0);
                      						completedElement(a11_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a11_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 390));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 390));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 390));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 390));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 390));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 390));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 390));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 390));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 390));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 390));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 390));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 390));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 390));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 390));
                      		
                    }

                    }
                    break;
                case 9 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14099:6: (a12_0= parse_org_kermeta_language_behavior_VariableDecl )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14099:6: (a12_0= parse_org_kermeta_language_behavior_VariableDecl )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14100:4: a12_0= parse_org_kermeta_language_behavior_VariableDecl
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Conditional11579);
                    a12_0=parse_org_kermeta_language_behavior_VariableDecl();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a12_0 != null) {
                      					if (a12_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a12_0);
                      						completedElement(a12_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a12_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 391));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 391));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 391));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 391));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 391));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 391));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 391));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 391));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 391));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 391));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 391));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 391));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 391));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 391));
                      		
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 392));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14153:2: ( (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) ) )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==IDENTIFIER||(LA75_0>=INTEGER && LA75_0<=BOOLEAN)||LA75_0==32||LA75_0==55||LA75_0==69||LA75_0==75||LA75_0==79||(LA75_0>=81 && LA75_0<=82)||LA75_0==85||LA75_0==92) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14154:3: (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14154:3: (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) )
                    int alt74=8;
                    alt74 = dfa74.predict(input);
                    switch (alt74) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14155:4: a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            {
                            a13=(Token)match(input,75,FOLLOW_75_in_parse_org_kermeta_language_behavior_Conditional11618); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              				}
                              				collectHiddenTokens(element);
                              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
                              			
                            }
                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 393));
                              			
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14167:4: (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14168:5: a14_0= parse_org_kermeta_language_behavior_BooleanLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Conditional11644);
                            a14_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a14_0 != null) {
                              						if (a14_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a14_0);
                              							completedElement(a14_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a14_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 394));
                              			
                            }

                            }
                            break;
                        case 2 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14190:8: (a15_0= parse_org_kermeta_language_behavior_Block )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14190:8: (a15_0= parse_org_kermeta_language_behavior_Block )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14191:5: a15_0= parse_org_kermeta_language_behavior_Block
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Conditional11686);
                            a15_0=parse_org_kermeta_language_behavior_Block();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a15_0 != null) {
                              						if (a15_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a15_0);
                              							completedElement(a15_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a15_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 395));
                              			
                            }

                            }
                            break;
                        case 3 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14213:8: (a16_0= parse_org_kermeta_language_behavior_Assignment )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14213:8: (a16_0= parse_org_kermeta_language_behavior_Assignment )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14214:5: a16_0= parse_org_kermeta_language_behavior_Assignment
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Conditional11728);
                            a16_0=parse_org_kermeta_language_behavior_Assignment();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a16_0 != null) {
                              						if (a16_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a16_0);
                              							completedElement(a16_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a16_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 396));
                              			
                            }

                            }
                            break;
                        case 4 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14236:8: (a17_0= parse_org_kermeta_language_behavior_CallFeature )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14236:8: (a17_0= parse_org_kermeta_language_behavior_CallFeature )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14237:5: a17_0= parse_org_kermeta_language_behavior_CallFeature
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional11770);
                            a17_0=parse_org_kermeta_language_behavior_CallFeature();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a17_0 != null) {
                              						if (a17_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a17_0);
                              							completedElement(a17_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a17_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 397));
                              			
                            }

                            }
                            break;
                        case 5 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14259:8: (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14259:8: (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14260:5: a18_0= parse_org_kermeta_language_behavior_CallSuperOperation
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Conditional11812);
                            a18_0=parse_org_kermeta_language_behavior_CallSuperOperation();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a18_0 != null) {
                              						if (a18_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a18_0);
                              							completedElement(a18_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a18_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 398));
                              			
                            }

                            }
                            break;
                        case 6 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14282:8: (a19_0= parse_org_kermeta_language_behavior_CallResult )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14282:8: (a19_0= parse_org_kermeta_language_behavior_CallResult )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14283:5: a19_0= parse_org_kermeta_language_behavior_CallResult
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Conditional11854);
                            a19_0=parse_org_kermeta_language_behavior_CallResult();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a19_0 != null) {
                              						if (a19_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a19_0);
                              							completedElement(a19_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a19_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 399));
                              			
                            }

                            }
                            break;
                        case 7 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14305:8: (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14305:8: (a20_0= parse_org_kermeta_language_behavior_VariableDecl )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14306:5: a20_0= parse_org_kermeta_language_behavior_VariableDecl
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Conditional11896);
                            a20_0=parse_org_kermeta_language_behavior_VariableDecl();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a20_0 != null) {
                              						if (a20_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a20_0);
                              							completedElement(a20_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a20_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 400));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 400));
                              			
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14328:4: (a21_0= parse_org_kermeta_language_behavior_CallVariable )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14329:5: a21_0= parse_org_kermeta_language_behavior_CallVariable
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Conditional11930);
                            a21_0=parse_org_kermeta_language_behavior_CallVariable();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a21_0 != null) {
                              						if (a21_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a21_0);
                              							completedElement(a21_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a21_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 401));
                              			
                            }

                            }
                            break;
                        case 8 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14351:8: (a22_0= parse_org_kermeta_language_behavior_CallValue )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14351:8: (a22_0= parse_org_kermeta_language_behavior_CallValue )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14352:5: a22_0= parse_org_kermeta_language_behavior_CallValue
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Conditional11972);
                            a22_0=parse_org_kermeta_language_behavior_CallValue();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a22_0 != null) {
                              						if (a22_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a22_0);
                              							completedElement(a22_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a22_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 402));
                              			
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 403));
              	
            }
            a23=(Token)match(input,70,FOLLOW_70_in_parse_org_kermeta_language_behavior_Conditional12013); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 404));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 404));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 36, parse_org_kermeta_language_behavior_Conditional_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Conditional"


    // $ANTLR start "parse_org_kermeta_language_behavior_Loop"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14433:1: parse_org_kermeta_language_behavior_Loop returns [org.kermeta.language.behavior.Loop element = null] : a0= 'from' ( ( (a1_0= parse_org_kermeta_language_behavior_Expression ) ) )? a2= 'until' (a3_0= parse_org_kermeta_language_behavior_Expression ) ( (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) ) )? ;
    public final org.kermeta.language.behavior.Loop parse_org_kermeta_language_behavior_Loop() throws RecognitionException {
        org.kermeta.language.behavior.Loop element =  null;
        int parse_org_kermeta_language_behavior_Loop_StartIndex = input.index();
        Token a0=null;
        Token a2=null;
        Token a4=null;
        org.kermeta.language.behavior.Expression a1_0 = null;

        org.kermeta.language.behavior.Expression a3_0 = null;

        org.kermeta.language.behavior.Expression a5_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14436:1: (a0= 'from' ( ( (a1_0= parse_org_kermeta_language_behavior_Expression ) ) )? a2= 'until' (a3_0= parse_org_kermeta_language_behavior_Expression ) ( (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) ) )? )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14437:2: a0= 'from' ( ( (a1_0= parse_org_kermeta_language_behavior_Expression ) ) )? a2= 'until' (a3_0= parse_org_kermeta_language_behavior_Expression ) ( (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) ) )?
            {
            a0=(Token)match(input,76,FOLLOW_76_in_parse_org_kermeta_language_behavior_Loop12042); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 405));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14468:2: ( ( (a1_0= parse_org_kermeta_language_behavior_Expression ) ) )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==IDENTIFIER||(LA76_0>=INTEGER && LA76_0<=BOOLEAN)||LA76_0==32||LA76_0==37||LA76_0==55||LA76_0==69||(LA76_0>=72 && LA76_0<=73)||LA76_0==76||LA76_0==79||(LA76_0>=81 && LA76_0<=82)||LA76_0==85||(LA76_0>=92 && LA76_0<=93)||LA76_0==95) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14469:3: ( (a1_0= parse_org_kermeta_language_behavior_Expression ) )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14469:3: ( (a1_0= parse_org_kermeta_language_behavior_Expression ) )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14470:4: (a1_0= parse_org_kermeta_language_behavior_Expression )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14470:4: (a1_0= parse_org_kermeta_language_behavior_Expression )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14471:5: a1_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop12071);
                    a1_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
                      					}
                      					if (a1_0 != null) {
                      						if (a1_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LOOP__INITIALIZATION), a1_0);
                      							completedElement(a1_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a1_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 406));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 407));
              	
            }
            a2=(Token)match(input,77,FOLLOW_77_in_parse_org_kermeta_language_behavior_Loop12112); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 408));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 408));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14529:2: (a3_0= parse_org_kermeta_language_behavior_Expression )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14530:3: a3_0= parse_org_kermeta_language_behavior_Expression
            {
            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop12130);
            a3_0=parse_org_kermeta_language_behavior_Expression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LOOP__STOP_CONDITION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 409));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14591:2: ( (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) ) )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==78) ) {
                int LA77_1 = input.LA(2);

                if ( (synpred197_Kermeta()) ) {
                    alt77=1;
                }
            }
            switch (alt77) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14592:3: (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14592:3: (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14593:4: a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) )
                    {
                    a4=(Token)match(input,78,FOLLOW_78_in_parse_org_kermeta_language_behavior_Loop12157); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 410));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 410));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 410));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 410));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 410));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 410));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 410));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 410));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 410));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 410));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 410));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 410));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 410));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 410));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 410));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 410));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 410));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 410));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 410));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14623:4: ( (a5_0= parse_org_kermeta_language_behavior_Expression ) )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14624:5: (a5_0= parse_org_kermeta_language_behavior_Expression )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14624:5: (a5_0= parse_org_kermeta_language_behavior_Expression )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14625:6: a5_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop12190);
                    a5_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      						if (terminateParsing) {
                      							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      						}
                      						if (element == null) {
                      							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
                      						}
                      						if (a5_0 != null) {
                      							if (a5_0 != null) {
                      								element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LOOP__BODY), a5_0);
                      								completedElement(a5_0);
                      							}
                      							collectHiddenTokens(element);
                      							copyLocalizationInfos(a5_0, element); 						}
                      					
                    }

                    }

                    if ( state.backtracking==0 ) {

                      					// expected elements (follow set)
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 411));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 411));
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 412));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 412));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 413));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 37, parse_org_kermeta_language_behavior_Loop_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Loop"


    // $ANTLR start "parse_org_kermeta_language_behavior_VariableDecl"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14778:1: parse_org_kermeta_language_behavior_VariableDecl returns [org.kermeta.language.behavior.VariableDecl element = null] : a0= 'var' (a1= IDENTIFIER ) a2= ':' (a3_0= parse_org_kermeta_language_behavior_TypeReference ) ( (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )? ;
    public final org.kermeta.language.behavior.VariableDecl parse_org_kermeta_language_behavior_VariableDecl() throws RecognitionException {
        org.kermeta.language.behavior.VariableDecl element =  null;
        int parse_org_kermeta_language_behavior_VariableDecl_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        org.kermeta.language.behavior.TypeReference a3_0 = null;

        org.kermeta.language.behavior.Expression a5_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14781:1: (a0= 'var' (a1= IDENTIFIER ) a2= ':' (a3_0= parse_org_kermeta_language_behavior_TypeReference ) ( (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )? )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14782:2: a0= 'var' (a1= IDENTIFIER ) a2= ':' (a3_0= parse_org_kermeta_language_behavior_TypeReference ) ( (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )?
            {
            a0=(Token)match(input,79,FOLLOW_79_in_parse_org_kermeta_language_behavior_VariableDecl12264); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 414));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14794:2: (a1= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14795:3: a1= IDENTIFIER
            {
            a1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_VariableDecl12282); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
              			}
              			if (a1 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__IDENTIFIER), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__IDENTIFIER), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 415));
              	
            }
            a2=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_VariableDecl12303); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 416));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14839:2: (a3_0= parse_org_kermeta_language_behavior_TypeReference )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14840:3: a3_0= parse_org_kermeta_language_behavior_TypeReference
            {
            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_VariableDecl12321);
            a3_0=parse_org_kermeta_language_behavior_TypeReference();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__TYPE), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 417));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14901:2: ( (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==80) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14902:3: (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14902:3: (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14903:4: a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression )
                    {
                    a4=(Token)match(input,80,FOLLOW_80_in_parse_org_kermeta_language_behavior_VariableDecl12348); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 418));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 418));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 418));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 418));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 418));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 418));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 418));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 418));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 418));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 418));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 418));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 418));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 418));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 418));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 418));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 418));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 418));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 418));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 418));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14933:4: (a5_0= parse_org_kermeta_language_behavior_Expression )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14934:5: a5_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_VariableDecl12374);
                    a5_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
                      					}
                      					if (a5_0 != null) {
                      						if (a5_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__INITIALIZATION), a5_0);
                      							completedElement(a5_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a5_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 419));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 420));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 420));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 38, parse_org_kermeta_language_behavior_VariableDecl_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_VariableDecl"


    // $ANTLR start "parse_org_kermeta_language_behavior_TypeLiteral"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15042:1: parse_org_kermeta_language_behavior_TypeLiteral returns [org.kermeta.language.behavior.TypeLiteral element = null] : (a0_0= parse_org_kermeta_language_behavior_TypeReference ) ;
    public final org.kermeta.language.behavior.TypeLiteral parse_org_kermeta_language_behavior_TypeLiteral() throws RecognitionException {
        org.kermeta.language.behavior.TypeLiteral element =  null;
        int parse_org_kermeta_language_behavior_TypeLiteral_StartIndex = input.index();
        org.kermeta.language.behavior.TypeReference a0_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15045:1: ( (a0_0= parse_org_kermeta_language_behavior_TypeReference ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15046:2: (a0_0= parse_org_kermeta_language_behavior_TypeReference )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15046:2: (a0_0= parse_org_kermeta_language_behavior_TypeReference )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15047:3: a0_0= parse_org_kermeta_language_behavior_TypeReference
            {
            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_TypeLiteral12434);
            a0_0=parse_org_kermeta_language_behavior_TypeReference();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createTypeLiteral();
              			}
              			if (a0_0 != null) {
              				if (a0_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_LITERAL__TYPEREF), a0_0);
              					completedElement(a0_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a0_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 421));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 39, parse_org_kermeta_language_behavior_TypeLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_TypeLiteral"


    // $ANTLR start "parse_org_kermeta_language_behavior_CallResult"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15106:1: parse_org_kermeta_language_behavior_CallResult returns [org.kermeta.language.behavior.CallResult element = null] : a0= 'result' ;
    public final org.kermeta.language.behavior.CallResult parse_org_kermeta_language_behavior_CallResult() throws RecognitionException {
        org.kermeta.language.behavior.CallResult element =  null;
        int parse_org_kermeta_language_behavior_CallResult_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15109:1: (a0= 'result' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15110:2: a0= 'result'
            {
            a0=(Token)match(input,81,FOLLOW_81_in_parse_org_kermeta_language_behavior_CallResult12467); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallResult();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 422));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 40, parse_org_kermeta_language_behavior_CallResult_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_CallResult"


    // $ANTLR start "parse_org_kermeta_language_behavior_CallSuperOperation"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15165:1: parse_org_kermeta_language_behavior_CallSuperOperation returns [org.kermeta.language.behavior.CallSuperOperation element = null] : a0= 'super' a1= '(' ( ( (a2_0= parse_org_kermeta_language_behavior_Expression ) ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a5= ')' ;
    public final org.kermeta.language.behavior.CallSuperOperation parse_org_kermeta_language_behavior_CallSuperOperation() throws RecognitionException {
        org.kermeta.language.behavior.CallSuperOperation element =  null;
        int parse_org_kermeta_language_behavior_CallSuperOperation_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a5=null;
        org.kermeta.language.behavior.Expression a2_0 = null;

        org.kermeta.language.behavior.Expression a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15168:1: (a0= 'super' a1= '(' ( ( (a2_0= parse_org_kermeta_language_behavior_Expression ) ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a5= ')' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15169:2: a0= 'super' a1= '(' ( ( (a2_0= parse_org_kermeta_language_behavior_Expression ) ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a5= ')'
            {
            a0=(Token)match(input,82,FOLLOW_82_in_parse_org_kermeta_language_behavior_CallSuperOperation12496); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 423));
              	
            }
            a1=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_behavior_CallSuperOperation12510); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 424));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 424));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 424));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 424));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 424));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 424));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 424));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 424));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 424));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 424));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 424));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 424));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 424));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 424));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 424));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 424));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 424));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 424));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 424));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 424));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15212:2: ( ( (a2_0= parse_org_kermeta_language_behavior_Expression ) ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==IDENTIFIER||(LA80_0>=INTEGER && LA80_0<=BOOLEAN)||LA80_0==32||LA80_0==37||LA80_0==55||LA80_0==69||(LA80_0>=72 && LA80_0<=73)||LA80_0==76||LA80_0==79||(LA80_0>=81 && LA80_0<=82)||LA80_0==85||(LA80_0>=92 && LA80_0<=93)||LA80_0==95) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15213:3: ( (a2_0= parse_org_kermeta_language_behavior_Expression ) ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15213:3: ( (a2_0= parse_org_kermeta_language_behavior_Expression ) ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15214:4: (a2_0= parse_org_kermeta_language_behavior_Expression ) ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15214:4: (a2_0= parse_org_kermeta_language_behavior_Expression )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15215:5: a2_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallSuperOperation12539);
                    a2_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
                      					}
                      					if (a2_0 != null) {
                      						if (a2_0 != null) {
                      							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_SUPER_OPERATION__PARAMETERS, a2_0);
                      							completedElement(a2_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a2_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 425));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 425));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15237:4: ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    loop79:
                    do {
                        int alt79=2;
                        int LA79_0 = input.LA(1);

                        if ( (LA79_0==24) ) {
                            alt79=1;
                        }


                        switch (alt79) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15238:5: (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15238:5: (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15239:6: a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression )
                    	    {
                    	    a3=(Token)match(input,24,FOLLOW_24_in_parse_org_kermeta_language_behavior_CallSuperOperation12580); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      						if (element == null) {
                    	      							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
                    	      						}
                    	      						collectHiddenTokens(element);
                    	      						copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                    	      					
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 426));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 426));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 426));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 426));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 426));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 426));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 426));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 426));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 426));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 426));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 426));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 426));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 426));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 426));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 426));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 426));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 426));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 426));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 426));
                    	      					
                    	    }
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15269:6: (a4_0= parse_org_kermeta_language_behavior_Expression )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15270:7: a4_0= parse_org_kermeta_language_behavior_Expression
                    	    {
                    	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallSuperOperation12614);
                    	    a4_0=parse_org_kermeta_language_behavior_Expression();

                    	    state._fsp--;
                    	    if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      							if (terminateParsing) {
                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      							}
                    	      							if (element == null) {
                    	      								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
                    	      							}
                    	      							if (a4_0 != null) {
                    	      								if (a4_0 != null) {
                    	      									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_SUPER_OPERATION__PARAMETERS, a4_0);
                    	      									completedElement(a4_0);
                    	      								}
                    	      								collectHiddenTokens(element);
                    	      								copyLocalizationInfos(a4_0, element); 							}
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 427));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 427));
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop79;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 428));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 429));
              	
            }
            a5=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_CallSuperOperation12688); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 430));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 41, parse_org_kermeta_language_behavior_CallSuperOperation_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_CallSuperOperation"


    // $ANTLR start "parse_org_kermeta_language_behavior_Assignment"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15360:1: parse_org_kermeta_language_behavior_Assignment returns [org.kermeta.language.behavior.Assignment element = null] : ( ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) ) (a3= ':=' | (a4= CASTED ) a5= '=' ) ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) ) ) ;
    public final org.kermeta.language.behavior.Assignment parse_org_kermeta_language_behavior_Assignment() throws RecognitionException {
        org.kermeta.language.behavior.Assignment element =  null;
        int parse_org_kermeta_language_behavior_Assignment_StartIndex = input.index();
        Token a3=null;
        Token a4=null;
        Token a5=null;
        org.kermeta.language.behavior.CallFeature a0_0 = null;

        org.kermeta.language.behavior.CallVariable a1_0 = null;

        org.kermeta.language.behavior.CallResult a2_0 = null;

        org.kermeta.language.behavior.CallFeature a6_0 = null;

        org.kermeta.language.behavior.SelfExpression a7_0 = null;

        org.kermeta.language.behavior.CallSuperOperation a8_0 = null;

        org.kermeta.language.behavior.CallResult a9_0 = null;

        org.kermeta.language.behavior.CallValue a10_0 = null;

        org.kermeta.language.behavior.CallVariable a11_0 = null;

        org.kermeta.language.behavior.VoidLiteral a12_0 = null;

        org.kermeta.language.behavior.IntegerLiteral a13_0 = null;

        org.kermeta.language.behavior.BooleanLiteral a14_0 = null;

        org.kermeta.language.behavior.StringLiteral a15_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15363:1: ( ( ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) ) (a3= ':=' | (a4= CASTED ) a5= '=' ) ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) ) ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15364:2: ( ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) ) (a3= ':=' | (a4= CASTED ) a5= '=' ) ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) ) )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15364:2: ( ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) ) (a3= ':=' | (a4= CASTED ) a5= '=' ) ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15365:3: ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) ) (a3= ':=' | (a4= CASTED ) a5= '=' ) ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15365:3: ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) )
            int alt81=3;
            switch ( input.LA(1) ) {
            case INTEGER:
            case BOOLEAN:
            case 32:
            case 85:
            case 92:
                {
                alt81=1;
                }
                break;
            case IDENTIFIER:
                {
                int LA81_2 = input.LA(2);

                if ( (synpred201_Kermeta()) ) {
                    alt81=1;
                }
                else if ( (synpred202_Kermeta()) ) {
                    alt81=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 81, 2, input);

                    throw nvae;
                }
                }
                break;
            case 81:
                {
                int LA81_3 = input.LA(2);

                if ( (synpred201_Kermeta()) ) {
                    alt81=1;
                }
                else if ( (synpred202_Kermeta()) ) {
                    alt81=2;
                }
                else if ( (true) ) {
                    alt81=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 81, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 81, 0, input);

                throw nvae;
            }

            switch (alt81) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15366:4: (a0_0= parse_org_kermeta_language_behavior_CallFeature )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15366:4: (a0_0= parse_org_kermeta_language_behavior_CallFeature )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15367:5: a0_0= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Assignment12732);
                    a0_0=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a0_0 != null) {
                      						if (a0_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__TARGET), a0_0);
                      							completedElement(a0_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a0_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 431));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 431));
                      			
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15390:8: (a1_0= parse_org_kermeta_language_behavior_CallVariable )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15390:8: (a1_0= parse_org_kermeta_language_behavior_CallVariable )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15391:5: a1_0= parse_org_kermeta_language_behavior_CallVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Assignment12774);
                    a1_0=parse_org_kermeta_language_behavior_CallVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a1_0 != null) {
                      						if (a1_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__TARGET), a1_0);
                      							completedElement(a1_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a1_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 432));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 432));
                      			
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15414:8: (a2_0= parse_org_kermeta_language_behavior_CallResult )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15414:8: (a2_0= parse_org_kermeta_language_behavior_CallResult )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15415:5: a2_0= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Assignment12816);
                    a2_0=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a2_0 != null) {
                      						if (a2_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__TARGET), a2_0);
                      							completedElement(a2_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a2_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 433));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 433));
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 434));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 434));
              		
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15444:3: (a3= ':=' | (a4= CASTED ) a5= '=' )
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==83) ) {
                alt82=1;
            }
            else if ( (LA82_0==CASTED) ) {
                alt82=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 82, 0, input);

                throw nvae;
            }
            switch (alt82) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15445:4: a3= ':='
                    {
                    a3=(Token)match(input,83,FOLLOW_83_in_parse_org_kermeta_language_behavior_Assignment12859); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 435));
                      			
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15468:8: (a4= CASTED ) a5= '='
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15468:8: (a4= CASTED )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15469:5: a4= CASTED
                    {
                    a4=(Token)match(input,CASTED,FOLLOW_CASTED_in_parse_org_kermeta_language_behavior_Assignment12893); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a4 != null) {
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("CASTED");
                      						tokenResolver.setOptions(getOptions());
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__IS_CAST), result);
                      						java.lang.Object resolvedObject = result.getResolvedToken();
                      						if (resolvedObject == null) {
                      							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
                      						}
                      						java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
                      						if (resolved != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__IS_CAST), resolved);
                      							completedElement(resolved);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
                      					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_324, 436));
                      			
                    }
                    a5=(Token)match(input,84,FOLLOW_84_in_parse_org_kermeta_language_behavior_Assignment12926); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 437));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 437));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 437));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 437));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 437));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 437));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 437));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 437));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 437));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 437));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 437));
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 438));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 438));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 438));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 438));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 438));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 438));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 438));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 438));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 438));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 438));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 438));
              		
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15539:3: ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) )
            int alt83=10;
            alt83 = dfa83.predict(input);
            switch (alt83) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15540:4: (a6_0= parse_org_kermeta_language_behavior_CallFeature )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15540:4: (a6_0= parse_org_kermeta_language_behavior_CallFeature )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15541:5: a6_0= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Assignment12967);
                    a6_0=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a6_0 != null) {
                      						if (a6_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a6_0);
                      							completedElement(a6_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a6_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 439));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 439));
                      			
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15602:8: (a7_0= parse_org_kermeta_language_behavior_SelfExpression )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15602:8: (a7_0= parse_org_kermeta_language_behavior_SelfExpression )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15603:5: a7_0= parse_org_kermeta_language_behavior_SelfExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_Assignment13009);
                    a7_0=parse_org_kermeta_language_behavior_SelfExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a7_0 != null) {
                      						if (a7_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a7_0);
                      							completedElement(a7_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a7_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 440));
                      			
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15664:8: (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15664:8: (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15665:5: a8_0= parse_org_kermeta_language_behavior_CallSuperOperation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Assignment13051);
                    a8_0=parse_org_kermeta_language_behavior_CallSuperOperation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a8_0 != null) {
                      						if (a8_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a8_0);
                      							completedElement(a8_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a8_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 441));
                      			
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15726:8: (a9_0= parse_org_kermeta_language_behavior_CallResult )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15726:8: (a9_0= parse_org_kermeta_language_behavior_CallResult )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15727:5: a9_0= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Assignment13093);
                    a9_0=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a9_0 != null) {
                      						if (a9_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a9_0);
                      							completedElement(a9_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a9_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 442));
                      			
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15788:8: (a10_0= parse_org_kermeta_language_behavior_CallValue )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15788:8: (a10_0= parse_org_kermeta_language_behavior_CallValue )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15789:5: a10_0= parse_org_kermeta_language_behavior_CallValue
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Assignment13135);
                    a10_0=parse_org_kermeta_language_behavior_CallValue();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a10_0 != null) {
                      						if (a10_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a10_0);
                      							completedElement(a10_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a10_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 443));
                      			
                    }

                    }
                    break;
                case 6 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15850:8: (a11_0= parse_org_kermeta_language_behavior_CallVariable )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15850:8: (a11_0= parse_org_kermeta_language_behavior_CallVariable )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15851:5: a11_0= parse_org_kermeta_language_behavior_CallVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Assignment13177);
                    a11_0=parse_org_kermeta_language_behavior_CallVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a11_0 != null) {
                      						if (a11_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a11_0);
                      							completedElement(a11_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a11_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 444));
                      			
                    }

                    }
                    break;
                case 7 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15912:8: (a12_0= parse_org_kermeta_language_behavior_VoidLiteral )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15912:8: (a12_0= parse_org_kermeta_language_behavior_VoidLiteral )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15913:5: a12_0= parse_org_kermeta_language_behavior_VoidLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_behavior_Assignment13219);
                    a12_0=parse_org_kermeta_language_behavior_VoidLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a12_0 != null) {
                      						if (a12_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a12_0);
                      							completedElement(a12_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a12_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 445));
                      			
                    }

                    }
                    break;
                case 8 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15974:8: (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15974:8: (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15975:5: a13_0= parse_org_kermeta_language_behavior_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_Assignment13261);
                    a13_0=parse_org_kermeta_language_behavior_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a13_0 != null) {
                      						if (a13_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a13_0);
                      							completedElement(a13_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a13_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 446));
                      			
                    }

                    }
                    break;
                case 9 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16036:8: (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16036:8: (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16037:5: a14_0= parse_org_kermeta_language_behavior_BooleanLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Assignment13303);
                    a14_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a14_0 != null) {
                      						if (a14_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a14_0);
                      							completedElement(a14_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a14_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 447));
                      			
                    }

                    }
                    break;
                case 10 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16098:8: (a15_0= parse_org_kermeta_language_behavior_StringLiteral )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16098:8: (a15_0= parse_org_kermeta_language_behavior_StringLiteral )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16099:5: a15_0= parse_org_kermeta_language_behavior_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_Assignment13345);
                    a15_0=parse_org_kermeta_language_behavior_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a15_0 != null) {
                      						if (a15_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a15_0);
                      							completedElement(a15_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a15_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 448));
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 449));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 449));
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 450));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 450));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 42, parse_org_kermeta_language_behavior_Assignment_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Assignment"


    // $ANTLR start "parse_org_kermeta_language_behavior_CallVariable"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16251:1: parse_org_kermeta_language_behavior_CallVariable returns [org.kermeta.language.behavior.CallVariable element = null] : ( (a0= IDENTIFIER ) | c0= parse_org_kermeta_language_behavior_CallResult );
    public final org.kermeta.language.behavior.CallVariable parse_org_kermeta_language_behavior_CallVariable() throws RecognitionException {
        org.kermeta.language.behavior.CallVariable element =  null;
        int parse_org_kermeta_language_behavior_CallVariable_StartIndex = input.index();
        Token a0=null;
        org.kermeta.language.behavior.CallResult c0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16254:1: ( (a0= IDENTIFIER ) | c0= parse_org_kermeta_language_behavior_CallResult )
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==IDENTIFIER) ) {
                alt84=1;
            }
            else if ( (LA84_0==81) ) {
                alt84=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 84, 0, input);

                throw nvae;
            }
            switch (alt84) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16255:2: (a0= IDENTIFIER )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16255:2: (a0= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16256:3: a0= IDENTIFIER
                    {
                    a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallVariable13409); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (terminateParsing) {
                      				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      			}
                      			if (element == null) {
                      				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallVariable();
                      			}
                      			if (a0 != null) {
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      				tokenResolver.setOptions(getOptions());
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VARIABLE__NAME), result);
                      				java.lang.Object resolvedObject = result.getResolvedToken();
                      				if (resolvedObject == null) {
                      					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
                      				}
                      				java.lang.String resolved = (java.lang.String)resolvedObject;
                      				if (resolved != null) {
                      					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VARIABLE__NAME), resolved);
                      					completedElement(resolved);
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
                      			}
                      		
                    }

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 451));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 451));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16331:2: c0= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_CallVariable13435);
                    c0=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 43, parse_org_kermeta_language_behavior_CallVariable_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_CallVariable"


    // $ANTLR start "parse_org_kermeta_language_behavior_SelfExpression"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16335:1: parse_org_kermeta_language_behavior_SelfExpression returns [org.kermeta.language.behavior.SelfExpression element = null] : a0= 'self' ;
    public final org.kermeta.language.behavior.SelfExpression parse_org_kermeta_language_behavior_SelfExpression() throws RecognitionException {
        org.kermeta.language.behavior.SelfExpression element =  null;
        int parse_org_kermeta_language_behavior_SelfExpression_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16338:1: (a0= 'self' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16339:2: a0= 'self'
            {
            a0=(Token)match(input,85,FOLLOW_85_in_parse_org_kermeta_language_behavior_SelfExpression13460); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createSelfExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 452));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 452));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 44, parse_org_kermeta_language_behavior_SelfExpression_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_SelfExpression"


    // $ANTLR start "parse_org_kermeta_language_behavior_CallFeature"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16389:1: parse_org_kermeta_language_behavior_CallFeature returns [org.kermeta.language.behavior.CallFeature element = null] : (a0= '(' ( (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a2_0= parse_org_kermeta_language_behavior_CallVariable ) | (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a4_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a5_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a7= '.' (a8= IDENTIFIER ) | a9= '.' (a10= IDENTIFIER ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= IDENTIFIER ) | a18= '.' (a19= IDENTIFIER ) ) )* (a20= '==' (a21_0= parse_org_kermeta_language_behavior_Expression ) a22= ')' | ( ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) ) )* a28= ')' ( ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) | ( (a34_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a35_0= parse_org_kermeta_language_behavior_CallVariable ) | (a36_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a37_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a38_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a39_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a40= '.' (a41= IDENTIFIER ) | a42= '.' (a43= IDENTIFIER ) a44= '(' ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a48= ')' | a49= '.' (a50= IDENTIFIER ) | a51= '.' (a52= IDENTIFIER ) ) )* (a53= '==' (a54_0= parse_org_kermeta_language_behavior_Expression ) | ( ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) );
    public final org.kermeta.language.behavior.CallFeature parse_org_kermeta_language_behavior_CallFeature() throws RecognitionException {
        org.kermeta.language.behavior.CallFeature element =  null;
        int parse_org_kermeta_language_behavior_CallFeature_StartIndex = input.index();
        Token a0=null;
        Token a7=null;
        Token a8=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        Token a13=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        Token a22=null;
        Token a23=null;
        Token a24=null;
        Token a25=null;
        Token a26=null;
        Token a28=null;
        Token a29=null;
        Token a30=null;
        Token a31=null;
        Token a32=null;
        Token a40=null;
        Token a41=null;
        Token a42=null;
        Token a43=null;
        Token a44=null;
        Token a46=null;
        Token a48=null;
        Token a49=null;
        Token a50=null;
        Token a51=null;
        Token a52=null;
        Token a53=null;
        Token a55=null;
        Token a56=null;
        Token a57=null;
        Token a58=null;
        org.kermeta.language.behavior.BooleanLiteral a1_0 = null;

        org.kermeta.language.behavior.CallVariable a2_0 = null;

        org.kermeta.language.behavior.JavaStaticCall a3_0 = null;

        org.kermeta.language.behavior.SelfExpression a4_0 = null;

        org.kermeta.language.behavior.StringLiteral a5_0 = null;

        org.kermeta.language.behavior.IntegerLiteral a6_0 = null;

        org.kermeta.language.behavior.Expression a12_0 = null;

        org.kermeta.language.behavior.Expression a14_0 = null;

        org.kermeta.language.behavior.Expression a21_0 = null;

        org.kermeta.language.behavior.Expression a27_0 = null;

        org.kermeta.language.behavior.Expression a33_0 = null;

        org.kermeta.language.behavior.BooleanLiteral a34_0 = null;

        org.kermeta.language.behavior.CallVariable a35_0 = null;

        org.kermeta.language.behavior.JavaStaticCall a36_0 = null;

        org.kermeta.language.behavior.SelfExpression a37_0 = null;

        org.kermeta.language.behavior.StringLiteral a38_0 = null;

        org.kermeta.language.behavior.IntegerLiteral a39_0 = null;

        org.kermeta.language.behavior.Expression a45_0 = null;

        org.kermeta.language.behavior.Expression a47_0 = null;

        org.kermeta.language.behavior.Expression a54_0 = null;

        org.kermeta.language.behavior.Expression a59_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16392:1: (a0= '(' ( (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a2_0= parse_org_kermeta_language_behavior_CallVariable ) | (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a4_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a5_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a7= '.' (a8= IDENTIFIER ) | a9= '.' (a10= IDENTIFIER ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= IDENTIFIER ) | a18= '.' (a19= IDENTIFIER ) ) )* (a20= '==' (a21_0= parse_org_kermeta_language_behavior_Expression ) a22= ')' | ( ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) ) )* a28= ')' ( ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) | ( (a34_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a35_0= parse_org_kermeta_language_behavior_CallVariable ) | (a36_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a37_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a38_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a39_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a40= '.' (a41= IDENTIFIER ) | a42= '.' (a43= IDENTIFIER ) a44= '(' ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a48= ')' | a49= '.' (a50= IDENTIFIER ) | a51= '.' (a52= IDENTIFIER ) ) )* (a53= '==' (a54_0= parse_org_kermeta_language_behavior_Expression ) | ( ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==32) ) {
                alt103=1;
            }
            else if ( (LA103_0==IDENTIFIER||(LA103_0>=INTEGER && LA103_0<=BOOLEAN)||LA103_0==81||LA103_0==85||LA103_0==92) ) {
                alt103=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 103, 0, input);

                throw nvae;
            }
            switch (alt103) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16393:2: a0= '(' ( (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a2_0= parse_org_kermeta_language_behavior_CallVariable ) | (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a4_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a5_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a7= '.' (a8= IDENTIFIER ) | a9= '.' (a10= IDENTIFIER ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= IDENTIFIER ) | a18= '.' (a19= IDENTIFIER ) ) )* (a20= '==' (a21_0= parse_org_kermeta_language_behavior_Expression ) a22= ')' | ( ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) ) )* a28= ')' ( ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    {
                    a0=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature13489); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 453));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 453));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 453));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 453));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 453));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 453));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 453));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16411:2: ( (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a2_0= parse_org_kermeta_language_behavior_CallVariable ) | (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a4_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a5_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral ) )
                    int alt85=6;
                    switch ( input.LA(1) ) {
                    case BOOLEAN:
                        {
                        alt85=1;
                        }
                        break;
                    case IDENTIFIER:
                        {
                        int LA85_2 = input.LA(2);

                        if ( (synpred215_Kermeta()) ) {
                            alt85=2;
                        }
                        else if ( (synpred218_Kermeta()) ) {
                            alt85=5;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 85, 2, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 81:
                        {
                        alt85=2;
                        }
                        break;
                    case 92:
                        {
                        alt85=3;
                        }
                        break;
                    case 85:
                        {
                        alt85=4;
                        }
                        break;
                    case INTEGER:
                        {
                        alt85=6;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 85, 0, input);

                        throw nvae;
                    }

                    switch (alt85) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16412:3: (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16412:3: (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16413:4: a1_0= parse_org_kermeta_language_behavior_BooleanLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_CallFeature13512);
                            a1_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a1_0 != null) {
                              					if (a1_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a1_0);
                              						completedElement(a1_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a1_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_325, 454));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 454));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 454));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 454));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 454));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 454));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 454));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 454));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 454));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 454));
                              		
                            }

                            }
                            break;
                        case 2 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16444:6: (a2_0= parse_org_kermeta_language_behavior_CallVariable )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16444:6: (a2_0= parse_org_kermeta_language_behavior_CallVariable )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16445:4: a2_0= parse_org_kermeta_language_behavior_CallVariable
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_CallFeature13546);
                            a2_0=parse_org_kermeta_language_behavior_CallVariable();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a2_0 != null) {
                              					if (a2_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a2_0);
                              						completedElement(a2_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a2_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_325, 455));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 455));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 455));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 455));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 455));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 455));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 455));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 455));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 455));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 455));
                              		
                            }

                            }
                            break;
                        case 3 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16476:6: (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16476:6: (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16477:4: a3_0= parse_org_kermeta_language_behavior_JavaStaticCall
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_CallFeature13580);
                            a3_0=parse_org_kermeta_language_behavior_JavaStaticCall();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a3_0 != null) {
                              					if (a3_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a3_0);
                              						completedElement(a3_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a3_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_325, 456));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 456));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 456));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 456));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 456));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 456));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 456));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 456));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 456));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 456));
                              		
                            }

                            }
                            break;
                        case 4 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16508:6: (a4_0= parse_org_kermeta_language_behavior_SelfExpression )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16508:6: (a4_0= parse_org_kermeta_language_behavior_SelfExpression )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16509:4: a4_0= parse_org_kermeta_language_behavior_SelfExpression
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_CallFeature13614);
                            a4_0=parse_org_kermeta_language_behavior_SelfExpression();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a4_0 != null) {
                              					if (a4_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a4_0);
                              						completedElement(a4_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a4_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_325, 457));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 457));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 457));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 457));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 457));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 457));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 457));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 457));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 457));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 457));
                              		
                            }

                            }
                            break;
                        case 5 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16540:6: (a5_0= parse_org_kermeta_language_behavior_StringLiteral )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16540:6: (a5_0= parse_org_kermeta_language_behavior_StringLiteral )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16541:4: a5_0= parse_org_kermeta_language_behavior_StringLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_CallFeature13648);
                            a5_0=parse_org_kermeta_language_behavior_StringLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a5_0 != null) {
                              					if (a5_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a5_0);
                              						completedElement(a5_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a5_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_325, 458));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 458));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 458));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 458));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 458));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 458));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 458));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 458));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 458));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 458));
                              		
                            }

                            }
                            break;
                        case 6 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16572:6: (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16572:6: (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16573:4: a6_0= parse_org_kermeta_language_behavior_IntegerLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_CallFeature13682);
                            a6_0=parse_org_kermeta_language_behavior_IntegerLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a6_0 != null) {
                              					if (a6_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a6_0);
                              						completedElement(a6_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a6_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_325, 459));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 459));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 459));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 459));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 459));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 459));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 459));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 459));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 459));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 459));
                              		
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_325, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 460));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16618:2: ( (a7= '.' (a8= IDENTIFIER ) | a9= '.' (a10= IDENTIFIER ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= IDENTIFIER ) | a18= '.' (a19= IDENTIFIER ) ) )*
                    loop89:
                    do {
                        int alt89=2;
                        int LA89_0 = input.LA(1);

                        if ( (LA89_0==86) ) {
                            alt89=1;
                        }


                        switch (alt89) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16619:3: (a7= '.' (a8= IDENTIFIER ) | a9= '.' (a10= IDENTIFIER ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= IDENTIFIER ) | a18= '.' (a19= IDENTIFIER ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16619:3: (a7= '.' (a8= IDENTIFIER ) | a9= '.' (a10= IDENTIFIER ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= IDENTIFIER ) | a18= '.' (a19= IDENTIFIER ) )
                    	    int alt88=4;
                    	    int LA88_0 = input.LA(1);

                    	    if ( (LA88_0==86) ) {
                    	        int LA88_1 = input.LA(2);

                    	        if ( (LA88_1==IDENTIFIER) ) {
                    	            int LA88_2 = input.LA(3);

                    	            if ( (LA88_2==32) ) {
                    	                alt88=2;
                    	            }
                    	            else if ( (synpred219_Kermeta()) ) {
                    	                alt88=1;
                    	            }
                    	            else if ( (synpred223_Kermeta()) ) {
                    	                alt88=3;
                    	            }
                    	            else if ( (true) ) {
                    	                alt88=4;
                    	            }
                    	            else {
                    	                if (state.backtracking>0) {state.failed=true; return element;}
                    	                NoViableAltException nvae =
                    	                    new NoViableAltException("", 88, 2, input);

                    	                throw nvae;
                    	            }
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 88, 1, input);

                    	            throw nvae;
                    	        }
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 88, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt88) {
                    	        case 1 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16620:4: a7= '.' (a8= IDENTIFIER )
                    	            {
                    	            a7=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature13721); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 461));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16632:4: (a8= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16633:5: a8= IDENTIFIER
                    	            {
                    	            a8=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature13747); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a8 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a8.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a8).getLine(), ((org.antlr.runtime.CommonToken) a8).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a8).getStartIndex(), ((org.antlr.runtime.CommonToken) a8).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Property proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Property>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticPropertyReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a8, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a8, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_325, 462));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 462));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 462));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 462));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 462));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 462));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 462));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 462));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 462));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 462));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16679:8: a9= '.' (a10= IDENTIFIER ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')'
                    	            {
                    	            a9=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature13788); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 463));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16691:4: (a10= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16692:5: a10= IDENTIFIER
                    	            {
                    	            a10=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature13814); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a10 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a10.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a10).getLine(), ((org.antlr.runtime.CommonToken) a10).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a10).getStartIndex(), ((org.antlr.runtime.CommonToken) a10).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 464));
                    	              			
                    	            }
                    	            a11=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature13847); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 465));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 465));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 465));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 465));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 465));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 465));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 465));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 465));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 465));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 465));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 465));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 465));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 465));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 465));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 465));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 465));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 465));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 465));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 465));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 465));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16759:4: ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )?
                    	            int alt87=2;
                    	            int LA87_0 = input.LA(1);

                    	            if ( (LA87_0==IDENTIFIER||(LA87_0>=INTEGER && LA87_0<=BOOLEAN)||LA87_0==32||LA87_0==37||LA87_0==55||LA87_0==69||(LA87_0>=72 && LA87_0<=73)||LA87_0==76||LA87_0==79||(LA87_0>=81 && LA87_0<=82)||LA87_0==85||(LA87_0>=92 && LA87_0<=93)||LA87_0==95) ) {
                    	                alt87=1;
                    	            }
                    	            switch (alt87) {
                    	                case 1 :
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16760:5: ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    	                    {
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16760:5: ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16761:6: (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    	                    {
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16761:6: (a12_0= parse_org_kermeta_language_behavior_Expression )
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16762:7: a12_0= parse_org_kermeta_language_behavior_Expression
                    	                    {
                    	                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature13888);
                    	                    a12_0=parse_org_kermeta_language_behavior_Expression();

                    	                    state._fsp--;
                    	                    if (state.failed) return element;
                    	                    if ( state.backtracking==0 ) {

                    	                      							if (terminateParsing) {
                    	                      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	                      							}
                    	                      							if (element == null) {
                    	                      								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                      							}
                    	                      							if (a12_0 != null) {
                    	                      								if (a12_0 != null) {
                    	                      									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a12_0);
                    	                      									completedElement(a12_0);
                    	                      								}
                    	                      								collectHiddenTokens(element);
                    	                      								copyLocalizationInfos(a12_0, element); 							}
                    	                      						
                    	                    }

                    	                    }

                    	                    if ( state.backtracking==0 ) {

                    	                      						// expected elements (follow set)
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 466));
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 466));
                    	                      					
                    	                    }
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16784:6: ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    	                    loop86:
                    	                    do {
                    	                        int alt86=2;
                    	                        int LA86_0 = input.LA(1);

                    	                        if ( (LA86_0==24) ) {
                    	                            alt86=1;
                    	                        }


                    	                        switch (alt86) {
                    	                    	case 1 :
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16785:7: (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) )
                    	                    	    {
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16785:7: (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) )
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16786:8: a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression )
                    	                    	    {
                    	                    	    a13=(Token)match(input,24,FOLLOW_24_in_parse_org_kermeta_language_behavior_CallFeature13943); if (state.failed) return element;
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								if (element == null) {
                    	                    	      									element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                    	      								}
                    	                    	      								collectHiddenTokens(element);
                    	                    	      								copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
                    	                    	      							
                    	                    	    }
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								// expected elements (follow set)
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 467));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 467));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 467));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 467));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 467));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 467));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 467));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 467));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 467));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 467));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 467));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 467));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 467));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 467));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 467));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 467));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 467));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 467));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 467));
                    	                    	      							
                    	                    	    }
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16816:8: (a14_0= parse_org_kermeta_language_behavior_Expression )
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16817:9: a14_0= parse_org_kermeta_language_behavior_Expression
                    	                    	    {
                    	                    	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature13985);
                    	                    	    a14_0=parse_org_kermeta_language_behavior_Expression();

                    	                    	    state._fsp--;
                    	                    	    if (state.failed) return element;
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      									if (terminateParsing) {
                    	                    	      										throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	                    	      									}
                    	                    	      									if (element == null) {
                    	                    	      										element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                    	      									}
                    	                    	      									if (a14_0 != null) {
                    	                    	      										if (a14_0 != null) {
                    	                    	      											addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a14_0);
                    	                    	      											completedElement(a14_0);
                    	                    	      										}
                    	                    	      										collectHiddenTokens(element);
                    	                    	      										copyLocalizationInfos(a14_0, element); 									}
                    	                    	      								
                    	                    	    }

                    	                    	    }

                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								// expected elements (follow set)
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 468));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 468));
                    	                    	      							
                    	                    	    }

                    	                    	    }


                    	                    	    }
                    	                    	    break;

                    	                    	default :
                    	                    	    break loop86;
                    	                        }
                    	                    } while (true);

                    	                    if ( state.backtracking==0 ) {

                    	                      						// expected elements (follow set)
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 469));
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 469));
                    	                      					
                    	                    }

                    	                    }


                    	                    }
                    	                    break;

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 470));
                    	              			
                    	            }
                    	            a15=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature14089); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_325, 471));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 471));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 471));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 471));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 471));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 471));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 471));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 471));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 471));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 471));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16876:8: a16= '.' (a17= IDENTIFIER )
                    	            {
                    	            a16=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature14117); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a16, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 472));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16888:4: (a17= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16889:5: a17= IDENTIFIER
                    	            {
                    	            a17=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature14143); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a17 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a17.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a17).getLine(), ((org.antlr.runtime.CommonToken) a17).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a17).getStartIndex(), ((org.antlr.runtime.CommonToken) a17).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.EnumerationLiteral proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumerationLiteral();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.EnumerationLiteral>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticEnumLiteralReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a17, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a17, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_325, 473));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 473));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 473));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 473));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 473));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 473));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 473));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 473));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 473));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 473));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16935:8: a18= '.' (a19= IDENTIFIER )
                    	            {
                    	            a18=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature14184); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 474));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16947:4: (a19= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16948:5: a19= IDENTIFIER
                    	            {
                    	            a19=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature14210); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a19 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_325, 475));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 475));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 475));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 475));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 475));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 475));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 475));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 475));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 475));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 475));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop89;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_325, 476));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 476));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 476));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 476));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 476));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 476));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 476));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 476));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 476));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 476));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17009:2: (a20= '==' (a21_0= parse_org_kermeta_language_behavior_Expression ) a22= ')' | ( ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) ) )* a28= ')' ( ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    int alt94=2;
                    int LA94_0 = input.LA(1);

                    if ( (LA94_0==87) ) {
                        alt94=1;
                    }
                    else if ( (LA94_0==33||(LA94_0>=88 && LA94_0<=91)) ) {
                        alt94=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 94, 0, input);

                        throw nvae;
                    }
                    switch (alt94) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17010:3: a20= '==' (a21_0= parse_org_kermeta_language_behavior_Expression ) a22= ')'
                            {
                            a20=(Token)match(input,87,FOLLOW_87_in_parse_org_kermeta_language_behavior_CallFeature14260); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              			if (element == null) {
                              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              			}
                              			collectHiddenTokens(element);
                              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
                              		
                            }
                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 477));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 477));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 477));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 477));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 477));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 477));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 477));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 477));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 477));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 477));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 477));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 477));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 477));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 477));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 477));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 477));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 477));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 477));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 477));
                              		
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17040:3: (a21_0= parse_org_kermeta_language_behavior_Expression )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17041:4: a21_0= parse_org_kermeta_language_behavior_Expression
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14282);
                            a21_0=parse_org_kermeta_language_behavior_Expression();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a21_0 != null) {
                              					if (a21_0 != null) {
                              						addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a21_0);
                              						completedElement(a21_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a21_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_340, 478));
                              		
                            }
                            a22=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature14305); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              			if (element == null) {
                              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              			}
                              			collectHiddenTokens(element);
                              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a22, element);
                              		
                            }
                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 479));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 479));
                              		
                            }

                            }
                            break;
                        case 2 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17116:6: ( ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) ) )* a28= ')' ( ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17116:6: ( ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                            loop91:
                            do {
                                int alt91=2;
                                int LA91_0 = input.LA(1);

                                if ( ((LA91_0>=88 && LA91_0<=91)) ) {
                                    alt91=1;
                                }


                                switch (alt91) {
                            	case 1 :
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17117:4: ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) )
                            	    {
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17117:4: ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) )
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17118:5: (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression )
                            	    {
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17118:5: (a23= '+' | a24= '-' | a25= '/' | a26= '*' )
                            	    int alt90=4;
                            	    switch ( input.LA(1) ) {
                            	    case 88:
                            	        {
                            	        alt90=1;
                            	        }
                            	        break;
                            	    case 89:
                            	        {
                            	        alt90=2;
                            	        }
                            	        break;
                            	    case 90:
                            	        {
                            	        alt90=3;
                            	        }
                            	        break;
                            	    case 91:
                            	        {
                            	        alt90=4;
                            	        }
                            	        break;
                            	    default:
                            	        if (state.backtracking>0) {state.failed=true; return element;}
                            	        NoViableAltException nvae =
                            	            new NoViableAltException("", 90, 0, input);

                            	        throw nvae;
                            	    }

                            	    switch (alt90) {
                            	        case 1 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17119:6: a23= '+'
                            	            {
                            	            a23=(Token)match(input,88,FOLLOW_88_in_parse_org_kermeta_language_behavior_CallFeature14346); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 480));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 480));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 480));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 480));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 480));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 480));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 480));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 480));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 480));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 480));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 480));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 480));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 480));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 480));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 480));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 480));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 480));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 480));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 480));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17150:12: a24= '-'
                            	            {
                            	            a24=(Token)match(input,89,FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature14384); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a24, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 481));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 3 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17181:12: a25= '/'
                            	            {
                            	            a25=(Token)match(input,90,FOLLOW_90_in_parse_org_kermeta_language_behavior_CallFeature14422); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a25, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 482));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 4 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17212:12: a26= '*'
                            	            {
                            	            a26=(Token)match(input,91,FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature14460); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a26, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 483));
                            	              					
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    if ( state.backtracking==0 ) {

                            	      					// expected elements (follow set)
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 484));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 484));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 484));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 484));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 484));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 484));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 484));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 484));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 484));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 484));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 484));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 484));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 484));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 484));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 484));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 484));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 484));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 484));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 484));
                            	      				
                            	    }
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17266:5: (a27_0= parse_org_kermeta_language_behavior_Expression )
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17267:6: a27_0= parse_org_kermeta_language_behavior_Expression
                            	    {
                            	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14509);
                            	    a27_0=parse_org_kermeta_language_behavior_Expression();

                            	    state._fsp--;
                            	    if (state.failed) return element;
                            	    if ( state.backtracking==0 ) {

                            	      						if (terminateParsing) {
                            	      							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                            	      						}
                            	      						if (element == null) {
                            	      							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	      						}
                            	      						if (a27_0 != null) {
                            	      							if (a27_0 != null) {
                            	      								addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a27_0);
                            	      								completedElement(a27_0);
                            	      							}
                            	      							collectHiddenTokens(element);
                            	      							copyLocalizationInfos(a27_0, element); 						}
                            	      					
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {

                            	      					// expected elements (follow set)
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 485));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 485));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 485));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 485));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 485));
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop91;
                                }
                            } while (true);

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 486));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 486));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 486));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 486));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 486));
                              		
                            }
                            a28=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature14560); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              			if (element == null) {
                              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              			}
                              			collectHiddenTokens(element);
                              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a28, element);
                              		
                            }
                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_341, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_342, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_343, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_344, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 487));
                              		
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17360:3: ( ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                            loop93:
                            do {
                                int alt93=2;
                                switch ( input.LA(1) ) {
                                case 88:
                                    {
                                    int LA93_2 = input.LA(2);

                                    if ( (synpred233_Kermeta()) ) {
                                        alt93=1;
                                    }


                                    }
                                    break;
                                case 89:
                                    {
                                    int LA93_3 = input.LA(2);

                                    if ( (synpred233_Kermeta()) ) {
                                        alt93=1;
                                    }


                                    }
                                    break;
                                case 90:
                                    {
                                    int LA93_4 = input.LA(2);

                                    if ( (synpred233_Kermeta()) ) {
                                        alt93=1;
                                    }


                                    }
                                    break;
                                case 91:
                                    {
                                    int LA93_5 = input.LA(2);

                                    if ( (synpred233_Kermeta()) ) {
                                        alt93=1;
                                    }


                                    }
                                    break;

                                }

                                switch (alt93) {
                            	case 1 :
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17361:4: ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) )
                            	    {
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17361:4: ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) )
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17362:5: (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression )
                            	    {
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17362:5: (a29= '+' | a30= '-' | a31= '/' | a32= '*' )
                            	    int alt92=4;
                            	    switch ( input.LA(1) ) {
                            	    case 88:
                            	        {
                            	        alt92=1;
                            	        }
                            	        break;
                            	    case 89:
                            	        {
                            	        alt92=2;
                            	        }
                            	        break;
                            	    case 90:
                            	        {
                            	        alt92=3;
                            	        }
                            	        break;
                            	    case 91:
                            	        {
                            	        alt92=4;
                            	        }
                            	        break;
                            	    default:
                            	        if (state.backtracking>0) {state.failed=true; return element;}
                            	        NoViableAltException nvae =
                            	            new NoViableAltException("", 92, 0, input);

                            	        throw nvae;
                            	    }

                            	    switch (alt92) {
                            	        case 1 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17363:6: a29= '+'
                            	            {
                            	            a29=(Token)match(input,88,FOLLOW_88_in_parse_org_kermeta_language_behavior_CallFeature14595); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a29, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 488));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 488));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 488));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 488));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 488));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 488));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 488));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 488));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 488));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 488));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 488));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 488));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 488));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 488));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 488));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 488));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 488));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 488));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 488));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17394:12: a30= '-'
                            	            {
                            	            a30=(Token)match(input,89,FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature14633); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a30, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 489));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 3 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17425:12: a31= '/'
                            	            {
                            	            a31=(Token)match(input,90,FOLLOW_90_in_parse_org_kermeta_language_behavior_CallFeature14671); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a31, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 490));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 4 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17456:12: a32= '*'
                            	            {
                            	            a32=(Token)match(input,91,FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature14709); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a32, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 491));
                            	              					
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    if ( state.backtracking==0 ) {

                            	      					// expected elements (follow set)
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 492));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 492));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 492));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 492));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 492));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 492));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 492));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 492));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 492));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 492));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 492));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 492));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 492));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 492));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 492));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 492));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 492));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 492));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 492));
                            	      				
                            	    }
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17510:5: (a33_0= parse_org_kermeta_language_behavior_Expression )
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17511:6: a33_0= parse_org_kermeta_language_behavior_Expression
                            	    {
                            	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14758);
                            	    a33_0=parse_org_kermeta_language_behavior_Expression();

                            	    state._fsp--;
                            	    if (state.failed) return element;
                            	    if ( state.backtracking==0 ) {

                            	      						if (terminateParsing) {
                            	      							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                            	      						}
                            	      						if (element == null) {
                            	      							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	      						}
                            	      						if (a33_0 != null) {
                            	      							if (a33_0 != null) {
                            	      								addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a33_0);
                            	      								completedElement(a33_0);
                            	      							}
                            	      							collectHiddenTokens(element);
                            	      							copyLocalizationInfos(a33_0, element); 						}
                            	      					
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {

                            	      					// expected elements (follow set)
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_341, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_342, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_343, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_344, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 493));
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop93;
                                }
                            } while (true);

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_341, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_342, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_343, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_344, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 494));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 494));
                              		
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 495));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17677:4: ( (a34_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a35_0= parse_org_kermeta_language_behavior_CallVariable ) | (a36_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a37_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a38_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a39_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a40= '.' (a41= IDENTIFIER ) | a42= '.' (a43= IDENTIFIER ) a44= '(' ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a48= ')' | a49= '.' (a50= IDENTIFIER ) | a51= '.' (a52= IDENTIFIER ) ) )* (a53= '==' (a54_0= parse_org_kermeta_language_behavior_Expression ) | ( ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17677:4: ( (a34_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a35_0= parse_org_kermeta_language_behavior_CallVariable ) | (a36_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a37_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a38_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a39_0= parse_org_kermeta_language_behavior_IntegerLiteral ) )
                    int alt95=6;
                    switch ( input.LA(1) ) {
                    case BOOLEAN:
                        {
                        alt95=1;
                        }
                        break;
                    case IDENTIFIER:
                        {
                        int LA95_2 = input.LA(2);

                        if ( (synpred236_Kermeta()) ) {
                            alt95=2;
                        }
                        else if ( (synpred239_Kermeta()) ) {
                            alt95=5;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 95, 2, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 81:
                        {
                        alt95=2;
                        }
                        break;
                    case 92:
                        {
                        alt95=3;
                        }
                        break;
                    case 85:
                        {
                        alt95=4;
                        }
                        break;
                    case INTEGER:
                        {
                        alt95=6;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 95, 0, input);

                        throw nvae;
                    }

                    switch (alt95) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17678:3: (a34_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17678:3: (a34_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17679:4: a34_0= parse_org_kermeta_language_behavior_BooleanLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_CallFeature14829);
                            a34_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a34_0 != null) {
                              					if (a34_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a34_0);
                              						completedElement(a34_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a34_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_345, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 496));
                              		
                            }

                            }
                            break;
                        case 2 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17751:6: (a35_0= parse_org_kermeta_language_behavior_CallVariable )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17751:6: (a35_0= parse_org_kermeta_language_behavior_CallVariable )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17752:4: a35_0= parse_org_kermeta_language_behavior_CallVariable
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_CallFeature14863);
                            a35_0=parse_org_kermeta_language_behavior_CallVariable();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a35_0 != null) {
                              					if (a35_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a35_0);
                              						completedElement(a35_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a35_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_345, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 497));
                              		
                            }

                            }
                            break;
                        case 3 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17824:6: (a36_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17824:6: (a36_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17825:4: a36_0= parse_org_kermeta_language_behavior_JavaStaticCall
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_CallFeature14897);
                            a36_0=parse_org_kermeta_language_behavior_JavaStaticCall();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a36_0 != null) {
                              					if (a36_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a36_0);
                              						completedElement(a36_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a36_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_345, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 498));
                              		
                            }

                            }
                            break;
                        case 4 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17897:6: (a37_0= parse_org_kermeta_language_behavior_SelfExpression )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17897:6: (a37_0= parse_org_kermeta_language_behavior_SelfExpression )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17898:4: a37_0= parse_org_kermeta_language_behavior_SelfExpression
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_CallFeature14931);
                            a37_0=parse_org_kermeta_language_behavior_SelfExpression();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a37_0 != null) {
                              					if (a37_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a37_0);
                              						completedElement(a37_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a37_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_345, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 499));
                              		
                            }

                            }
                            break;
                        case 5 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17970:6: (a38_0= parse_org_kermeta_language_behavior_StringLiteral )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17970:6: (a38_0= parse_org_kermeta_language_behavior_StringLiteral )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17971:4: a38_0= parse_org_kermeta_language_behavior_StringLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_CallFeature14965);
                            a38_0=parse_org_kermeta_language_behavior_StringLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a38_0 != null) {
                              					if (a38_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a38_0);
                              						completedElement(a38_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a38_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_345, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 500));
                              		
                            }

                            }
                            break;
                        case 6 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18043:6: (a39_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18043:6: (a39_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18044:4: a39_0= parse_org_kermeta_language_behavior_IntegerLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_CallFeature14999);
                            a39_0=parse_org_kermeta_language_behavior_IntegerLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a39_0 != null) {
                              					if (a39_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a39_0);
                              						completedElement(a39_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a39_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_345, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 501));
                              		
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_345, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 502));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 502));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18171:2: ( (a40= '.' (a41= IDENTIFIER ) | a42= '.' (a43= IDENTIFIER ) a44= '(' ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a48= ')' | a49= '.' (a50= IDENTIFIER ) | a51= '.' (a52= IDENTIFIER ) ) )*
                    loop99:
                    do {
                        int alt99=2;
                        int LA99_0 = input.LA(1);

                        if ( (LA99_0==86) ) {
                            alt99=1;
                        }


                        switch (alt99) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18172:3: (a40= '.' (a41= IDENTIFIER ) | a42= '.' (a43= IDENTIFIER ) a44= '(' ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a48= ')' | a49= '.' (a50= IDENTIFIER ) | a51= '.' (a52= IDENTIFIER ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18172:3: (a40= '.' (a41= IDENTIFIER ) | a42= '.' (a43= IDENTIFIER ) a44= '(' ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a48= ')' | a49= '.' (a50= IDENTIFIER ) | a51= '.' (a52= IDENTIFIER ) )
                    	    int alt98=4;
                    	    int LA98_0 = input.LA(1);

                    	    if ( (LA98_0==86) ) {
                    	        int LA98_1 = input.LA(2);

                    	        if ( (LA98_1==IDENTIFIER) ) {
                    	            int LA98_2 = input.LA(3);

                    	            if ( (LA98_2==32) ) {
                    	                alt98=2;
                    	            }
                    	            else if ( (synpred240_Kermeta()) ) {
                    	                alt98=1;
                    	            }
                    	            else if ( (synpred244_Kermeta()) ) {
                    	                alt98=3;
                    	            }
                    	            else if ( (true) ) {
                    	                alt98=4;
                    	            }
                    	            else {
                    	                if (state.backtracking>0) {state.failed=true; return element;}
                    	                NoViableAltException nvae =
                    	                    new NoViableAltException("", 98, 2, input);

                    	                throw nvae;
                    	            }
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 98, 1, input);

                    	            throw nvae;
                    	        }
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 98, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt98) {
                    	        case 1 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18173:4: a40= '.' (a41= IDENTIFIER )
                    	            {
                    	            a40=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature15038); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a40, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 503));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18185:4: (a41= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18186:5: a41= IDENTIFIER
                    	            {
                    	            a41=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature15064); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a41 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a41.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a41).getLine(), ((org.antlr.runtime.CommonToken) a41).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a41).getStartIndex(), ((org.antlr.runtime.CommonToken) a41).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Property proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Property>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticPropertyReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a41, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a41, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_345, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 504));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 504));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18273:8: a42= '.' (a43= IDENTIFIER ) a44= '(' ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a48= ')'
                    	            {
                    	            a42=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature15105); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a42, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 505));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18285:4: (a43= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18286:5: a43= IDENTIFIER
                    	            {
                    	            a43=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature15131); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a43 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a43.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a43).getLine(), ((org.antlr.runtime.CommonToken) a43).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a43).getStartIndex(), ((org.antlr.runtime.CommonToken) a43).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a43, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a43, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 506));
                    	              			
                    	            }
                    	            a44=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature15164); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a44, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 507));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 507));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 507));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 507));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 507));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 507));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 507));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 507));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 507));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 507));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 507));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 507));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 507));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 507));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 507));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 507));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 507));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 507));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 507));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 507));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18353:4: ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )?
                    	            int alt97=2;
                    	            int LA97_0 = input.LA(1);

                    	            if ( (LA97_0==IDENTIFIER||(LA97_0>=INTEGER && LA97_0<=BOOLEAN)||LA97_0==32||LA97_0==37||LA97_0==55||LA97_0==69||(LA97_0>=72 && LA97_0<=73)||LA97_0==76||LA97_0==79||(LA97_0>=81 && LA97_0<=82)||LA97_0==85||(LA97_0>=92 && LA97_0<=93)||LA97_0==95) ) {
                    	                alt97=1;
                    	            }
                    	            switch (alt97) {
                    	                case 1 :
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18354:5: ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    	                    {
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18354:5: ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18355:6: (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    	                    {
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18355:6: (a45_0= parse_org_kermeta_language_behavior_Expression )
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18356:7: a45_0= parse_org_kermeta_language_behavior_Expression
                    	                    {
                    	                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15205);
                    	                    a45_0=parse_org_kermeta_language_behavior_Expression();

                    	                    state._fsp--;
                    	                    if (state.failed) return element;
                    	                    if ( state.backtracking==0 ) {

                    	                      							if (terminateParsing) {
                    	                      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	                      							}
                    	                      							if (element == null) {
                    	                      								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                      							}
                    	                      							if (a45_0 != null) {
                    	                      								if (a45_0 != null) {
                    	                      									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a45_0);
                    	                      									completedElement(a45_0);
                    	                      								}
                    	                      								collectHiddenTokens(element);
                    	                      								copyLocalizationInfos(a45_0, element); 							}
                    	                      						
                    	                    }

                    	                    }

                    	                    if ( state.backtracking==0 ) {

                    	                      						// expected elements (follow set)
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 508));
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 508));
                    	                      					
                    	                    }
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18378:6: ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    	                    loop96:
                    	                    do {
                    	                        int alt96=2;
                    	                        int LA96_0 = input.LA(1);

                    	                        if ( (LA96_0==24) ) {
                    	                            alt96=1;
                    	                        }


                    	                        switch (alt96) {
                    	                    	case 1 :
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18379:7: (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) )
                    	                    	    {
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18379:7: (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) )
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18380:8: a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression )
                    	                    	    {
                    	                    	    a46=(Token)match(input,24,FOLLOW_24_in_parse_org_kermeta_language_behavior_CallFeature15260); if (state.failed) return element;
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								if (element == null) {
                    	                    	      									element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                    	      								}
                    	                    	      								collectHiddenTokens(element);
                    	                    	      								copyLocalizationInfos((org.antlr.runtime.CommonToken)a46, element);
                    	                    	      							
                    	                    	    }
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								// expected elements (follow set)
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 509));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 509));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 509));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 509));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 509));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 509));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 509));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 509));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 509));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 509));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 509));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 509));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 509));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 509));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 509));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 509));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 509));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 509));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 509));
                    	                    	      							
                    	                    	    }
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18410:8: (a47_0= parse_org_kermeta_language_behavior_Expression )
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18411:9: a47_0= parse_org_kermeta_language_behavior_Expression
                    	                    	    {
                    	                    	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15302);
                    	                    	    a47_0=parse_org_kermeta_language_behavior_Expression();

                    	                    	    state._fsp--;
                    	                    	    if (state.failed) return element;
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      									if (terminateParsing) {
                    	                    	      										throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	                    	      									}
                    	                    	      									if (element == null) {
                    	                    	      										element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                    	      									}
                    	                    	      									if (a47_0 != null) {
                    	                    	      										if (a47_0 != null) {
                    	                    	      											addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a47_0);
                    	                    	      											completedElement(a47_0);
                    	                    	      										}
                    	                    	      										collectHiddenTokens(element);
                    	                    	      										copyLocalizationInfos(a47_0, element); 									}
                    	                    	      								
                    	                    	    }

                    	                    	    }

                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								// expected elements (follow set)
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 510));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 510));
                    	                    	      							
                    	                    	    }

                    	                    	    }


                    	                    	    }
                    	                    	    break;

                    	                    	default :
                    	                    	    break loop96;
                    	                        }
                    	                    } while (true);

                    	                    if ( state.backtracking==0 ) {

                    	                      						// expected elements (follow set)
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 511));
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 511));
                    	                      					
                    	                    }

                    	                    }


                    	                    }
                    	                    break;

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 512));
                    	              			
                    	            }
                    	            a48=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature15406); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a48, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_345, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 513));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18511:8: a49= '.' (a50= IDENTIFIER )
                    	            {
                    	            a49=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature15434); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a49, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_359, 514));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18523:4: (a50= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18524:5: a50= IDENTIFIER
                    	            {
                    	            a50=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature15460); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a50 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a50.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a50).getLine(), ((org.antlr.runtime.CommonToken) a50).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a50).getStartIndex(), ((org.antlr.runtime.CommonToken) a50).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.EnumerationLiteral proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumerationLiteral();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.EnumerationLiteral>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticEnumLiteralReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a50, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a50, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_345, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 515));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 515));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18611:8: a51= '.' (a52= IDENTIFIER )
                    	            {
                    	            a51=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature15501); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a51, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_360, 516));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18623:4: (a52= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18624:5: a52= IDENTIFIER
                    	            {
                    	            a52=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature15527); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a52 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a52.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a52).getLine(), ((org.antlr.runtime.CommonToken) a52).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a52).getStartIndex(), ((org.antlr.runtime.CommonToken) a52).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a52, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a52, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_345, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 517));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 517));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop99;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_345, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 518));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 518));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18767:2: (a53= '==' (a54_0= parse_org_kermeta_language_behavior_Expression ) | ( ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    int alt102=2;
                    int LA102_0 = input.LA(1);

                    if ( (LA102_0==87) ) {
                        alt102=1;
                    }
                    else if ( (LA102_0==EOF||LA102_0==IDENTIFIER||(LA102_0>=INTEGER && LA102_0<=CASTED)||LA102_0==19||(LA102_0>=24 && LA102_0<=26)||LA102_0==28||(LA102_0>=30 && LA102_0<=33)||(LA102_0>=39 && LA102_0<=40)||LA102_0==47||LA102_0==55||(LA102_0>=69 && LA102_0<=71)||(LA102_0>=73 && LA102_0<=79)||(LA102_0>=81 && LA102_0<=83)||LA102_0==85||(LA102_0>=88 && LA102_0<=94)||(LA102_0>=96 && LA102_0<=97)) ) {
                        alt102=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 102, 0, input);

                        throw nvae;
                    }
                    switch (alt102) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18768:3: a53= '==' (a54_0= parse_org_kermeta_language_behavior_Expression )
                            {
                            a53=(Token)match(input,87,FOLLOW_87_in_parse_org_kermeta_language_behavior_CallFeature15577); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              			if (element == null) {
                              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              			}
                              			collectHiddenTokens(element);
                              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a53, element);
                              		
                            }
                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 519));
                              		
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18798:3: (a54_0= parse_org_kermeta_language_behavior_Expression )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18799:4: a54_0= parse_org_kermeta_language_behavior_Expression
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15599);
                            a54_0=parse_org_kermeta_language_behavior_Expression();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a54_0 != null) {
                              					if (a54_0 != null) {
                              						addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a54_0);
                              						completedElement(a54_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a54_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 520));
                              		
                            }

                            }
                            break;
                        case 2 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18862:6: ( ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18862:6: ( ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                            loop101:
                            do {
                                int alt101=2;
                                switch ( input.LA(1) ) {
                                case 88:
                                    {
                                    int LA101_2 = input.LA(2);

                                    if ( (synpred250_Kermeta()) ) {
                                        alt101=1;
                                    }


                                    }
                                    break;
                                case 89:
                                    {
                                    int LA101_3 = input.LA(2);

                                    if ( (synpred250_Kermeta()) ) {
                                        alt101=1;
                                    }


                                    }
                                    break;
                                case 90:
                                    {
                                    int LA101_4 = input.LA(2);

                                    if ( (synpred250_Kermeta()) ) {
                                        alt101=1;
                                    }


                                    }
                                    break;
                                case 91:
                                    {
                                    int LA101_5 = input.LA(2);

                                    if ( (synpred250_Kermeta()) ) {
                                        alt101=1;
                                    }


                                    }
                                    break;

                                }

                                switch (alt101) {
                            	case 1 :
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18863:4: ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) )
                            	    {
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18863:4: ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) )
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18864:5: (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression )
                            	    {
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18864:5: (a55= '+' | a56= '-' | a57= '/' | a58= '*' )
                            	    int alt100=4;
                            	    switch ( input.LA(1) ) {
                            	    case 88:
                            	        {
                            	        alt100=1;
                            	        }
                            	        break;
                            	    case 89:
                            	        {
                            	        alt100=2;
                            	        }
                            	        break;
                            	    case 90:
                            	        {
                            	        alt100=3;
                            	        }
                            	        break;
                            	    case 91:
                            	        {
                            	        alt100=4;
                            	        }
                            	        break;
                            	    default:
                            	        if (state.backtracking>0) {state.failed=true; return element;}
                            	        NoViableAltException nvae =
                            	            new NoViableAltException("", 100, 0, input);

                            	        throw nvae;
                            	    }

                            	    switch (alt100) {
                            	        case 1 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18865:6: a55= '+'
                            	            {
                            	            a55=(Token)match(input,88,FOLLOW_88_in_parse_org_kermeta_language_behavior_CallFeature15646); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a55, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 521));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 521));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 521));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 521));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 521));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 521));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 521));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 521));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 521));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 521));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 521));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 521));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 521));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 521));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 521));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 521));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 521));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 521));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 521));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18896:12: a56= '-'
                            	            {
                            	            a56=(Token)match(input,89,FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature15684); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a56, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 522));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 3 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18927:12: a57= '/'
                            	            {
                            	            a57=(Token)match(input,90,FOLLOW_90_in_parse_org_kermeta_language_behavior_CallFeature15722); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a57, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 523));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 4 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18958:12: a58= '*'
                            	            {
                            	            a58=(Token)match(input,91,FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature15760); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a58, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 524));
                            	              					
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    if ( state.backtracking==0 ) {

                            	      					// expected elements (follow set)
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 525));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 525));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 525));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 525));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 525));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 525));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 525));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 525));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 525));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 525));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 525));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 525));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 525));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 525));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 525));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 525));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 525));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 525));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 525));
                            	      				
                            	    }
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19012:5: (a59_0= parse_org_kermeta_language_behavior_Expression )
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19013:6: a59_0= parse_org_kermeta_language_behavior_Expression
                            	    {
                            	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15809);
                            	    a59_0=parse_org_kermeta_language_behavior_Expression();

                            	    state._fsp--;
                            	    if (state.failed) return element;
                            	    if ( state.backtracking==0 ) {

                            	      						if (terminateParsing) {
                            	      							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                            	      						}
                            	      						if (element == null) {
                            	      							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	      						}
                            	      						if (a59_0 != null) {
                            	      							if (a59_0 != null) {
                            	      								addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a59_0);
                            	      								completedElement(a59_0);
                            	      							}
                            	      							collectHiddenTokens(element);
                            	      							copyLocalizationInfos(a59_0, element); 						}
                            	      					
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {

                            	      					// expected elements (follow set)
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 526));
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop101;
                                }
                            } while (true);

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 527));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 527));
                              		
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 528));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 528));
                      	
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 45, parse_org_kermeta_language_behavior_CallFeature_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_CallFeature"


    // $ANTLR start "parse_org_kermeta_language_behavior_JavaStaticCall"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19180:1: parse_org_kermeta_language_behavior_JavaStaticCall returns [org.kermeta.language.behavior.JavaStaticCall element = null] : a0= 'extern' (a1= IDENTIFIER ) a2= '.' (a3= IDENTIFIER ) a4= '(' ( ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a8= ')' ;
    public final org.kermeta.language.behavior.JavaStaticCall parse_org_kermeta_language_behavior_JavaStaticCall() throws RecognitionException {
        org.kermeta.language.behavior.JavaStaticCall element =  null;
        int parse_org_kermeta_language_behavior_JavaStaticCall_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a6=null;
        Token a8=null;
        org.kermeta.language.behavior.Expression a5_0 = null;

        org.kermeta.language.behavior.Expression a7_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19183:1: (a0= 'extern' (a1= IDENTIFIER ) a2= '.' (a3= IDENTIFIER ) a4= '(' ( ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a8= ')' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19184:2: a0= 'extern' (a1= IDENTIFIER ) a2= '.' (a3= IDENTIFIER ) a4= '(' ( ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a8= ')'
            {
            a0=(Token)match(input,92,FOLLOW_92_in_parse_org_kermeta_language_behavior_JavaStaticCall15882); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_361, 529));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19196:2: (a1= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19197:3: a1= IDENTIFIER
            {
            a1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_JavaStaticCall15900); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
              			}
              			if (a1 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JCLASS), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JCLASS), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_362, 530));
              	
            }
            a2=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_JavaStaticCall15921); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_363, 531));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19241:2: (a3= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19242:3: a3= IDENTIFIER
            {
            a3=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_JavaStaticCall15939); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
              			}
              			if (a3 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JMETHOD), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a3).getLine(), ((org.antlr.runtime.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a3).getStartIndex(), ((org.antlr.runtime.CommonToken) a3).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JMETHOD), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a3, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_364, 532));
              	
            }
            a4=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_behavior_JavaStaticCall15960); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 533));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 533));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 533));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 533));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 533));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 533));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 533));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 533));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 533));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 533));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 533));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 533));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 533));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 533));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 533));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 533));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 533));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 533));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 533));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 533));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19305:2: ( ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==IDENTIFIER||(LA105_0>=INTEGER && LA105_0<=BOOLEAN)||LA105_0==32||LA105_0==37||LA105_0==55||LA105_0==69||(LA105_0>=72 && LA105_0<=73)||LA105_0==76||LA105_0==79||(LA105_0>=81 && LA105_0<=82)||LA105_0==85||(LA105_0>=92 && LA105_0<=93)||LA105_0==95) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19306:3: ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19306:3: ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19307:4: (a5_0= parse_org_kermeta_language_behavior_Expression ) ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19307:4: (a5_0= parse_org_kermeta_language_behavior_Expression )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19308:5: a5_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_JavaStaticCall15989);
                    a5_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
                      					}
                      					if (a5_0 != null) {
                      						if (a5_0 != null) {
                      							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__PARAMETERS, a5_0);
                      							completedElement(a5_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a5_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 534));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 534));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19330:4: ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    loop104:
                    do {
                        int alt104=2;
                        int LA104_0 = input.LA(1);

                        if ( (LA104_0==24) ) {
                            alt104=1;
                        }


                        switch (alt104) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19331:5: (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19331:5: (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19332:6: a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression )
                    	    {
                    	    a6=(Token)match(input,24,FOLLOW_24_in_parse_org_kermeta_language_behavior_JavaStaticCall16030); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      						if (element == null) {
                    	      							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
                    	      						}
                    	      						collectHiddenTokens(element);
                    	      						copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                    	      					
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 535));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 535));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 535));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 535));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 535));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 535));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 535));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 535));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 535));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 535));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 535));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 535));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 535));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 535));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 535));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 535));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 535));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 535));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 535));
                    	      					
                    	    }
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19362:6: (a7_0= parse_org_kermeta_language_behavior_Expression )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19363:7: a7_0= parse_org_kermeta_language_behavior_Expression
                    	    {
                    	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_JavaStaticCall16064);
                    	    a7_0=parse_org_kermeta_language_behavior_Expression();

                    	    state._fsp--;
                    	    if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      							if (terminateParsing) {
                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      							}
                    	      							if (element == null) {
                    	      								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
                    	      							}
                    	      							if (a7_0 != null) {
                    	      								if (a7_0 != null) {
                    	      									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__PARAMETERS, a7_0);
                    	      									completedElement(a7_0);
                    	      								}
                    	      								collectHiddenTokens(element);
                    	      								copyLocalizationInfos(a7_0, element); 							}
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 536));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 536));
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop104;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 537));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 537));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 538));
              	
            }
            a8=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_JavaStaticCall16138); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 539));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 539));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 46, parse_org_kermeta_language_behavior_JavaStaticCall_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_JavaStaticCall"


    // $ANTLR start "parse_org_kermeta_language_behavior_VoidLiteral"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19453:1: parse_org_kermeta_language_behavior_VoidLiteral returns [org.kermeta.language.behavior.VoidLiteral element = null] : a0= 'Void' ;
    public final org.kermeta.language.behavior.VoidLiteral parse_org_kermeta_language_behavior_VoidLiteral() throws RecognitionException {
        org.kermeta.language.behavior.VoidLiteral element =  null;
        int parse_org_kermeta_language_behavior_VoidLiteral_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19456:1: (a0= 'Void' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19457:2: a0= 'Void'
            {
            a0=(Token)match(input,37,FOLLOW_37_in_parse_org_kermeta_language_behavior_VoidLiteral16167); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVoidLiteral();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 540));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 47, parse_org_kermeta_language_behavior_VoidLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_VoidLiteral"


    // $ANTLR start "parse_org_kermeta_language_behavior_CallValue"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19507:1: parse_org_kermeta_language_behavior_CallValue returns [org.kermeta.language.behavior.CallValue element = null] : a0= 'value' ;
    public final org.kermeta.language.behavior.CallValue parse_org_kermeta_language_behavior_CallValue() throws RecognitionException {
        org.kermeta.language.behavior.CallValue element =  null;
        int parse_org_kermeta_language_behavior_CallValue_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19510:1: (a0= 'value' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19511:2: a0= 'value'
            {
            a0=(Token)match(input,55,FOLLOW_55_in_parse_org_kermeta_language_behavior_CallValue16196); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 541));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 48, parse_org_kermeta_language_behavior_CallValue_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_CallValue"


    // $ANTLR start "parse_org_kermeta_language_behavior_EmptyExpression"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19561:1: parse_org_kermeta_language_behavior_EmptyExpression returns [org.kermeta.language.behavior.EmptyExpression element = null] : a0= 'EmptyExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) ) )* a14= '}' ;
    public final org.kermeta.language.behavior.EmptyExpression parse_org_kermeta_language_behavior_EmptyExpression() throws RecognitionException {
        org.kermeta.language.behavior.EmptyExpression element =  null;
        int parse_org_kermeta_language_behavior_EmptyExpression_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19564:1: (a0= 'EmptyExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) ) )* a14= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19565:2: a0= 'EmptyExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) ) )* a14= '}'
            {
            a0=(Token)match(input,93,FOLLOW_93_in_parse_org_kermeta_language_behavior_EmptyExpression16225); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 542));
              	
            }
            a1=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_behavior_EmptyExpression16239); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 543));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 543));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 543));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 543));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 543));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19593:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) ) )*
            loop107:
            do {
                int alt107=2;
                int LA107_0 = input.LA(1);

                if ( ((LA107_0>=39 && LA107_0<=40)||LA107_0==47||LA107_0==94) ) {
                    alt107=1;
                }


                switch (alt107) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19594:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19594:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) )
            	    int alt106=4;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt106=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt106=2;
            	        }
            	        break;
            	    case 47:
            	        {
            	        alt106=3;
            	        }
            	        break;
            	    case 94:
            	        {
            	        alt106=4;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 106, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt106) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19595:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_behavior_EmptyExpression16262); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 544));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_EmptyExpression16282); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_367, 545));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19619:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19620:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_EmptyExpression16308); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 546));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 546));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 546));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 546));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 546));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19661:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_behavior_EmptyExpression16349); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 547));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_EmptyExpression16369); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 548));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19685:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19686:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_EmptyExpression16395);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 549));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 549));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 549));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 549));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 549));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19712:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_behavior_EmptyExpression16431); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 550));
            	              			
            	            }
            	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_EmptyExpression16451); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_77, 551));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 551));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 551));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 551));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 551));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 551));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 551));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_189, 551));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_190, 551));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_191, 551));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 551));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 551));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19747:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19748:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_behavior_EmptyExpression16477);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 552));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 552));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 552));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 552));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 552));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19774:8: a11= 'staticType' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,94,FOLLOW_94_in_parse_org_kermeta_language_behavior_EmptyExpression16513); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 553));
            	              			
            	            }
            	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_EmptyExpression16533); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 554));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19798:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19799:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_EmptyExpression16559); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__STATIC_TYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.Expression, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getExpressionStaticTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__STATIC_TYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__STATIC_TYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 555));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 555));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 555));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 555));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 555));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop107;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 556));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 556));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 556));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 556));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 556));
              	
            }
            a14=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_behavior_EmptyExpression16605); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 557));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 49, parse_org_kermeta_language_behavior_EmptyExpression_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_EmptyExpression"


    // $ANTLR start "parse_org_kermeta_language_behavior_LambdaExpression"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19903:1: parse_org_kermeta_language_behavior_LambdaExpression returns [org.kermeta.language.behavior.LambdaExpression element = null] : a0= 'LambdaExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) ) )* a20= '}' ;
    public final org.kermeta.language.behavior.LambdaExpression parse_org_kermeta_language_behavior_LambdaExpression() throws RecognitionException {
        org.kermeta.language.behavior.LambdaExpression element =  null;
        int parse_org_kermeta_language_behavior_LambdaExpression_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a17=null;
        Token a18=null;
        Token a20=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;

        org.kermeta.language.behavior.LambdaParameter a16_0 = null;

        org.kermeta.language.behavior.Expression a19_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19906:1: (a0= 'LambdaExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) ) )* a20= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19907:2: a0= 'LambdaExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) ) )* a20= '}'
            {
            a0=(Token)match(input,95,FOLLOW_95_in_parse_org_kermeta_language_behavior_LambdaExpression16634); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 558));
              	
            }
            a1=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_behavior_LambdaExpression16648); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 559));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19937:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) ) )*
            loop109:
            do {
                int alt109=2;
                int LA109_0 = input.LA(1);

                if ( ((LA109_0>=39 && LA109_0<=40)||LA109_0==47||LA109_0==94||(LA109_0>=96 && LA109_0<=97)) ) {
                    alt109=1;
                }


                switch (alt109) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19938:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19938:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) )
            	    int alt108=6;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt108=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt108=2;
            	        }
            	        break;
            	    case 47:
            	        {
            	        alt108=3;
            	        }
            	        break;
            	    case 94:
            	        {
            	        alt108=4;
            	        }
            	        break;
            	    case 96:
            	        {
            	        alt108=5;
            	        }
            	        break;
            	    case 97:
            	        {
            	        alt108=6;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 108, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt108) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19939:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_behavior_LambdaExpression16671); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_373, 560));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression16691); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_374, 561));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19963:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19964:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaExpression16717); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 562));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 562));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 562));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 562));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 562));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 562));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 562));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20007:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_behavior_LambdaExpression16758); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_375, 563));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression16778); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 564));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20031:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20032:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_LambdaExpression16804);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 565));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 565));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 565));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 565));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 565));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 565));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 565));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20060:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_behavior_LambdaExpression16840); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_376, 566));
            	              			
            	            }
            	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression16860); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_77, 567));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 567));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 567));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 567));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 567));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 567));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 567));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_189, 567));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_190, 567));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_191, 567));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 567));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 567));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20095:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20096:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_behavior_LambdaExpression16886);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 568));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 568));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 568));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 568));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 568));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 568));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 568));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20124:8: a11= 'staticType' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,94,FOLLOW_94_in_parse_org_kermeta_language_behavior_LambdaExpression16922); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_377, 569));
            	              			
            	            }
            	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression16942); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_378, 570));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20148:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20149:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaExpression16968); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__STATIC_TYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.Expression, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getExpressionStaticTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__STATIC_TYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__STATIC_TYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 571));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 571));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 571));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 571));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 571));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 571));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 571));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20192:8: a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter )
            	            {
            	            a14=(Token)match(input,96,FOLLOW_96_in_parse_org_kermeta_language_behavior_LambdaExpression17009); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 572));
            	              			
            	            }
            	            a15=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression17029); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 573));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20216:4: (a16_0= parse_org_kermeta_language_behavior_LambdaParameter )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20217:5: a16_0= parse_org_kermeta_language_behavior_LambdaParameter
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_LambdaParameter_in_parse_org_kermeta_language_behavior_LambdaExpression17055);
            	            a16_0=parse_org_kermeta_language_behavior_LambdaParameter();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a16_0 != null) {
            	              						if (a16_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__PARAMETERS, a16_0);
            	              							completedElement(a16_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a16_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 574));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 574));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 574));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 574));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 574));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 574));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 574));
            	              			
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20245:8: a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression )
            	            {
            	            a17=(Token)match(input,97,FOLLOW_97_in_parse_org_kermeta_language_behavior_LambdaExpression17091); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 575));
            	              			
            	            }
            	            a18=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression17111); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 576));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20287:4: (a19_0= parse_org_kermeta_language_behavior_Expression )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20288:5: a19_0= parse_org_kermeta_language_behavior_Expression
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_LambdaExpression17137);
            	            a19_0=parse_org_kermeta_language_behavior_Expression();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a19_0 != null) {
            	              						if (a19_0 != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__BODY), a19_0);
            	              							completedElement(a19_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a19_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 577));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop109;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 578));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 578));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 578));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 578));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 578));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 578));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 578));
              	
            }
            a20=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_behavior_LambdaExpression17178); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 579));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 50, parse_org_kermeta_language_behavior_LambdaExpression_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_LambdaExpression"


    // $ANTLR start "parse_org_kermeta_language_behavior_LambdaParameter"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20378:1: parse_org_kermeta_language_behavior_LambdaParameter returns [org.kermeta.language.behavior.LambdaParameter element = null] : a0= 'LambdaParameter' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) ) )* a14= '}' ;
    public final org.kermeta.language.behavior.LambdaParameter parse_org_kermeta_language_behavior_LambdaParameter() throws RecognitionException {
        org.kermeta.language.behavior.LambdaParameter element =  null;
        int parse_org_kermeta_language_behavior_LambdaParameter_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        Token a12=null;
        Token a14=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.behavior.TypeReference a13_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 51) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20381:1: (a0= 'LambdaParameter' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) ) )* a14= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20382:2: a0= 'LambdaParameter' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) ) )* a14= '}'
            {
            a0=(Token)match(input,98,FOLLOW_98_in_parse_org_kermeta_language_behavior_LambdaParameter17207); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 580));
              	
            }
            a1=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_behavior_LambdaParameter17221); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_237, 581));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 581));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 581));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 581));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_241, 581));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20410:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) ) )*
            loop111:
            do {
                int alt111=2;
                int LA111_0 = input.LA(1);

                if ( ((LA111_0>=39 && LA111_0<=40)||LA111_0==44||LA111_0==49) ) {
                    alt111=1;
                }


                switch (alt111) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20411:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20411:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) )
            	    int alt110=4;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt110=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt110=2;
            	        }
            	        break;
            	    case 44:
            	        {
            	        alt110=3;
            	        }
            	        break;
            	    case 49:
            	        {
            	        alt110=4;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 110, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt110) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20412:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_behavior_LambdaParameter17244); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 582));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaParameter17264); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_384, 583));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20436:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20437:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaParameter17290); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_237, 584));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 584));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 584));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 584));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_241, 584));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20478:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_behavior_LambdaParameter17331); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_385, 585));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaParameter17351); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 586));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20502:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20503:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_LambdaParameter17377);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_237, 587));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 587));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 587));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 587));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_241, 587));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20529:8: a8= 'name' a9= ':' (a10= IDENTIFIER )
            	            {
            	            a8=(Token)match(input,44,FOLLOW_44_in_parse_org_kermeta_language_behavior_LambdaParameter17413); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_386, 588));
            	              			
            	            }
            	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaParameter17433); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_387, 589));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20553:4: (a10= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20554:5: a10= IDENTIFIER
            	            {
            	            a10=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaParameter17459); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              					}
            	              					if (a10 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a10.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__NAME), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a10).getLine(), ((org.antlr.runtime.CommonToken) a10).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a10).getStartIndex(), ((org.antlr.runtime.CommonToken) a10).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__NAME), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_237, 590));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 590));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 590));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 590));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_241, 590));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20591:8: a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference )
            	            {
            	            a11=(Token)match(input,49,FOLLOW_49_in_parse_org_kermeta_language_behavior_LambdaParameter17500); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_388, 591));
            	              			
            	            }
            	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaParameter17520); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 592));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20615:4: (a13_0= parse_org_kermeta_language_behavior_TypeReference )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20616:5: a13_0= parse_org_kermeta_language_behavior_TypeReference
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_LambdaParameter17546);
            	            a13_0=parse_org_kermeta_language_behavior_TypeReference();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              					}
            	              					if (a13_0 != null) {
            	              						if (a13_0 != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TYPE), a13_0);
            	              							completedElement(a13_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a13_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_237, 593));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 593));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 593));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 593));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_241, 593));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop111;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_237, 594));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 594));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 594));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 594));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_241, 594));
              	
            }
            a14=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_behavior_LambdaParameter17587); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 595));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 595));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 595));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 595));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 595));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 595));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 595));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 51, parse_org_kermeta_language_behavior_LambdaParameter_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_LambdaParameter"


    // $ANTLR start "parse_org_kermeta_language_behavior_Expression"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20672:1: parse_org_kermeta_language_behavior_Expression returns [org.kermeta.language.behavior.Expression element = null] : (c0= parse_org_kermeta_language_behavior_Block | c1= parse_org_kermeta_language_behavior_Raise | c2= parse_org_kermeta_language_behavior_BooleanLiteral | c3= parse_org_kermeta_language_behavior_IntegerLiteral | c4= parse_org_kermeta_language_behavior_StringLiteral | c5= parse_org_kermeta_language_behavior_Conditional | c6= parse_org_kermeta_language_behavior_Loop | c7= parse_org_kermeta_language_behavior_VariableDecl | c8= parse_org_kermeta_language_behavior_TypeLiteral | c9= parse_org_kermeta_language_behavior_CallResult | c10= parse_org_kermeta_language_behavior_CallSuperOperation | c11= parse_org_kermeta_language_behavior_Assignment | c12= parse_org_kermeta_language_behavior_CallVariable | c13= parse_org_kermeta_language_behavior_SelfExpression | c14= parse_org_kermeta_language_behavior_CallFeature | c15= parse_org_kermeta_language_behavior_JavaStaticCall | c16= parse_org_kermeta_language_behavior_VoidLiteral | c17= parse_org_kermeta_language_behavior_CallValue | c18= parse_org_kermeta_language_behavior_EmptyExpression | c19= parse_org_kermeta_language_behavior_LambdaExpression );
    public final org.kermeta.language.behavior.Expression parse_org_kermeta_language_behavior_Expression() throws RecognitionException {
        org.kermeta.language.behavior.Expression element =  null;
        int parse_org_kermeta_language_behavior_Expression_StartIndex = input.index();
        org.kermeta.language.behavior.Block c0 = null;

        org.kermeta.language.behavior.Raise c1 = null;

        org.kermeta.language.behavior.BooleanLiteral c2 = null;

        org.kermeta.language.behavior.IntegerLiteral c3 = null;

        org.kermeta.language.behavior.StringLiteral c4 = null;

        org.kermeta.language.behavior.Conditional c5 = null;

        org.kermeta.language.behavior.Loop c6 = null;

        org.kermeta.language.behavior.VariableDecl c7 = null;

        org.kermeta.language.behavior.TypeLiteral c8 = null;

        org.kermeta.language.behavior.CallResult c9 = null;

        org.kermeta.language.behavior.CallSuperOperation c10 = null;

        org.kermeta.language.behavior.Assignment c11 = null;

        org.kermeta.language.behavior.CallVariable c12 = null;

        org.kermeta.language.behavior.SelfExpression c13 = null;

        org.kermeta.language.behavior.CallFeature c14 = null;

        org.kermeta.language.behavior.JavaStaticCall c15 = null;

        org.kermeta.language.behavior.VoidLiteral c16 = null;

        org.kermeta.language.behavior.CallValue c17 = null;

        org.kermeta.language.behavior.EmptyExpression c18 = null;

        org.kermeta.language.behavior.LambdaExpression c19 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 52) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20673:1: (c0= parse_org_kermeta_language_behavior_Block | c1= parse_org_kermeta_language_behavior_Raise | c2= parse_org_kermeta_language_behavior_BooleanLiteral | c3= parse_org_kermeta_language_behavior_IntegerLiteral | c4= parse_org_kermeta_language_behavior_StringLiteral | c5= parse_org_kermeta_language_behavior_Conditional | c6= parse_org_kermeta_language_behavior_Loop | c7= parse_org_kermeta_language_behavior_VariableDecl | c8= parse_org_kermeta_language_behavior_TypeLiteral | c9= parse_org_kermeta_language_behavior_CallResult | c10= parse_org_kermeta_language_behavior_CallSuperOperation | c11= parse_org_kermeta_language_behavior_Assignment | c12= parse_org_kermeta_language_behavior_CallVariable | c13= parse_org_kermeta_language_behavior_SelfExpression | c14= parse_org_kermeta_language_behavior_CallFeature | c15= parse_org_kermeta_language_behavior_JavaStaticCall | c16= parse_org_kermeta_language_behavior_VoidLiteral | c17= parse_org_kermeta_language_behavior_CallValue | c18= parse_org_kermeta_language_behavior_EmptyExpression | c19= parse_org_kermeta_language_behavior_LambdaExpression )
            int alt112=20;
            alt112 = dfa112.predict(input);
            switch (alt112) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20674:2: c0= parse_org_kermeta_language_behavior_Block
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Expression17612);
                    c0=parse_org_kermeta_language_behavior_Block();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20675:4: c1= parse_org_kermeta_language_behavior_Raise
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Raise_in_parse_org_kermeta_language_behavior_Expression17622);
                    c1=parse_org_kermeta_language_behavior_Raise();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20676:4: c2= parse_org_kermeta_language_behavior_BooleanLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Expression17632);
                    c2=parse_org_kermeta_language_behavior_BooleanLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20677:4: c3= parse_org_kermeta_language_behavior_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_Expression17642);
                    c3=parse_org_kermeta_language_behavior_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20678:4: c4= parse_org_kermeta_language_behavior_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_Expression17652);
                    c4=parse_org_kermeta_language_behavior_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c4; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 6 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20679:4: c5= parse_org_kermeta_language_behavior_Conditional
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Expression17662);
                    c5=parse_org_kermeta_language_behavior_Conditional();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c5; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 7 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20680:4: c6= parse_org_kermeta_language_behavior_Loop
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_behavior_Expression17672);
                    c6=parse_org_kermeta_language_behavior_Loop();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c6; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 8 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20681:4: c7= parse_org_kermeta_language_behavior_VariableDecl
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Expression17682);
                    c7=parse_org_kermeta_language_behavior_VariableDecl();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c7; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 9 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20682:4: c8= parse_org_kermeta_language_behavior_TypeLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_parse_org_kermeta_language_behavior_Expression17692);
                    c8=parse_org_kermeta_language_behavior_TypeLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c8; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 10 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20683:4: c9= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Expression17702);
                    c9=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c9; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 11 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20684:4: c10= parse_org_kermeta_language_behavior_CallSuperOperation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Expression17712);
                    c10=parse_org_kermeta_language_behavior_CallSuperOperation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c10; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 12 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20685:4: c11= parse_org_kermeta_language_behavior_Assignment
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Expression17722);
                    c11=parse_org_kermeta_language_behavior_Assignment();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c11; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 13 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20686:4: c12= parse_org_kermeta_language_behavior_CallVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Expression17732);
                    c12=parse_org_kermeta_language_behavior_CallVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c12; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 14 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20687:4: c13= parse_org_kermeta_language_behavior_SelfExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_Expression17742);
                    c13=parse_org_kermeta_language_behavior_SelfExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c13; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 15 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20688:4: c14= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Expression17752);
                    c14=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c14; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 16 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20689:4: c15= parse_org_kermeta_language_behavior_JavaStaticCall
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_Expression17762);
                    c15=parse_org_kermeta_language_behavior_JavaStaticCall();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c15; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 17 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20690:4: c16= parse_org_kermeta_language_behavior_VoidLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_behavior_Expression17772);
                    c16=parse_org_kermeta_language_behavior_VoidLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c16; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 18 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20691:4: c17= parse_org_kermeta_language_behavior_CallValue
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Expression17782);
                    c17=parse_org_kermeta_language_behavior_CallValue();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c17; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 19 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20692:4: c18= parse_org_kermeta_language_behavior_EmptyExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_behavior_Expression17792);
                    c18=parse_org_kermeta_language_behavior_EmptyExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c18; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 20 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20693:4: c19= parse_org_kermeta_language_behavior_LambdaExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_LambdaExpression_in_parse_org_kermeta_language_behavior_Expression17802);
                    c19=parse_org_kermeta_language_behavior_LambdaExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c19; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 52, parse_org_kermeta_language_behavior_Expression_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Expression"


    // $ANTLR start "parse_org_kermeta_language_structure_Type"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20697:1: parse_org_kermeta_language_structure_Type returns [org.kermeta.language.structure.Type element = null] : (c0= parse_org_kermeta_language_structure_Class | c1= parse_org_kermeta_language_structure_Enumeration | c2= parse_org_kermeta_language_structure_PrimitiveType | c3= parse_org_kermeta_language_structure_UnresolvedType | c4= parse_org_kermeta_language_structure_VoidType | c5= parse_org_kermeta_language_structure_ModelType | c6= parse_org_kermeta_language_structure_ObjectTypeVariable | c7= parse_org_kermeta_language_structure_ModelTypeVariable | c8= parse_org_kermeta_language_structure_VirtualType | c9= parse_org_kermeta_language_structure_ProductType | c10= parse_org_kermeta_language_structure_FunctionType );
    public final org.kermeta.language.structure.Type parse_org_kermeta_language_structure_Type() throws RecognitionException {
        org.kermeta.language.structure.Type element =  null;
        int parse_org_kermeta_language_structure_Type_StartIndex = input.index();
        org.kermeta.language.structure.Class c0 = null;

        org.kermeta.language.structure.Enumeration c1 = null;

        org.kermeta.language.structure.PrimitiveType c2 = null;

        org.kermeta.language.structure.UnresolvedType c3 = null;

        org.kermeta.language.structure.VoidType c4 = null;

        org.kermeta.language.structure.ModelType c5 = null;

        org.kermeta.language.structure.ObjectTypeVariable c6 = null;

        org.kermeta.language.structure.ModelTypeVariable c7 = null;

        org.kermeta.language.structure.VirtualType c8 = null;

        org.kermeta.language.structure.ProductType c9 = null;

        org.kermeta.language.structure.FunctionType c10 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 53) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20698:1: (c0= parse_org_kermeta_language_structure_Class | c1= parse_org_kermeta_language_structure_Enumeration | c2= parse_org_kermeta_language_structure_PrimitiveType | c3= parse_org_kermeta_language_structure_UnresolvedType | c4= parse_org_kermeta_language_structure_VoidType | c5= parse_org_kermeta_language_structure_ModelType | c6= parse_org_kermeta_language_structure_ObjectTypeVariable | c7= parse_org_kermeta_language_structure_ModelTypeVariable | c8= parse_org_kermeta_language_structure_VirtualType | c9= parse_org_kermeta_language_structure_ProductType | c10= parse_org_kermeta_language_structure_FunctionType )
            int alt113=11;
            alt113 = dfa113.predict(input);
            switch (alt113) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20699:2: c0= parse_org_kermeta_language_structure_Class
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Class_in_parse_org_kermeta_language_structure_Type17823);
                    c0=parse_org_kermeta_language_structure_Class();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20700:4: c1= parse_org_kermeta_language_structure_Enumeration
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_Type17833);
                    c1=parse_org_kermeta_language_structure_Enumeration();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20701:4: c2= parse_org_kermeta_language_structure_PrimitiveType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_Type17843);
                    c2=parse_org_kermeta_language_structure_PrimitiveType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20702:4: c3= parse_org_kermeta_language_structure_UnresolvedType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_parse_org_kermeta_language_structure_Type17853);
                    c3=parse_org_kermeta_language_structure_UnresolvedType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20703:4: c4= parse_org_kermeta_language_structure_VoidType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_VoidType_in_parse_org_kermeta_language_structure_Type17863);
                    c4=parse_org_kermeta_language_structure_VoidType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c4; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 6 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20704:4: c5= parse_org_kermeta_language_structure_ModelType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_Type17873);
                    c5=parse_org_kermeta_language_structure_ModelType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c5; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 7 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20705:4: c6= parse_org_kermeta_language_structure_ObjectTypeVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_parse_org_kermeta_language_structure_Type17883);
                    c6=parse_org_kermeta_language_structure_ObjectTypeVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c6; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 8 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20706:4: c7= parse_org_kermeta_language_structure_ModelTypeVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelTypeVariable_in_parse_org_kermeta_language_structure_Type17893);
                    c7=parse_org_kermeta_language_structure_ModelTypeVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c7; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 9 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20707:4: c8= parse_org_kermeta_language_structure_VirtualType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_Type17903);
                    c8=parse_org_kermeta_language_structure_VirtualType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c8; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 10 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20708:4: c9= parse_org_kermeta_language_structure_ProductType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ProductType_in_parse_org_kermeta_language_structure_Type17913);
                    c9=parse_org_kermeta_language_structure_ProductType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c9; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 11 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20709:4: c10= parse_org_kermeta_language_structure_FunctionType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_FunctionType_in_parse_org_kermeta_language_structure_Type17923);
                    c10=parse_org_kermeta_language_structure_FunctionType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c10; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 53, parse_org_kermeta_language_structure_Type_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Type"

    // $ANTLR start synpred1_Kermeta
    public final void synpred1_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ModelingUnit c0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4438:3: (c0= parse_org_kermeta_language_structure_ModelingUnit )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4438:3: c0= parse_org_kermeta_language_structure_ModelingUnit
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_synpred1_Kermeta82);
        c0=parse_org_kermeta_language_structure_ModelingUnit();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred1_Kermeta

    // $ANTLR start synpred3_Kermeta
    public final void synpred3_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Property c2 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4440:8: (c2= parse_org_kermeta_language_structure_Property )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4440:8: c2= parse_org_kermeta_language_structure_Property
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_synpred3_Kermeta110);
        c2=parse_org_kermeta_language_structure_Property();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred3_Kermeta

    // $ANTLR start synpred4_Kermeta
    public final void synpred4_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Operation c3 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4441:8: (c3= parse_org_kermeta_language_structure_Operation )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4441:8: c3= parse_org_kermeta_language_structure_Operation
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_synpred4_Kermeta124);
        c3=parse_org_kermeta_language_structure_Operation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred4_Kermeta

    // $ANTLR start synpred5_Kermeta
    public final void synpred5_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Parameter c4 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4442:8: (c4= parse_org_kermeta_language_structure_Parameter )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4442:8: c4= parse_org_kermeta_language_structure_Parameter
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_synpred5_Kermeta138);
        c4=parse_org_kermeta_language_structure_Parameter();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred5_Kermeta

    // $ANTLR start synpred6_Kermeta
    public final void synpred6_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.MultiplicityElement c5 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4443:8: (c5= parse_org_kermeta_language_structure_MultiplicityElement )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4443:8: c5= parse_org_kermeta_language_structure_MultiplicityElement
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_synpred6_Kermeta152);
        c5=parse_org_kermeta_language_structure_MultiplicityElement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred6_Kermeta

    // $ANTLR start synpred11_Kermeta
    public final void synpred11_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.TypeDefinition a4_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4790:5: ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4790:5: ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4790:5: ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4791:6: (a4_0= parse_org_kermeta_language_structure_TypeDefinition )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4791:6: (a4_0= parse_org_kermeta_language_structure_TypeDefinition )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4792:7: a4_0= parse_org_kermeta_language_structure_TypeDefinition
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred11_Kermeta587);
        a4_0=parse_org_kermeta_language_structure_TypeDefinition();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred11_Kermeta

    // $ANTLR start synpred14_Kermeta
    public final void synpred14_Kermeta_fragment() throws RecognitionException {   
        Token a5=null;
        Token a7=null;
        org.kermeta.language.structure.TypeDefinition a6_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4841:8: (a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a7= '}' )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4841:8: a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a7= '}'
        {
        a5=(Token)match(input,18,FOLLOW_18_in_synpred14_Kermeta656); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4861:4: ( ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
        int cnt115=0;
        loop115:
        do {
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( ((LA115_0>=IDENTIFIER && LA115_0<=PRIMITIVE_TYPE)||(LA115_0>=20 && LA115_0<=22)||LA115_0==35||LA115_0==42||LA115_0==53) ) {
                alt115=1;
            }


            switch (alt115) {
        	case 1 :
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4862:5: ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) )
        	    {
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4862:5: ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) )
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4863:6: (a6_0= parse_org_kermeta_language_structure_TypeDefinition )
        	    {
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4863:6: (a6_0= parse_org_kermeta_language_structure_TypeDefinition )
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4864:7: a6_0= parse_org_kermeta_language_structure_TypeDefinition
        	    {
        	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred14_Kermeta697);
        	    a6_0=parse_org_kermeta_language_structure_TypeDefinition();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    if ( cnt115 >= 1 ) break loop115;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(115, input);
                    throw eee;
            }
            cnt115++;
        } while (true);

        a7=(Token)match(input,19,FOLLOW_19_in_synpred14_Kermeta758); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred14_Kermeta

    // $ANTLR start synpred16_Kermeta
    public final void synpred16_Kermeta_fragment() throws RecognitionException {   
        Token a5=null;
        Token a7=null;
        Token a8=null;
        Token a10=null;
        org.kermeta.language.structure.TypeDefinition a4_0 = null;

        org.kermeta.language.structure.TypeDefinition a6_0 = null;

        org.kermeta.language.structure.Package a9_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4788:3: ( ( ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a7= '}' | a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Package ) ) )* a10= '}' ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4788:3: ( ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a7= '}' | a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Package ) ) )* a10= '}' )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4788:3: ( ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a7= '}' | a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Package ) ) )* a10= '}' )
        int alt119=3;
        alt119 = dfa119.predict(input);
        switch (alt119) {
            case 1 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4789:4: ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                {
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4789:4: ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                int cnt116=0;
                loop116:
                do {
                    int alt116=2;
                    int LA116_0 = input.LA(1);

                    if ( ((LA116_0>=IDENTIFIER && LA116_0<=PRIMITIVE_TYPE)||(LA116_0>=20 && LA116_0<=22)||LA116_0==35||LA116_0==42||LA116_0==53) ) {
                        alt116=1;
                    }


                    switch (alt116) {
                	case 1 :
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4790:5: ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                	    {
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4790:5: ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4791:6: (a4_0= parse_org_kermeta_language_structure_TypeDefinition )
                	    {
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4791:6: (a4_0= parse_org_kermeta_language_structure_TypeDefinition )
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4792:7: a4_0= parse_org_kermeta_language_structure_TypeDefinition
                	    {
                	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred16_Kermeta587);
                	    a4_0=parse_org_kermeta_language_structure_TypeDefinition();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    if ( cnt116 >= 1 ) break loop116;
                	    if (state.backtracking>0) {state.failed=true; return ;}
                            EarlyExitException eee =
                                new EarlyExitException(116, input);
                            throw eee;
                    }
                    cnt116++;
                } while (true);


                }
                break;
            case 2 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4841:8: a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a7= '}'
                {
                a5=(Token)match(input,18,FOLLOW_18_in_synpred16_Kermeta656); if (state.failed) return ;
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4861:4: ( ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                int cnt117=0;
                loop117:
                do {
                    int alt117=2;
                    int LA117_0 = input.LA(1);

                    if ( ((LA117_0>=IDENTIFIER && LA117_0<=PRIMITIVE_TYPE)||(LA117_0>=20 && LA117_0<=22)||LA117_0==35||LA117_0==42||LA117_0==53) ) {
                        alt117=1;
                    }


                    switch (alt117) {
                	case 1 :
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4862:5: ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                	    {
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4862:5: ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4863:6: (a6_0= parse_org_kermeta_language_structure_TypeDefinition )
                	    {
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4863:6: (a6_0= parse_org_kermeta_language_structure_TypeDefinition )
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4864:7: a6_0= parse_org_kermeta_language_structure_TypeDefinition
                	    {
                	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred16_Kermeta697);
                	    a6_0=parse_org_kermeta_language_structure_TypeDefinition();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    if ( cnt117 >= 1 ) break loop117;
                	    if (state.backtracking>0) {state.failed=true; return ;}
                            EarlyExitException eee =
                                new EarlyExitException(117, input);
                            throw eee;
                    }
                    cnt117++;
                } while (true);

                a7=(Token)match(input,19,FOLLOW_19_in_synpred16_Kermeta758); if (state.failed) return ;

                }
                break;
            case 3 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4933:8: a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Package ) ) )* a10= '}'
                {
                a8=(Token)match(input,18,FOLLOW_18_in_synpred16_Kermeta786); if (state.failed) return ;
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4955:4: ( ( (a9_0= parse_org_kermeta_language_structure_Package ) ) )*
                loop118:
                do {
                    int alt118=2;
                    int LA118_0 = input.LA(1);

                    if ( ((LA118_0>=IDENTIFIER && LA118_0<=PRIMITIVE_TYPE)||LA118_0==16||(LA118_0>=20 && LA118_0<=22)||LA118_0==35||LA118_0==42||LA118_0==53) ) {
                        alt118=1;
                    }


                    switch (alt118) {
                	case 1 :
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4956:5: ( (a9_0= parse_org_kermeta_language_structure_Package ) )
                	    {
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4956:5: ( (a9_0= parse_org_kermeta_language_structure_Package ) )
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4957:6: (a9_0= parse_org_kermeta_language_structure_Package )
                	    {
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4957:6: (a9_0= parse_org_kermeta_language_structure_Package )
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4958:7: a9_0= parse_org_kermeta_language_structure_Package
                	    {
                	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred16_Kermeta827);
                	    a9_0=parse_org_kermeta_language_structure_Package();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop118;
                    }
                } while (true);

                a10=(Token)match(input,19,FOLLOW_19_in_synpred16_Kermeta888); if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred16_Kermeta

    // $ANTLR start synpred18_Kermeta
    public final void synpred18_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.TypeDefinition a11_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5047:3: ( ( (a11_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5047:3: ( (a11_0= parse_org_kermeta_language_structure_TypeDefinition ) )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5047:3: ( (a11_0= parse_org_kermeta_language_structure_TypeDefinition ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5048:4: (a11_0= parse_org_kermeta_language_structure_TypeDefinition )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5048:4: (a11_0= parse_org_kermeta_language_structure_TypeDefinition )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5049:5: a11_0= parse_org_kermeta_language_structure_TypeDefinition
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred18_Kermeta940);
        a11_0=parse_org_kermeta_language_structure_TypeDefinition();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred18_Kermeta

    // $ANTLR start synpred23_Kermeta
    public final void synpred23_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Constraint a9_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5330:3: ( ( (a9_0= parse_org_kermeta_language_structure_Constraint ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5330:3: ( (a9_0= parse_org_kermeta_language_structure_Constraint ) )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5330:3: ( (a9_0= parse_org_kermeta_language_structure_Constraint ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5331:4: (a9_0= parse_org_kermeta_language_structure_Constraint )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5331:4: (a9_0= parse_org_kermeta_language_structure_Constraint )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5332:5: a9_0= parse_org_kermeta_language_structure_Constraint
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred23_Kermeta1344);
        a9_0=parse_org_kermeta_language_structure_Constraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred23_Kermeta

    // $ANTLR start synpred32_Kermeta
    public final void synpred32_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Constraint a0_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5889:3: ( (a0_0= parse_org_kermeta_language_structure_Constraint ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5889:3: (a0_0= parse_org_kermeta_language_structure_Constraint )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5889:3: (a0_0= parse_org_kermeta_language_structure_Constraint )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5890:4: a0_0= parse_org_kermeta_language_structure_Constraint
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred32_Kermeta1983);
        a0_0=parse_org_kermeta_language_structure_Constraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred32_Kermeta

    // $ANTLR start synpred44_Kermeta
    public final void synpred44_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ModelingUnit c0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7337:2: (c0= parse_org_kermeta_language_structure_ModelingUnit )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7337:2: c0= parse_org_kermeta_language_structure_ModelingUnit
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_synpred44_Kermeta3504);
        c0=parse_org_kermeta_language_structure_ModelingUnit();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred44_Kermeta

    // $ANTLR start synpred45_Kermeta
    public final void synpred45_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Using c1 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7338:4: (c1= parse_org_kermeta_language_structure_Using )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7338:4: c1= parse_org_kermeta_language_structure_Using
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Using_in_synpred45_Kermeta3514);
        c1=parse_org_kermeta_language_structure_Using();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred45_Kermeta

    // $ANTLR start synpred46_Kermeta
    public final void synpred46_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Require c2 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7339:4: (c2= parse_org_kermeta_language_structure_Require )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7339:4: c2= parse_org_kermeta_language_structure_Require
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Require_in_synpred46_Kermeta3524);
        c2=parse_org_kermeta_language_structure_Require();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred46_Kermeta

    // $ANTLR start synpred47_Kermeta
    public final void synpred47_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Package c3 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7340:4: (c3= parse_org_kermeta_language_structure_Package )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7340:4: c3= parse_org_kermeta_language_structure_Package
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred47_Kermeta3534);
        c3=parse_org_kermeta_language_structure_Package();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred47_Kermeta

    // $ANTLR start synpred48_Kermeta
    public final void synpred48_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ClassDefinition c4 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7341:4: (c4= parse_org_kermeta_language_structure_ClassDefinition )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7341:4: c4= parse_org_kermeta_language_structure_ClassDefinition
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_synpred48_Kermeta3544);
        c4=parse_org_kermeta_language_structure_ClassDefinition();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred48_Kermeta

    // $ANTLR start synpred49_Kermeta
    public final void synpred49_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Property c5 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7342:4: (c5= parse_org_kermeta_language_structure_Property )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7342:4: c5= parse_org_kermeta_language_structure_Property
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_synpred49_Kermeta3554);
        c5=parse_org_kermeta_language_structure_Property();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred49_Kermeta

    // $ANTLR start synpred50_Kermeta
    public final void synpred50_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Operation c6 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7343:4: (c6= parse_org_kermeta_language_structure_Operation )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7343:4: c6= parse_org_kermeta_language_structure_Operation
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_synpred50_Kermeta3564);
        c6=parse_org_kermeta_language_structure_Operation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred50_Kermeta

    // $ANTLR start synpred51_Kermeta
    public final void synpred51_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Parameter c7 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7344:4: (c7= parse_org_kermeta_language_structure_Parameter )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7344:4: c7= parse_org_kermeta_language_structure_Parameter
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_synpred51_Kermeta3574);
        c7=parse_org_kermeta_language_structure_Parameter();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred51_Kermeta

    // $ANTLR start synpred52_Kermeta
    public final void synpred52_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Class c8 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7345:4: (c8= parse_org_kermeta_language_structure_Class )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7345:4: c8= parse_org_kermeta_language_structure_Class
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Class_in_synpred52_Kermeta3584);
        c8=parse_org_kermeta_language_structure_Class();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred52_Kermeta

    // $ANTLR start synpred53_Kermeta
    public final void synpred53_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Enumeration c9 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7346:4: (c9= parse_org_kermeta_language_structure_Enumeration )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7346:4: c9= parse_org_kermeta_language_structure_Enumeration
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_synpred53_Kermeta3594);
        c9=parse_org_kermeta_language_structure_Enumeration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred53_Kermeta

    // $ANTLR start synpred54_Kermeta
    public final void synpred54_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.EnumerationLiteral c10 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7347:4: (c10= parse_org_kermeta_language_structure_EnumerationLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7347:4: c10= parse_org_kermeta_language_structure_EnumerationLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_synpred54_Kermeta3604);
        c10=parse_org_kermeta_language_structure_EnumerationLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred54_Kermeta

    // $ANTLR start synpred55_Kermeta
    public final void synpred55_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Constraint c11 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7348:4: (c11= parse_org_kermeta_language_structure_Constraint )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7348:4: c11= parse_org_kermeta_language_structure_Constraint
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred55_Kermeta3614);
        c11=parse_org_kermeta_language_structure_Constraint();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred55_Kermeta

    // $ANTLR start synpred56_Kermeta
    public final void synpred56_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.PrimitiveType c12 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7349:4: (c12= parse_org_kermeta_language_structure_PrimitiveType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7349:4: c12= parse_org_kermeta_language_structure_PrimitiveType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_synpred56_Kermeta3624);
        c12=parse_org_kermeta_language_structure_PrimitiveType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred56_Kermeta

    // $ANTLR start synpred57_Kermeta
    public final void synpred57_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.UnresolvedType c13 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7350:4: (c13= parse_org_kermeta_language_structure_UnresolvedType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7350:4: c13= parse_org_kermeta_language_structure_UnresolvedType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_synpred57_Kermeta3634);
        c13=parse_org_kermeta_language_structure_UnresolvedType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred57_Kermeta

    // $ANTLR start synpred58_Kermeta
    public final void synpred58_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.VoidType c14 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7351:4: (c14= parse_org_kermeta_language_structure_VoidType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7351:4: c14= parse_org_kermeta_language_structure_VoidType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_VoidType_in_synpred58_Kermeta3644);
        c14=parse_org_kermeta_language_structure_VoidType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred58_Kermeta

    // $ANTLR start synpred60_Kermeta
    public final void synpred60_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ModelType c16 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7353:4: (c16= parse_org_kermeta_language_structure_ModelType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7353:4: c16= parse_org_kermeta_language_structure_ModelType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelType_in_synpred60_Kermeta3664);
        c16=parse_org_kermeta_language_structure_ModelType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred60_Kermeta

    // $ANTLR start synpred62_Kermeta
    public final void synpred62_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.MultiplicityElement c18 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7355:4: (c18= parse_org_kermeta_language_structure_MultiplicityElement )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7355:4: c18= parse_org_kermeta_language_structure_MultiplicityElement
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_synpred62_Kermeta3684);
        c18=parse_org_kermeta_language_structure_MultiplicityElement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred62_Kermeta

    // $ANTLR start synpred63_Kermeta
    public final void synpred63_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.TypeDefinition c19 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7356:4: (c19= parse_org_kermeta_language_structure_TypeDefinition )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7356:4: c19= parse_org_kermeta_language_structure_TypeDefinition
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred63_Kermeta3694);
        c19=parse_org_kermeta_language_structure_TypeDefinition();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred63_Kermeta

    // $ANTLR start synpred65_Kermeta
    public final void synpred65_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ObjectTypeVariable c21 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7358:4: (c21= parse_org_kermeta_language_structure_ObjectTypeVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7358:4: c21= parse_org_kermeta_language_structure_ObjectTypeVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_synpred65_Kermeta3714);
        c21=parse_org_kermeta_language_structure_ObjectTypeVariable();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred65_Kermeta

    // $ANTLR start synpred67_Kermeta
    public final void synpred67_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.VirtualType c23 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7360:4: (c23= parse_org_kermeta_language_structure_VirtualType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7360:4: c23= parse_org_kermeta_language_structure_VirtualType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_synpred67_Kermeta3734);
        c23=parse_org_kermeta_language_structure_VirtualType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred67_Kermeta

    // $ANTLR start synpred72_Kermeta
    public final void synpred72_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.TypeReference c28 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7365:4: (c28= parse_org_kermeta_language_behavior_TypeReference )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7365:4: c28= parse_org_kermeta_language_behavior_TypeReference
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_synpred72_Kermeta3784);
        c28=parse_org_kermeta_language_behavior_TypeReference();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred72_Kermeta

    // $ANTLR start synpred74_Kermeta
    public final void synpred74_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.BooleanLiteral c30 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7367:4: (c30= parse_org_kermeta_language_behavior_BooleanLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7367:4: c30= parse_org_kermeta_language_behavior_BooleanLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred74_Kermeta3804);
        c30=parse_org_kermeta_language_behavior_BooleanLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred74_Kermeta

    // $ANTLR start synpred75_Kermeta
    public final void synpred75_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.IntegerLiteral c31 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7368:4: (c31= parse_org_kermeta_language_behavior_IntegerLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7368:4: c31= parse_org_kermeta_language_behavior_IntegerLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred75_Kermeta3814);
        c31=parse_org_kermeta_language_behavior_IntegerLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred75_Kermeta

    // $ANTLR start synpred76_Kermeta
    public final void synpred76_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.StringLiteral c32 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7369:4: (c32= parse_org_kermeta_language_behavior_StringLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7369:4: c32= parse_org_kermeta_language_behavior_StringLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred76_Kermeta3824);
        c32=parse_org_kermeta_language_behavior_StringLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred76_Kermeta

    // $ANTLR start synpred80_Kermeta
    public final void synpred80_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.TypeLiteral c36 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7373:4: (c36= parse_org_kermeta_language_behavior_TypeLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7373:4: c36= parse_org_kermeta_language_behavior_TypeLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_synpred80_Kermeta3864);
        c36=parse_org_kermeta_language_behavior_TypeLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred80_Kermeta

    // $ANTLR start synpred81_Kermeta
    public final void synpred81_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult c37 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7374:4: (c37= parse_org_kermeta_language_behavior_CallResult )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7374:4: c37= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred81_Kermeta3874);
        c37=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred81_Kermeta

    // $ANTLR start synpred83_Kermeta
    public final void synpred83_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.Assignment c39 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7376:4: (c39= parse_org_kermeta_language_behavior_Assignment )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7376:4: c39= parse_org_kermeta_language_behavior_Assignment
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred83_Kermeta3894);
        c39=parse_org_kermeta_language_behavior_Assignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred83_Kermeta

    // $ANTLR start synpred84_Kermeta
    public final void synpred84_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable c40 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7377:4: (c40= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7377:4: c40= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred84_Kermeta3904);
        c40=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred84_Kermeta

    // $ANTLR start synpred85_Kermeta
    public final void synpred85_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.SelfExpression c41 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7378:4: (c41= parse_org_kermeta_language_behavior_SelfExpression )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7378:4: c41= parse_org_kermeta_language_behavior_SelfExpression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred85_Kermeta3914);
        c41=parse_org_kermeta_language_behavior_SelfExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred85_Kermeta

    // $ANTLR start synpred86_Kermeta
    public final void synpred86_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature c42 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7379:4: (c42= parse_org_kermeta_language_behavior_CallFeature )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7379:4: c42= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred86_Kermeta3924);
        c42=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred86_Kermeta

    // $ANTLR start synpred87_Kermeta
    public final void synpred87_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.JavaStaticCall c43 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7380:4: (c43= parse_org_kermeta_language_behavior_JavaStaticCall )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7380:4: c43= parse_org_kermeta_language_behavior_JavaStaticCall
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred87_Kermeta3934);
        c43=parse_org_kermeta_language_behavior_JavaStaticCall();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred87_Kermeta

    // $ANTLR start synpred88_Kermeta
    public final void synpred88_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.VoidLiteral c44 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7381:4: (c44= parse_org_kermeta_language_behavior_VoidLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7381:4: c44= parse_org_kermeta_language_behavior_VoidLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_synpred88_Kermeta3944);
        c44=parse_org_kermeta_language_behavior_VoidLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred88_Kermeta

    // $ANTLR start synpred105_Kermeta
    public final void synpred105_Kermeta_fragment() throws RecognitionException {   
        Token a0=null;

        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8429:3: ( (a0= IDENTIFIER ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8429:3: (a0= IDENTIFIER )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8429:3: (a0= IDENTIFIER )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8430:4: a0= IDENTIFIER
        {
        a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred105_Kermeta5294); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred105_Kermeta

    // $ANTLR start synpred168_Kermeta
    public final void synpred168_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.Assignment a4_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12680:8: ( (a4_0= parse_org_kermeta_language_behavior_Assignment ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12680:8: (a4_0= parse_org_kermeta_language_behavior_Assignment )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12680:8: (a4_0= parse_org_kermeta_language_behavior_Assignment )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12681:5: a4_0= parse_org_kermeta_language_behavior_Assignment
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred168_Kermeta10326);
        a4_0=parse_org_kermeta_language_behavior_Assignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred168_Kermeta

    // $ANTLR start synpred169_Kermeta
    public final void synpred169_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature a5_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12718:8: ( (a5_0= parse_org_kermeta_language_behavior_CallFeature ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12718:8: (a5_0= parse_org_kermeta_language_behavior_CallFeature )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12718:8: (a5_0= parse_org_kermeta_language_behavior_CallFeature )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12719:5: a5_0= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred169_Kermeta10368);
        a5_0=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred169_Kermeta

    // $ANTLR start synpred170_Kermeta
    public final void synpred170_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable a6_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12756:8: ( (a6_0= parse_org_kermeta_language_behavior_CallVariable ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12756:8: (a6_0= parse_org_kermeta_language_behavior_CallVariable )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12756:8: (a6_0= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12757:5: a6_0= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred170_Kermeta10410);
        a6_0=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred170_Kermeta

    // $ANTLR start synpred172_Kermeta
    public final void synpred172_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult a8_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12832:8: ( (a8_0= parse_org_kermeta_language_behavior_CallResult ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12832:8: (a8_0= parse_org_kermeta_language_behavior_CallResult )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12832:8: (a8_0= parse_org_kermeta_language_behavior_CallResult )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12833:5: a8_0= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred172_Kermeta10494);
        a8_0=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred172_Kermeta

    // $ANTLR start synpred173_Kermeta
    public final void synpred173_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.JavaStaticCall a9_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12870:8: ( (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12870:8: (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12870:8: (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12871:5: a9_0= parse_org_kermeta_language_behavior_JavaStaticCall
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred173_Kermeta10536);
        a9_0=parse_org_kermeta_language_behavior_JavaStaticCall();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred173_Kermeta

    // $ANTLR start synpred180_Kermeta
    public final void synpred180_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.BooleanLiteral a4_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13811:3: ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13811:3: (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13811:3: (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13812:4: a4_0= parse_org_kermeta_language_behavior_BooleanLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred180_Kermeta11307);
        a4_0=parse_org_kermeta_language_behavior_BooleanLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred180_Kermeta

    // $ANTLR start synpred182_Kermeta
    public final void synpred182_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.Assignment a6_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13883:6: ( (a6_0= parse_org_kermeta_language_behavior_Assignment ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13883:6: (a6_0= parse_org_kermeta_language_behavior_Assignment )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13883:6: (a6_0= parse_org_kermeta_language_behavior_Assignment )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13884:4: a6_0= parse_org_kermeta_language_behavior_Assignment
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred182_Kermeta11375);
        a6_0=parse_org_kermeta_language_behavior_Assignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred182_Kermeta

    // $ANTLR start synpred183_Kermeta
    public final void synpred183_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature a7_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13919:6: ( (a7_0= parse_org_kermeta_language_behavior_CallFeature ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13919:6: (a7_0= parse_org_kermeta_language_behavior_CallFeature )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13919:6: (a7_0= parse_org_kermeta_language_behavior_CallFeature )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13920:4: a7_0= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred183_Kermeta11409);
        a7_0=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred183_Kermeta

    // $ANTLR start synpred185_Kermeta
    public final void synpred185_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult a9_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13991:6: ( (a9_0= parse_org_kermeta_language_behavior_CallResult ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13991:6: (a9_0= parse_org_kermeta_language_behavior_CallResult )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13991:6: (a9_0= parse_org_kermeta_language_behavior_CallResult )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13992:4: a9_0= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred185_Kermeta11477);
        a9_0=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred185_Kermeta

    // $ANTLR start synpred186_Kermeta
    public final void synpred186_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable a10_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14027:6: ( (a10_0= parse_org_kermeta_language_behavior_CallVariable ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14027:6: (a10_0= parse_org_kermeta_language_behavior_CallVariable )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14027:6: (a10_0= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14028:4: a10_0= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred186_Kermeta11511);
        a10_0=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred186_Kermeta

    // $ANTLR start synpred190_Kermeta
    public final void synpred190_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.Assignment a16_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14213:8: ( (a16_0= parse_org_kermeta_language_behavior_Assignment ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14213:8: (a16_0= parse_org_kermeta_language_behavior_Assignment )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14213:8: (a16_0= parse_org_kermeta_language_behavior_Assignment )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14214:5: a16_0= parse_org_kermeta_language_behavior_Assignment
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred190_Kermeta11728);
        a16_0=parse_org_kermeta_language_behavior_Assignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred190_Kermeta

    // $ANTLR start synpred191_Kermeta
    public final void synpred191_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature a17_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14236:8: ( (a17_0= parse_org_kermeta_language_behavior_CallFeature ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14236:8: (a17_0= parse_org_kermeta_language_behavior_CallFeature )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14236:8: (a17_0= parse_org_kermeta_language_behavior_CallFeature )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14237:5: a17_0= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred191_Kermeta11770);
        a17_0=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred191_Kermeta

    // $ANTLR start synpred193_Kermeta
    public final void synpred193_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult a19_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14282:8: ( (a19_0= parse_org_kermeta_language_behavior_CallResult ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14282:8: (a19_0= parse_org_kermeta_language_behavior_CallResult )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14282:8: (a19_0= parse_org_kermeta_language_behavior_CallResult )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14283:5: a19_0= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred193_Kermeta11854);
        a19_0=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred193_Kermeta

    // $ANTLR start synpred197_Kermeta
    public final void synpred197_Kermeta_fragment() throws RecognitionException {   
        Token a4=null;
        org.kermeta.language.behavior.Expression a5_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14592:3: ( (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14592:3: (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14592:3: (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14593:4: a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) )
        {
        a4=(Token)match(input,78,FOLLOW_78_in_synpred197_Kermeta12157); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14623:4: ( (a5_0= parse_org_kermeta_language_behavior_Expression ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14624:5: (a5_0= parse_org_kermeta_language_behavior_Expression )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14624:5: (a5_0= parse_org_kermeta_language_behavior_Expression )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14625:6: a5_0= parse_org_kermeta_language_behavior_Expression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred197_Kermeta12190);
        a5_0=parse_org_kermeta_language_behavior_Expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred197_Kermeta

    // $ANTLR start synpred201_Kermeta
    public final void synpred201_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature a0_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15366:4: ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15366:4: (a0_0= parse_org_kermeta_language_behavior_CallFeature )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15366:4: (a0_0= parse_org_kermeta_language_behavior_CallFeature )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15367:5: a0_0= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred201_Kermeta12732);
        a0_0=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred201_Kermeta

    // $ANTLR start synpred202_Kermeta
    public final void synpred202_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable a1_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15390:8: ( (a1_0= parse_org_kermeta_language_behavior_CallVariable ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15390:8: (a1_0= parse_org_kermeta_language_behavior_CallVariable )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15390:8: (a1_0= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15391:5: a1_0= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred202_Kermeta12774);
        a1_0=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred202_Kermeta

    // $ANTLR start synpred204_Kermeta
    public final void synpred204_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature a6_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15540:4: ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15540:4: (a6_0= parse_org_kermeta_language_behavior_CallFeature )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15540:4: (a6_0= parse_org_kermeta_language_behavior_CallFeature )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15541:5: a6_0= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred204_Kermeta12967);
        a6_0=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred204_Kermeta

    // $ANTLR start synpred205_Kermeta
    public final void synpred205_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.SelfExpression a7_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15602:8: ( (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15602:8: (a7_0= parse_org_kermeta_language_behavior_SelfExpression )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15602:8: (a7_0= parse_org_kermeta_language_behavior_SelfExpression )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15603:5: a7_0= parse_org_kermeta_language_behavior_SelfExpression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred205_Kermeta13009);
        a7_0=parse_org_kermeta_language_behavior_SelfExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred205_Kermeta

    // $ANTLR start synpred207_Kermeta
    public final void synpred207_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult a9_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15726:8: ( (a9_0= parse_org_kermeta_language_behavior_CallResult ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15726:8: (a9_0= parse_org_kermeta_language_behavior_CallResult )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15726:8: (a9_0= parse_org_kermeta_language_behavior_CallResult )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15727:5: a9_0= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred207_Kermeta13093);
        a9_0=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred207_Kermeta

    // $ANTLR start synpred209_Kermeta
    public final void synpred209_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable a11_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15850:8: ( (a11_0= parse_org_kermeta_language_behavior_CallVariable ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15850:8: (a11_0= parse_org_kermeta_language_behavior_CallVariable )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15850:8: (a11_0= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15851:5: a11_0= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred209_Kermeta13177);
        a11_0=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred209_Kermeta

    // $ANTLR start synpred211_Kermeta
    public final void synpred211_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.IntegerLiteral a13_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15974:8: ( (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15974:8: (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15974:8: (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15975:5: a13_0= parse_org_kermeta_language_behavior_IntegerLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred211_Kermeta13261);
        a13_0=parse_org_kermeta_language_behavior_IntegerLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred211_Kermeta

    // $ANTLR start synpred212_Kermeta
    public final void synpred212_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.BooleanLiteral a14_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16036:8: ( (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16036:8: (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16036:8: (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16037:5: a14_0= parse_org_kermeta_language_behavior_BooleanLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred212_Kermeta13303);
        a14_0=parse_org_kermeta_language_behavior_BooleanLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred212_Kermeta

    // $ANTLR start synpred215_Kermeta
    public final void synpred215_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable a2_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16444:6: ( (a2_0= parse_org_kermeta_language_behavior_CallVariable ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16444:6: (a2_0= parse_org_kermeta_language_behavior_CallVariable )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16444:6: (a2_0= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16445:4: a2_0= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred215_Kermeta13546);
        a2_0=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred215_Kermeta

    // $ANTLR start synpred218_Kermeta
    public final void synpred218_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.StringLiteral a5_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16540:6: ( (a5_0= parse_org_kermeta_language_behavior_StringLiteral ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16540:6: (a5_0= parse_org_kermeta_language_behavior_StringLiteral )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16540:6: (a5_0= parse_org_kermeta_language_behavior_StringLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16541:4: a5_0= parse_org_kermeta_language_behavior_StringLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred218_Kermeta13648);
        a5_0=parse_org_kermeta_language_behavior_StringLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred218_Kermeta

    // $ANTLR start synpred219_Kermeta
    public final void synpred219_Kermeta_fragment() throws RecognitionException {   
        Token a7=null;
        Token a8=null;

        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16620:4: (a7= '.' (a8= IDENTIFIER ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16620:4: a7= '.' (a8= IDENTIFIER )
        {
        a7=(Token)match(input,86,FOLLOW_86_in_synpred219_Kermeta13721); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16632:4: (a8= IDENTIFIER )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16633:5: a8= IDENTIFIER
        {
        a8=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred219_Kermeta13747); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred219_Kermeta

    // $ANTLR start synpred223_Kermeta
    public final void synpred223_Kermeta_fragment() throws RecognitionException {   
        Token a16=null;
        Token a17=null;

        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16876:8: (a16= '.' (a17= IDENTIFIER ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16876:8: a16= '.' (a17= IDENTIFIER )
        {
        a16=(Token)match(input,86,FOLLOW_86_in_synpred223_Kermeta14117); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16888:4: (a17= IDENTIFIER )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16889:5: a17= IDENTIFIER
        {
        a17=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred223_Kermeta14143); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred223_Kermeta

    // $ANTLR start synpred233_Kermeta
    public final void synpred233_Kermeta_fragment() throws RecognitionException {   
        Token a29=null;
        Token a30=null;
        Token a31=null;
        Token a32=null;
        org.kermeta.language.behavior.Expression a33_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17361:4: ( ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17361:4: ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17361:4: ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17362:5: (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17362:5: (a29= '+' | a30= '-' | a31= '/' | a32= '*' )
        int alt166=4;
        switch ( input.LA(1) ) {
        case 88:
            {
            alt166=1;
            }
            break;
        case 89:
            {
            alt166=2;
            }
            break;
        case 90:
            {
            alt166=3;
            }
            break;
        case 91:
            {
            alt166=4;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 166, 0, input);

            throw nvae;
        }

        switch (alt166) {
            case 1 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17363:6: a29= '+'
                {
                a29=(Token)match(input,88,FOLLOW_88_in_synpred233_Kermeta14595); if (state.failed) return ;

                }
                break;
            case 2 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17394:12: a30= '-'
                {
                a30=(Token)match(input,89,FOLLOW_89_in_synpred233_Kermeta14633); if (state.failed) return ;

                }
                break;
            case 3 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17425:12: a31= '/'
                {
                a31=(Token)match(input,90,FOLLOW_90_in_synpred233_Kermeta14671); if (state.failed) return ;

                }
                break;
            case 4 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17456:12: a32= '*'
                {
                a32=(Token)match(input,91,FOLLOW_91_in_synpred233_Kermeta14709); if (state.failed) return ;

                }
                break;

        }

        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17510:5: (a33_0= parse_org_kermeta_language_behavior_Expression )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17511:6: a33_0= parse_org_kermeta_language_behavior_Expression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred233_Kermeta14758);
        a33_0=parse_org_kermeta_language_behavior_Expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred233_Kermeta

    // $ANTLR start synpred236_Kermeta
    public final void synpred236_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable a35_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17751:6: ( (a35_0= parse_org_kermeta_language_behavior_CallVariable ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17751:6: (a35_0= parse_org_kermeta_language_behavior_CallVariable )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17751:6: (a35_0= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17752:4: a35_0= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred236_Kermeta14863);
        a35_0=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred236_Kermeta

    // $ANTLR start synpred239_Kermeta
    public final void synpred239_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.StringLiteral a38_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17970:6: ( (a38_0= parse_org_kermeta_language_behavior_StringLiteral ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17970:6: (a38_0= parse_org_kermeta_language_behavior_StringLiteral )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17970:6: (a38_0= parse_org_kermeta_language_behavior_StringLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17971:4: a38_0= parse_org_kermeta_language_behavior_StringLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred239_Kermeta14965);
        a38_0=parse_org_kermeta_language_behavior_StringLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred239_Kermeta

    // $ANTLR start synpred240_Kermeta
    public final void synpred240_Kermeta_fragment() throws RecognitionException {   
        Token a40=null;
        Token a41=null;

        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18173:4: (a40= '.' (a41= IDENTIFIER ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18173:4: a40= '.' (a41= IDENTIFIER )
        {
        a40=(Token)match(input,86,FOLLOW_86_in_synpred240_Kermeta15038); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18185:4: (a41= IDENTIFIER )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18186:5: a41= IDENTIFIER
        {
        a41=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred240_Kermeta15064); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred240_Kermeta

    // $ANTLR start synpred244_Kermeta
    public final void synpred244_Kermeta_fragment() throws RecognitionException {   
        Token a49=null;
        Token a50=null;

        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18511:8: (a49= '.' (a50= IDENTIFIER ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18511:8: a49= '.' (a50= IDENTIFIER )
        {
        a49=(Token)match(input,86,FOLLOW_86_in_synpred244_Kermeta15434); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18523:4: (a50= IDENTIFIER )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18524:5: a50= IDENTIFIER
        {
        a50=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred244_Kermeta15460); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred244_Kermeta

    // $ANTLR start synpred250_Kermeta
    public final void synpred250_Kermeta_fragment() throws RecognitionException {   
        Token a55=null;
        Token a56=null;
        Token a57=null;
        Token a58=null;
        org.kermeta.language.behavior.Expression a59_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18863:4: ( ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18863:4: ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18863:4: ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18864:5: (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18864:5: (a55= '+' | a56= '-' | a57= '/' | a58= '*' )
        int alt183=4;
        switch ( input.LA(1) ) {
        case 88:
            {
            alt183=1;
            }
            break;
        case 89:
            {
            alt183=2;
            }
            break;
        case 90:
            {
            alt183=3;
            }
            break;
        case 91:
            {
            alt183=4;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 183, 0, input);

            throw nvae;
        }

        switch (alt183) {
            case 1 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18865:6: a55= '+'
                {
                a55=(Token)match(input,88,FOLLOW_88_in_synpred250_Kermeta15646); if (state.failed) return ;

                }
                break;
            case 2 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18896:12: a56= '-'
                {
                a56=(Token)match(input,89,FOLLOW_89_in_synpred250_Kermeta15684); if (state.failed) return ;

                }
                break;
            case 3 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18927:12: a57= '/'
                {
                a57=(Token)match(input,90,FOLLOW_90_in_synpred250_Kermeta15722); if (state.failed) return ;

                }
                break;
            case 4 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18958:12: a58= '*'
                {
                a58=(Token)match(input,91,FOLLOW_91_in_synpred250_Kermeta15760); if (state.failed) return ;

                }
                break;

        }

        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19012:5: (a59_0= parse_org_kermeta_language_behavior_Expression )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19013:6: a59_0= parse_org_kermeta_language_behavior_Expression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred250_Kermeta15809);
        a59_0=parse_org_kermeta_language_behavior_Expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred250_Kermeta

    // $ANTLR start synpred269_Kermeta
    public final void synpred269_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.BooleanLiteral c2 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20676:4: (c2= parse_org_kermeta_language_behavior_BooleanLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20676:4: c2= parse_org_kermeta_language_behavior_BooleanLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred269_Kermeta17632);
        c2=parse_org_kermeta_language_behavior_BooleanLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred269_Kermeta

    // $ANTLR start synpred270_Kermeta
    public final void synpred270_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.IntegerLiteral c3 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20677:4: (c3= parse_org_kermeta_language_behavior_IntegerLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20677:4: c3= parse_org_kermeta_language_behavior_IntegerLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred270_Kermeta17642);
        c3=parse_org_kermeta_language_behavior_IntegerLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred270_Kermeta

    // $ANTLR start synpred271_Kermeta
    public final void synpred271_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.StringLiteral c4 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20678:4: (c4= parse_org_kermeta_language_behavior_StringLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20678:4: c4= parse_org_kermeta_language_behavior_StringLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred271_Kermeta17652);
        c4=parse_org_kermeta_language_behavior_StringLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred271_Kermeta

    // $ANTLR start synpred275_Kermeta
    public final void synpred275_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.TypeLiteral c8 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20682:4: (c8= parse_org_kermeta_language_behavior_TypeLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20682:4: c8= parse_org_kermeta_language_behavior_TypeLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_synpred275_Kermeta17692);
        c8=parse_org_kermeta_language_behavior_TypeLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred275_Kermeta

    // $ANTLR start synpred276_Kermeta
    public final void synpred276_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult c9 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20683:4: (c9= parse_org_kermeta_language_behavior_CallResult )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20683:4: c9= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred276_Kermeta17702);
        c9=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred276_Kermeta

    // $ANTLR start synpred278_Kermeta
    public final void synpred278_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.Assignment c11 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20685:4: (c11= parse_org_kermeta_language_behavior_Assignment )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20685:4: c11= parse_org_kermeta_language_behavior_Assignment
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred278_Kermeta17722);
        c11=parse_org_kermeta_language_behavior_Assignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred278_Kermeta

    // $ANTLR start synpred279_Kermeta
    public final void synpred279_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable c12 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20686:4: (c12= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20686:4: c12= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred279_Kermeta17732);
        c12=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred279_Kermeta

    // $ANTLR start synpred280_Kermeta
    public final void synpred280_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.SelfExpression c13 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20687:4: (c13= parse_org_kermeta_language_behavior_SelfExpression )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20687:4: c13= parse_org_kermeta_language_behavior_SelfExpression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred280_Kermeta17742);
        c13=parse_org_kermeta_language_behavior_SelfExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred280_Kermeta

    // $ANTLR start synpred281_Kermeta
    public final void synpred281_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature c14 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20688:4: (c14= parse_org_kermeta_language_behavior_CallFeature )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20688:4: c14= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred281_Kermeta17752);
        c14=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred281_Kermeta

    // $ANTLR start synpred282_Kermeta
    public final void synpred282_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.JavaStaticCall c15 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20689:4: (c15= parse_org_kermeta_language_behavior_JavaStaticCall )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20689:4: c15= parse_org_kermeta_language_behavior_JavaStaticCall
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred282_Kermeta17762);
        c15=parse_org_kermeta_language_behavior_JavaStaticCall();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred282_Kermeta

    // $ANTLR start synpred286_Kermeta
    public final void synpred286_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Class c0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20699:2: (c0= parse_org_kermeta_language_structure_Class )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20699:2: c0= parse_org_kermeta_language_structure_Class
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Class_in_synpred286_Kermeta17823);
        c0=parse_org_kermeta_language_structure_Class();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred286_Kermeta

    // $ANTLR start synpred289_Kermeta
    public final void synpred289_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.UnresolvedType c3 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20702:4: (c3= parse_org_kermeta_language_structure_UnresolvedType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20702:4: c3= parse_org_kermeta_language_structure_UnresolvedType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_synpred289_Kermeta17853);
        c3=parse_org_kermeta_language_structure_UnresolvedType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred289_Kermeta

    // $ANTLR start synpred291_Kermeta
    public final void synpred291_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ModelType c5 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20704:4: (c5= parse_org_kermeta_language_structure_ModelType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20704:4: c5= parse_org_kermeta_language_structure_ModelType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelType_in_synpred291_Kermeta17873);
        c5=parse_org_kermeta_language_structure_ModelType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred291_Kermeta

    // $ANTLR start synpred292_Kermeta
    public final void synpred292_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ObjectTypeVariable c6 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20705:4: (c6= parse_org_kermeta_language_structure_ObjectTypeVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20705:4: c6= parse_org_kermeta_language_structure_ObjectTypeVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_synpred292_Kermeta17883);
        c6=parse_org_kermeta_language_structure_ObjectTypeVariable();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred292_Kermeta

    // $ANTLR start synpred294_Kermeta
    public final void synpred294_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.VirtualType c8 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20707:4: (c8= parse_org_kermeta_language_structure_VirtualType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20707:4: c8= parse_org_kermeta_language_structure_VirtualType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_synpred294_Kermeta17903);
        c8=parse_org_kermeta_language_structure_VirtualType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred294_Kermeta

    // Delegated rules

    public final boolean synpred1_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred236_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred236_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred204_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred204_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred223_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred223_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred170_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred170_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred173_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred173_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred271_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred271_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred87_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred286_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred286_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred190_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred190_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred233_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred233_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred202_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred202_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred292_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred292_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred209_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred209_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred56_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred56_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred197_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred197_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred86_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred183_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred183_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred50_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred168_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred168_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred75_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred75_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred212_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred212_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred185_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred185_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred250_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred250_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred74_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred74_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred182_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred182_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred240_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred240_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred280_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred280_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred81_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred215_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred215_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred291_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred291_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred191_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred191_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred244_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred244_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred239_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred239_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred84_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred84_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred270_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred270_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred186_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred186_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred85_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred85_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred169_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred169_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred172_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred172_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred83_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred83_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred279_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred279_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred207_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred207_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred105_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred105_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred294_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred294_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred219_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred219_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred48_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred193_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred193_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred269_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred269_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred289_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred289_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred282_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred282_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred80_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred80_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred76_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred76_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred67_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred67_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred278_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred278_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred180_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred180_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred211_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred211_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred201_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred201_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred281_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred281_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred205_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred205_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred275_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred275_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred218_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred218_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred276_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred276_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred88_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred88_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA10 dfa10 = new DFA10(this);
    protected DFA9 dfa9 = new DFA9(this);
    protected DFA6 dfa6 = new DFA6(this);
    protected DFA11 dfa11 = new DFA11(this);
    protected DFA37 dfa37 = new DFA37(this);
    protected DFA67 dfa67 = new DFA67(this);
    protected DFA73 dfa73 = new DFA73(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA83 dfa83 = new DFA83(this);
    protected DFA112 dfa112 = new DFA112(this);
    protected DFA113 dfa113 = new DFA113(this);
    protected DFA119 dfa119 = new DFA119(this);
    static final String DFA1_eotS =
        "\27\uffff";
    static final String DFA1_eofS =
        "\1\1\26\uffff";
    static final String DFA1_minS =
        "\1\4\3\uffff\1\0\11\uffff\4\0\5\uffff";
    static final String DFA1_maxS =
        "\1\65\3\uffff\1\0\11\uffff\4\0\5\uffff";
    static final String DFA1_acceptS =
        "\1\uffff\1\1\13\uffff\1\2\4\uffff\1\6\1\4\1\5\1\7\1\3";
    static final String DFA1_specialS =
        "\4\uffff\1\0\11\uffff\1\1\1\2\1\3\1\4\5\uffff}>";
    static final String[] DFA1_transitionS = {
            "\1\4\1\1\10\uffff\3\1\3\uffff\3\1\2\uffff\1\16\1\17\1\uffff"+
            "\1\20\2\uffff\1\21\3\uffff\1\1\5\uffff\1\15\1\1\7\uffff\1\22"+
            "\2\uffff\1\1",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA1_eot = DFA.unpackEncodedString(DFA1_eotS);
    static final short[] DFA1_eof = DFA.unpackEncodedString(DFA1_eofS);
    static final char[] DFA1_min = DFA.unpackEncodedStringToUnsignedChars(DFA1_minS);
    static final char[] DFA1_max = DFA.unpackEncodedStringToUnsignedChars(DFA1_maxS);
    static final short[] DFA1_accept = DFA.unpackEncodedString(DFA1_acceptS);
    static final short[] DFA1_special = DFA.unpackEncodedString(DFA1_specialS);
    static final short[][] DFA1_transition;

    static {
        int numStates = DFA1_transitionS.length;
        DFA1_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA1_transition[i] = DFA.unpackEncodedString(DFA1_transitionS[i]);
        }
    }

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = DFA1_eot;
            this.eof = DFA1_eof;
            this.min = DFA1_min;
            this.max = DFA1_max;
            this.accept = DFA1_accept;
            this.special = DFA1_special;
            this.transition = DFA1_transition;
        }
        public String getDescription() {
            return "4437:2: (c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Model | c2= parse_org_kermeta_language_structure_Property | c3= parse_org_kermeta_language_structure_Operation | c4= parse_org_kermeta_language_structure_Parameter | c5= parse_org_kermeta_language_structure_MultiplicityElement | c6= parse_org_kermeta_language_behavior_TypeReference )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA1_4 = input.LA(1);

                         
                        int index1_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_Kermeta()) ) {s = 1;}

                        else if ( (synpred4_Kermeta()) ) {s = 19;}

                        else if ( (synpred5_Kermeta()) ) {s = 20;}

                        else if ( (synpred6_Kermeta()) ) {s = 18;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index1_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA1_14 = input.LA(1);

                         
                        int index1_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_Kermeta()) ) {s = 22;}

                        else if ( (synpred6_Kermeta()) ) {s = 18;}

                         
                        input.seek(index1_14);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA1_15 = input.LA(1);

                         
                        int index1_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_Kermeta()) ) {s = 22;}

                        else if ( (synpred6_Kermeta()) ) {s = 18;}

                         
                        input.seek(index1_15);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA1_16 = input.LA(1);

                         
                        int index1_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_Kermeta()) ) {s = 22;}

                        else if ( (synpred6_Kermeta()) ) {s = 18;}

                         
                        input.seek(index1_16);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA1_17 = input.LA(1);

                         
                        int index1_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_Kermeta()) ) {s = 19;}

                        else if ( (synpred6_Kermeta()) ) {s = 18;}

                         
                        input.seek(index1_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 1, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA10_eotS =
        "\15\uffff";
    static final String DFA10_eofS =
        "\1\12\14\uffff";
    static final String DFA10_minS =
        "\1\4\10\0\4\uffff";
    static final String DFA10_maxS =
        "\1\65\10\0\4\uffff";
    static final String DFA10_acceptS =
        "\11\uffff\1\1\1\2\2\uffff";
    static final String DFA10_specialS =
        "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\4\uffff}>";
    static final String[] DFA10_transitionS = {
            "\1\1\1\7\12\uffff\1\12\1\uffff\1\11\1\12\1\3\1\4\1\5\14\uffff"+
            "\1\6\6\uffff\1\10\12\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA10_eot = DFA.unpackEncodedString(DFA10_eotS);
    static final short[] DFA10_eof = DFA.unpackEncodedString(DFA10_eofS);
    static final char[] DFA10_min = DFA.unpackEncodedStringToUnsignedChars(DFA10_minS);
    static final char[] DFA10_max = DFA.unpackEncodedStringToUnsignedChars(DFA10_maxS);
    static final short[] DFA10_accept = DFA.unpackEncodedString(DFA10_acceptS);
    static final short[] DFA10_special = DFA.unpackEncodedString(DFA10_specialS);
    static final short[][] DFA10_transition;

    static {
        int numStates = DFA10_transitionS.length;
        DFA10_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA10_transition[i] = DFA.unpackEncodedString(DFA10_transitionS[i]);
        }
    }

    class DFA10 extends DFA {

        public DFA10(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 10;
            this.eot = DFA10_eot;
            this.eof = DFA10_eof;
            this.min = DFA10_min;
            this.max = DFA10_max;
            this.accept = DFA10_accept;
            this.special = DFA10_special;
            this.transition = DFA10_transition;
        }
        public String getDescription() {
            return "4787:2: ( ( ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a7= '}' | a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Package ) ) )* a10= '}' ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA10_1 = input.LA(1);

                         
                        int index10_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_Kermeta()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index10_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA10_2 = input.LA(1);

                         
                        int index10_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_Kermeta()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index10_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA10_3 = input.LA(1);

                         
                        int index10_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_Kermeta()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index10_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA10_4 = input.LA(1);

                         
                        int index10_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_Kermeta()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index10_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA10_5 = input.LA(1);

                         
                        int index10_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_Kermeta()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index10_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA10_6 = input.LA(1);

                         
                        int index10_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_Kermeta()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index10_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA10_7 = input.LA(1);

                         
                        int index10_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_Kermeta()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index10_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA10_8 = input.LA(1);

                         
                        int index10_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_Kermeta()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index10_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 10, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA9_eotS =
        "\14\uffff";
    static final String DFA9_eofS =
        "\14\uffff";
    static final String DFA9_minS =
        "\1\4\10\uffff\1\0\2\uffff";
    static final String DFA9_maxS =
        "\1\65\10\uffff\1\0\2\uffff";
    static final String DFA9_acceptS =
        "\1\uffff\1\1\10\uffff\1\2\1\3";
    static final String DFA9_specialS =
        "\11\uffff\1\0\2\uffff}>";
    static final String[] DFA9_transitionS = {
            "\2\1\14\uffff\1\11\1\uffff\3\1\14\uffff\1\1\6\uffff\1\1\12\uffff"+
            "\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA9_eot = DFA.unpackEncodedString(DFA9_eotS);
    static final short[] DFA9_eof = DFA.unpackEncodedString(DFA9_eofS);
    static final char[] DFA9_min = DFA.unpackEncodedStringToUnsignedChars(DFA9_minS);
    static final char[] DFA9_max = DFA.unpackEncodedStringToUnsignedChars(DFA9_maxS);
    static final short[] DFA9_accept = DFA.unpackEncodedString(DFA9_acceptS);
    static final short[] DFA9_special = DFA.unpackEncodedString(DFA9_specialS);
    static final short[][] DFA9_transition;

    static {
        int numStates = DFA9_transitionS.length;
        DFA9_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA9_transition[i] = DFA.unpackEncodedString(DFA9_transitionS[i]);
        }
    }

    class DFA9 extends DFA {

        public DFA9(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 9;
            this.eot = DFA9_eot;
            this.eof = DFA9_eof;
            this.min = DFA9_min;
            this.max = DFA9_max;
            this.accept = DFA9_accept;
            this.special = DFA9_special;
            this.transition = DFA9_transition;
        }
        public String getDescription() {
            return "4788:3: ( ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a7= '}' | a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Package ) ) )* a10= '}' )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA9_9 = input.LA(1);

                         
                        int index9_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index9_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 9, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA6_eotS =
        "\15\uffff";
    static final String DFA6_eofS =
        "\1\1\14\uffff";
    static final String DFA6_minS =
        "\1\4\2\uffff\10\0\2\uffff";
    static final String DFA6_maxS =
        "\1\65\2\uffff\10\0\2\uffff";
    static final String DFA6_acceptS =
        "\1\uffff\1\2\12\uffff\1\1";
    static final String DFA6_specialS =
        "\3\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\2\uffff}>";
    static final String[] DFA6_transitionS = {
            "\1\3\1\11\12\uffff\1\1\2\uffff\1\1\1\5\1\6\1\7\14\uffff\1\10"+
            "\6\uffff\1\12\12\uffff\1\4",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA6_eot = DFA.unpackEncodedString(DFA6_eotS);
    static final short[] DFA6_eof = DFA.unpackEncodedString(DFA6_eofS);
    static final char[] DFA6_min = DFA.unpackEncodedStringToUnsignedChars(DFA6_minS);
    static final char[] DFA6_max = DFA.unpackEncodedStringToUnsignedChars(DFA6_maxS);
    static final short[] DFA6_accept = DFA.unpackEncodedString(DFA6_acceptS);
    static final short[] DFA6_special = DFA.unpackEncodedString(DFA6_specialS);
    static final short[][] DFA6_transition;

    static {
        int numStates = DFA6_transitionS.length;
        DFA6_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA6_transition[i] = DFA.unpackEncodedString(DFA6_transitionS[i]);
        }
    }

    class DFA6 extends DFA {

        public DFA6(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 6;
            this.eot = DFA6_eot;
            this.eof = DFA6_eof;
            this.min = DFA6_min;
            this.max = DFA6_max;
            this.accept = DFA6_accept;
            this.special = DFA6_special;
            this.transition = DFA6_transition;
        }
        public String getDescription() {
            return "()+ loopback of 4789:4: ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA6_3 = input.LA(1);

                         
                        int index6_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_Kermeta()) ) {s = 12;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index6_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA6_4 = input.LA(1);

                         
                        int index6_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_Kermeta()) ) {s = 12;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index6_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA6_5 = input.LA(1);

                         
                        int index6_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_Kermeta()) ) {s = 12;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index6_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA6_6 = input.LA(1);

                         
                        int index6_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_Kermeta()) ) {s = 12;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index6_6);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA6_7 = input.LA(1);

                         
                        int index6_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_Kermeta()) ) {s = 12;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index6_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA6_8 = input.LA(1);

                         
                        int index6_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_Kermeta()) ) {s = 12;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index6_8);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA6_9 = input.LA(1);

                         
                        int index6_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_Kermeta()) ) {s = 12;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index6_9);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA6_10 = input.LA(1);

                         
                        int index6_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_Kermeta()) ) {s = 12;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index6_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 6, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA11_eotS =
        "\13\uffff";
    static final String DFA11_eofS =
        "\1\1\12\uffff";
    static final String DFA11_minS =
        "\1\4\1\uffff\10\0\1\uffff";
    static final String DFA11_maxS =
        "\1\65\1\uffff\10\0\1\uffff";
    static final String DFA11_acceptS =
        "\1\uffff\1\2\10\uffff\1\1";
    static final String DFA11_specialS =
        "\2\uffff\1\0\1\3\1\6\1\1\1\5\1\2\1\7\1\4\1\uffff}>";
    static final String[] DFA11_transitionS = {
            "\1\2\1\10\12\uffff\1\1\2\uffff\1\1\1\4\1\5\1\6\14\uffff\1\7"+
            "\6\uffff\1\11\12\uffff\1\3",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] DFA11_eot = DFA.unpackEncodedString(DFA11_eotS);
    static final short[] DFA11_eof = DFA.unpackEncodedString(DFA11_eofS);
    static final char[] DFA11_min = DFA.unpackEncodedStringToUnsignedChars(DFA11_minS);
    static final char[] DFA11_max = DFA.unpackEncodedStringToUnsignedChars(DFA11_maxS);
    static final short[] DFA11_accept = DFA.unpackEncodedString(DFA11_acceptS);
    static final short[] DFA11_special = DFA.unpackEncodedString(DFA11_specialS);
    static final short[][] DFA11_transition;

    static {
        int numStates = DFA11_transitionS.length;
        DFA11_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA11_transition[i] = DFA.unpackEncodedString(DFA11_transitionS[i]);
        }
    }

    class DFA11 extends DFA {

        public DFA11(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 11;
            this.eot = DFA11_eot;
            this.eof = DFA11_eof;
            this.min = DFA11_min;
            this.max = DFA11_max;
            this.accept = DFA11_accept;
            this.special = DFA11_special;
            this.transition = DFA11_transition;
        }
        public String getDescription() {
            return "()+ loopback of 5046:4: ( ( (a11_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA11_2 = input.LA(1);

                         
                        int index11_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index11_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA11_5 = input.LA(1);

                         
                        int index11_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index11_5);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA11_7 = input.LA(1);

                         
                        int index11_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index11_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA11_3 = input.LA(1);

                         
                        int index11_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index11_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA11_9 = input.LA(1);

                         
                        int index11_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index11_9);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA11_6 = input.LA(1);

                         
                        int index11_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index11_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA11_4 = input.LA(1);

                         
                        int index11_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index11_4);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA11_8 = input.LA(1);

                         
                        int index11_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index11_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 11, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA37_eotS =
        "\112\uffff";
    static final String DFA37_eofS =
        "\1\15\111\uffff";
    static final String DFA37_minS =
        "\1\4\1\uffff\13\0\1\uffff\5\0\5\uffff\1\0\6\uffff\2\0\3\uffff\1"+
        "\0\1\uffff\3\0\41\uffff";
    static final String DFA37_maxS =
        "\1\142\1\uffff\13\0\1\uffff\5\0\5\uffff\1\0\6\uffff\2\0\3\uffff"+
        "\1\0\1\uffff\3\0\41\uffff";
    static final String DFA37_acceptS =
        "\1\uffff\1\1\13\uffff\1\2\5\uffff\1\21\1\23\1\24\1\26\1\27\1\uffff"+
        "\1\30\1\32\1\33\1\34\1\35\1\37\2\uffff\1\43\1\44\1\45\1\uffff\1"+
        "\50\3\uffff\1\57\1\60\1\61\1\62\1\4\1\3\1\5\1\10\1\11\1\12\1\14"+
        "\1\15\1\17\1\22\1\25\1\36\1\42\1\46\1\51\1\52\1\54\1\6\1\13\1\16"+
        "\1\7\1\20\1\56\1\31\1\40\1\41\1\47\1\55\1\53";
    static final String DFA37_specialS =
        "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\uffff"+
        "\1\13\1\14\1\15\1\16\1\17\5\uffff\1\20\6\uffff\1\21\1\22\3\uffff"+
        "\1\23\1\uffff\1\24\1\25\1\26\41\uffff}>";
    static final String[] DFA37_transitionS = {
            "\1\5\1\13\1\40\1\37\6\uffff\1\3\1\2\1\4\3\uffff\1\7\1\10\1\11"+
            "\2\uffff\1\16\1\17\1\uffff\1\20\2\uffff\1\21\1\46\2\uffff\1"+
            "\12\1\uffff\1\22\1\1\2\uffff\1\23\1\14\3\uffff\1\24\3\uffff"+
            "\1\25\2\uffff\1\6\1\26\1\51\1\uffff\1\27\1\uffff\1\31\1\uffff"+
            "\1\30\3\uffff\1\32\1\33\2\uffff\1\34\1\uffff\1\35\1\36\1\41"+
            "\2\uffff\1\42\2\uffff\1\43\1\uffff\1\44\1\45\2\uffff\1\50\6"+
            "\uffff\1\47\1\52\1\uffff\1\53\2\uffff\1\54",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA37_eot = DFA.unpackEncodedString(DFA37_eotS);
    static final short[] DFA37_eof = DFA.unpackEncodedString(DFA37_eofS);
    static final char[] DFA37_min = DFA.unpackEncodedStringToUnsignedChars(DFA37_minS);
    static final char[] DFA37_max = DFA.unpackEncodedStringToUnsignedChars(DFA37_maxS);
    static final short[] DFA37_accept = DFA.unpackEncodedString(DFA37_acceptS);
    static final short[] DFA37_special = DFA.unpackEncodedString(DFA37_specialS);
    static final short[][] DFA37_transition;

    static {
        int numStates = DFA37_transitionS.length;
        DFA37_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA37_transition[i] = DFA.unpackEncodedString(DFA37_transitionS[i]);
        }
    }

    class DFA37 extends DFA {

        public DFA37(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 37;
            this.eot = DFA37_eot;
            this.eof = DFA37_eof;
            this.min = DFA37_min;
            this.max = DFA37_max;
            this.accept = DFA37_accept;
            this.special = DFA37_special;
            this.transition = DFA37_transition;
        }
        public String getDescription() {
            return "7171:1: parse_org_kermeta_language_structure_Object returns [org.kermeta.language.structure.Object element = null] : (a0= 'Object' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}' | c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Using | c2= parse_org_kermeta_language_structure_Require | c3= parse_org_kermeta_language_structure_Package | c4= parse_org_kermeta_language_structure_ClassDefinition | c5= parse_org_kermeta_language_structure_Property | c6= parse_org_kermeta_language_structure_Operation | c7= parse_org_kermeta_language_structure_Parameter | c8= parse_org_kermeta_language_structure_Class | c9= parse_org_kermeta_language_structure_Enumeration | c10= parse_org_kermeta_language_structure_EnumerationLiteral | c11= parse_org_kermeta_language_structure_Constraint | c12= parse_org_kermeta_language_structure_PrimitiveType | c13= parse_org_kermeta_language_structure_UnresolvedType | c14= parse_org_kermeta_language_structure_VoidType | c15= parse_org_kermeta_language_structure_Model | c16= parse_org_kermeta_language_structure_ModelType | c17= parse_org_kermeta_language_structure_TypeVariableBinding | c18= parse_org_kermeta_language_structure_MultiplicityElement | c19= parse_org_kermeta_language_structure_TypeDefinition | c20= parse_org_kermeta_language_structure_Tag | c21= parse_org_kermeta_language_structure_ObjectTypeVariable | c22= parse_org_kermeta_language_structure_ModelTypeVariable | c23= parse_org_kermeta_language_structure_VirtualType | c24= parse_org_kermeta_language_structure_ProductType | c25= parse_org_kermeta_language_structure_FunctionType | c26= parse_org_kermeta_language_behavior_Block | c27= parse_org_kermeta_language_behavior_Rescue | c28= parse_org_kermeta_language_behavior_TypeReference | c29= parse_org_kermeta_language_behavior_Raise | c30= parse_org_kermeta_language_behavior_BooleanLiteral | c31= parse_org_kermeta_language_behavior_IntegerLiteral | c32= parse_org_kermeta_language_behavior_StringLiteral | c33= parse_org_kermeta_language_behavior_Conditional | c34= parse_org_kermeta_language_behavior_Loop | c35= parse_org_kermeta_language_behavior_VariableDecl | c36= parse_org_kermeta_language_behavior_TypeLiteral | c37= parse_org_kermeta_language_behavior_CallResult | c38= parse_org_kermeta_language_behavior_CallSuperOperation | c39= parse_org_kermeta_language_behavior_Assignment | c40= parse_org_kermeta_language_behavior_CallVariable | c41= parse_org_kermeta_language_behavior_SelfExpression | c42= parse_org_kermeta_language_behavior_CallFeature | c43= parse_org_kermeta_language_behavior_JavaStaticCall | c44= parse_org_kermeta_language_behavior_VoidLiteral | c45= parse_org_kermeta_language_behavior_CallValue | c46= parse_org_kermeta_language_behavior_EmptyExpression | c47= parse_org_kermeta_language_behavior_LambdaExpression | c48= parse_org_kermeta_language_behavior_LambdaParameter );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA37_2 = input.LA(1);

                         
                        int index37_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_Kermeta()) ) {s = 13;}

                        else if ( (synpred46_Kermeta()) ) {s = 45;}

                         
                        input.seek(index37_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA37_3 = input.LA(1);

                         
                        int index37_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_Kermeta()) ) {s = 13;}

                        else if ( (synpred45_Kermeta()) ) {s = 46;}

                         
                        input.seek(index37_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA37_4 = input.LA(1);

                         
                        int index37_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_Kermeta()) ) {s = 13;}

                        else if ( (synpred47_Kermeta()) ) {s = 47;}

                         
                        input.seek(index37_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA37_5 = input.LA(1);

                         
                        int index37_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_Kermeta()) ) {s = 13;}

                        else if ( (synpred47_Kermeta()) ) {s = 47;}

                        else if ( (synpred50_Kermeta()) ) {s = 48;}

                        else if ( (synpred51_Kermeta()) ) {s = 49;}

                        else if ( (synpred52_Kermeta()) ) {s = 50;}

                        else if ( (synpred54_Kermeta()) ) {s = 51;}

                        else if ( (synpred55_Kermeta()) ) {s = 52;}

                        else if ( (synpred57_Kermeta()) ) {s = 53;}

                        else if ( (synpred60_Kermeta()) ) {s = 54;}

                        else if ( (synpred62_Kermeta()) ) {s = 21;}

                        else if ( (synpred63_Kermeta()) ) {s = 55;}

                        else if ( (synpred72_Kermeta()) ) {s = 56;}

                        else if ( (synpred76_Kermeta()) ) {s = 57;}

                        else if ( (synpred80_Kermeta()) ) {s = 58;}

                        else if ( (synpred83_Kermeta()) ) {s = 59;}

                        else if ( (synpred84_Kermeta()) ) {s = 60;}

                        else if ( (synpred86_Kermeta()) ) {s = 61;}

                         
                        input.seek(index37_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA37_6 = input.LA(1);

                         
                        int index37_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_Kermeta()) ) {s = 13;}

                        else if ( (synpred47_Kermeta()) ) {s = 47;}

                        else if ( (synpred63_Kermeta()) ) {s = 55;}

                         
                        input.seek(index37_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA37_7 = input.LA(1);

                         
                        int index37_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_Kermeta()) ) {s = 13;}

                        else if ( (synpred47_Kermeta()) ) {s = 47;}

                        else if ( (synpred48_Kermeta()) ) {s = 62;}

                        else if ( (synpred63_Kermeta()) ) {s = 55;}

                         
                        input.seek(index37_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA37_8 = input.LA(1);

                         
                        int index37_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_Kermeta()) ) {s = 13;}

                        else if ( (synpred47_Kermeta()) ) {s = 47;}

                        else if ( (synpred48_Kermeta()) ) {s = 62;}

                        else if ( (synpred63_Kermeta()) ) {s = 55;}

                         
                        input.seek(index37_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA37_9 = input.LA(1);

                         
                        int index37_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_Kermeta()) ) {s = 13;}

                        else if ( (synpred47_Kermeta()) ) {s = 47;}

                        else if ( (synpred48_Kermeta()) ) {s = 62;}

                        else if ( (synpred63_Kermeta()) ) {s = 55;}

                         
                        input.seek(index37_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA37_10 = input.LA(1);

                         
                        int index37_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_Kermeta()) ) {s = 13;}

                        else if ( (synpred47_Kermeta()) ) {s = 47;}

                        else if ( (synpred53_Kermeta()) ) {s = 63;}

                        else if ( (synpred63_Kermeta()) ) {s = 55;}

                         
                        input.seek(index37_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA37_11 = input.LA(1);

                         
                        int index37_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_Kermeta()) ) {s = 13;}

                        else if ( (synpred47_Kermeta()) ) {s = 47;}

                        else if ( (synpred56_Kermeta()) ) {s = 64;}

                        else if ( (synpred63_Kermeta()) ) {s = 55;}

                         
                        input.seek(index37_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA37_12 = input.LA(1);

                         
                        int index37_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_Kermeta()) ) {s = 13;}

                        else if ( (synpred47_Kermeta()) ) {s = 47;}

                        else if ( (synpred60_Kermeta()) ) {s = 54;}

                        else if ( (synpred63_Kermeta()) ) {s = 55;}

                         
                        input.seek(index37_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA37_14 = input.LA(1);

                         
                        int index37_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_Kermeta()) ) {s = 65;}

                        else if ( (synpred62_Kermeta()) ) {s = 21;}

                         
                        input.seek(index37_14);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA37_15 = input.LA(1);

                         
                        int index37_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_Kermeta()) ) {s = 65;}

                        else if ( (synpred62_Kermeta()) ) {s = 21;}

                         
                        input.seek(index37_15);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA37_16 = input.LA(1);

                         
                        int index37_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_Kermeta()) ) {s = 65;}

                        else if ( (synpred62_Kermeta()) ) {s = 21;}

                         
                        input.seek(index37_16);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA37_17 = input.LA(1);

                         
                        int index37_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_Kermeta()) ) {s = 48;}

                        else if ( (synpred62_Kermeta()) ) {s = 21;}

                         
                        input.seek(index37_17);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA37_18 = input.LA(1);

                         
                        int index37_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_Kermeta()) ) {s = 66;}

                        else if ( (synpred88_Kermeta()) ) {s = 67;}

                         
                        input.seek(index37_18);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA37_24 = input.LA(1);

                         
                        int index37_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred65_Kermeta()) ) {s = 23;}

                        else if ( (synpred67_Kermeta()) ) {s = 68;}

                         
                        input.seek(index37_24);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA37_31 = input.LA(1);

                         
                        int index37_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_Kermeta()) ) {s = 69;}

                        else if ( (synpred83_Kermeta()) ) {s = 59;}

                        else if ( (synpred86_Kermeta()) ) {s = 61;}

                         
                        input.seek(index37_31);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA37_32 = input.LA(1);

                         
                        int index37_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_Kermeta()) ) {s = 70;}

                        else if ( (synpred83_Kermeta()) ) {s = 59;}

                        else if ( (synpred86_Kermeta()) ) {s = 61;}

                         
                        input.seek(index37_32);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA37_36 = input.LA(1);

                         
                        int index37_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_Kermeta()) ) {s = 71;}

                        else if ( (synpred83_Kermeta()) ) {s = 59;}

                        else if ( (synpred84_Kermeta()) ) {s = 60;}

                        else if ( (synpred86_Kermeta()) ) {s = 61;}

                         
                        input.seek(index37_36);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA37_38 = input.LA(1);

                         
                        int index37_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred83_Kermeta()) ) {s = 59;}

                        else if ( (synpred86_Kermeta()) ) {s = 61;}

                         
                        input.seek(index37_38);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA37_39 = input.LA(1);

                         
                        int index37_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred83_Kermeta()) ) {s = 59;}

                        else if ( (synpred86_Kermeta()) ) {s = 61;}

                        else if ( (synpred87_Kermeta()) ) {s = 72;}

                         
                        input.seek(index37_39);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA37_40 = input.LA(1);

                         
                        int index37_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred83_Kermeta()) ) {s = 59;}

                        else if ( (synpred85_Kermeta()) ) {s = 73;}

                        else if ( (synpred86_Kermeta()) ) {s = 61;}

                         
                        input.seek(index37_40);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 37, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA67_eotS =
        "\23\uffff";
    static final String DFA67_eofS =
        "\23\uffff";
    static final String DFA67_minS =
        "\1\4\3\uffff\7\0\10\uffff";
    static final String DFA67_maxS =
        "\1\135\3\uffff\7\0\10\uffff";
    static final String DFA67_acceptS =
        "\1\uffff\1\1\1\2\1\3\7\uffff\1\7\1\12\1\13\1\4\1\5\1\6\1\10\1\11";
    static final String DFA67_specialS =
        "\4\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\10\uffff}>";
    static final String[] DFA67_transitionS = {
            "\1\6\1\uffff\1\12\1\5\30\uffff\1\4\44\uffff\1\15\3\uffff\1\3"+
            "\2\uffff\1\2\2\uffff\1\1\1\uffff\1\7\1\13\2\uffff\1\11\6\uffff"+
            "\1\10\1\14",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA67_eot = DFA.unpackEncodedString(DFA67_eotS);
    static final short[] DFA67_eof = DFA.unpackEncodedString(DFA67_eofS);
    static final char[] DFA67_min = DFA.unpackEncodedStringToUnsignedChars(DFA67_minS);
    static final char[] DFA67_max = DFA.unpackEncodedStringToUnsignedChars(DFA67_maxS);
    static final short[] DFA67_accept = DFA.unpackEncodedString(DFA67_acceptS);
    static final short[] DFA67_special = DFA.unpackEncodedString(DFA67_specialS);
    static final short[][] DFA67_transition;

    static {
        int numStates = DFA67_transitionS.length;
        DFA67_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA67_transition[i] = DFA.unpackEncodedString(DFA67_transitionS[i]);
        }
    }

    class DFA67 extends DFA {

        public DFA67(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 67;
            this.eot = DFA67_eot;
            this.eof = DFA67_eof;
            this.min = DFA67_min;
            this.max = DFA67_max;
            this.accept = DFA67_accept;
            this.special = DFA67_special;
            this.transition = DFA67_transition;
        }
        public String getDescription() {
            return "12565:3: ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_Block ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA67_4 = input.LA(1);

                         
                        int index67_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_Kermeta()) ) {s = 14;}

                        else if ( (synpred169_Kermeta()) ) {s = 15;}

                         
                        input.seek(index67_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA67_5 = input.LA(1);

                         
                        int index67_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_Kermeta()) ) {s = 14;}

                        else if ( (synpred169_Kermeta()) ) {s = 15;}

                         
                        input.seek(index67_5);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA67_6 = input.LA(1);

                         
                        int index67_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_Kermeta()) ) {s = 14;}

                        else if ( (synpred169_Kermeta()) ) {s = 15;}

                        else if ( (synpred170_Kermeta()) ) {s = 16;}

                         
                        input.seek(index67_6);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA67_7 = input.LA(1);

                         
                        int index67_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_Kermeta()) ) {s = 14;}

                        else if ( (synpred169_Kermeta()) ) {s = 15;}

                        else if ( (synpred170_Kermeta()) ) {s = 16;}

                        else if ( (synpred172_Kermeta()) ) {s = 17;}

                         
                        input.seek(index67_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA67_8 = input.LA(1);

                         
                        int index67_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_Kermeta()) ) {s = 14;}

                        else if ( (synpred169_Kermeta()) ) {s = 15;}

                        else if ( (synpred173_Kermeta()) ) {s = 18;}

                         
                        input.seek(index67_8);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA67_9 = input.LA(1);

                         
                        int index67_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_Kermeta()) ) {s = 14;}

                        else if ( (synpred169_Kermeta()) ) {s = 15;}

                         
                        input.seek(index67_9);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA67_10 = input.LA(1);

                         
                        int index67_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_Kermeta()) ) {s = 14;}

                        else if ( (synpred169_Kermeta()) ) {s = 15;}

                         
                        input.seek(index67_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 67, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA73_eotS =
        "\21\uffff";
    static final String DFA73_eofS =
        "\21\uffff";
    static final String DFA73_minS =
        "\1\4\1\0\1\uffff\6\0\10\uffff";
    static final String DFA73_maxS =
        "\1\134\1\0\1\uffff\6\0\10\uffff";
    static final String DFA73_acceptS =
        "\2\uffff\1\2\6\uffff\1\5\1\10\1\11\1\1\1\3\1\4\1\7\1\6";
    static final String DFA73_specialS =
        "\1\uffff\1\0\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\10\uffff}>";
    static final String[] DFA73_transitionS = {
            "\1\4\1\uffff\1\10\1\1\30\uffff\1\3\26\uffff\1\12\15\uffff\1"+
            "\2\11\uffff\1\13\1\uffff\1\5\1\11\2\uffff\1\7\6\uffff\1\6",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA73_eot = DFA.unpackEncodedString(DFA73_eotS);
    static final short[] DFA73_eof = DFA.unpackEncodedString(DFA73_eofS);
    static final char[] DFA73_min = DFA.unpackEncodedStringToUnsignedChars(DFA73_minS);
    static final char[] DFA73_max = DFA.unpackEncodedStringToUnsignedChars(DFA73_maxS);
    static final short[] DFA73_accept = DFA.unpackEncodedString(DFA73_acceptS);
    static final short[] DFA73_special = DFA.unpackEncodedString(DFA73_specialS);
    static final short[][] DFA73_transition;

    static {
        int numStates = DFA73_transitionS.length;
        DFA73_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA73_transition[i] = DFA.unpackEncodedString(DFA73_transitionS[i]);
        }
    }

    class DFA73 extends DFA {

        public DFA73(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 73;
            this.eot = DFA73_eot;
            this.eof = DFA73_eof;
            this.min = DFA73_min;
            this.max = DFA73_max;
            this.accept = DFA73_accept;
            this.special = DFA73_special;
            this.transition = DFA73_transition;
        }
        public String getDescription() {
            return "13810:2: ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a5_0= parse_org_kermeta_language_behavior_Block ) | (a6_0= parse_org_kermeta_language_behavior_Assignment ) | (a7_0= parse_org_kermeta_language_behavior_CallFeature ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallVariable ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_VariableDecl ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA73_1 = input.LA(1);

                         
                        int index73_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred180_Kermeta()) ) {s = 12;}

                        else if ( (synpred182_Kermeta()) ) {s = 13;}

                        else if ( (synpred183_Kermeta()) ) {s = 14;}

                         
                        input.seek(index73_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA73_3 = input.LA(1);

                         
                        int index73_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_Kermeta()) ) {s = 13;}

                        else if ( (synpred183_Kermeta()) ) {s = 14;}

                         
                        input.seek(index73_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA73_4 = input.LA(1);

                         
                        int index73_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_Kermeta()) ) {s = 13;}

                        else if ( (synpred183_Kermeta()) ) {s = 14;}

                        else if ( (synpred186_Kermeta()) ) {s = 15;}

                         
                        input.seek(index73_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA73_5 = input.LA(1);

                         
                        int index73_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_Kermeta()) ) {s = 13;}

                        else if ( (synpred183_Kermeta()) ) {s = 14;}

                        else if ( (synpred185_Kermeta()) ) {s = 16;}

                        else if ( (synpred186_Kermeta()) ) {s = 15;}

                         
                        input.seek(index73_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA73_6 = input.LA(1);

                         
                        int index73_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_Kermeta()) ) {s = 13;}

                        else if ( (synpred183_Kermeta()) ) {s = 14;}

                         
                        input.seek(index73_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA73_7 = input.LA(1);

                         
                        int index73_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_Kermeta()) ) {s = 13;}

                        else if ( (synpred183_Kermeta()) ) {s = 14;}

                         
                        input.seek(index73_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA73_8 = input.LA(1);

                         
                        int index73_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_Kermeta()) ) {s = 13;}

                        else if ( (synpred183_Kermeta()) ) {s = 14;}

                         
                        input.seek(index73_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 73, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA74_eotS =
        "\20\uffff";
    static final String DFA74_eofS =
        "\20\uffff";
    static final String DFA74_minS =
        "\1\4\2\uffff\7\0\6\uffff";
    static final String DFA74_maxS =
        "\1\134\2\uffff\7\0\6\uffff";
    static final String DFA74_acceptS =
        "\1\uffff\1\1\1\2\7\uffff\1\5\1\7\1\10\1\3\1\4\1\6";
    static final String DFA74_specialS =
        "\3\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\6\uffff}>";
    static final String[] DFA74_transitionS = {
            "\1\5\1\uffff\1\11\1\4\30\uffff\1\3\26\uffff\1\14\15\uffff\1"+
            "\2\5\uffff\1\1\3\uffff\1\13\1\uffff\1\6\1\12\2\uffff\1\10\6"+
            "\uffff\1\7",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA74_eot = DFA.unpackEncodedString(DFA74_eotS);
    static final short[] DFA74_eof = DFA.unpackEncodedString(DFA74_eofS);
    static final char[] DFA74_min = DFA.unpackEncodedStringToUnsignedChars(DFA74_minS);
    static final char[] DFA74_max = DFA.unpackEncodedStringToUnsignedChars(DFA74_maxS);
    static final short[] DFA74_accept = DFA.unpackEncodedString(DFA74_acceptS);
    static final short[] DFA74_special = DFA.unpackEncodedString(DFA74_specialS);
    static final short[][] DFA74_transition;

    static {
        int numStates = DFA74_transitionS.length;
        DFA74_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA74_transition[i] = DFA.unpackEncodedString(DFA74_transitionS[i]);
        }
    }

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = DFA74_eot;
            this.eof = DFA74_eof;
            this.min = DFA74_min;
            this.max = DFA74_max;
            this.accept = DFA74_accept;
            this.special = DFA74_special;
            this.transition = DFA74_transition;
        }
        public String getDescription() {
            return "14154:3: (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA74_3 = input.LA(1);

                         
                        int index74_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred190_Kermeta()) ) {s = 13;}

                        else if ( (synpred191_Kermeta()) ) {s = 14;}

                         
                        input.seek(index74_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA74_4 = input.LA(1);

                         
                        int index74_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred190_Kermeta()) ) {s = 13;}

                        else if ( (synpred191_Kermeta()) ) {s = 14;}

                         
                        input.seek(index74_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA74_5 = input.LA(1);

                         
                        int index74_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred190_Kermeta()) ) {s = 13;}

                        else if ( (synpred191_Kermeta()) ) {s = 14;}

                         
                        input.seek(index74_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA74_6 = input.LA(1);

                         
                        int index74_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred190_Kermeta()) ) {s = 13;}

                        else if ( (synpred191_Kermeta()) ) {s = 14;}

                        else if ( (synpred193_Kermeta()) ) {s = 15;}

                         
                        input.seek(index74_6);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA74_7 = input.LA(1);

                         
                        int index74_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred190_Kermeta()) ) {s = 13;}

                        else if ( (synpred191_Kermeta()) ) {s = 14;}

                         
                        input.seek(index74_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA74_8 = input.LA(1);

                         
                        int index74_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred190_Kermeta()) ) {s = 13;}

                        else if ( (synpred191_Kermeta()) ) {s = 14;}

                         
                        input.seek(index74_8);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA74_9 = input.LA(1);

                         
                        int index74_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred190_Kermeta()) ) {s = 13;}

                        else if ( (synpred191_Kermeta()) ) {s = 14;}

                         
                        input.seek(index74_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 74, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA83_eotS =
        "\20\uffff";
    static final String DFA83_eofS =
        "\20\uffff";
    static final String DFA83_minS =
        "\1\4\1\uffff\5\0\11\uffff";
    static final String DFA83_maxS =
        "\1\134\1\uffff\5\0\11\uffff";
    static final String DFA83_acceptS =
        "\1\uffff\1\1\5\uffff\1\3\1\5\1\7\1\11\1\6\1\12\1\4\1\2\1\10";
    static final String DFA83_specialS =
        "\2\uffff\1\1\1\0\1\2\1\3\1\4\11\uffff}>";
    static final String[] DFA83_transitionS = {
            "\1\3\1\uffff\1\6\1\2\30\uffff\1\1\4\uffff\1\11\21\uffff\1\10"+
            "\31\uffff\1\4\1\7\2\uffff\1\5\6\uffff\1\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA83_eot = DFA.unpackEncodedString(DFA83_eotS);
    static final short[] DFA83_eof = DFA.unpackEncodedString(DFA83_eofS);
    static final char[] DFA83_min = DFA.unpackEncodedStringToUnsignedChars(DFA83_minS);
    static final char[] DFA83_max = DFA.unpackEncodedStringToUnsignedChars(DFA83_maxS);
    static final short[] DFA83_accept = DFA.unpackEncodedString(DFA83_acceptS);
    static final short[] DFA83_special = DFA.unpackEncodedString(DFA83_specialS);
    static final short[][] DFA83_transition;

    static {
        int numStates = DFA83_transitionS.length;
        DFA83_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA83_transition[i] = DFA.unpackEncodedString(DFA83_transitionS[i]);
        }
    }

    class DFA83 extends DFA {

        public DFA83(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 83;
            this.eot = DFA83_eot;
            this.eof = DFA83_eof;
            this.min = DFA83_min;
            this.max = DFA83_max;
            this.accept = DFA83_accept;
            this.special = DFA83_special;
            this.transition = DFA83_transition;
        }
        public String getDescription() {
            return "15539:3: ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA83_3 = input.LA(1);

                         
                        int index83_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred204_Kermeta()) ) {s = 1;}

                        else if ( (synpred209_Kermeta()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index83_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA83_2 = input.LA(1);

                         
                        int index83_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred204_Kermeta()) ) {s = 1;}

                        else if ( (synpred212_Kermeta()) ) {s = 10;}

                         
                        input.seek(index83_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA83_4 = input.LA(1);

                         
                        int index83_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred204_Kermeta()) ) {s = 1;}

                        else if ( (synpred207_Kermeta()) ) {s = 13;}

                        else if ( (synpred209_Kermeta()) ) {s = 11;}

                         
                        input.seek(index83_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA83_5 = input.LA(1);

                         
                        int index83_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred204_Kermeta()) ) {s = 1;}

                        else if ( (synpred205_Kermeta()) ) {s = 14;}

                         
                        input.seek(index83_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA83_6 = input.LA(1);

                         
                        int index83_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred204_Kermeta()) ) {s = 1;}

                        else if ( (synpred211_Kermeta()) ) {s = 15;}

                         
                        input.seek(index83_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 83, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA112_eotS =
        "\34\uffff";
    static final String DFA112_eofS =
        "\34\uffff";
    static final String DFA112_minS =
        "\1\4\2\uffff\3\0\3\uffff\1\0\1\uffff\3\0\16\uffff";
    static final String DFA112_maxS =
        "\1\137\2\uffff\3\0\3\uffff\1\0\1\uffff\3\0\16\uffff";
    static final String DFA112_acceptS =
        "\1\uffff\1\1\1\2\3\uffff\1\6\1\7\1\10\1\uffff\1\13\3\uffff\1\21"+
        "\1\22\1\23\1\24\1\3\1\14\1\17\1\4\1\5\1\11\1\15\1\12\1\20\1\16";
    static final String DFA112_specialS =
        "\3\uffff\1\0\1\1\1\2\3\uffff\1\3\1\uffff\1\4\1\5\1\6\16\uffff}>";
    static final String[] DFA112_transitionS = {
            "\1\5\1\uffff\1\4\1\3\30\uffff\1\13\4\uffff\1\16\21\uffff\1\17"+
            "\15\uffff\1\1\2\uffff\1\2\1\6\2\uffff\1\7\2\uffff\1\10\1\uffff"+
            "\1\11\1\12\2\uffff\1\15\6\uffff\1\14\1\20\1\uffff\1\21",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA112_eot = DFA.unpackEncodedString(DFA112_eotS);
    static final short[] DFA112_eof = DFA.unpackEncodedString(DFA112_eofS);
    static final char[] DFA112_min = DFA.unpackEncodedStringToUnsignedChars(DFA112_minS);
    static final char[] DFA112_max = DFA.unpackEncodedStringToUnsignedChars(DFA112_maxS);
    static final short[] DFA112_accept = DFA.unpackEncodedString(DFA112_acceptS);
    static final short[] DFA112_special = DFA.unpackEncodedString(DFA112_specialS);
    static final short[][] DFA112_transition;

    static {
        int numStates = DFA112_transitionS.length;
        DFA112_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA112_transition[i] = DFA.unpackEncodedString(DFA112_transitionS[i]);
        }
    }

    class DFA112 extends DFA {

        public DFA112(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 112;
            this.eot = DFA112_eot;
            this.eof = DFA112_eof;
            this.min = DFA112_min;
            this.max = DFA112_max;
            this.accept = DFA112_accept;
            this.special = DFA112_special;
            this.transition = DFA112_transition;
        }
        public String getDescription() {
            return "20672:1: parse_org_kermeta_language_behavior_Expression returns [org.kermeta.language.behavior.Expression element = null] : (c0= parse_org_kermeta_language_behavior_Block | c1= parse_org_kermeta_language_behavior_Raise | c2= parse_org_kermeta_language_behavior_BooleanLiteral | c3= parse_org_kermeta_language_behavior_IntegerLiteral | c4= parse_org_kermeta_language_behavior_StringLiteral | c5= parse_org_kermeta_language_behavior_Conditional | c6= parse_org_kermeta_language_behavior_Loop | c7= parse_org_kermeta_language_behavior_VariableDecl | c8= parse_org_kermeta_language_behavior_TypeLiteral | c9= parse_org_kermeta_language_behavior_CallResult | c10= parse_org_kermeta_language_behavior_CallSuperOperation | c11= parse_org_kermeta_language_behavior_Assignment | c12= parse_org_kermeta_language_behavior_CallVariable | c13= parse_org_kermeta_language_behavior_SelfExpression | c14= parse_org_kermeta_language_behavior_CallFeature | c15= parse_org_kermeta_language_behavior_JavaStaticCall | c16= parse_org_kermeta_language_behavior_VoidLiteral | c17= parse_org_kermeta_language_behavior_CallValue | c18= parse_org_kermeta_language_behavior_EmptyExpression | c19= parse_org_kermeta_language_behavior_LambdaExpression );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA112_3 = input.LA(1);

                         
                        int index112_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred269_Kermeta()) ) {s = 18;}

                        else if ( (synpred278_Kermeta()) ) {s = 19;}

                        else if ( (synpred281_Kermeta()) ) {s = 20;}

                         
                        input.seek(index112_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA112_4 = input.LA(1);

                         
                        int index112_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_Kermeta()) ) {s = 21;}

                        else if ( (synpred278_Kermeta()) ) {s = 19;}

                        else if ( (synpred281_Kermeta()) ) {s = 20;}

                         
                        input.seek(index112_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA112_5 = input.LA(1);

                         
                        int index112_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred271_Kermeta()) ) {s = 22;}

                        else if ( (synpred275_Kermeta()) ) {s = 23;}

                        else if ( (synpred278_Kermeta()) ) {s = 19;}

                        else if ( (synpred279_Kermeta()) ) {s = 24;}

                        else if ( (synpred281_Kermeta()) ) {s = 20;}

                         
                        input.seek(index112_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA112_9 = input.LA(1);

                         
                        int index112_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_Kermeta()) ) {s = 25;}

                        else if ( (synpred278_Kermeta()) ) {s = 19;}

                        else if ( (synpred279_Kermeta()) ) {s = 24;}

                        else if ( (synpred281_Kermeta()) ) {s = 20;}

                         
                        input.seek(index112_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA112_11 = input.LA(1);

                         
                        int index112_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_Kermeta()) ) {s = 19;}

                        else if ( (synpred281_Kermeta()) ) {s = 20;}

                         
                        input.seek(index112_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA112_12 = input.LA(1);

                         
                        int index112_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_Kermeta()) ) {s = 19;}

                        else if ( (synpred281_Kermeta()) ) {s = 20;}

                        else if ( (synpred282_Kermeta()) ) {s = 26;}

                         
                        input.seek(index112_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA112_13 = input.LA(1);

                         
                        int index112_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_Kermeta()) ) {s = 19;}

                        else if ( (synpred280_Kermeta()) ) {s = 27;}

                        else if ( (synpred281_Kermeta()) ) {s = 20;}

                         
                        input.seek(index112_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 112, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA113_eotS =
        "\16\uffff";
    static final String DFA113_eofS =
        "\16\uffff";
    static final String DFA113_minS =
        "\1\4\1\0\5\uffff\1\0\6\uffff";
    static final String DFA113_maxS =
        "\1\102\1\0\5\uffff\1\0\6\uffff";
    static final String DFA113_acceptS =
        "\2\uffff\1\2\1\3\1\5\1\6\1\7\1\uffff\1\10\1\12\1\13\1\1\1\4\1\11";
    static final String DFA113_specialS =
        "\1\uffff\1\0\5\uffff\1\1\6\uffff}>";
    static final String[] DFA113_transitionS = {
            "\1\1\1\3\35\uffff\1\2\1\uffff\1\4\4\uffff\1\5\16\uffff\1\6\1"+
            "\uffff\1\10\1\uffff\1\7\3\uffff\1\11\1\12",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA113_eot = DFA.unpackEncodedString(DFA113_eotS);
    static final short[] DFA113_eof = DFA.unpackEncodedString(DFA113_eofS);
    static final char[] DFA113_min = DFA.unpackEncodedStringToUnsignedChars(DFA113_minS);
    static final char[] DFA113_max = DFA.unpackEncodedStringToUnsignedChars(DFA113_maxS);
    static final short[] DFA113_accept = DFA.unpackEncodedString(DFA113_acceptS);
    static final short[] DFA113_special = DFA.unpackEncodedString(DFA113_specialS);
    static final short[][] DFA113_transition;

    static {
        int numStates = DFA113_transitionS.length;
        DFA113_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA113_transition[i] = DFA.unpackEncodedString(DFA113_transitionS[i]);
        }
    }

    class DFA113 extends DFA {

        public DFA113(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 113;
            this.eot = DFA113_eot;
            this.eof = DFA113_eof;
            this.min = DFA113_min;
            this.max = DFA113_max;
            this.accept = DFA113_accept;
            this.special = DFA113_special;
            this.transition = DFA113_transition;
        }
        public String getDescription() {
            return "20697:1: parse_org_kermeta_language_structure_Type returns [org.kermeta.language.structure.Type element = null] : (c0= parse_org_kermeta_language_structure_Class | c1= parse_org_kermeta_language_structure_Enumeration | c2= parse_org_kermeta_language_structure_PrimitiveType | c3= parse_org_kermeta_language_structure_UnresolvedType | c4= parse_org_kermeta_language_structure_VoidType | c5= parse_org_kermeta_language_structure_ModelType | c6= parse_org_kermeta_language_structure_ObjectTypeVariable | c7= parse_org_kermeta_language_structure_ModelTypeVariable | c8= parse_org_kermeta_language_structure_VirtualType | c9= parse_org_kermeta_language_structure_ProductType | c10= parse_org_kermeta_language_structure_FunctionType );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA113_1 = input.LA(1);

                         
                        int index113_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_Kermeta()) ) {s = 11;}

                        else if ( (synpred289_Kermeta()) ) {s = 12;}

                        else if ( (synpred291_Kermeta()) ) {s = 5;}

                         
                        input.seek(index113_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA113_7 = input.LA(1);

                         
                        int index113_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred292_Kermeta()) ) {s = 6;}

                        else if ( (synpred294_Kermeta()) ) {s = 13;}

                         
                        input.seek(index113_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 113, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA119_eotS =
        "\14\uffff";
    static final String DFA119_eofS =
        "\14\uffff";
    static final String DFA119_minS =
        "\1\4\10\uffff\1\0\2\uffff";
    static final String DFA119_maxS =
        "\1\65\10\uffff\1\0\2\uffff";
    static final String DFA119_acceptS =
        "\1\uffff\1\1\10\uffff\1\2\1\3";
    static final String DFA119_specialS =
        "\11\uffff\1\0\2\uffff}>";
    static final String[] DFA119_transitionS = {
            "\2\1\14\uffff\1\11\1\uffff\3\1\14\uffff\1\1\6\uffff\1\1\12\uffff"+
            "\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA119_eot = DFA.unpackEncodedString(DFA119_eotS);
    static final short[] DFA119_eof = DFA.unpackEncodedString(DFA119_eofS);
    static final char[] DFA119_min = DFA.unpackEncodedStringToUnsignedChars(DFA119_minS);
    static final char[] DFA119_max = DFA.unpackEncodedStringToUnsignedChars(DFA119_maxS);
    static final short[] DFA119_accept = DFA.unpackEncodedString(DFA119_acceptS);
    static final short[] DFA119_special = DFA.unpackEncodedString(DFA119_specialS);
    static final short[][] DFA119_transition;

    static {
        int numStates = DFA119_transitionS.length;
        DFA119_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA119_transition[i] = DFA.unpackEncodedString(DFA119_transitionS[i]);
        }
    }

    class DFA119 extends DFA {

        public DFA119(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 119;
            this.eot = DFA119_eot;
            this.eof = DFA119_eof;
            this.min = DFA119_min;
            this.max = DFA119_max;
            this.accept = DFA119_accept;
            this.special = DFA119_special;
            this.transition = DFA119_transition;
        }
        public String getDescription() {
            return "4788:3: ( ( ( (a4_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a5= '{' ( ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a7= '}' | a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Package ) ) )* a10= '}' )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA119_9 = input.LA(1);

                         
                        int index119_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index119_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 119, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_start82 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Model_in_start96 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_start110 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_start124 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_start138 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_start152 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_start166 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_start173 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Require_in_parse_org_kermeta_language_structure_ModelingUnit211 = new BitSet(new long[]{0x002004080071C032L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Using_in_parse_org_kermeta_language_structure_ModelingUnit267 = new BitSet(new long[]{0x0020040800714032L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_ModelingUnit323 = new BitSet(new long[]{0x0020040800710032L});
    public static final BitSet FOLLOW_14_in_parse_org_kermeta_language_structure_Using379 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_15_in_parse_org_kermeta_language_structure_Require408 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_16_in_parse_org_kermeta_language_structure_Package437 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Package466 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_org_kermeta_language_structure_Package499 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Package536 = new BitSet(new long[]{0x0020040800750032L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Package587 = new BitSet(new long[]{0x0020040800710032L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_Package656 = new BitSet(new long[]{0x0020040800710030L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Package697 = new BitSet(new long[]{0x0020040800790030L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_Package758 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_Package786 = new BitSet(new long[]{0x0020040800790030L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Package827 = new BitSet(new long[]{0x0020040800790030L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_Package888 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Package940 = new BitSet(new long[]{0x0020040800710032L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_ClassDefinition1005 = new BitSet(new long[]{0x0000000000600000L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_structure_ClassDefinition1047 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_22_in_parse_org_kermeta_language_structure_ClassDefinition1080 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ClassDefinition1098 = new BitSet(new long[]{0x0000000000840000L});
    public static final BitSet FOLLOW_23_in_parse_org_kermeta_language_structure_ClassDefinition1128 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ClassDefinition1154 = new BitSet(new long[]{0x0000000001040000L});
    public static final BitSet FOLLOW_24_in_parse_org_kermeta_language_structure_ClassDefinition1200 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ClassDefinition1234 = new BitSet(new long[]{0x0000000001040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_ClassDefinition1315 = new BitSet(new long[]{0x0000000096080010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_ClassDefinition1344 = new BitSet(new long[]{0x0000000096080010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_ClassDefinition1400 = new BitSet(new long[]{0x0000000096080010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_ClassDefinition1456 = new BitSet(new long[]{0x0000000080080010L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_ClassDefinition1497 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_parse_org_kermeta_language_structure_Property1530 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_26_in_parse_org_kermeta_language_structure_Property1553 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property1581 = new BitSet(new long[]{0x0000000008000002L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Property1611 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property1637 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_parse_org_kermeta_language_structure_Property1687 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property1705 = new BitSet(new long[]{0x0000000068000002L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Property1735 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property1761 = new BitSet(new long[]{0x0000000060000002L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Property1816 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_structure_Property1842 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_30_in_parse_org_kermeta_language_structure_Property1892 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_structure_Property1918 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Operation1983 = new BitSet(new long[]{0x0000000080000010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Operation2018 = new BitSet(new long[]{0x0000000080000010L});
    public static final BitSet FOLLOW_31_in_parse_org_kermeta_language_structure_Operation2044 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2062 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_structure_Operation2083 = new BitSet(new long[]{0x0000000200000010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Operation2112 = new BitSet(new long[]{0x0000000209000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Operation2153 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2187 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_24_in_parse_org_kermeta_language_structure_Operation2268 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Operation2302 = new BitSet(new long[]{0x0000000209000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Operation2357 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2399 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_structure_Operation2525 = new BitSet(new long[]{0x0000000408000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Operation2548 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2574 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_parse_org_kermeta_language_structure_Operation2620 = new BitSet(new long[]{0x0000000000200000L,0x0000000000000020L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_structure_Operation2643 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_structure_Operation2672 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Parameter2715 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Parameter2736 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Parameter2754 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Class2794 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_parse_org_kermeta_language_structure_Enumeration2830 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Enumeration2848 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_Enumeration2869 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Enumeration2892 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_parse_org_kermeta_language_structure_Enumeration2915 = new BitSet(new long[]{0x0000000000080010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Enumeration2950 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_parse_org_kermeta_language_structure_Enumeration2983 = new BitSet(new long[]{0x0000000000080010L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_Enumeration3031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_EnumerationLiteral3064 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Constraint3104 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Constraint3129 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRIMITIVE_TYPE_in_parse_org_kermeta_language_structure_PrimitiveType3169 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_UnresolvedType3209 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_parse_org_kermeta_language_structure_VoidType3245 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_parse_org_kermeta_language_structure_Object3274 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_Object3288 = new BitSet(new long[]{0x0000018000080000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_Object3311 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Object3331 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Object3357 = new BitSet(new long[]{0x0000018000080000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_Object3398 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Object3418 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Object3444 = new BitSet(new long[]{0x0000018000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_Object3485 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_parse_org_kermeta_language_structure_Object3504 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Using_in_parse_org_kermeta_language_structure_Object3514 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Require_in_parse_org_kermeta_language_structure_Object3524 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Object3534 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_parse_org_kermeta_language_structure_Object3544 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_Object3554 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_Object3564 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Object3574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Class_in_parse_org_kermeta_language_structure_Object3584 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_Object3594 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Object3604 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Object3614 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_Object3624 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_parse_org_kermeta_language_structure_Object3634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VoidType_in_parse_org_kermeta_language_structure_Object3644 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Model_in_parse_org_kermeta_language_structure_Object3654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_Object3664 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeVariableBinding_in_parse_org_kermeta_language_structure_Object3674 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_parse_org_kermeta_language_structure_Object3684 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Object3694 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Object3704 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_parse_org_kermeta_language_structure_Object3714 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelTypeVariable_in_parse_org_kermeta_language_structure_Object3724 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_Object3734 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ProductType_in_parse_org_kermeta_language_structure_Object3744 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_FunctionType_in_parse_org_kermeta_language_structure_Object3754 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_structure_Object3764 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Rescue_in_parse_org_kermeta_language_structure_Object3774 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_structure_Object3784 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Raise_in_parse_org_kermeta_language_structure_Object3794 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_structure_Object3804 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_structure_Object3814 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_structure_Object3824 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_structure_Object3834 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_structure_Object3844 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_structure_Object3854 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_parse_org_kermeta_language_structure_Object3864 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_structure_Object3874 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_structure_Object3884 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_structure_Object3894 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_structure_Object3904 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_structure_Object3914 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_structure_Object3924 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_structure_Object3934 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_structure_Object3944 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_structure_Object3954 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_structure_Object3964 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_LambdaExpression_in_parse_org_kermeta_language_structure_Object3974 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_LambdaParameter_in_parse_org_kermeta_language_structure_Object3984 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_parse_org_kermeta_language_structure_Model4009 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_Model4023 = new BitSet(new long[]{0x0000018000080000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_Model4046 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Model4066 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Model4092 = new BitSet(new long[]{0x0000018000080000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_Model4133 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Model4153 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Model4179 = new BitSet(new long[]{0x0000018000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_Model4220 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4258 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_parse_org_kermeta_language_structure_ModelType4288 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_ModelType4302 = new BitSet(new long[]{0x0000398000080000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_ModelType4325 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4345 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4371 = new BitSet(new long[]{0x0000398000080000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_ModelType4412 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4432 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ModelType4458 = new BitSet(new long[]{0x0000398000080000L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_structure_ModelType4494 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4514 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4540 = new BitSet(new long[]{0x0000398000080000L});
    public static final BitSet FOLLOW_44_in_parse_org_kermeta_language_structure_ModelType4581 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4601 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4627 = new BitSet(new long[]{0x0000398000080000L});
    public static final BitSet FOLLOW_45_in_parse_org_kermeta_language_structure_ModelType4668 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4688 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4714 = new BitSet(new long[]{0x0000398000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_ModelType4760 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_parse_org_kermeta_language_structure_TypeVariableBinding4789 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_TypeVariableBinding4803 = new BitSet(new long[]{0x0003818000080000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_TypeVariableBinding4826 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding4846 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeVariableBinding4872 = new BitSet(new long[]{0x0003818000080000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_TypeVariableBinding4913 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding4933 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_TypeVariableBinding4959 = new BitSet(new long[]{0x0003818000080000L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_structure_TypeVariableBinding4995 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding5015 = new BitSet(new long[]{0x2A20042800710030L,0x0000000000000006L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_TypeVariableBinding5041 = new BitSet(new long[]{0x0003818000080000L});
    public static final BitSet FOLLOW_48_in_parse_org_kermeta_language_structure_TypeVariableBinding5077 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding5097 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeVariableBinding5123 = new BitSet(new long[]{0x0003818000080000L});
    public static final BitSet FOLLOW_49_in_parse_org_kermeta_language_structure_TypeVariableBinding5164 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding5184 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeVariableBinding5210 = new BitSet(new long[]{0x0003818000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_TypeVariableBinding5256 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5294 = new BitSet(new long[]{0x0004000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5333 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_parse_org_kermeta_language_structure_MultiplicityElement5363 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_MultiplicityElement5377 = new BitSet(new long[]{0x001A918000080000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_MultiplicityElement5400 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5420 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5446 = new BitSet(new long[]{0x001A918000080000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_MultiplicityElement5487 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5507 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_MultiplicityElement5533 = new BitSet(new long[]{0x001A918000080000L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_structure_MultiplicityElement5569 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5589 = new BitSet(new long[]{0x2A20042800710030L,0x0000000000000006L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_MultiplicityElement5615 = new BitSet(new long[]{0x001A918000080000L});
    public static final BitSet FOLLOW_44_in_parse_org_kermeta_language_structure_MultiplicityElement5651 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5671 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5697 = new BitSet(new long[]{0x001A918000080000L});
    public static final BitSet FOLLOW_49_in_parse_org_kermeta_language_structure_MultiplicityElement5738 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5758 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5784 = new BitSet(new long[]{0x001A918000080000L});
    public static final BitSet FOLLOW_51_in_parse_org_kermeta_language_structure_MultiplicityElement5825 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5845 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_INTEGER_in_parse_org_kermeta_language_structure_MultiplicityElement5871 = new BitSet(new long[]{0x001A918000080000L});
    public static final BitSet FOLLOW_52_in_parse_org_kermeta_language_structure_MultiplicityElement5912 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5932 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_INTEGER_in_parse_org_kermeta_language_structure_MultiplicityElement5958 = new BitSet(new long[]{0x001A918000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_MultiplicityElement6004 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_MultiplicityElement6023 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_MultiplicityElement6033 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_MultiplicityElement6043 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_structure_MultiplicityElement6053 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeDefinition6087 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_53_in_parse_org_kermeta_language_structure_TypeDefinition6117 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_TypeDefinition6131 = new BitSet(new long[]{0x0000118000080000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_TypeDefinition6154 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_TypeDefinition6174 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeDefinition6200 = new BitSet(new long[]{0x0000118000080000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_TypeDefinition6241 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_TypeDefinition6261 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_TypeDefinition6287 = new BitSet(new long[]{0x0000118000080000L});
    public static final BitSet FOLLOW_44_in_parse_org_kermeta_language_structure_TypeDefinition6323 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_TypeDefinition6343 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeDefinition6369 = new BitSet(new long[]{0x0000118000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_TypeDefinition6415 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_parse_org_kermeta_language_structure_TypeDefinition6434 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_TypeDefinition6444 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_TypeDefinition6454 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_TypeDefinition6464 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_parse_org_kermeta_language_structure_Tag6489 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_Tag6503 = new BitSet(new long[]{0x0180118000080000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_Tag6526 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Tag6546 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag6572 = new BitSet(new long[]{0x0180118000080000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_Tag6613 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Tag6633 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Tag6659 = new BitSet(new long[]{0x0180118000080000L});
    public static final BitSet FOLLOW_44_in_parse_org_kermeta_language_structure_Tag6695 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Tag6715 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag6741 = new BitSet(new long[]{0x0180118000080000L});
    public static final BitSet FOLLOW_55_in_parse_org_kermeta_language_structure_Tag6782 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Tag6802 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag6828 = new BitSet(new long[]{0x0180118000080000L});
    public static final BitSet FOLLOW_56_in_parse_org_kermeta_language_structure_Tag6869 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Tag6889 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag6915 = new BitSet(new long[]{0x0180118000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_Tag6961 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_57_in_parse_org_kermeta_language_structure_ObjectTypeVariable6990 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_ObjectTypeVariable7004 = new BitSet(new long[]{0x0400998000080000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_ObjectTypeVariable7027 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7047 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7073 = new BitSet(new long[]{0x0400998000080000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_ObjectTypeVariable7114 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7134 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ObjectTypeVariable7160 = new BitSet(new long[]{0x0400998000080000L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_structure_ObjectTypeVariable7196 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7216 = new BitSet(new long[]{0x2A20042800710030L,0x0000000000000006L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ObjectTypeVariable7242 = new BitSet(new long[]{0x0400998000080000L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_structure_ObjectTypeVariable7278 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7298 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7324 = new BitSet(new long[]{0x0400998000080000L});
    public static final BitSet FOLLOW_44_in_parse_org_kermeta_language_structure_ObjectTypeVariable7365 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7385 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7411 = new BitSet(new long[]{0x0400998000080000L});
    public static final BitSet FOLLOW_58_in_parse_org_kermeta_language_structure_ObjectTypeVariable7452 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7472 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7498 = new BitSet(new long[]{0x0400998000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_ObjectTypeVariable7544 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_ObjectTypeVariable7563 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_parse_org_kermeta_language_structure_ModelTypeVariable7588 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_ModelTypeVariable7602 = new BitSet(new long[]{0x1400998000080000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_ModelTypeVariable7625 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable7645 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable7671 = new BitSet(new long[]{0x1400998000080000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_ModelTypeVariable7712 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable7732 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ModelTypeVariable7758 = new BitSet(new long[]{0x1400998000080000L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_structure_ModelTypeVariable7794 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable7814 = new BitSet(new long[]{0x2A20042800710030L,0x0000000000000006L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ModelTypeVariable7840 = new BitSet(new long[]{0x1400998000080000L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_structure_ModelTypeVariable7876 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable7896 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable7922 = new BitSet(new long[]{0x1400998000080000L});
    public static final BitSet FOLLOW_44_in_parse_org_kermeta_language_structure_ModelTypeVariable7963 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable7983 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable8009 = new BitSet(new long[]{0x1400998000080000L});
    public static final BitSet FOLLOW_58_in_parse_org_kermeta_language_structure_ModelTypeVariable8050 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable8070 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable8096 = new BitSet(new long[]{0x1400998000080000L});
    public static final BitSet FOLLOW_60_in_parse_org_kermeta_language_structure_ModelTypeVariable8137 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable8157 = new BitSet(new long[]{0x2200000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_ModelTypeVariable8183 = new BitSet(new long[]{0x1400998000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_ModelTypeVariable8224 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_parse_org_kermeta_language_structure_VirtualType8253 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_VirtualType8267 = new BitSet(new long[]{0xC400998000080000L,0x0000000000000001L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_VirtualType8290 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8310 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8336 = new BitSet(new long[]{0xC400998000080000L,0x0000000000000001L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_VirtualType8377 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8397 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_VirtualType8423 = new BitSet(new long[]{0xC400998000080000L,0x0000000000000001L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_structure_VirtualType8459 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8479 = new BitSet(new long[]{0x2A20042800710030L,0x0000000000000006L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_VirtualType8505 = new BitSet(new long[]{0xC400998000080000L,0x0000000000000001L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_structure_VirtualType8541 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8561 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8587 = new BitSet(new long[]{0xC400998000080000L,0x0000000000000001L});
    public static final BitSet FOLLOW_44_in_parse_org_kermeta_language_structure_VirtualType8628 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8648 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8674 = new BitSet(new long[]{0xC400998000080000L,0x0000000000000001L});
    public static final BitSet FOLLOW_58_in_parse_org_kermeta_language_structure_VirtualType8715 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8735 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8761 = new BitSet(new long[]{0xC400998000080000L,0x0000000000000001L});
    public static final BitSet FOLLOW_62_in_parse_org_kermeta_language_structure_VirtualType8802 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8822 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8848 = new BitSet(new long[]{0xC400998000080000L,0x0000000000000001L});
    public static final BitSet FOLLOW_63_in_parse_org_kermeta_language_structure_VirtualType8889 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8909 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8935 = new BitSet(new long[]{0xC400998000080000L,0x0000000000000001L});
    public static final BitSet FOLLOW_64_in_parse_org_kermeta_language_structure_VirtualType8976 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8996 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeVariableBinding_in_parse_org_kermeta_language_structure_VirtualType9022 = new BitSet(new long[]{0xC400998000080000L,0x0000000000000001L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_VirtualType9063 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_parse_org_kermeta_language_structure_ProductType9092 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_ProductType9106 = new BitSet(new long[]{0x0002898000080000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_ProductType9129 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9149 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ProductType9175 = new BitSet(new long[]{0x0002898000080000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_ProductType9216 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9236 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ProductType9262 = new BitSet(new long[]{0x0002898000080000L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_structure_ProductType9298 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9318 = new BitSet(new long[]{0x2A20042800710030L,0x0000000000000006L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ProductType9344 = new BitSet(new long[]{0x0002898000080000L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_structure_ProductType9380 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9400 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ProductType9426 = new BitSet(new long[]{0x0002898000080000L});
    public static final BitSet FOLLOW_49_in_parse_org_kermeta_language_structure_ProductType9467 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9487 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ProductType9513 = new BitSet(new long[]{0x0002898000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_ProductType9559 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_66_in_parse_org_kermeta_language_structure_FunctionType9588 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_FunctionType9602 = new BitSet(new long[]{0x0000898000080000L,0x0000000000000018L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_FunctionType9625 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType9645 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType9671 = new BitSet(new long[]{0x0000898000080000L,0x0000000000000018L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_FunctionType9712 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType9732 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_FunctionType9758 = new BitSet(new long[]{0x0000898000080000L,0x0000000000000018L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_structure_FunctionType9794 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType9814 = new BitSet(new long[]{0x2A20042800710030L,0x0000000000000006L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_FunctionType9840 = new BitSet(new long[]{0x0000898000080000L,0x0000000000000018L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_structure_FunctionType9876 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType9896 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType9922 = new BitSet(new long[]{0x0000898000080000L,0x0000000000000018L});
    public static final BitSet FOLLOW_67_in_parse_org_kermeta_language_structure_FunctionType9963 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType9983 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType10009 = new BitSet(new long[]{0x0000898000080000L,0x0000000000000018L});
    public static final BitSet FOLLOW_68_in_parse_org_kermeta_language_structure_FunctionType10050 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType10070 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType10096 = new BitSet(new long[]{0x0000898000080000L,0x0000000000000018L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_FunctionType10142 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_69_in_parse_org_kermeta_language_behavior_Block10171 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Block10200 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_behavior_Block10242 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Block10284 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Block10326 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Block10368 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Block10410 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Block10452 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Block10494 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_Block10536 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_behavior_Block10578 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Block10620 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Rescue_in_parse_org_kermeta_language_behavior_Block10676 = new BitSet(new long[]{0x0000000000000000L,0x00000000000000C0L});
    public static final BitSet FOLLOW_70_in_parse_org_kermeta_language_behavior_Block10717 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_71_in_parse_org_kermeta_language_behavior_Rescue10746 = new BitSet(new long[]{0x00800021000000D2L,0x00000000B0269320L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_behavior_Rescue10769 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_Rescue10795 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_Rescue10828 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_Rescue10854 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_Rescue10882 = new BitSet(new long[]{0x00800021000000D2L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Rescue10930 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_TypeReference10990 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_parse_org_kermeta_language_behavior_Raise11026 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Raise11044 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BOOLEAN_in_parse_org_kermeta_language_behavior_BooleanLiteral11081 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTEGER_in_parse_org_kermeta_language_behavior_IntegerLiteral11121 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_StringLiteral11161 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_73_in_parse_org_kermeta_language_behavior_Conditional11197 = new BitSet(new long[]{0x00000001000000D0L,0x0000000010220200L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional11220 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Conditional11254 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_parse_org_kermeta_language_behavior_Conditional11284 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268020L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Conditional11307 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268860L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Conditional11341 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268860L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Conditional11375 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268860L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional11409 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268860L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Conditional11443 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268860L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Conditional11477 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268860L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Conditional11511 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268860L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Conditional11545 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268860L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Conditional11579 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268860L});
    public static final BitSet FOLLOW_75_in_parse_org_kermeta_language_behavior_Conditional11618 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Conditional11644 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Conditional11686 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Conditional11728 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional11770 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Conditional11812 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Conditional11854 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Conditional11896 = new BitSet(new long[]{0x0000000000000010L,0x0000000000020000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Conditional11930 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Conditional11972 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_70_in_parse_org_kermeta_language_behavior_Conditional12013 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_76_in_parse_org_kermeta_language_behavior_Loop12042 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B026B320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop12071 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_77_in_parse_org_kermeta_language_behavior_Loop12112 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop12130 = new BitSet(new long[]{0x0000000000000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_78_in_parse_org_kermeta_language_behavior_Loop12157 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop12190 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_79_in_parse_org_kermeta_language_behavior_VariableDecl12264 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_VariableDecl12282 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_VariableDecl12303 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_VariableDecl12321 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
    public static final BitSet FOLLOW_80_in_parse_org_kermeta_language_behavior_VariableDecl12348 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_VariableDecl12374 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_TypeLiteral12434 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_81_in_parse_org_kermeta_language_behavior_CallResult12467 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_parse_org_kermeta_language_behavior_CallSuperOperation12496 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_behavior_CallSuperOperation12510 = new BitSet(new long[]{0x00800023000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallSuperOperation12539 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_24_in_parse_org_kermeta_language_behavior_CallSuperOperation12580 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallSuperOperation12614 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_CallSuperOperation12688 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Assignment12732 = new BitSet(new long[]{0x0000000000000100L,0x0000000000080000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Assignment12774 = new BitSet(new long[]{0x0000000000000100L,0x0000000000080000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Assignment12816 = new BitSet(new long[]{0x0000000000000100L,0x0000000000080000L});
    public static final BitSet FOLLOW_83_in_parse_org_kermeta_language_behavior_Assignment12859 = new BitSet(new long[]{0x00800021000000D0L,0x0000000010260000L});
    public static final BitSet FOLLOW_CASTED_in_parse_org_kermeta_language_behavior_Assignment12893 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_parse_org_kermeta_language_behavior_Assignment12926 = new BitSet(new long[]{0x00800021000000D0L,0x0000000010260000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Assignment12967 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_Assignment13009 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Assignment13051 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Assignment13093 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Assignment13135 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Assignment13177 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_behavior_Assignment13219 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_Assignment13261 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Assignment13303 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_Assignment13345 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallVariable13409 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_CallVariable13435 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_85_in_parse_org_kermeta_language_behavior_SelfExpression13460 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature13489 = new BitSet(new long[]{0x00000000000000D0L,0x0000000010220000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_CallFeature13512 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_CallFeature13546 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_CallFeature13580 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_CallFeature13614 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_CallFeature13648 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_CallFeature13682 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature13721 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature13747 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature13788 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature13814 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature13847 = new BitSet(new long[]{0x00800023000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature13888 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_24_in_parse_org_kermeta_language_behavior_CallFeature13943 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature13985 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature14089 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature14117 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature14143 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature14184 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature14210 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_87_in_parse_org_kermeta_language_behavior_CallFeature14260 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14282 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature14305 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_parse_org_kermeta_language_behavior_CallFeature14346 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature14384 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_90_in_parse_org_kermeta_language_behavior_CallFeature14422 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature14460 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14509 = new BitSet(new long[]{0x0000000200000000L,0x000000000F000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature14560 = new BitSet(new long[]{0x0000000000000002L,0x000000000F000000L});
    public static final BitSet FOLLOW_88_in_parse_org_kermeta_language_behavior_CallFeature14595 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature14633 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_90_in_parse_org_kermeta_language_behavior_CallFeature14671 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature14709 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14758 = new BitSet(new long[]{0x0000000000000002L,0x000000000F000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_CallFeature14829 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_CallFeature14863 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_CallFeature14897 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_CallFeature14931 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_CallFeature14965 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_CallFeature14999 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature15038 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature15064 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature15105 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature15131 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature15164 = new BitSet(new long[]{0x00800023000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15205 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_24_in_parse_org_kermeta_language_behavior_CallFeature15260 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15302 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature15406 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature15434 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature15460 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature15501 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature15527 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_87_in_parse_org_kermeta_language_behavior_CallFeature15577 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15599 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_parse_org_kermeta_language_behavior_CallFeature15646 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature15684 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_90_in_parse_org_kermeta_language_behavior_CallFeature15722 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature15760 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15809 = new BitSet(new long[]{0x0000000000000002L,0x000000000F000000L});
    public static final BitSet FOLLOW_92_in_parse_org_kermeta_language_behavior_JavaStaticCall15882 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_JavaStaticCall15900 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_JavaStaticCall15921 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_JavaStaticCall15939 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_behavior_JavaStaticCall15960 = new BitSet(new long[]{0x00800023000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_JavaStaticCall15989 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_24_in_parse_org_kermeta_language_behavior_JavaStaticCall16030 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_JavaStaticCall16064 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_JavaStaticCall16138 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_parse_org_kermeta_language_behavior_VoidLiteral16167 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_55_in_parse_org_kermeta_language_behavior_CallValue16196 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_93_in_parse_org_kermeta_language_behavior_EmptyExpression16225 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_behavior_EmptyExpression16239 = new BitSet(new long[]{0x0000818000080000L,0x0000000040000000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_behavior_EmptyExpression16262 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_EmptyExpression16282 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_EmptyExpression16308 = new BitSet(new long[]{0x0000818000080000L,0x0000000040000000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_behavior_EmptyExpression16349 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_EmptyExpression16369 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_EmptyExpression16395 = new BitSet(new long[]{0x0000818000080000L,0x0000000040000000L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_behavior_EmptyExpression16431 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_EmptyExpression16451 = new BitSet(new long[]{0x2A20042800710030L,0x0000000000000006L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_behavior_EmptyExpression16477 = new BitSet(new long[]{0x0000818000080000L,0x0000000040000000L});
    public static final BitSet FOLLOW_94_in_parse_org_kermeta_language_behavior_EmptyExpression16513 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_EmptyExpression16533 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_EmptyExpression16559 = new BitSet(new long[]{0x0000818000080000L,0x0000000040000000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_behavior_EmptyExpression16605 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_95_in_parse_org_kermeta_language_behavior_LambdaExpression16634 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_behavior_LambdaExpression16648 = new BitSet(new long[]{0x0000818000080000L,0x0000000340000000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_behavior_LambdaExpression16671 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression16691 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaExpression16717 = new BitSet(new long[]{0x0000818000080000L,0x0000000340000000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_behavior_LambdaExpression16758 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression16778 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_LambdaExpression16804 = new BitSet(new long[]{0x0000818000080000L,0x0000000340000000L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_behavior_LambdaExpression16840 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression16860 = new BitSet(new long[]{0x2A20042800710030L,0x0000000000000006L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_behavior_LambdaExpression16886 = new BitSet(new long[]{0x0000818000080000L,0x0000000340000000L});
    public static final BitSet FOLLOW_94_in_parse_org_kermeta_language_behavior_LambdaExpression16922 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression16942 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaExpression16968 = new BitSet(new long[]{0x0000818000080000L,0x0000000340000000L});
    public static final BitSet FOLLOW_96_in_parse_org_kermeta_language_behavior_LambdaExpression17009 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression17029 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_LambdaParameter_in_parse_org_kermeta_language_behavior_LambdaExpression17055 = new BitSet(new long[]{0x0000818000080000L,0x0000000340000000L});
    public static final BitSet FOLLOW_97_in_parse_org_kermeta_language_behavior_LambdaExpression17091 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression17111 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_LambdaExpression17137 = new BitSet(new long[]{0x0000818000080000L,0x0000000340000000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_behavior_LambdaExpression17178 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_98_in_parse_org_kermeta_language_behavior_LambdaParameter17207 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_behavior_LambdaParameter17221 = new BitSet(new long[]{0x0002118000080000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_behavior_LambdaParameter17244 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaParameter17264 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaParameter17290 = new BitSet(new long[]{0x0002118000080000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_behavior_LambdaParameter17331 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaParameter17351 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_LambdaParameter17377 = new BitSet(new long[]{0x0002118000080000L});
    public static final BitSet FOLLOW_44_in_parse_org_kermeta_language_behavior_LambdaParameter17413 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaParameter17433 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaParameter17459 = new BitSet(new long[]{0x0002118000080000L});
    public static final BitSet FOLLOW_49_in_parse_org_kermeta_language_behavior_LambdaParameter17500 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaParameter17520 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_LambdaParameter17546 = new BitSet(new long[]{0x0002118000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_behavior_LambdaParameter17587 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Expression17612 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Raise_in_parse_org_kermeta_language_behavior_Expression17622 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Expression17632 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_Expression17642 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_Expression17652 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Expression17662 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_behavior_Expression17672 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Expression17682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_parse_org_kermeta_language_behavior_Expression17692 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Expression17702 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Expression17712 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Expression17722 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Expression17732 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_Expression17742 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Expression17752 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_Expression17762 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_behavior_Expression17772 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Expression17782 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_behavior_Expression17792 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_LambdaExpression_in_parse_org_kermeta_language_behavior_Expression17802 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Class_in_parse_org_kermeta_language_structure_Type17823 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_Type17833 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_Type17843 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_parse_org_kermeta_language_structure_Type17853 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VoidType_in_parse_org_kermeta_language_structure_Type17863 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_Type17873 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_parse_org_kermeta_language_structure_Type17883 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelTypeVariable_in_parse_org_kermeta_language_structure_Type17893 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_Type17903 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ProductType_in_parse_org_kermeta_language_structure_Type17913 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_FunctionType_in_parse_org_kermeta_language_structure_Type17923 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_synpred1_Kermeta82 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_synpred3_Kermeta110 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_synpred4_Kermeta124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_synpred5_Kermeta138 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_synpred6_Kermeta152 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred11_Kermeta587 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_18_in_synpred14_Kermeta656 = new BitSet(new long[]{0x0020040800710030L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred14_Kermeta697 = new BitSet(new long[]{0x0020040800790030L});
    public static final BitSet FOLLOW_19_in_synpred14_Kermeta758 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred16_Kermeta587 = new BitSet(new long[]{0x0020040800710032L});
    public static final BitSet FOLLOW_18_in_synpred16_Kermeta656 = new BitSet(new long[]{0x0020040800710030L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred16_Kermeta697 = new BitSet(new long[]{0x0020040800790030L});
    public static final BitSet FOLLOW_19_in_synpred16_Kermeta758 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_18_in_synpred16_Kermeta786 = new BitSet(new long[]{0x0020040800790030L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred16_Kermeta827 = new BitSet(new long[]{0x0020040800790030L});
    public static final BitSet FOLLOW_19_in_synpred16_Kermeta888 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred18_Kermeta940 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred23_Kermeta1344 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred32_Kermeta1983 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_synpred44_Kermeta3504 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Using_in_synpred45_Kermeta3514 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Require_in_synpred46_Kermeta3524 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred47_Kermeta3534 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_synpred48_Kermeta3544 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_synpred49_Kermeta3554 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_synpred50_Kermeta3564 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_synpred51_Kermeta3574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Class_in_synpred52_Kermeta3584 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_synpred53_Kermeta3594 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_synpred54_Kermeta3604 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred55_Kermeta3614 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_synpred56_Kermeta3624 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_synpred57_Kermeta3634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VoidType_in_synpred58_Kermeta3644 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelType_in_synpred60_Kermeta3664 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_synpred62_Kermeta3684 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred63_Kermeta3694 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_synpred65_Kermeta3714 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_synpred67_Kermeta3734 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_synpred72_Kermeta3784 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred74_Kermeta3804 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred75_Kermeta3814 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred76_Kermeta3824 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_synpred80_Kermeta3864 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred81_Kermeta3874 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred83_Kermeta3894 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred84_Kermeta3904 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred85_Kermeta3914 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred86_Kermeta3924 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred87_Kermeta3934 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_synpred88_Kermeta3944 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred105_Kermeta5294 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred168_Kermeta10326 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred169_Kermeta10368 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred170_Kermeta10410 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred172_Kermeta10494 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred173_Kermeta10536 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred180_Kermeta11307 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred182_Kermeta11375 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred183_Kermeta11409 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred185_Kermeta11477 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred186_Kermeta11511 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred190_Kermeta11728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred191_Kermeta11770 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred193_Kermeta11854 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_78_in_synpred197_Kermeta12157 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred197_Kermeta12190 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred201_Kermeta12732 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred202_Kermeta12774 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred204_Kermeta12967 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred205_Kermeta13009 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred207_Kermeta13093 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred209_Kermeta13177 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred211_Kermeta13261 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred212_Kermeta13303 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred215_Kermeta13546 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred218_Kermeta13648 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_86_in_synpred219_Kermeta13721 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred219_Kermeta13747 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_86_in_synpred223_Kermeta14117 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred223_Kermeta14143 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_synpred233_Kermeta14595 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_89_in_synpred233_Kermeta14633 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_90_in_synpred233_Kermeta14671 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_91_in_synpred233_Kermeta14709 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred233_Kermeta14758 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred236_Kermeta14863 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred239_Kermeta14965 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_86_in_synpred240_Kermeta15038 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred240_Kermeta15064 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_86_in_synpred244_Kermeta15434 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred244_Kermeta15460 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_synpred250_Kermeta15646 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_89_in_synpred250_Kermeta15684 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_90_in_synpred250_Kermeta15722 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_91_in_synpred250_Kermeta15760 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred250_Kermeta15809 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred269_Kermeta17632 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred270_Kermeta17642 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred271_Kermeta17652 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_synpred275_Kermeta17692 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred276_Kermeta17702 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred278_Kermeta17722 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred279_Kermeta17732 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred280_Kermeta17742 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred281_Kermeta17752 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred282_Kermeta17762 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Class_in_synpred286_Kermeta17823 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_synpred289_Kermeta17853 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelType_in_synpred291_Kermeta17873 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_synpred292_Kermeta17883 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_synpred294_Kermeta17903 = new BitSet(new long[]{0x0000000000000002L});

}